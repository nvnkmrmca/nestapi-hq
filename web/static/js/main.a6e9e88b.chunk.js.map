{"version":3,"sources":["store/action-types.ts","store/reducers/app-user.ts","store/reducers/user.ts","store/reducers/ads.ts","store/reducers/polls.ts","store/reducers/outings.ts","store/reducers/documents.ts","store/reducers/users.ts","store/reducers/homes.ts","store/reducers/user-homes.ts","store/reducers/tickets.ts","store/reducers/blocks.ts","store/reducers/gate-no.ts","store/reducers/state.ts","store/app-store.ts","constants/index.ts","util/index.ts","store/api/api.ts","store/actions/account.ts","components/common/elements.tsx","components/common/button.tsx","components/images.ts","components/common/spinner.tsx","styles/common.ts","util/toast.ts","components/common/radio-button.tsx","styles/model.ts","components/login/sign-up.tsx","components/login/index.tsx","containers/login.tsx","styles/popup.ts","components/home/title-bar.tsx","constants/nav.ts","components/home/nav-bar.tsx","components/home/tab-bar.tsx","store/actions/payment.ts","store/actions/visitor.ts","store/actions/file.ts","components/home/my-dues.tsx","util/convert.ts","components/home/history.tsx","components/home/custom-list.tsx","styles/card.ts","components/home/home.tsx","components/home/manager/home.tsx","components/home/gatekeeper/new-visitor.tsx","components/home/gatekeeper/home.tsx","components/home/dashboard.tsx","containers/dashboard.tsx","store/actions/member.ts","components/common/breadcrum.tsx","styles/page.ts","styles/icon.ts","components/home/members.tsx","containers/members.tsx","components/home/new-member.tsx","containers/new-member.tsx","store/actions/vehicle.ts","components/home/vehicles.tsx","containers/vehicles.tsx","components/home/new-vehicle.tsx","containers/new-vehicle.tsx","store/actions/servent.ts","components/home/servents.tsx","containers/servents.tsx","components/home/new-servent.tsx","containers/new-servent.tsx","store/actions/ticket.ts","components/home/tickets.tsx","containers/tickets.tsx","components/home/new-ticket.tsx","containers/new-ticket.tsx","components/common/checkbox.tsx","components/home/gatekeeper/visitors-view.tsx","components/home/visitors.tsx","containers/visitors.tsx","components/home/change-password.tsx","containers/change-password.tsx","components/home/my-profile.tsx","containers/my-profile.tsx","components/home/my-role.tsx","containers/my-role.tsx","store/actions/ad.ts","components/home/manager/ads.tsx","containers/ads.tsx","components/home/manager/new-ad.tsx","containers/new-ad.tsx","components/home/manager/users.tsx","containers/users.tsx","store/actions/home.ts","components/home/manager/homes.tsx","containers/homes.tsx","styles/mlist.ts","components/home/manager/edit-user.tsx","containers/edit-user.tsx","components/home/manager/approve-users.tsx","containers/approve-users.tsx","components/home/manager/edit-home.tsx","containers/edit-home.tsx","components/home/gatekeeper/visitors.tsx","containers/all-visitors.tsx","components/home/manager/notification.tsx","containers/notification.tsx","store/actions/notification.ts","store/actions/outing.ts","components/home/new-outing.tsx","containers/new-outing.tsx","store/actions/documents.ts","components/home/my-documents.tsx","containers/my-documents.tsx","store/actions/block.ts","components/home/manager/blocks.tsx","containers/blocks.tsx","components/home/manager/edit-block.tsx","containers/edit-block.tsx","components/home/manager/payment-form.tsx","components/home/manager/payment-history.tsx","components/home/manager/payment.tsx","containers/payment.tsx","components/home/manager/view-home/info.tsx","components/home/manager/view-home/members.tsx","components/home/manager/view-home/vehicles.tsx","components/home/manager/view-home/servents.tsx","components/home/manager/view-home/tickets.tsx","components/home/manager/view-home/visitors.tsx","components/home/manager/view-home/payments.tsx","components/home/manager/view-home/documents.tsx","components/home/manager/view-home/index.tsx","containers/view-home.tsx","store/actions/poll.ts","util/calc.ts","components/home/manager/poll.tsx","components/home/poll.tsx","components/home/outing.tsx","components/home/notification.tsx","containers/notice.tsx","components/home/help.tsx","containers/help.tsx","components/not-found/index.tsx","components/home/index.tsx","containers/home.tsx","components/app-container.tsx","containers/app-container.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["actionTypes","handleLoginResult","state","payload","Object","objectSpread","isLoggedIn","handleRoleResult","role","handleHomeIndexResult","homeIndex","handleResult","_id","number","name","age","gender","mobileNo","emailId","type","image","createdBy","updatedBy","homes","client","data","isUpToDate","isError","errorMessage","State","combineReducers","AppUser","arguments","length","undefined","action","SET_LOGIN_STATUS","SET_ROLE","SET_HOME_INDEX","RESET","User","description","address","upi","id","rep","repType","LOAD_USER","Ads","LOAD_ADS","Polls","LOAD_POLLS","Outings","LOAD_OUTINGS","Documents","LOAD_DOCUMENTS","Users","LOAD_USERS","Homes","LOAD_HOMES","UserHomes","LOAD_USERHOMES","Tickets","LOAD_TICKETS","Blocks","LOAD_BLOCKS","GateNo","SET_GATE_NO","store","createStore","compose","applyMiddleware","reduxThunk","API_BASE_PATH","DEFAULT_DATE_FORMAT","DEFAULT_DATE_TIME_FORMAT","IMAGE_BASE_PATH","FILE_BASE_PATH","COLOR","ROLE","USER","ADMIN","GATEKEEPER","MANAGER","MONTH","title","value","isNN","_input","isNNObject","json2Str","JSON","stringify","ex","jsError","generateUUID","d","Date","getTime","performance","now","replace","c","r","Math","random","floor","toString","_ex","_funName","console","log","Api","url","get","callback","_this","fetch","post","delete","patch","put","upload","_callee","token","clientId","userId","formData","regenerator_default","a","wrap","_context","prev","next","getAS","sent","FormData","append","file","method","headers","Accept","x-access-token","client-id","user-id","body","then","response","json","message","catch","error","stop","_callee2","key","_context2","sessionStorage","getItem","abrupt","t0","_callee3","_context3","Content-Type","logout","dispatch","removeItem","setLoginResult","setHomeIndexResult","resetState","setGateNoResult","gateNo","setRoleResult","getUserResult","getUsersResult","getHomesResult","getBlockResult","View","styled","div","_templateObject","ScrollView","_templateObject2","Image","img","_templateObject3","TextInput","input","_templateObject4","TextArea","textarea","_templateObject5","Picker","select","_templateObject6","Text","label","_templateObject7","TouchableHighlight","span","_templateObject8","Button","this","react","className","props","onClick","onPress","style","styles","btn","React","defaultProps","backgroundColor","borderColor","color","cursor","Images","logo","logoInv","icon","homeIcon","homeIconInv","notification","notificationInv","setting","settingInv","info","infoInv","workInProgress","members","membersInv","vehicle","vehicleInv","username","password","support","supportInv","visitors","visitorsInv","servent","serventInv","add","edit","close","tick","cancel","mobile","email","addvertise","reminder","users","blocks","search","datePicker","money","moneyInv","view","document","documentInv","menu","loading","Spinner","visible","src","width","height","fontWeight","marginTop","text","Toast","success","msg","toast","fail","warn","warning","show","bgColor","textColor","RadioButton","container","checked","isActive","marginRight","circle","borderRadius","borderWidth","alignItems","justifyContent","dot","marginLeft","head","flexDirection","alignContent","paddingLeft","paddingRight","paddingTop","paddingBottom","flex","alignSelf","font-weight","fontSize","marginBottom","row","ele","radio","display","radioText","radioActive","radioActiveText","saveBtn","SignUp","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSave","clientCode","member","toLowerCase","onSignUp","result","setState","bind","assertThisInitialized","_this2","modelStyles","placeholder","CommonStyles","onChange","event","target","radio_button_RadioButton","button_Button","Index","onLogin","userName","isLoading","onForgetPassword","isForgetPass","isSignUp","mobileNumber","onForgetPassSubmit","onCreateAccount","maxWidth","txtIcon","txt","textAlign","sign_up_SignUp","float","borderStyle","margin","spinner_Spinner","resizeMode","top","Login","connect","ownProps","fcm_token","controller","setItem","rememberMe","fcmToken","os","osVersion","login","forgetPassword","assign","signup","Page","content","TitleBar","onToggleHomeModel","isShow","isShowHomeModel","onHomeChange","index","confirmAlert","buttons","onLogout","titleBar","react_router_dom","to","isMenuExpand","onToggleMenu","appUser","titleText","user","index_es","open","onClose","popupStyles","map","i","homeList","activeHome","inActiveHome","padding","borderBottomWidth","borderBottomColor","border-bottom-style","NAV","path","roles","child","isMRole","NavBar","loadNav","nav","pTitle","isTopLevel","that","activeTopMenu","inner","indexOf","split","activeMenu","isExpand","TabBar","tabBar","borderTopColor","borderTopWidth","border-top-style","tab","tabImage","activeTab","loadAll","appClientId","homeId","sCallback","fCallback","MyDues","getTotalDue","totalDue","home","payments","amountPaid","transactions","filter","t","j","isSuccess","amount","payNow","paymentId","transactionRef","payment","successCallback","Status","responseCode","transaction","txnRef","txnId","status","reason","onPaymentUpdate","updateResult","clearTxn","txnFailure","failureCallback","p","myDueFirst","myDue","m","forMonth","forYear","borderLeftColor","borderLeftWidth","toDateString","_format","moment","format","toDateTimeString","History","slice","paidDate","createdAt","CustomList","borderBottomStyle","card","maxHeight","Home","cardStyles","history","push","vehicles","servents","my_dues_MyDues","onPaymentUpload","custom_list_CustomList","history_History","NewVisitor","onImageSelect","files","arrFileName","fileName","onUpload","showHomes","visitor","passCode","homeSearchText","onClear","viewAll","overflow","maxLength","onBlur","onGateNoChanged","new_visitor_NewVisitor","onToggleLoading","onSaveVisitor","Dashboard","home_Home","manager_home_Home","ads","tickets","gatekeeper_home_Home","outings","setGateNo","approvalid","paymentIndex","findIndex","update","scallback","saveVisitor","fileUpload","save","foundIndex","Breadcrum","cnr","link","sep","MarginTop","addIcon","editIcon","deleteIcon","closeIcon","Members","isEdit","onRemove","breadcrum_Breadcrum","iconStyles","remove","NewMember","Vehicles","NewVehicle","Servents","NewServent","arrTickets","getTicketsResult","unshift","_homeId","comments","ticket","viewId","comment","onResolve","onStart","onView","onAddComment","onLoad","_this3","myStyles","cmntsCnr","cmntsHdr","cmntsHdrTxt","cmntsCnt","e","cmntCnrFst","cmntCnr","cmntHdr","cmntCnt","addCmntCnt","newCmnt","resolve","start","ticketId","ticketIndex","commentIndex","addComment","NewTicket","Checkbox","VisitorsView","onToggleZoomImage","isZoom","isZoomImage","zoomImage","pageStyles","checkbox_Checkbox","onActiveChange","cardContainer","homeNumber","isEntered","isExit","isApproved","isRejected","approvedBy","approvedAt","enteredBy","enteredAt","exitBy","exitGateNo","exitAt","onEnter","onExit","onApprove","onReject","border-style","Visitors","loadData","v","visitors_view_VisitorsView","approve","reject","ChangePassword","passwordPolicyCheck","anUpperCase","aLowerCase","aNumber","aSpecial","numUpper","numLower","numNums","numSpecials","test","onUpdate","newPassword","confirmNewPassword","policyResult","changePassword","MyProfile","updateProfile","MyRole","updateRole","getAdResult","ad","NewAd","getHomes","userHomes","homeIds","uh","h","onSearch","searchText","toLocaleLowerCase","searchResult","memberIds","searchResultIndex","removeByAM","load","getUsers","userIds","u","mListCnr","mListActiveRow","mListRow","EditUser","isAdmin","isManager","isGatekeeper","isUser","match","params","isApprove","isShowHomes","commonStyles","mlistStyles","isAM","saveByAM","ApproveUsers","accountController","loadWFAUsers","EditHome","blockId","_blockId","bedRoom","parking","onToggleUserModel","isShowUsers","onCheckNumberAvail","checkNumberAvail","AllVisitors","enter","exit","Notification","onPush","getOutingResult","NewOuting","fromDate","toDate","place","outing","isReturned","datePickerType","datePickerDate","entry_default","date","getDocumentResult","MyDocuments","onFileSelect","documents","ho","rel","href","EditBlock","block","PaymentForm","isAllHome","month","year","getMonth","getFullYear","PaymentHistory","isShowSearch","uPaymentId","uAmount","uDescription","pData","isShowUpdateModel","mode","Payment","payment_form_PaymentForm","payment_history_PaymentHistory","updatePay","Info","_this$props","blockName","Payments","getAmountPaid","ViewHome","toggleLoading","info_Info","view_home_members_Members","onLoadMembers","view_home_vehicles_Vehicles","onLoadVehicles","view_home_servents_Servents","onLoadServents","view_home_tickets_Tickets","onLoadTickets","view_home_visitors_Visitors","onLoadVisitors","payments_Payments","onLoadPayments","view_home_documents_Documents","onLoadDocuments","loadMembers","loadVehicles","loadServents","loadTickets","loadVisitors","loadPayments","loadDocuments","getPollResult","percentage","_partialValue","_totalValue","Poll","topic","pollOption","po","poll","isAllowMultiple","isOneVotePerFlat","isAnonymous","options","polls","showVotePoll","loadVotes","votes","poi","option","sort","b","vo","voi","newOptions","onSelectOption","optionId","votePollId","_memberId","onVote","pollId","currentDate","getDate","o","oi","Outing","onReturnBack","outingId","returnedAt","isShowPoll","onLoadAds","onLoadPoll","onLoadOuting","poll_Poll","onSavePoll","onRemovePoll","home_poll_Poll","outing_Outing","remainders","complaints","Notice","loadAllAds","userRole","loadAllPools","Id","UserId","lstPoll","pollIndex","vote","loadAllOutings","retunBack","Help","listItem","isGateKeeper","getProfile","title_bar_TitleBar","nav_bar_NavBar","react_router","exact","component","CDashboard","CMembers","CNewMember","CVehicles","CNewVehicle","CServents","CNewServent","CTickets","CNewTicket","CVisitors","CAds","CNewAd","CNotification","CUsers","CEditUser","CApproveUsers","CHomes","CViewHome","CEditHome","CBlocks","CEditBlock","CPayment","CAllVisitors","CNotice","CNewOuting","CMyProfile","CMyRole","CMyDocuments","CChangePassword","CHelp","NotFound","tab_bar_TabBar","mresult","bresult","hresult","forEach","homeChange","AppContainer","setLogin","containers_home_Home","App","react_default","createElement","es","containers_app_container_AppContainer","lib","ToastsStore","position","ToastsContainerPosition","TOP_RIGHT","Component","Boolean","window","location","hostname","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6e9e88b.chunk.js","sourcesContent":["export enum actionTypes{\r\n    SET_LOGIN_STATUS,\r\n    SET_ROLE,\r\n    SET_HOME_INDEX,\r\n    LOAD_USER,\r\n    LOAD_ADS,\r\n    LOAD_POLLS,\r\n    LOAD_OUTINGS,\r\n    LOAD_DOCUMENTS,\r\n    LOAD_USERS,\r\n    LOAD_HOMES,\r\n    LOAD_USERHOMES,\r\n    LOAD_TICKETS,\r\n    SAVE_MEMBER,\r\n    LOAD_BLOCKS,\r\n    SET_GATE_NO,\r\n    RESET\r\n};","import { actionTypes } from '../action-types';\r\nimport { IAppUser } from '../../models/app-user/app-user';\r\n\r\nconst createEmptyResult = (): IAppUser => ({\r\n    isLoggedIn: false,\r\n    role: '',\r\n    homeIndex: -1\r\n});\r\n\r\nexport const AppUser = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_LOGIN_STATUS:\r\n            return handleLoginResult(state, action.payload);\r\n        case actionTypes.SET_ROLE:\r\n            return handleRoleResult(state, action.payload);\r\n        case actionTypes.SET_HOME_INDEX:\r\n            return handleHomeIndexResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleLoginResult = (state: IAppUser, payload: boolean): IAppUser => {\r\n    return {\r\n        ...state,\r\n        isLoggedIn: payload\r\n    };\r\n};\r\n\r\nconst handleRoleResult = (state: IAppUser, payload: string): IAppUser => {\r\n    return {\r\n        ...state,\r\n        role: payload\r\n    };\r\n};\r\n\r\nconst handleHomeIndexResult = (state: IAppUser, payload: number): IAppUser => {\r\n    return {\r\n        ...state,\r\n        homeIndex: payload\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\n\r\nconst createEmptyResult = (): IUser => ({\r\n    _id: '',\r\n    number: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    type: '',\r\n    role: '',\r\n    image: '',\r\n    createdBy: '',\r\n    updatedBy: '',\r\n    homes: [],\r\n    client: {\r\n        _id: '',\r\n        name: '',\r\n        description: '',\r\n        address: '',\r\n        upi: {\r\n            id: '',\r\n            name: ''\r\n        },\r\n        rep: {\r\n            name: '',\r\n            mobileNo: '',\r\n            emailId: '',\r\n            repType: ''\r\n        }\r\n    }\r\n});\r\n\r\nexport const User = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USER:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUser, payload: IUser): IUser => {\r\n    return {\r\n        ...state,\r\n        _id: payload._id,\r\n        number: payload.number,\r\n        name: payload.name,\r\n        age: payload.age,\r\n        gender: payload.gender,\r\n        mobileNo: payload.mobileNo,\r\n        emailId: payload.emailId,\r\n        type: payload.type,\r\n        role: payload.role,\r\n        image: payload.image,\r\n        createdBy: payload.createdBy,\r\n        updatedBy: payload.updatedBy,\r\n        homes: payload.homes,\r\n        client: payload.client\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IAds } from '../../models/store/ads';\r\n\r\nconst createEmptyResult = (): IAds => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Ads = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_ADS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IAds, payload: IAds): IAds => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IPolls } from '../../models/store/polls';\r\n\r\nconst createEmptyResult = (): IPolls => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Polls = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_POLLS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IPolls, payload: IPolls): IPolls => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IOutings } from '../../models/store/outings';\r\n\r\nconst createEmptyResult = (): IOutings => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Outings = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_OUTINGS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IOutings, payload: IOutings): IOutings => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IDocuments } from '../../models/store/documents';\r\n\r\nconst createEmptyResult = (): IDocuments => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Documents = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_DOCUMENTS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IDocuments, payload: IDocuments): IDocuments => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUsers } from '../../models/store/users';\r\n\r\nconst createEmptyResult = (): IUsers => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Users = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUsers, payload: IUsers): IUsers => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IHomes } from '../../models/store/homes';\r\n\r\nconst createEmptyResult = (): IHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Homes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_HOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IHomes, payload: IHomes): IHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUserHomes } from '../../models/store/user-homes';\r\n\r\nconst createEmptyResult = (): IUserHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const UserHomes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERHOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUserHomes, payload: IUserHomes): IUserHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\n\r\nconst createEmptyResult = (): ITickets => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Tickets = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_TICKETS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: ITickets, payload: ITickets): ITickets => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IBlocks } from '../../models/store/blocks';\r\n\r\nconst createEmptyResult = (): IBlocks => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Blocks = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_BLOCKS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IBlocks, payload: IBlocks): IBlocks => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\n\r\nexport const GateNo = (state = '', action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_GATE_NO:\r\n            return handleResult(state, action.payload);\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: string, payload: string): string => {\r\n    return payload;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { IAppState } from '../../models/app-state';\r\nimport { AppUser } from './app-user';\r\nimport { User } from './user';\r\nimport { Ads } from './ads';\r\nimport { Polls } from './polls';\r\nimport { Outings } from './outings';\r\nimport { Documents } from './documents';\r\nimport { Users } from './users';\r\nimport { Homes } from './homes';\r\nimport { UserHomes } from './user-homes';\r\nimport { Tickets } from './tickets';\r\nimport { Blocks } from './blocks';\r\nimport { GateNo } from './gate-no';\r\n\r\nexport const State = combineReducers<IAppState>({\r\n    AppUser: AppUser,\r\n    User: User,\r\n    Ads: Ads,\r\n    Polls: Polls,\r\n    Outings: Outings,\r\n    Documents: Documents,\r\n    Users: Users,\r\n    Homes: Homes,\r\n    UserHomes: UserHomes,\r\n    Tickets: Tickets,\r\n    Blocks: Blocks,\r\n    GateNo: GateNo\r\n});\r\n","import { Store, createStore, compose, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport { State } from './reducers/state';\r\nimport { IAppState } from '../models/app-state';\r\n\r\nexport const store: Store<IAppState> = createStore(\r\n  State,\r\n  compose(\r\n    applyMiddleware(reduxThunk),\r\n  )\r\n);","// const API_BASE_PATH = 'http://10.0.2.2:3001/';\r\n// const API_BASE_PATH = 'http://localhost:3001/';\r\nconst API_BASE_PATH = 'https://nestadmin.herokuapp.com/';\r\n// const API_BASE_PATH = 'http://192.168.43.80:3001/';\r\n// const API_BASE_PATH = 'http://104.196.184.134:3001/';\r\n\r\nexport const DEFAULT_DATE_FORMAT = 'DD/MMM/YYYY';\r\nexport const DEFAULT_DATE_TIME_FORMAT = 'DD/MMM/YYYY hh:mm A';\r\n// export const API_PATH = API_BASE_PATH + 'api/';\r\nexport const API_PATH = API_BASE_PATH;\r\nexport const IMAGE_BASE_PATH = API_BASE_PATH + 'image/';\r\nexport const FILE_BASE_PATH = API_BASE_PATH + 'file/';\r\nexport const COLOR = {\r\n    PRIMARY: '#0078d7',\r\n    SECONDARY: '#0067b9',\r\n    INVERSE: '#FFFFFF',\r\n    ERROR: '#FF0000',\r\n    SUCCESS: '#008000',\r\n    ICON_BTN_UNDERLAY: '#cce1f1',\r\n    CARD_UNDERLAY: '#cce1f1',\r\n    TAB_UNDERLAY: '#cce1f1',\r\n    SETTING_UNDERLAY: '#cce1f1',\r\n    HR_COLOR: '#e1e1e1',\r\n    FONT_COLOR1: '#8e8e93',\r\n    FONT_COLOR2: '#000000',\r\n    FONT_COLOR3: '#FFFFFF',\r\n    MODAL_BG: '#cce1f1'\r\n};\r\nexport const ROLE = {\r\n    USER: 'USER',\r\n    ADMIN: 'ADMIN',\r\n    GATEKEEPER: 'GATEKEEPER',\r\n    MANAGER: 'MANAGER'\r\n};\r\nexport const MONTH = [\r\n    {title: 'JAN', value: 0},\r\n    {title: 'FEB', value: 1},\r\n    {title: 'MAR', value: 2},\r\n    {title: 'APR', value: 3},\r\n    {title: 'MAY', value: 4},\r\n    {title: 'JUN', value: 5},\r\n    {title: 'JUL', value: 6},\r\n    {title: 'AUG', value: 7},\r\n    {title: 'SEP', value: 8},\r\n    {title: 'OCT', value: 9},\r\n    {title: 'NOV', value: 10},\r\n    {title: 'DEC', value: 11}\r\n]","//import { config as apiConfig } from '../store/api/config';\r\n\r\nexport function parseJSON(response: any) {\r\n     return response.json()\r\n};\r\n\r\nexport function isNN(_input: any) { \r\n  return (isNNObject(_input) && _input.length > 0) \r\n};\r\n\r\nexport function isNNObject(_input: any) { \r\n  return (_input !== null && _input !== undefined) \r\n};\r\n\r\nexport function str2Json(_input: string) { \r\n  try {\r\n    return JSON.parse(isNN(_input) ? _input : \"{}\"); \r\n  } catch (ex) { \r\n    jsError(ex, \"String2JSON\"); \r\n    return {}; \r\n  } \r\n};\r\n\r\nexport function json2Str(_input: any) { \r\n  try {\r\n    return (isNNObject(_input) ? JSON.stringify(_input) : \"\");\r\n  } catch (ex) { \r\n    jsError(ex, \"JSON2String\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function getBaseURL(_isApi: boolean) { \r\n  try {\r\n    let baseURL: string = \"\";\r\n    let arrURL = window.location.href.split(\"/\");\r\n    if(isNNObject(arrURL) && arrURL.length > 2){\r\n      if(_isApi){\r\n        //baseURL = arrURL[0] + \"//\" + arrURL[2] + apiConfig.baseURL;\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2];\r\n      }else{\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2] + \"/\";\r\n      }\r\n    }else{\r\n      baseURL = window.location.href;\r\n    }\r\n    return baseURL;\r\n  } catch (ex) { \r\n    jsError(ex, \"getBaseURL\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function generateUUID() { // Public Domain/MIT\r\n  var d = new Date().getTime();\r\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n      d += performance.now(); //use high-precision timer if available\r\n  }\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      var r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n}\r\n\r\nexport function jsError(_ex: any, _funName: string) {\r\n   //alert(\"Javascript Error\\n------------------\\nName: \" + _ex.name + \"\\nMessage: \" + _ex.message + \"\\nFunction: \" + _funName + \"\\nFile: \" + _ex.fileName + \"\\nLine Number: \" + _ex.lineNumber + \"\\nColumn Number: \" + _ex.columnNumber); \r\n   console.log(\"Error:\" + _funName + \":\" + _ex);\r\n};","// import { AsyncStorage } from 'react-native';\r\nimport { API_PATH } from \"../../constants\";\r\nimport { isNNObject, json2Str, isNN } from \"../../util/index\";\r\n\r\nexport default class Api {\r\n    private url: string = API_PATH;\r\n     \r\n    // private url: string =  \"https://192.168.43.80:45456/api/\";\r\n    // private url: string =  \"http://192.168.43.80:45455/api/\";\r\n\r\n    /**\r\n    * HTTP GET operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public get = (url: string, callback: Function) => {\r\n        this.fetch(url, 'GET', callback);\r\n    };\r\n\r\n    /**\r\n    * HTTP POST operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public post = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'POST', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP DELETE operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public delete = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'DELETE', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PATCH operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public patch = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PATCH', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PUT operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public put = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PUT', callback, data);\r\n    };\r\n\r\n    public upload = async(url: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        \r\n        var formData = new FormData();\r\n        formData.append('file', data.file, data.name);\r\n        formData.append('name', data.name);\r\n\r\n        fetch(this.url + url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    // 'Content-Type': 'multipart/form-data',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: formData,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n\r\n/*\r\n    private fetch = (url: string, method: string, callback: Function, data?: any) => {\r\n        AsyncStorage.getItem('auth_token').then((token) => {\r\n            AsyncStorage.getItem('user_id').then((userId) => {\r\n                this.next(url, 'PUT', token, userId, callback, data);\r\n            }).catch(ex => {\r\n                this.next(url, 'PUT', token, '', callback, data);\r\n            }); \r\n        }).catch(ex => {\r\n            this.next(url, 'PUT', '', '', callback, data);\r\n        });\r\n    };\r\n    */\r\n\r\n    private getAS = async (key: string) => {\r\n        try {\r\n            // return await AsyncStorage.getItem(key);\r\n            return await sessionStorage.getItem(key);\r\n        } catch (error) {\r\n            return '';\r\n        }\r\n    };\r\n    \r\n    private fetch = async(url: string, method: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        fetch(this.url + url, \r\n            {\r\n                method: method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: isNNObject(data) ? json2Str(data) : null,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n    private callback = (callback: Function, data: any, message: any) => {\r\n        // console.log('message: '+ message);\r\n        if(isNNObject(callback) && typeof callback == \"function\"){\r\n            callback(data, message);\r\n        }\r\n    };\r\n\r\n    /*\r\n        private handleResult = (data: any) => {\r\n        if (data) {\r\n            if (data.message) {\r\n                return null;\r\n            } else {\r\n                return data;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private onBadRequest = () => {\r\n       \r\n    };\r\n    \r\n    private onError = () => {\r\n        \r\n        // alert('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n        // console.error('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n         \r\n    };\r\n    \r\n    private onUnAuthorized = () => {\r\n        // alert('UnAuthorized Request');\r\n                 \r\n    };\r\n    */\r\n};","// import { AsyncStorage, Platform } from 'react-native';\r\nimport { actionTypes } from '../action-types';\r\nimport Api from '../api/api';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IUsers } from '../../models/store/users';\r\n// import { IAd } from '../../models/ad/ad';\r\n// import { IAds } from '../../models/store/ads';\r\n// import { IPoll } from '../../models/poll/poll';\r\n// import { IPolls } from '../../models/store/polls';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IHomes } from '../../models/store/homes';\r\n// import { IUserHome } from '../../models/user-home/user-home';\r\n// import { IUserHomes } from '../../models/store/user-homes';\r\nimport { IMember } from '../../models/home';\r\n// import { ITicket } from '../../models/home/ticket';\r\n// import { ITickets } from '../../models/store/tickets';\r\nimport { IBlock } from '../../models/block';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'account/';\r\n\r\nexport const login = (userName: string, password: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  let fcm_token: string | null = sessionStorage.getItem('fcm_token');\r\n    new Api().post(controller + 'login', (result: any, message: string) => {\r\n      // console.log('OUT: ', result);\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.token) && isNN(result.data.userId))\r\n      {\r\n        // console.log('IN: ', result);\r\n        try {\r\n          // console.log(result.token);\r\n          sessionStorage.setItem('auth_token', result.data.token);\r\n          sessionStorage.setItem('client_id', result.data.clientId);\r\n          sessionStorage.setItem('user_id', result.data.userId);\r\n        } catch (error) {\r\n          // console.error('AsyncStorage error: ' + error.message);\r\n        }\r\n        dispatch(setLoginResult(true));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, {\r\n      userName: userName,\r\n      password: password,\r\n      rememberMe: false,\r\n      fcmToken: fcm_token,\r\n      os: 'web', // Platform.OS, ////TODO\r\n      osVersion: 'web' // Platform.Version ////TODO\r\n    });\r\n};\r\n\r\nexport const getProfile = (callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 'profile', (result: any, message: string) => {\r\n    // console.log('OUT: ', result);\r\n    if(isNNObject(result) && isNNObject(result.data) && isNN(result.data._id))\r\n    {\r\n      dispatch(getUserResult(result.data as IUser));\r\n      dispatch(setHomeIndexResult(isNN(result.data.homes) ? 0 : -1));\r\n      let roles = result.data.role.split(',');\r\n      if(isNN(roles)){\r\n        dispatch(setRoleResult(roles[0]));\r\n      }\r\n      // dispatch(getAdResult(((isNNObject(result.data.ad) && result.data.ad instanceof Array) ? result.data.ad as Array<IAd> : []), true, false, ''));\r\n      // dispatch(getPollResult(((isNNObject(result.data.poll) && result.data.poll instanceof Array) ? result.data.poll as Array<IPoll> : []), true, false, ''));\r\n    \r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0){\r\n        new Api().get('members', (mresult: any, message: string) => {\r\n          if (isNNObject(mresult) && isNN(mresult.data)) {\r\n            dispatch(getUsersResult(mresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(mresult.message) ? mresult.message : 'Failed to load Members.');\r\n          }\r\n        });\r\n        /*\r\n        loadAllMember(result.data.client._id, (members: Array<IMember>) => {\r\n          console.log('members: ', members)\r\n          dispatch(getUsersResult(members, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n        new Api().get('blocks/' + result.data.client._id, (bresult: any, message: string) => {\r\n          if (isNNObject(bresult) && isNN(bresult.data)) {\r\n            dispatch(getBlockResult(bresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n      }\r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0 || roles.indexOf(ROLE.GATEKEEPER) >= 0){\r\n        new Api().get('homes/' + result.data.client._id, (hresult: any, message: string) => {\r\n          if (isNNObject(hresult) && isNN(hresult.data)) {\r\n            hresult.data.forEach((h: any) => {\r\n              h.memberIds = h.members;\r\n              delete h.members;\r\n            });\r\n            dispatch(getHomesResult(hresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n        \r\n        /*\r\n        loadAllHome(result.data.client._id, (homes: Array<IHome>) => {\r\n          console.log('homes: ', homes)\r\n          dispatch(getHomesResult(homes, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n      }\r\n      \r\n      // dispatch(getUsersResult(((isNNObject(result.data.users) && result.data.users instanceof Array) ? result.data.users as Array<IUser> : []), true, false, ''));\r\n      // dispatch(getHomesResult(((isNNObject(result.data.homes) && result.data.homes instanceof Array) ? result.data.homes as Array<IHome> : []), true, false, ''));\r\n      // dispatch(getUserHomesResult(((isNNObject(result.data.userHomes) && result.data.userHomes instanceof Array) ? result.data.userHomes as Array<IUserHome> : []), true, false, ''));\r\n      \r\n      // dispatch(getHomesResult([], true, false, ''));\r\n      // dispatch(getUserHomesResult([], true, false, ''));\r\n      // dispatch(getTicketsResult(((isNNObject(result.data.tickets) && result.data.tickets instanceof Array) ? result.data.tickets as Array<ITicket> : []), true, false, ''));\r\n      //dispatch(setLoginResult(true));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const homeChange = (index: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(setHomeIndexResult(index));\r\n  callback(true);\r\n};\r\n\r\nexport const changePassword = (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'changepassword/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    password: password,\r\n    newPassword: newPassword\r\n  });\r\n};\r\n\r\nexport const forgetPassword = (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'resetpassword', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.data))\r\n    {\r\n      if(result.data.data === true){\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, result.data.message);\r\n      }\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    mobileNo: mobileNumber,\r\n    emailId: email\r\n  });\r\n};\r\n\r\nexport const updateProfile = (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  new Api().put(controller + 'profile/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.name = name;\r\n      user.mobileNo = mobileNo;\r\n      user.emailId = emailId;\r\n\r\n      dispatch(getUserResult(user));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    name: name,\r\n    mobileNo: mobileNo,\r\n    emailId: emailId\r\n  });\r\n};\r\n\r\nexport const updateRole = (role: string, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  dispatch(setRoleResult(role));\r\n  callback(true, '');\r\n};\r\n\r\nexport const logout = (callback: (result: boolean) => void) => (dispatch: any) => {\r\n  try {\r\n    sessionStorage.removeItem('auth_token');\r\n    sessionStorage.removeItem('user_id');\r\n    sessionStorage.removeItem('client_id');\r\n    dispatch(setLoginResult(false));\r\n    dispatch(setHomeIndexResult(-1));\r\n    dispatch(resetState());\r\n    callback(true);\r\n  } catch (error) {\r\n    // console.error('AsyncStorage error: ' + error.message);\r\n    callback(false);\r\n  }\r\n};\r\n\r\nexport const setLogin = (isLoggedIn: boolean) => (dispatch: any) => {\r\n  dispatch(setLoginResult(isLoggedIn));\r\n};\r\n\r\nexport const signup = (data: IMember, clientCode: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    clientCode: clientCode,\r\n    password: data.mobileNo\r\n  });\r\n  new Api().post(controller + 'signup', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const setGateNo = (gateNo: string) => (dispatch: any) => {\r\n  dispatch(setGateNoResult(gateNo));\r\n};\r\n\r\nconst setGateNoResult = (gateNo: string) => ({\r\n  type: actionTypes.SET_GATE_NO,\r\n  payload: gateNo\r\n});\r\nconst setLoginResult = (data: boolean) => ({\r\n  type: actionTypes.SET_LOGIN_STATUS,\r\n  payload: data\r\n});\r\nconst setRoleResult = (data: string) => ({\r\n  type: actionTypes.SET_ROLE,\r\n  payload: data\r\n});\r\nconst setHomeIndexResult = (data: number) => ({\r\n  type: actionTypes.SET_HOME_INDEX,\r\n  payload: data\r\n});\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n/*\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});\r\n*/\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});\r\n/*\r\nconst getUserHomesResult = (data: Array<IUserHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERHOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUserHomes\r\n});\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});\r\n*/\r\nconst resetState = () => ({\r\n  type: actionTypes.RESET\r\n});","import styled from 'styled-components';\r\n\r\nexport const View = styled.div`\r\n`;\r\n\r\nexport const ScrollView = styled.div`\r\noverflow: auto;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n`;\r\n\r\nexport const Picker = styled.select`\r\n`;\r\n\r\nexport const Text = styled.label`\r\n`;\r\n\r\nexport const TouchableHighlight = styled.span`\r\n`;\r\n\r\n// export const Button = styled.button`\r\n//   cursor: pointer;\r\n//   background: transparent;\r\n//   font-size: 16px;\r\n//   border-radius: 3px;\r\n//   color: ${props => (props.primary ? 'violet' : 'palevioletred')};\r\n//   border: ${props =>\r\n//     props.primary ? '2px solid violet' : '2px solid palevioletred'};\r\n//   margin: 0 1em;\r\n//   padding: 0.25em 1em;\r\n//   transition: 0.5s all ease-out;\r\n\r\n//   &:hover {\r\n//     color: white;\r\n//     background-color: ${props =>\r\n//       props.primary ? 'violet' : 'palevioletred'};\r\n//   }\r\n// `;","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  title: string,\r\n  onPress: () => void,\r\n  style? : {}\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Button extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    title: '',\r\n    onPress: () => {},\r\n    style: {}\r\n  }\r\n  render() {\r\n    return (\r\n      <input type='button' className='btn' value={this.props.title} onClick={() => this.props.onPress()} style={{...styles.btn, ...this.props.style}} />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  btn: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    borderColor: COLOR.PRIMARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    cursor: 'pointer',\r\n    // alignItems: 'center',\r\n    // paddingTop: 7,\r\n    // paddingBottom: 7,\r\n    // paddingLeft: 5,\r\n    // paddingRight: 5\r\n  }\r\n};","import { IMAGE_BASE_PATH } from '../constants/index';\r\n\r\nexport default class Images {\r\n    static readonly logo = IMAGE_BASE_PATH + 'logo.png';\r\n    static readonly logoInv = IMAGE_BASE_PATH + 'logo-inv.png';\r\n    static readonly icon = IMAGE_BASE_PATH + 'icon.png';\r\n    static readonly logout = IMAGE_BASE_PATH + 'logout.png';\r\n    static readonly homeIcon = IMAGE_BASE_PATH + 'home-icon.png';\r\n    static readonly homeIconInv = IMAGE_BASE_PATH + 'home-icon-inv.png';\r\n    static readonly notification = IMAGE_BASE_PATH + 'notification.png';\r\n    static readonly notificationInv = IMAGE_BASE_PATH + 'notification-inv.png';\r\n    static readonly setting = IMAGE_BASE_PATH + 'setting.png';\r\n    static readonly settingInv = IMAGE_BASE_PATH + 'setting-inv.png';\r\n    static readonly info = IMAGE_BASE_PATH + 'info.png';\r\n    static readonly infoInv = IMAGE_BASE_PATH + 'info-inv.png';\r\n    static readonly workInProgress = IMAGE_BASE_PATH + 'work-in-progress.png';\r\n    static readonly members = IMAGE_BASE_PATH + 'members.png';\r\n    static readonly membersInv = IMAGE_BASE_PATH + 'members-inv.png';\r\n    static readonly vehicle = IMAGE_BASE_PATH + 'vehicle.png';\r\n    static readonly vehicleInv = IMAGE_BASE_PATH + 'vehicle-inv.png';\r\n    static readonly username = IMAGE_BASE_PATH + 'username.png';\r\n    static readonly password = IMAGE_BASE_PATH + 'password.png';\r\n    static readonly support = IMAGE_BASE_PATH + 'support.png';\r\n    static readonly supportInv = IMAGE_BASE_PATH + 'support-inv.png';\r\n    static readonly visitors = IMAGE_BASE_PATH + 'visitors.png';\r\n    static readonly visitorsInv = IMAGE_BASE_PATH + 'visitors-inv.png';\r\n    static readonly servent = IMAGE_BASE_PATH + 'servent.png';\r\n    static readonly serventInv = IMAGE_BASE_PATH + 'servent-inv.png';\r\n    static readonly add = IMAGE_BASE_PATH + 'add.png';\r\n    static readonly edit = IMAGE_BASE_PATH + 'edit.png';\r\n    static readonly delete = IMAGE_BASE_PATH + 'delete.png';\r\n    static readonly close = IMAGE_BASE_PATH + 'close.png';\r\n    static readonly tick = IMAGE_BASE_PATH + 'tick.png';    \r\n    static readonly cancel = IMAGE_BASE_PATH + 'cancel.png';\r\n    static readonly mobile = IMAGE_BASE_PATH + 'mobile.png';\r\n    static readonly email = IMAGE_BASE_PATH + 'email.png';\r\n    static readonly addvertise = IMAGE_BASE_PATH + 'addvertise.png';\r\n    static readonly reminder = IMAGE_BASE_PATH + 'reminder.png';\r\n    static readonly users = IMAGE_BASE_PATH + 'users.png';\r\n    static readonly homes = IMAGE_BASE_PATH + 'homes.png';\r\n    static readonly blocks = IMAGE_BASE_PATH + 'blocks.png';\r\n    static readonly search = IMAGE_BASE_PATH + 'search.png';\r\n    static readonly datePicker = IMAGE_BASE_PATH + 'date-picker.png';\r\n    static readonly money = IMAGE_BASE_PATH + 'money.png';\r\n    static readonly moneyInv = IMAGE_BASE_PATH + 'money-inv.png';\r\n    static readonly view = IMAGE_BASE_PATH + 'view.png';\r\n    static readonly document = IMAGE_BASE_PATH + 'document.png';\r\n    static readonly documentInv = IMAGE_BASE_PATH + 'document-inv.png';\r\n    static readonly menu = IMAGE_BASE_PATH + 'menu.png';\r\n    static readonly loading = IMAGE_BASE_PATH + 'loading.gif';\r\n};","import * as React from 'react';\r\nimport { View, Image } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\nimport Images from '../images';\r\n\r\ninterface IProps {\r\n  visible: boolean,\r\n  text?: string\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Spinner extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    visible: false,\r\n    text: 'Loading...'\r\n  }\r\n  render() {\r\n    return (\r\n      this.props.visible &&\r\n      <View>\r\n        <View className='loader-overlay'></View>\r\n        <View className='loader'>\r\n          <Image className='' src={Images.loading} style={{width: '50px', height: '50px'}} />\r\n          <View style={{color: COLOR.SECONDARY, fontWeight: 'bold', marginTop: 5}}>{this.props.text}</View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n// <AppSpinner visible={this.props.visible} textContent={this.props.text} textStyle={{color: COLOR.SECONDARY}} />\r\n","export const styles = {\r\n  textInput: {\r\n    // borderBottomWidth: 1,\r\n    // borderBottomColor: COLOR.FONT_COLOR2,\r\n    // paddingBottom: 5\r\n    }\r\n  };\r\n  ","import {ToastsStore as toast} from 'react-toasts';\r\n\r\n class Toast {\r\n   static success = (msg: string) => {\r\n       // Toast.show(msg, '#003300', '#FFFFFF');\r\n       toast.success(msg);\r\n    }\r\n    static fail = (msg: string) => {\r\n        // Toast.show(msg, '#b30000', '#FFFFFF');\r\n        toast.error(msg);\r\n    }\r\n    static warn = (msg: string) => {\r\n        // Toast.show(msg, '#e68a00', '#FFFFFF');\r\n        toast.warning(msg);\r\n    }\r\n    static info = (msg: string) => {\r\n        // Toast.show(msg, '#000080', '#FFFFFF');\r\n        toast.info(msg);\r\n    }\r\n    static show = (msg: string, bgColor: string, textColor: string) => {\r\n\r\n        toast.info(msg);\r\n        \r\n        /*\r\n        // Add a Toast on screen.\r\n        RNToast.show(msg, {\r\n            duration: RNToast.durations.SHORT,\r\n            position: RNToast.positions.TOP,\r\n            shadow: true,\r\n            animation: true,\r\n            hideOnPress: true,\r\n            delay: 0,\r\n            backgroundColor: bgColor,\r\n            textColor: textColor,\r\n            onShow: () => {\r\n                // calls on toast\\`s appear animation start\r\n            },\r\n            onShown: () => {\r\n                // calls on toast\\`s appear animation end.\r\n            },\r\n            onHide: () => {\r\n                // calls on toast\\`s hide animation start.\r\n            },\r\n            onHidden: () => {\r\n                // calls on toast\\`s hide animation end.\r\n            }\r\n        });\r\n        */\r\n    }\r\n};\r\n\r\nexport default Toast;","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  key: string,\r\n  onPress: () => void\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class RadioButton extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    isActive: false,\r\n    text: '',\r\n    key: '',\r\n    onPress: () => {}\r\n  }\r\n  render() {\r\n    return (\r\n      <span style={styles.container}>\r\n        <input type='radio' key={this.props.key} checked={this.props.isActive} onClick={this.props.onPress} />\r\n        {\r\n          isNN(this.props.text) &&\r\n          <label style={styles.text}>{this.props.text}</label>\r\n        }\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    // flexDirection: 'row',\r\n    marginRight: 10\r\n  },\r\n  circle: {\r\n    height: 24,\r\n    width: 24,\r\n    borderRadius: 12,\r\n    borderWidth: 2,\r\n    borderColor: COLOR.PRIMARY,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  dot: {\r\n    height: 12,\r\n    width: 12,\r\n    borderRadius: 6,\r\n    backgroundColor: COLOR.PRIMARY\r\n  },\r\n  text: {\r\n    marginLeft: 5\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    container: {\r\n    },\r\n    head: {\r\n      flexDirection: 'row',\r\n      alignContent: 'flex-start',\r\n      backgroundColor: COLOR.PRIMARY,\r\n      paddingLeft: 10,\r\n      paddingRight: 10,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    title: {\r\n      flex: 15,\r\n      alignSelf: 'flex-start',\r\n      width: 'auto',\r\n      'font-weight': 'bold',\r\n      fontSize: 20,\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    close: {\r\n      flex: 1,\r\n      alignSelf: 'flex-end',\r\n      marginBottom: 5\r\n    },\r\n    row: {\r\n      // flexDirection: 'row',\r\n      marginTop: 3,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    ele: {\r\n      flex: 1,\r\n      width: '100%'\r\n    },\r\n    radio: {\r\n      borderColor: COLOR.HR_COLOR,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioText: {\r\n      // 'font-weight': 'bold',\r\n      // color: COLOR.HR_COLOR\r\n    },\r\n    radioActive: {\r\n      backgroundColor: COLOR.PRIMARY,\r\n      borderColor: COLOR.PRIMARY,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioActiveText: {\r\n      // 'font-weight': 'bold',\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    saveBtn: {\r\n      marginTop: 5,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    }\r\n  };","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport { IMember } from '../../models/home';\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  onSignUp: (data: IMember, clientCode: string, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  id: string,\r\n  clientCode: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class SignUp extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      clientCode: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.clientCode) && isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.mobileNo) && isNN(this.state.emailId)){\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSignUp(member, this.state.clientCode, (result: boolean) => {\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              clientCode: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Submit.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View  style={{flex: 1}}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"App Code\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.clientCode} onChange={(event: any) => this.setState({clientCode: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Name\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' className='form-control' placeholder=\"Age\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Mobile Number\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Email ID\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TextInput, Image } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Images from '../images';\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util';\r\nimport Toast from  '../../util/toast';\r\nimport { IMember } from '../../models/home';\r\nimport SignUp from './sign-up'\r\n\r\ninterface IProps {\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => void,\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => void,\r\n    onSignUp: (data: IMember, clientCode: string, scallback: (result: boolean, message: string) => void) => void\r\n}\r\n\r\ninterface IState{\r\n    userName: string,\r\n    password: string,\r\n    message: string,\r\n    isLoading: boolean,\r\n    isForgetPass: boolean,\r\n    isSignUp: boolean,\r\n    mobileNumber: string,\r\n    email: string\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            message: '',\r\n            isLoading: false,\r\n            isForgetPass: false,\r\n            isSignUp: false,\r\n            mobileNumber: '',\r\n            email: ''\r\n        };\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onForgetPassword = this.onForgetPassword.bind(this);\r\n        this.onForgetPassSubmit = this.onForgetPassSubmit.bind(this);\r\n        this.onCreateAccount = this.onCreateAccount.bind(this);\r\n        this.onSignUp = this.onSignUp.bind(this);\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    onLogin = () =>{\r\n        if(isNN(this.state.userName) && isNN(this.state.password)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            this.props.onLogin(this.state.userName, this.state.password, (result: boolean, message: string) => {\r\n                if(result === true){                        \r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            // Toast.warn('Enter Mobile Number and Password to continue.');\r\n            Toast.warn('Enter Mobile Number and Password to continue.');\r\n        }\r\n    };\r\n    \r\n    onForgetPassword = () =>{\r\n        this.setState({\r\n            isForgetPass: true,\r\n            isSignUp: false,\r\n            mobileNumber: '',\r\n            email: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    onForgetPassSubmit = () => {\r\n        if(isNN(this.state.mobileNumber) && isNN(this.state.email)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            this.props.onForgetPassword(this.state.mobileNumber, this.state.email.toLowerCase(), (result: boolean, message: string) => {\r\n                if(result === true){\r\n                    Toast.success('Password reset success. Login with New password sent to your Email. Change password after login.');\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: '',\r\n                        isForgetPass: false,\r\n                        isSignUp: false,\r\n                        userName: '',\r\n                        password: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            Toast.warn('Enter Mobile Number and Email to continue.');\r\n        }\r\n    };\r\n\r\n    onCreateAccount = () =>{\r\n        this.setState({\r\n            isForgetPass: false,\r\n            isSignUp: true,\r\n            mobileNumber: '',\r\n            email: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    onSignUp = (data: IMember, clientCode: string, callback: (result: boolean) => void) => {\r\n        this.setState({\r\n            message: '',\r\n            isLoading: true\r\n        });\r\n        this.props.onSignUp(data, clientCode, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                  isForgetPass: false,\r\n                  isSignUp: false,\r\n                  message: ''\r\n              });\r\n              Toast.success('Sign Up success. Please wait till Manager approves then you can access your account.');\r\n              callback(true);\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to Sign Up.');\r\n              callback(false);\r\n            }\r\n          });\r\n    };\r\n\r\n  render() {\r\n    return (\r\n            <View className='container' style={{backgroundColor: COLOR.INVERSE, maxWidth: '270px'}}>\r\n                <View className='row' style={{flexDirection: 'row', alignItems: 'center', justifyContent:'center', marginBottom: 30, marginTop: 5}}>\r\n                    <Image src={Images.logo} style={{width: 150, height: 150}}/>\r\n                </View>\r\n                {this.state.isForgetPass &&\r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <Image className='absolute' src={Images.mobile} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control' placeholder='Registered Mobile Number' value={this.state.mobileNumber} style={{...CommonStyles.textInput, ...styles.txt}} onChange={(event: any) => this.setState({mobileNumber: event.target.value})} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 40}}>\r\n                        <Image className='absolute' src={Images.email} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control' placeholder='Registered Email' value={this.state.email} style={{...CommonStyles.textInput, ...styles.txt}} onChange={(event: any) => this.setState({email: event.target.value})} />\r\n                    </View>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"Reset my password\" : \"Loading...\"}\r\n                    onPress={this.onForgetPassSubmit}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View style={{marginTop: 15}}>\r\n                        <Text className='pointer' onClick={() => { \r\n                            this.setState({\r\n                                isForgetPass: false,\r\n                                isSignUp: false,\r\n                                mobileNumber: \"\",\r\n                                email: \"\",\r\n                                message: \"\"\r\n                            });\r\n                         }} style={{marginBottom: 5, textAlign: 'center', color: COLOR.SECONDARY}}>Go back to Login.</Text>\r\n                    </View>\r\n                </View>\r\n                }\r\n                {this.state.isSignUp && <>\r\n                    <SignUp onSignUp={this.onSignUp} />\r\n                    <View style={{marginTop: 15, textAlign: 'center'}}>\r\n                        <Text className='pointer' onClick={() => { \r\n                            this.setState({\r\n                                isForgetPass: false,\r\n                                isSignUp: false,\r\n                                mobileNumber: \"\",\r\n                                email: \"\",\r\n                                message: \"\"\r\n                            });\r\n                         }} style={{marginBottom: 5, textAlign: 'center', color: COLOR.SECONDARY}}>Go back to Login.</Text>\r\n                    </View>\r\n                    </>\r\n                }\r\n                {(!this.state.isForgetPass && !this.state.isSignUp) && \r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <Image className='absolute' src={Images.username} style={styles.txtIcon} />\r\n                        <TextInput type='text' className='form-control' placeholder='Mobile Number' style={{...CommonStyles.textInput, ...styles.txt}} value={this.state.userName} onChange={(event: any) => this.setState({userName: event.target.value})} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 15}}>\r\n                        <Image className='absolute' src={Images.password} style={styles.txtIcon} />\r\n                        <TextInput type='password'  className='form-control' placeholder='Password' value={this.state.password} style={{...CommonStyles.textInput, ...styles.txt}} onChange={(event: any) => this.setState({password: event.target.value})} />\r\n                    </View>\r\n                    <Text className='col-12 pointer' onClick={this.onForgetPassword} style={{marginBottom: 15, textAlign: 'right', color: COLOR.SECONDARY}}>Forgot Password?</Text>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"LOGIN\" : \"Loading...\"}\r\n                    onPress={this.onLogin}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View className='col-12' style={{marginTop: 15, alignItems: 'center', justifyContent:'center'}}>\r\n                        <Text className='col-12' style={{marginBottom: 5, textAlign: 'center'}}>Dont have an account?</Text>\r\n                        <View className='col' style={{float: 'left', alignItems: 'center', justifyContent:'center', borderWidth: 1, borderColor: '#000000', borderStyle: 'solid', borderRadius: 10}}>\r\n                            <Text style={{textAlign: 'center', margin: '7px', cursor: 'pointer'}} onClick={this.onCreateAccount}>CREATE / JOIN YOUR FLAT</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                }\r\n                <Spinner visible={this.state.isLoading} text={\"\"} />\r\n            </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n    row: {\r\n        // flexDirection: 'row',\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        marginBottom: 25\r\n    },     \r\n    txtIcon: {\r\n        marginLeft: 3,\r\n        // marginRight: -15,\r\n        height: 15,\r\n        width: 15,\r\n        resizeMode : 'stretch',\r\n        alignItems: 'center',\r\n        top: 11\r\n\r\n    },\r\n    txt: {\r\n        flex: 1,\r\n        paddingLeft: 20\r\n    }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IMember } from '../models/home';\r\nimport { login, forgetPassword, signup } from '../store/actions/account';\r\n\r\nimport Page from '../components/login/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => dispatch(login(userName, password, callback)),\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => dispatch(forgetPassword(mobileNumber, email, callback)),\r\n    onSignUp: (data: IMember, clientCode: string, callback: (result: boolean, message: string) => void) => dispatch(signup(data, clientCode, callback))\r\n});\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(Page);","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    container: {\r\n      // backgroundColor: COLOR.MODAL_BG,\r\n      height: '80%',\r\n      marginTop: 30,\r\n      marginBottom: 25,\r\n      marginLeft: 15,\r\n      marginRight: 15\r\n    },\r\n    head: {\r\n      // padding: 7,\r\n      // flexDirection: 'row'\r\n      alignContent: 'center'\r\n    },\r\n    title: {\r\n      flex: 1,\r\n      // flexDirection: 'row',\r\n      alignContent: 'center',\r\n      color: COLOR.FONT_COLOR2\r\n    },\r\n    close: {\r\n      width: 20,\r\n      flex: 1,\r\n      // flexDirection: 'row',\r\n      justifyContent: 'flex-end',\r\n      alignContent: 'flex-end',\r\n      alignSelf: 'flex-end'\r\n    },\r\n    content: {\r\n      // padding: 15\r\n    }\r\n  };","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { Link } from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text, Image } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Images from '../images';\r\nimport {styles as popupStyles} from '../../styles/popup';\r\nimport { ROLE } from '../../constants/index';\r\nimport { IHome } from '../../models/home';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  isMenuExpand: boolean,\r\n  onToggleMenu: () => void,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{ \r\n  isShowHomeModel: boolean\r\n};\r\n\r\nexport default class TitleBar extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isShowHomeModel: false\r\n    };\r\n    this.onToggleHomeModel = this.onToggleHomeModel.bind(this);\r\n    this.onHomeChange = this.onHomeChange.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  onToggleHomeModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowHomeModel: isShow\r\n    });\r\n  }\r\n\r\n  onHomeChange = (index: number) => {\r\n    this.props.onHomeChange(index, (result: boolean) => {\r\n      if(result === true){\r\n        this.onToggleHomeModel(false);\r\n      }else{\r\n      }\r\n    });\r\n  }\r\n  \r\n  logout = () => {\r\n    confirmAlert({\r\n      title: 'Confirm to logout',\r\n      message: 'Are you sure you wish to logout?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.props.onLogout((result: boolean) => {\r\n              if(result === true){\r\n                Toast.success('Logout Success!');\r\n              }else{\r\n                Toast.fail('Failed to logout!');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className='center' style={styles.titleBar}>\r\n        <Link className='fl' to=''>\r\n          <Image src={Images.logoInv} className='' style={{ width: 22, height: 22}} onClick={() => { if(this.props.isMenuExpand){ this.props.onToggleMenu(); }}} />\r\n        </Link>\r\n          <Image src={this.props.isMenuExpand ? Images.close : Images.menu} className='fl pointer' style={(this.props.isMenuExpand ? { width: 17, height: 17, marginLeft: 15, marginTop: 6} : { width: 22, height: 22, marginLeft: 15, marginTop: 4})} onClick={this.props.onToggleMenu} />\r\n          {(this.props.appUser.role === ROLE.USER) ?\r\n          <Text className='pointer' style={styles.titleText} onClick={() => this.onToggleHomeModel(true)}>{((isNN(this.props.user.homes) && this.props.appUser.homeIndex >= 0) ? this.props.user.homes[this.props.appUser.homeIndex].number : \"\")}</Text>\r\n          :\r\n          <Text style={styles.titleText}>{(this.props.appUser.role === ROLE.ADMIN ? 'Admin' : (this.props.appUser.role === ROLE.MANAGER ? 'Manager' : (this.props.appUser.role === ROLE.GATEKEEPER ? 'Gate Keeper' : this.props.appUser.role)))}</Text>\r\n          }\r\n          <span className='fr pointer' onClick={this.logout} style={{flex: 1,}}>\r\n            <Image src={Images.logout} style={{ width: 20, height: 20}}  />\r\n          </span>\r\n        {isNN(this.props.user.homes) &&\r\n        <Modal\r\n          open={this.state.isShowHomeModel}\r\n          onClose={() => this.onToggleHomeModel(false)}>\r\n          <View style={popupStyles.container}>\r\n            {\r\n            this.props.user.homes.map((d: IHome, i: number) => {\r\n              return(\r\n                <Text className='col-12 pointer' key={'h' + i} onClick={() => this.onHomeChange(i)} style={(this.props.appUser.homeIndex === i ? {...styles.homeList, ...styles.activeHome} : {...styles.homeList, ...styles.inActiveHome})}>\r\n                {'' + d.number}\r\n                </Text>\r\n              )\r\n            })\r\n            }\r\n          </View>\r\n        </Modal>\r\n        }\r\n      </header>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  titleBar: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    // alignItems: 'flex-start',\r\n    // justifyContent: 'flex-start',\r\n    width: '100%',\r\n    // flexDirection: 'row',\r\n    padding: 7\r\n  },\r\n  titleText: {\r\n    flex: 15, \r\n    // textAlign: 'center', \r\n    color: COLOR.FONT_COLOR3, \r\n    // fontWeight: 'bold', \r\n    fontSize: 15\r\n  },\r\n  homeList: {\r\n    padding: 15, \r\n    borderBottomWidth: 1, \r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid'\r\n    // textAlign: 'center'\r\n  },\r\n  inActiveHome: {\r\n    color: COLOR.FONT_COLOR2\r\n  },\r\n  activeHome: {\r\n    color: COLOR.PRIMARY,\r\n    // fontWeight: 'bold',\r\n    fontSize: 20\r\n  }\r\n};","import { ROLE } from \".\";\r\n\r\nexport const NAV = [\r\n    {title: 'Home', path: '/'},\r\n    {title: 'Manage', roles: [ROLE.USER, ROLE.ADMIN, ROLE.MANAGER], child: [\r\n        {title: 'Members', path: 'members', roles: [ROLE.USER]},\r\n        {title: 'Vehicles', path: 'vehicles', roles: [ROLE.USER]},\r\n        {title: 'Servents', path: 'servents', roles: [ROLE.USER]},\r\n        {title: 'Tickets', path: 'tickets', roles: [ROLE.USER, ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Visitors', path: 'visitors', roles: [ROLE.USER]},\r\n        {title: 'Ads', path: 'ads', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Notification', path: 'notification', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Users', path: 'users', roles: [ROLE.ADMIN]},\r\n        {title: 'Homes', path: 'homes', roles: [ROLE.ADMIN]},\r\n        {title: 'Blocks', path: 'blocks', roles: [ROLE.ADMIN]},\r\n        {title: 'Visitors', path: 'all-visitors', roles: [ROLE.ADMIN, ROLE.MANAGER, ROLE.GATEKEEPER]},\r\n        {title: 'Payment', path: 'payment', roles: [ROLE.ADMIN, ROLE.MANAGER]}\r\n    ]},\r\n    {title: 'Notice', path: 'notice'},\r\n    {title: 'Settings', child: [\r\n        {title: 'My Profile', path: 'my-profile'},\r\n        {title: 'My Role', path: 'my-role', isMRole: true},\r\n        {title: 'My Documents', path: 'my-documents'},\r\n        {title: 'Change Password', path: 'change-password'}\r\n    ]},\r\n    {title: 'Info', path: 'info'}\r\n];","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport { NAV } from '../../constants/nav';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  isExpand: boolean,\r\n  onToggleMenu: () => void,\r\n};\r\n\r\ninterface IState{\r\n  activeMenu: string,\r\n  activeTopMenu: string\r\n};\r\n\r\nexport default class NavBar extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeMenu: '',\r\n      activeTopMenu: ''\r\n    };\r\n    this.loadNav = this.loadNav.bind(this);\r\n  }\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  loadNav = (nav: any, pTitle: string, isTopLevel: boolean = false) => {\r\n    let that = this;\r\n    return(\r\n      <ul className={'navbar-nav' + ((!isTopLevel && this.state.activeTopMenu !== pTitle) ? ' hide' : '')} style={!isTopLevel ? styles.inner : {}}>\r\n      {\r\n        nav.map((d: any, i: number) => {\r\n          if((isNN(d.path) || isNN(d.child)) && (!isNN(d.roles) || d.roles.indexOf(this.props.appUser.role) >= 0) && (!d.isMRole || this.props.user.role.split(',').length > 0)){\r\n          return(\r\n            <li className='nav-item'>\r\n              <Link className='nav-link' to={isNN(d.path) ? d.path : '#' } onClick={() => {\r\n                if(this.state.activeTopMenu === d.title){\r\n                  this.setState({\r\n                    activeTopMenu: ''\r\n                  });\r\n                }else if(isTopLevel){\r\n                  this.setState({\r\n                    activeTopMenu: d.title\r\n                  });\r\n                }\r\n                this.setState({\r\n                  activeMenu: d.title\r\n                });\r\n                if(isNN(d.path)){\r\n                  this.props.onToggleMenu();\r\n                }\r\n              }}>{d.title}</Link>\r\n              {\r\n                isNN(d.child) && \r\n                that.loadNav(d.child, d.title)\r\n              }\r\n            </li>\r\n          )\r\n          }else{\r\n            return null;\r\n          }\r\n        })\r\n      }\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className={this.props.isExpand ? '' : 'collapse'} style={styles.nav}>\r\n        {\r\n          this.loadNav(NAV, '', true)\r\n        }\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  nav: {\r\n    backgroundColor: COLOR.SECONDARY,\r\n    color: COLOR.INVERSE\r\n  },\r\n  inner:{\r\n    backgroundColor: COLOR.PRIMARY,\r\n    paddingLeft: 10\r\n  }\r\n};","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class TabBar extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // }\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <footer style={styles.tabBar}>\r\n        <View className='center'>© Nest</View>\r\n      </footer>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {  \r\n  tabBar: {\r\n    flex: 1,\r\n    // backgroundColor: COLOR.HR_COLOR,\r\n    borderTopColor: COLOR.HR_COLOR,\r\n    borderTopWidth: 1,\r\n    'border-top-style': 'solid',\r\n    // alignItems: 'flex-start',\r\n    // justifyContent: 'flex-start',\r\n    width: '100%',\r\n    // flexDirection: 'row',\r\n    // position: 'absolute',\r\n    marginTop: 25,\r\n    paddingTop: 15,\r\n    paddingBottom: 15\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    alignItems: 'center'\r\n  },\r\n  tabImage: {\r\n    width: 20,\r\n    height: 20\r\n  },\r\n  activeTab: {\r\n    backgroundColor: COLOR.INVERSE\r\n  }\r\n};","import Api from '../api/api';\r\nimport { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'payment';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const search = (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const save = (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to save Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const updatePay = (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().put(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to update Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const upload = (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'upload', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.approvalid > 0)\r\n    {\r\n      /*\r\n      var homeIndex = user.homes.findIndex(d => d._id === homeId);\r\n      if(file.approvalid > 0)\r\n      {        \r\n        var paymentIndex = user.home[homeIndex].paymentApproval.findIndex(d => d.approvalid === file.approvalid);\r\n        user.home[homeIndex].paymentApproval[paymentIndex] = result.data;\r\n      }else{\r\n        user.home[homeIndex].paymentApproval.push(result.data);\r\n      }\r\n      */\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, file);\r\n};\r\n\r\nexport const update = (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/transaction/' + paymentId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      transaction._id = result.data;\r\n      // var homeIndex = user.homes.findIndex(d => d._id === params.homeid);\r\n      // if(paymentId.length > 0)\r\n      // {        \r\n        var paymentIndex = user.homes[homeIndex].payments.findIndex(d => d._id === paymentId);\r\n        if(!user.homes[homeIndex].payments[paymentIndex].transactions){\r\n          user.homes[homeIndex].payments[paymentIndex].transactions = [];\r\n        }\r\n        user.homes[homeIndex].payments[paymentIndex].transactions.push(transaction);\r\n      // }else{\r\n      //   user.homes[homeIndex].payments.push(result.data);\r\n      // }\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, transaction);\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","// import { actionTypes } from '../action-types';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants/index';\r\n// import { IHome } from '../../models/home';\r\n\r\nlet controller: string = 'visitor';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : '') + '/' + isActive, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // data.image = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          var foundIndex = visitors.findIndex(d => d._id === result.data);\r\n          visitors[foundIndex]._id = result.data;\r\n          visitors[foundIndex].name = name;\r\n          visitors[foundIndex].age = data.age;\r\n          visitors[foundIndex].gender = data.gender;\r\n          visitors[foundIndex].mobileNo = data.mobileNo;\r\n          visitors[foundIndex].emailId = data.emailId;\r\n          visitors[foundIndex].image = result.image;\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      } else {\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          data._id = result.data;\r\n          data.createdBy = user.name;\r\n          visitors.unshift(data);\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      } else {\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      /*\r\n      user.homes[homeIndex].visitors = user.homes[homeIndex].visitors.filter((d, i) => d._id != id);\r\n      dispatch(getUserResult(user as IUser));\r\n      */\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const enter = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/enter/' + id + '/' + gateNo, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const exit = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/exit/' + id + '/' + gateNo, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const approve = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/approve/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const reject = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/reject/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};","import Api from '../api/api';\r\nimport { isNNObject } from '../../util/index';\r\n\r\nlet controller: string = 'upload';\r\n\r\nexport const upload = (data: any, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().upload(controller, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};","import * as React from 'react';\r\nimport { ScrollView, View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNN, generateUUID } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\nimport { MONTH, COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome,\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  payment: {\r\n    paymentId: string,\r\n    amount: number,\r\n    transactionRef: string\r\n  }\r\n};\r\n\r\nexport default class MyDues extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      payment: {\r\n        paymentId: '',\r\n        amount: 0,\r\n        transactionRef: ''\r\n      }\r\n    }\r\n    this.getTotalDue = this.getTotalDue.bind(this);\r\n    this.payNow = this.payNow.bind(this);\r\n    this.clearTxn = this.clearTxn.bind(this);\r\n    this.txnFailure = this.txnFailure.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getTotalDue = () => {\r\n    let totalDue = 0;\r\n    this.props.home.payments.map((d: IPayment, i: number) => {\r\n      let amountPaid = 0;\r\n        d.transactions.filter((t, j) => t.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n      totalDue += d.amount - amountPaid;\r\n      return 1;\r\n    });\r\n    return totalDue;\r\n  };\r\n\r\n  payNow = (paymentId: string, amount: number) => {\r\n    if(paymentId && paymentId.length > 0 && amount && amount > 0){\r\n      if(isNN(this.props.user.client.upi.id) && isNN(this.props.user.client.upi.name)){\r\n        let transactionRef = generateUUID();\r\n        this.setState({\r\n          payment: {\r\n            paymentId: paymentId,\r\n            amount: amount,\r\n            transactionRef: transactionRef\r\n          }\r\n        });\r\n        \r\n        Toast.warn('Payment is in progress. Please contact administrator.');\r\n        // RNUpiPayment.initializePayment({\r\n        //   vpa: this.props.user.client.upi.id, // or can be john@ybl or mobileNo@upi\r\n        //   payeeName: this.props.user.client.upi.name,\r\n        //   amount: amount + '',\r\n        //   transactionRef: transactionRef,\r\n        //   transactionNote: ''\r\n        // }, this.successCallback, this.failureCallback);\r\n      }else{\r\n        Toast.warn('Please update UPI ID and UPI Name to app administrator to proceed further.');\r\n      }\r\n    }else{\r\n      Toast.warn('Amount should be more then 0 to proceed payment.');\r\n    }\r\n  };\r\n  \r\n  successCallback = (result: any) => {\r\n    console.log('Payment Success...', result);\r\n    if(result && result.Status)\r\n    {\r\n      if(result.Status === 'SUCCESS' && result.responseCode && result.responseCode === '00'){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let transaction = {\r\n          txnRef: result.txnRef,\r\n          txnId: result.txnId,\r\n          amount: this.state.payment.amount,\r\n          status: 'PAID',\r\n          isSuccess: true,\r\n          reason: ''\r\n        } as ITransaction;\r\n        this.props.onPaymentUpdate(this.state.payment.paymentId, transaction, (updateResult: boolean) => {\r\n          this.setState({\r\n            isLoading: false\r\n          });\r\n          this.clearTxn();\r\n          if(updateResult === true){\r\n            Toast.success('Payment success.');\r\n          }else{\r\n            Toast.fail('Payment failed.');\r\n          }\r\n        });\r\n      }else{\r\n        this.txnFailure(result);\r\n      }\r\n    }else{\r\n      this.txnFailure(result);\r\n    }\r\n  };\r\n   \r\n  failureCallback = (result: any) => {\r\n    this.txnFailure(result);\r\n  };\r\n\r\n  txnFailure = (result: any) => {\r\n    console.log('Payment Failure...', result);\r\n    let msg: string = '';\r\n    if(result && result.Status)\r\n    {\r\n      if(result.Status === 'FAILURE' && result.responseCode && result.responseCode === 'ZM'){\r\n        msg = 'Payment failed because of wrong pin.';\r\n      }\r\n      else if(result.Status === 'FAILURE' && result.message && result.message.length > 0){\r\n        msg = 'Payment failed because ' + result.message;\r\n      }else{\r\n        msg = 'Payment failed.';\r\n      }\r\n    }\r\n    else{\r\n      msg = 'Payment failed.';\r\n    }\r\n    Toast.fail(msg);\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    let transaction = {\r\n      txnRef: this.state.payment.transactionRef,\r\n      txnId: '',\r\n      amount: this.state.payment.amount,\r\n      status: 'FAIL',\r\n      isSuccess: false,\r\n      reason: msg\r\n    } as ITransaction;\r\n    this.props.onPaymentUpdate(this.state.payment.paymentId, transaction, (updateResult: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      this.clearTxn();\r\n      // if(updateResult === true){\r\n      //   Toast.success('Payment success.');\r\n      // }else{\r\n      //   Toast.fail('Payment failed.');\r\n      // }\r\n    });\r\n  };\r\n\r\n  clearTxn = () => {\r\n    this.setState({\r\n      payment: {\r\n        paymentId: '',\r\n        amount: 0,\r\n        transactionRef: ''\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <View style={{ margin: 5 }}>\r\n          <Text style={{ marginTop: 2, fontWeight: 'bold', fontSize: 17 }}>{'Total Due Amount: Rs ' + this.getTotalDue()}</Text>\r\n        </View>\r\n        <ScrollView>\r\n        {isNN(this.props.home.payments) ?\r\n        this.props.home.payments.filter((p: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          if (isNN(p.transactions)) {\r\n            p.transactions.filter(t => t.isSuccess === true).map((p, j) => amountPaid += p.amount);\r\n          }\r\n          return(amountPaid < p.amount);\r\n        }).map((d: IPayment, i: number) => {\r\n            let amountPaid = 0;\r\n            if (isNN(d.transactions)) {\r\n              d.transactions.filter(p => p.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n            }\r\n            if (amountPaid < d.amount) {\r\n              return (\r\n                <View key={'my-due' + i} style={(i === 0) ? styles.myDueFirst : styles.myDue }>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Text>{'Due for: ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + '/' + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%', marginTop: 4, marginBottom: 3 }}>\r\n                    <Text style={{ fontSize: 17 }}>{'Rs ' + (d.amount - amountPaid)}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%'}}>\r\n                    <Text>{'Due Date: 15/' + MONTH.filter(m => m.value === d.forMonth)[0].title + '/' + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Button \r\n                    title='PAY NOW'\r\n                    onPress={() => this.payNow(d._id, (d.amount - amountPaid))} \r\n                    />\r\n                  </View>\r\n                </View>\r\n              )\r\n            } else {\r\n              return null;\r\n            }\r\n          })\r\n          :<Text style={{ padding: 20 }}>No Dues found!!!</Text>\r\n        }\r\n        </ScrollView>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  myDue: {\r\n    margin: 7, \r\n    paddingLeft: 15,\r\n    borderLeftColor: COLOR.HR_COLOR, \r\n    borderLeftWidth: 1 \r\n  },\r\n  myDueFirst: {\r\n    margin: 7\r\n  }\r\n};","import moment from 'moment';\r\nimport { isNN, jsError, isNNObject } from './index';\r\nimport { DEFAULT_DATE_FORMAT, DEFAULT_DATE_TIME_FORMAT } from '../constants/index';\r\n\r\nexport function toDateString(_input: any, _format?: string) {\r\n  try {\r\n    if(isNNObject(_input)) {\r\n      if (typeof _input != 'string') {\r\n        _input.toString();\r\n      }\r\n      if (!isNN(_format)) {\r\n       _format = DEFAULT_DATE_FORMAT;\r\n      }\r\n      return moment(_input).format(_format);\r\n    } else {\r\n      return '';\r\n    }\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateString'); \r\n    return ''; \r\n  }\r\n};\r\n\r\nexport function toDateTimeString(_input: any, _format?: string) {\r\n  try {\r\n    return toDateString(_input, DEFAULT_DATE_TIME_FORMAT);\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateTimeString'); \r\n    return ''; \r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, ScrollView } from '../common/elements';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNN } from '../../util';\r\nimport { toDateString } from '../../util/convert';\r\nimport { MONTH, COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  home: IHome,\r\n};\r\n\r\ninterface IState {\r\n  activeTab: number\r\n};\r\n\r\nexport default class History extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <ScrollView style={{}}>\r\n        {isNN(this.props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true)))) ?\r\n        this.props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true))).slice(0, 3).map((d: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          let paidDate = null;\r\n          d.transactions.filter(t => t.isSuccess === true).map((t: ITransaction, j: number) => {\r\n            amountPaid += t.amount;\r\n            if(j === 0){\r\n              paidDate = t.createdAt;\r\n            }\r\n            return 1;\r\n          });\r\n              return (\r\n                <View key={'my-his' + i} style={(i === 0) ? styles.myDueFirst : styles.myDue }>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Text style={{}}>{\"Paid for: \" + MONTH.filter(m => m.value === d.forMonth)[0].title + \"/\" + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%', marginTop: 4, marginBottom: 3 }}>\r\n                    <Text style={{ fontSize: 17 }}>{\"Rs \" + amountPaid}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%'}}>\r\n                    <Text>{\"Paid On: \" + toDateString(paidDate)}</Text>\r\n                  </View>\r\n                </View>\r\n              )\r\n          })\r\n          :<Text style={{ padding: 20 }}>No History found</Text>\r\n        }\r\n        </ScrollView>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  myDue: {\r\n    margin: 7, \r\n    paddingLeft: 15,\r\n    borderLeftColor: COLOR.HR_COLOR, \r\n    borderLeftWidth: 1 \r\n  },\r\n  myDueFirst: {\r\n    margin: 7\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { Text, View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\n\r\ninterface IProps {\r\n  data: Array<object>,\r\n  message: string\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class CustomList extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n      return(\r\n        isNN(this.props.data) ?\r\n        this.props.data.map((d: any, i: number) => {\r\n          return(\r\n            <View style={{flex: 1, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid', paddingBottom: 3}}>\r\n              <View>\r\n                <Text key={i} style={{flex: 1, fontWeight: 'bold'}}>\r\n                  {d.title}\r\n                </Text>\r\n              </View>\r\n              <View>\r\n                <Text key={i} style={{flex: 1}}>\r\n                  {d.description}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text>{this.props.message}</Text>          \r\n      );\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  container: {\r\n    flex: 1, \r\n    // flexDirection: 'column',\r\n    width: '100%',\r\n    // backgroundColor: \"#CCCCCC\",\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    borderBottomWidth: 1,\r\n    'border-bottom-style': 'solid'\r\n  }, \r\n  row: {\r\n    flex: 1,\r\n    // flexDirection: 'row'\r\n  }, \r\n  card: {\r\n    flex: 1, \r\n    // flexDirection: 'column', \r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    // backgroundColor: '#DDDDDD', \r\n    borderRadius: 10,\r\n    padding: 5,\r\n    margin: 7\r\n  },\r\n  inner: {\r\n    // flex: 1, \r\n    // flexDirection: 'column', \r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    // textAlign: 'center',\r\n    // width: '150px',\r\n    margin: 5,\r\n    padding: '0px 10px'\r\n    // float: 'left'\r\n  },\r\n  txt:{\r\n    flex: 1, \r\n    // justifyContent: 'center', \r\n    // textAlign: 'center', \r\n    paddingTop: 7,\r\n    paddingBottom: 5,\r\n    fontSize: 14\r\n  },\r\n  img:{\r\n    width: '10vw',\r\n    height: '10vw',\r\n    maxWidth: '75px',\r\n    maxHeight: '75px',\r\n    margin: 5\r\n  }\r\n};\r\n  ","import * as React from 'react';\r\nimport { View, TouchableHighlight, Image } from '../common/elements';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport MyDues from './my-dues';\r\nimport History from './history';\r\nimport Images from '../images';\r\nimport CustomList from './custom-list';\r\nimport { styles as cardStyles } from '../../styles/card';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  activeTab: number\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        {/*<View style={{flex: 1, flexDirection: 'row', marginTop: 1, marginBottom: 2}}>\r\n          <Text style={{flex: 1, justifyContent: 'flex-start', padding: 5}}>{new Date().toLocaleDateString()}</Text>\r\n          <Text style={{flex: 1, justifyContent: 'flex-end', alignItems:'flex-end', textAlign: \"right\", padding: 5}}>{new Date().toLocaleTimeString()}</Text>\r\n        </View>*/}\r\n        <View className='fl' style={cardStyles.container}>\r\n            <View style={cardStyles.row}>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('members')}>\r\n                  <Image src={Images.members} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  {(this.props.home.members ? this.props.home.members.length + '' : '') + ' MEMBER' + ((this.props.home.members.length === 0 || this.props.home.members.length > 1) ? 'S' : '')}\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('vehicles')}>\r\n                  <Image src={Images.vehicle} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  {(this.props.home.vehicles ?  this.props.home.vehicles.length + '' : '') + ' VEHICLE' + ((this.props.home.vehicles.length === 0 || this.props.home.vehicles.length > 1) ? 'S' : '')}\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('servents')}>\r\n                  <Image src={Images.servent} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  {(this.props.home.servents ? this.props.home.servents.length + '' : '') + ' SERVANT' + ((this.props.home.servents.length === 0 || this.props.home.servents.length > 1) ? 'S' : '')}\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('tickets')}>\r\n                  <Image src={Images.support} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.tickets ? this.props.home.tickets.length + '' : '') + ' TICKET' + ((this.props.home.tickets.length === 0 || this.props.home.tickets.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>TICKET(S)</View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('visitors')}>\r\n                  <Image src={Images.visitors} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.visitors ? this.props.home.visitors.length + '' : '') + ' VISITOR' + ((this.props.home.visitors.length === 0 || this.props.home.visitors.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>VISITOR(S)</View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab}: styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              MY DUES\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>\r\n              ADVANCE\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              HISTORY\r\n            </TouchableHighlight>\r\n            {/* <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.activeTab)} onClick={() => this.setState({activeTab: 4})}>\r\n              DEPOSITS\r\n            </TouchableHighlight> */}\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n          {this.state.activeTab === 1 ?\r\n              <MyDues history={this.props.history} user={this.props.user} home={this.props.home} onPaymentUpload={this.props.onPaymentUpload} onPaymentUpdate={this.props.onPaymentUpdate} />\r\n            :\r\n            this.state.activeTab === 2 ?\r\n              <CustomList data={[]} message=\"No advance found!\" />\r\n              :\r\n              this.state.activeTab === 3 ?\r\n              <History history={this.props.history} home={this.props.home} />\r\n              :\r\n              this.state.activeTab === 4 ?\r\n              <CustomList data={[]} message=\"Work in progress\" />\r\n              :\r\n              []\r\n            }\r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%',\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Image } from '../../common/elements';\r\nimport Images from '../../images';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles as cardStyles } from '../../../styles/card';\r\nimport { ROLE } from '../../../constants';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { ITickets } from '../../../models/store/tickets';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  tickets: ITickets\r\n  blocks: IBlocks\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View className='fl' style={cardStyles.container}>\r\n            <View style={cardStyles.row}>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('tickets')}>\r\n                  <Image src={Images.support} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {/* {this.props.tickets.isUpToDate ?\r\n                    ((!this.props.tickets.isError) ? this.props.tickets.data.length : 0) + \" TICKET\" + ((this.props.tickets.isError || this.props.tickets.data.length === 0 || this.props.tickets.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    } */}\r\n                    TICKET\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('ads')}>\r\n                  <Image src={Images.addvertise} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {/* {this.props.ads.isUpToDate ?\r\n                    ((!this.props.ads.isError) ? this.props.ads.data.length : 0) + \" AD\" + ((this.props.ads.isError || this.props.ads.data.length === 0 || this.props.ads.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    } */}\r\n                    ADS\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('notification')}>\r\n                  <Image src={Images.reminder} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>NOTIFICATION</View>\r\n                </View>\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('users')}>\r\n                  <Image src={Images.users} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.users.isUpToDate ?\r\n                    ((!this.props.users.isError) ? this.props.users.data.length : 0) + \" USER\" + ((this.props.users.isError || this.props.users.data.length === 0 || this.props.users.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('homes')}>\r\n                  <Image src={Images.homes} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.homes.isUpToDate ?\r\n                    ((!this.props.homes.isError) ? this.props.homes.data.length : 0) + \" HOME\" + ((this.props.homes.isError || this.props.homes.data.length === 0 || this.props.homes.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('blocks')}>\r\n                  <Image src={Images.blocks} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.blocks.isUpToDate ?\r\n                    ((!this.props.blocks.isError) ? this.props.blocks.data.length : 0) + \" BLOCK\" + ((this.props.blocks.isError || this.props.blocks.data.length === 0 || this.props.blocks.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('all-visitors')}>\r\n                  <Image src={Images.visitors} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.visitors ? this.props.home.visitors.length + '' : '') + ' VISITOR' + ((this.props.home.visitors.length === 0 || this.props.home.visitors.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>VISITOR(S)</View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('payment')}>\r\n                  <Image src={Images.money} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>PAYMENT</View>\r\n                </View>\r\n            </View>\r\n        </View>     \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%',\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, ScrollView, TextInput, Text } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN, generateUUID } from '../../../util/index';\r\nimport { COLOR } from '../../../constants';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHome, IVisitor } from '../../../models/home';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  homeId: string,\r\n  id: string,\r\n  type: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  fileName: string,\r\n  showHomes: boolean,\r\n  homeSearchText: string\r\n};\r\n\r\nexport default class NewVisitor extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      homeId: '',\r\n      id: '',\r\n      type: 'VISITOR',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      fileName: '',\r\n      showHomes: false,\r\n      homeSearchText: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onImageSelect = this.onImageSelect.bind(this);\r\n    this.viewAll = this.viewAll.bind(this);\r\n  };\r\n  \r\n  onImageSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        this.setState({\r\n          fileName: fileName\r\n        });\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        this.props.onUpload(data, (result: boolean, message: string) => {\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.props.gateNo) && this.state.showHomes === false && this.state.homeId.length > 0 && isNN(this.state.name) && isNN(this.state.fileName)){\r\n      // this.props.onToggleLoading(true);\r\n      let visitor = {\r\n        _id: '',\r\n        type: this.state.type,\r\n        name: this.state.name,\r\n        age: this.state.age,\r\n        gender: this.state.gender,\r\n        mobileNo: this.state.mobileNo,\r\n        emailId: '',\r\n        image: this.state.fileName,\r\n        passCode: '',\r\n        gateNo: this.props.gateNo\r\n      } as IVisitor;\r\n      this.props.onSave(this.state.homeId, visitor, this.props.user, this.props.appUser, (result: boolean) => {          \r\n        // this.props.onToggleLoading(false);\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          // Toast.success('Visitor ' + name + ' saved successfully.');\r\n        }else{\r\n          Toast.fail('Failed to save visitor ' + this.state.name + '.');\r\n        }\r\n      });\r\n      this.setState({\r\n        homeId: '',\r\n        id: '',\r\n        type: 'VISITOR',\r\n        name: '',\r\n        age: 0,\r\n        gender: '',\r\n        mobileNo: '',\r\n        fileName: '',\r\n        showHomes: false,\r\n        homeSearchText: ''\r\n      });\r\n      Toast.info('Visitor will be saved and notified to the home.');\r\n    }else{\r\n      Toast.warn('Please fill Gate Number, Home and Image before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({ \r\n      homeId: '',\r\n      id: '',\r\n      type: 'VISITOR',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      fileName: '',\r\n      showHomes: false,\r\n      homeSearchText: ''\r\n    });\r\n  };\r\n\r\n  viewAll = () => {\r\n    if(isNN(this.props.gateNo)) {\r\n      this.props.history.push('all-visitors')\r\n    } else {\r\n      Toast.warn('Please enter Gate Number to view this page.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          <View style={modelStyles.row}>\r\n            <Text className='fr pointer' onClick={this.viewAll} style={{...styles.ele, color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right'}}>View all Active Visitors</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder='Enter Home Number' className='form-control'\r\n          style={{...modelStyles.ele, ...styles.ele,\r\n            flexDirection: 'row',\r\n            padding: 12,\r\n            borderWidth: 1,\r\n            borderColor: COLOR.HR_COLOR,\r\n            borderRadius: 5\r\n          }} \r\n          value={this.state.homeSearchText} \r\n          onChange={(event: any) => this.setState({showHomes: true, homeSearchText: event.target.value})} />\r\n          </View>\r\n          {\r\n            (this.state.showHomes && isNN(this.state.homeSearchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n              {\r\n                this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.homeSearchText.toLowerCase()) >= 0).map((d: IHome, i: number) => {\r\n                  return(\r\n                    <Text \r\n                    className='pointer'\r\n                    key={'ho' + i}\r\n                    style={{...styles.ele, flexDirection: 'column', margin: 3, padding: 6, backgroundColor: COLOR.CARD_UNDERLAY}}\r\n                    onClick={() => {\r\n                      this.setState({homeSearchText: d.number, homeId: d._id, showHomes: false});\r\n                    }}>{d.number}</Text>\r\n                  )\r\n                })\r\n              }\r\n            </ScrollView>\r\n          }\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'VISITOR'} text='Visitor' onPress={() => this.setState({type: 'VISITOR'})} />\r\n            <RadioButton isActive={this.state.type === 'DELIVERY'} text='Delivery' onPress={() => this.setState({type: 'DELIVERY'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder='Age' className='form-control' maxLength={3} style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder='Mobile Number' className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>    \r\n          <View style={modelStyles.row}>\r\n              <input type='file' name='image' placeholder='SELECT IMAGE' onChange={this.onImageSelect}/>\r\n              {isNN(this.state.fileName) &&\r\n              <Text style={{...styles.ele, marginLeft: 15}}>{this.state.fileName}</Text>\r\n              }\r\n          </View>\r\n          <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              style={{...styles.ele, marginRight: 10}}\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={this.onClear}\r\n              style={styles.ele}\r\n              />\r\n          </View>\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  },\r\n  ele: {\r\n    fontSize: 17\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, TextInput } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home';\r\nimport NewVisitor from './new-visitor';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onGateNoChanged: (gateNo: string) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  gateNo: string,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      gateNo: '',\r\n      isLoading: false\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      gateNo: this.props.gateNo\r\n    })\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder='Gate Number' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, width: 'auto'}} value={this.state.gateNo} onChange={(event: any) => this.setState({gateNo: event.target.value})} onBlur={() => this.props.onGateNoChanged(this.state.gateNo)} />\r\n        </View>\r\n        <NewVisitor history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} gateNo={this.state.gateNo} onToggleLoading={(isLoading) => this.setState({ isLoading: isLoading })} onSave={this.props.onSaveVisitor} onUpload={this.props.onUpload} />\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { Text } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { IVisitor } from '../../models/home';\r\nimport Home from './home';\r\nimport AMHome from './manager/home';\r\nimport GKHome from './gatekeeper/home';\r\nimport { ROLE } from '../../constants/index';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  outings: IOutings,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  tickets: ITickets,\r\n  blocks: IBlocks,\r\n  gateNo: string,\r\n  onGateNoChanged: (gateNo: string) => void,\r\n  onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n};\r\n\r\nexport default class Dashboard extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    if(this.props.appUser.role === ROLE.USER) {\r\n      if(this.props.appUser.homeIndex >= 0 && isNN(this.props.user.homes)) {\r\n        return(<Home history={this.props.history} user={this.props.user} home={this.props.user.homes[this.props.appUser.homeIndex]} onPaymentUpload={(file: any, homeId: string, callback: (result: boolean) => void) => this.props.onPaymentUpload(file, homeId, this.props.user, callback)} onPaymentUpdate={(paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => this.props.onPaymentUpdate(paymentId, transaction, this.props.appUser.homeIndex, this.props.user, callback)} />);\r\n      }else{\r\n        return(<Text style={{margin: 20}}>No home assigned to you. Please contact administrator/manager.</Text>);\r\n      }\r\n    }\r\n    else if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      return(<AMHome history={this.props.history} appUser={this.props.appUser} user={this.props.user} ads={this.props.ads} users={this.props.users} homes={this.props.homes} tickets={this.props.tickets} blocks={this.props.blocks} />);\r\n    }\r\n    else if(this.props.appUser.role === ROLE.GATEKEEPER) {\r\n      return(<GKHome history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} gateNo={this.props.gateNo} onGateNoChanged={this.props.onGateNoChanged} onSaveVisitor={this.props.onSaveVisitor} onUpload={this.props.onUpload} />);\r\n    }else{\r\n      return(<Text style={{margin: 20}}>No role assigned to you. Please contact administrator/manager.</Text>);\r\n    }\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { ITransaction } from '../models/home/transaction';\r\nimport { IVisitor } from '../models/home';\r\nimport { setGateNo } from '../store/actions/account';\r\nimport { upload, update } from '../store/actions/payment';\r\nimport { save as saveVisitor } from '../store/actions/visitor';\r\nimport { upload as fileUpload } from '../store/actions/file';\r\nimport Page from '../components/home/dashboard';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    outings: state.Outings,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    tickets: state.Tickets,\r\n    blocks: state.Blocks,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onGateNoChanged: (gateNo: string) => dispatch(setGateNo(gateNo)),\r\n    onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => dispatch(upload(file, homeId, user, callback)),\r\n    onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => dispatch(update(paymentId, transaction, homeIndex, user, callback)),\r\n    onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => dispatch(saveVisitor(homeId, data, user, appUser, scallback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(fileUpload(data, callback))\r\n});\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IMember } from '../../models/home/member';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n////import { number } from 'prop-types';\r\n////import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'member';\r\nlet accountController: string = 'account';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.member) && isNN(result.data.member._id)) {\r\n      sCallback(result.data.member, result.data.homeIds ? result.data.homeIds : []);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Member.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IMember, user: IUser, homeIndex: number, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        let members = user.homes[homeIndex].members;\r\n        var foundIndex = members.findIndex(d => d._id === result.data);\r\n        members[foundIndex]._id = result.data;\r\n        members[foundIndex].number = data.number;\r\n        members[foundIndex].name = data.name;\r\n        members[foundIndex].age = data.age;\r\n        members[foundIndex].gender = data.gender;\r\n        members[foundIndex].mobileNo = data.mobileNo;\r\n        members[foundIndex].emailId = data.emailId;\r\n        members[foundIndex].type = data.type;\r\n        \r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    data = Object.assign(data, {\r\n      password: data.mobileNo\r\n    });\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        let members = user.homes[homeIndex].members;\r\n        members.push(data);\r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const saveByAM = (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    isAM: true,\r\n    homeIds: homeIds,\r\n    isApprove: isApprove\r\n  });\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          var foundIndex = users.data.findIndex(d => d._id === result.data);\r\n          if(foundIndex >= 0){\r\n            users.data[foundIndex]._id = result.data;\r\n            users.data[foundIndex].name = data.name;\r\n          } else {\r\n            users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          }\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const removeByAM = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadWFAUsers = (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(accountController + '/wfausers', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNNObject(result) && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const reject = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(accountController + '/rejectuser/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  data: Array<{title: string, link: string}>\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Breadcrum extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    data: []\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={styles.cnr}>\r\n        <Link to='' style={styles.link}>Home</Link>\r\n        {this.props.data.map((d, i) => {\r\n          return(<>\r\n          <span style={styles.sep}>/</span>\r\n          {(i === this.props.data.length - 1) ?\r\n          <span style={styles.link}>{d.title}</span>\r\n          :\r\n          <Link to={'/' + d.link}>{d.title}</Link>\r\n          }\r\n          </>);\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  cnr: {\r\n    width: '100%',\r\n    MarginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n  sep:{\r\n    marginRight: 10,\r\n    marginLeft: 10\r\n  },\r\n  link: {\r\n\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    content: {\r\n      backgroundColor: COLOR.INVERSE\r\n    },\r\n    row: {\r\n      // flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n      // backgroundColor: COLOR.INVERSE,\r\n      borderBottomColor: COLOR.HR_COLOR,\r\n      borderBottomWidth: 1,\r\n      'border-bottom-style': 'solid',\r\n      marginTop: 5,\r\n      // marginBottom: 10,\r\n      // paddingLeft: 10,\r\n      // paddingRight: 10,\r\n      // borderRadius: 10\r\n    },\r\n    ele: {\r\n      // flexDirection: 'row',\r\n      alignItems: 'flex-start',\r\n      marginTop: 1,\r\n      marginBottom: 3,\r\n      padding: 2\r\n    }\r\n  };","export const styles = {   \r\n  addIcon: {\r\n    width: 20,\r\n    height: 20,\r\n    cursor: 'pointer'\r\n  },  \r\n  editIcon: {\r\n      width: 20,\r\n      height: 20,\r\n      cursor: 'pointer'\r\n    }, \r\n    deleteIcon: {\r\n      width: 18,\r\n      height: 20,\r\n      cursor: 'pointer'\r\n    },\r\n    closeIcon: {\r\n      width: 17,\r\n      height: 17,\r\n      cursor: 'pointer'\r\n    },\r\n    datePicker: {\r\n      width: 20,\r\n      height: 23,\r\n      cursor: 'pointer'\r\n    }\r\n  };\r\n  ","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport RadioButton from '../common/radio-button';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IMember } from '../../models/home/member';\r\nimport { styles } from '../../styles/page';\r\nimport { styles as iconStyles } from '../../styles/icon';\r\nimport { styles as modelStyles } from '../../styles/model';\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => void,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class Members extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSave(member, this.props.user, this.props.homeIndex, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n            Toast.success('Member saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n          }\r\n        });\r\n    }else{\r\n      // Toast.warn('Please fill all the required fields before '+ (this.state.id > 0 ? 'Update' : 'Save') + '.');\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.homeIndex, this.props.user, this.props.users, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Member removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove member.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Members', link: 'members'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-member')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n      {isNN(this.props.user.homes[this.props.homeIndex].members) ?\r\n        this.props.user.homes[this.props.homeIndex].members.map((d: IMember, i: number) => {\r\n          return(\r\n            (this.state.isEdit === true && this.state.id === d._id) ?\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n                <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n                <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                  <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: false,\r\n                    id: '',\r\n                    number: '',\r\n                    name: '',\r\n                    age: 0,\r\n                    gender: '',\r\n                    mobileNo: '',\r\n                    emailId: '',\r\n                    type: 'OWNER',\r\n                    role: 'USER'\r\n                  });\r\n                }}>\r\n                  <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n            :\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                <Text>{d.name}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n              </View>\r\n              {isNN(d.mobileNo) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.emailId) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.emailId}</Text>\r\n              </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                <Text>{d.type}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d._id,\r\n                    number: d.number,\r\n                    name: d.name,\r\n                    age: d.age,\r\n                    gender: d.gender,\r\n                    mobileNo: d.mobileNo,\r\n                    emailId: d.emailId,\r\n                    type: d.type,\r\n                    role: d.role\r\n                  });\r\n                }}>\r\n                  <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Member found!!!</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUsers } from '../models/store/users';\r\nimport { IUser } from '../models/user/user';\r\nimport { IMember } from '../models/home';\r\nimport { save, remove } from '../store/actions/member';\r\nimport Page from '../components/home/members';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    users: state.Users,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, scallback)),\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, scallback: (result: boolean) => void) => dispatch(remove(id, homeIndex, user, users, scallback))\r\n});\r\n\r\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\n// import { CheckBox  } from 'react-native-elements';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IMember } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class NewMember extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSave(member, this.props.user, this.props.homeIndex, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Member saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Members', link: 'members'}, {title: 'New Member', link: 'new-member'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IMember } from '../models/home';\r\nimport { save } from '../store/actions/member';\r\nimport Page from '../components/home/new-member';\r\n////import { number } from 'prop-types';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, scallback))\r\n});\r\n\r\nexport const NewMember = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'vehicle';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IVehicle, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let vehicles = user.homes[homeIndex].vehicles;\r\n        var foundIndex = vehicles.findIndex(d => d._id === result.data);\r\n        vehicles[foundIndex]._id = result.data;\r\n        vehicles[foundIndex].number = data.number;\r\n        vehicles[foundIndex].type = data.type;\r\n        user.homes[homeIndex].vehicles = vehicles;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n  new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      data._id = result.data;\r\n      data.createdBy = user.name;\r\n      let vehicles = user.homes[homeIndex].vehicles;\r\n      vehicles.push(data);\r\n      user.homes[homeIndex].vehicles = vehicles;\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].vehicles = user.homes[homeIndex].vehicles.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Text, Image, TextInput, } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN } from '../../util/index';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string, \r\n  number: string, \r\n  type: string\r\n};\r\n\r\nexport default class Vehicles extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '', \r\n      number: '', \r\n      type: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.number) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let vehicle = {\r\n          _id: this.state.id,\r\n          number: this.state.number,\r\n          type: this.state.type\r\n        } as IVehicle;\r\n        this.props.onSave(vehicle, this.props.user, this.props.homeIndex, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              number: '',\r\n              type: ''\r\n            });\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Vehicle removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove vehicle.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Vehicles', link: 'vehicles'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-vehicle')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n        {isNN(this.props.user.homes[this.props.homeIndex].vehicles) ?\r\n          this.props.user.homes[this.props.homeIndex].vehicles.map((d: IVehicle, i: number) => {\r\n            return(\r\n              (this.state.isEdit === true && this.state.id === d._id) ?\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <RadioButton isActive={this.state.type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => this.setState({type: 'TWO WHEELER'})} />\r\n                  <RadioButton isActive={this.state.type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => this.setState({type: 'FOUR WHEELER'})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      number: '', \r\n                      type: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>                  \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.number}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      number: d.number,\r\n                      type: d.type\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No Vehicle found!!!</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVehicle } from '../models/home';\r\nimport { save, remove } from '../store/actions/vehicle';\r\nimport Page from '../components/home/vehicles';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, scallback))\r\n});\r\n\r\nexport const Vehicles = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string, \r\n  number: string, \r\n  type: string\r\n};\r\n\r\nexport default class NewVehicle extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '', \r\n      number: '', \r\n      type: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.number) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let vehicle = {\r\n          _id: this.state.id,\r\n          number: this.state.number,\r\n          type: this.state.type\r\n        } as IVehicle;\r\n        this.props.onSave(vehicle, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              type: ''\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Vehicles', link: 'vehicles'}, {title: 'New Vehicle', link: 'new-vehicle' }]} />  \r\n        <View style={modelStyles.container}>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => this.setState({type: 'TWO WHEELER'})} />\r\n            <RadioButton isActive={this.state.type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => this.setState({type: 'FOUR WHEELER'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVehicle } from '../models/home';\r\nimport { save } from '../store/actions/vehicle';\r\nimport Page from '../components/home/new-vehicle';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback))\r\n});\r\n\r\nexport const NewVehicle = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IServent } from '../../models/home/servent';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'servent';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IServent, user: IUser, homeIndex:number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let servents = user.homes[homeIndex].servents;\r\n        var foundIndex = servents.findIndex(d => d._id === result.data);\r\n        servents[foundIndex]._id = result.data;\r\n        servents[foundIndex].name = data.name;\r\n        servents[foundIndex].age = data.age;\r\n        servents[foundIndex].gender = data.gender;\r\n        servents[foundIndex].mobileNo = data.mobileNo;\r\n        servents[foundIndex].emailId = data.emailId;\r\n           \r\n        user.homes[homeIndex].servents = servents;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        let servents = user.homes[homeIndex].servents;\r\n        servents.push(data);\r\n        user.homes[homeIndex].servents = servents;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].servents = user.homes[homeIndex].servents.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Text, Image, TextInput } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServent } from '../../models/home/servent';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN } from '../../util/index';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class Servents extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let servent = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : ''\r\n        } as IServent;\r\n        this.props.onSave(servent, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: ''\r\n            });\r\n            Toast.success('Servent saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servent.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Servent removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove servent.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Servents', link: 'servents'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-servent')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n        {isNN(this.props.user.homes[this.props.homeIndex].servents) ?\r\n          this.props.user.homes[this.props.homeIndex].servents.map((d: IServent, i: number) => {\r\n            return(\r\n              (this.state.isEdit === true && this.state.id === d._id) ?\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n                  <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      name: '',\r\n                      age: 0,\r\n                      gender: '',\r\n                      mobileNo: '',\r\n                      emailId: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>          \r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      name: d.name,\r\n                      age: d.age,\r\n                      gender: d.gender,\r\n                      mobileNo: d.mobileNo,\r\n                      emailId: d.emailId\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No Servent found!!!</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IServent } from '../models/home';\r\nimport { save, remove } from '../store/actions/servent';\r\nimport Page from '../components/home/servents';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, scallback))\r\n});\r\n\r\nexport const Servents = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServent } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class NewServent extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let servent = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : ''\r\n        } as IServent;\r\n        this.props.onSave(servent, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: ''\r\n            });\r\n            // this.props..navigation.goBack(null)\r\n            Toast.success('Servent saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servent.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Servents', link: 'servents'}, {title: 'New Servent', link: 'new-servent' }]} />  \r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={3} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IServent } from '../models/home';\r\nimport { save } from '../store/actions/servent';\r\nimport Page from '../components/home/new-servent';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback))\r\n});\r\n\r\nexport const NewServent = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\n\r\nlet controller: string = 'ticket';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getTicketsResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      dispatch(getTicketsResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Tickets.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n            arrTickets[foundIndex]._id = result.data;\r\n            arrTickets[foundIndex].title = data.title;\r\n            arrTickets[foundIndex].description = data.description;\r\n            arrTickets[foundIndex].status = data.status;\r\n            arrTickets[foundIndex].updatedBy = user.name;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n          arrTickets[foundIndex]._id = result.data;\r\n          arrTickets[foundIndex].title = data.title;\r\n          arrTickets[foundIndex].description = data.description;\r\n          arrTickets[foundIndex].status = data.status;\r\n          arrTickets[foundIndex].updatedBy = user.name;\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              _homeId: user.homes[homeIndex].number,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      // }\r\n      // if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n      //   user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n      //   dispatch(getUserResult(user as IUser));\r\n      // }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const resolve = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/resolve/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const start = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  let newStatus = 'IN-PROGRESS';\r\n  new Api().put(controller + '/start/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          arrTickets = tickets.data;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n          arrTickets[foundIndex].status = newStatus;\r\n          dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        let arrTickets = user.homes[homeIndex].tickets;\r\n        var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n        arrTickets[foundIndex].status = newStatus;\r\n        user.homes[homeIndex].tickets = arrTickets;\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  },{\r\n    status: newStatus\r\n  });\r\n};\r\n\r\nexport const addComment = (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(isNN(comment._id)){\r\n    new Api().put(controller + '/comment/' + comment._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n            var commentIndex = arrTickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n            // arrTickets[ticketIndex].comments[commentIndex] = result.data;\r\n            arrTickets[ticketIndex].comments[commentIndex] = comment;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n          var commentIndex = user.homes[appUser.homeIndex].tickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n          user.homes[appUser.homeIndex].tickets[ticketIndex].comments[commentIndex] = comment;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }else{\r\n    new Api().post(controller + '/comment/' + ticketId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment._id = result.data;\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n              // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n              //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n              // }\r\n              arrTickets[ticketIndex].comments.unshift(comment);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n            // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n            //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n            // }\r\n            user.homes[appUser.homeIndex].tickets[ticketIndex].comments.unshift(comment);\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }\r\n};\r\n\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateString } from '../../util/convert';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  data: Array<ITicket>,\r\n  isEdit: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string,\r\n  status: string,\r\n  viewId: string,\r\n  comments: Array<ITicketComment>,\r\n  comment: string\r\n};\r\n\r\nexport default class Tickets extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      data: [],\r\n      isEdit: false,\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      status: 'INIT',\r\n      viewId: '',\r\n      comments: [],\r\n      comment: ''\r\n    }\r\n    // this.getTickets = this.getTickets.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onResolve = this.onResolve.bind(this);\r\n    this.onStart = this.onStart.bind(this);\r\n    this.onView = this.onView.bind(this);\r\n    this.onAddComment = this.onAddComment.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) ? '' : this.props.user.homes[this.props.appUser.homeIndex]._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        // data: this.getTickets()\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Tickets.');\r\n      }\r\n    });\r\n    /*\r\n    if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoadAll(this.props.user.client._id, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          data: this.getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoadAllByHome(this.props.user, this.props.appUser.homeIndex, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          data: this.getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }\r\n    */\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  /*\r\n  getTickets = () => {\r\n    if(this.props.appUser.role === ROLE.USER) {\r\n      return isNN(this.props.user.homes[this.props.appUser.homeIndex].tickets) ? this.props.user.homes[this.props.appUser.homeIndex].tickets : [];\r\n    }else if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      return (this.props.tickets.isUpToDate && !this.props.tickets.isError && isNN(this.props.tickets.data)) ? this.props.tickets.data : [];\r\n    }else{\r\n      return [];\r\n    }\r\n  };\r\n  */\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ticket = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          status: this.state.status\r\n        } as ITicket;\r\n        this.props.onSave(ticket, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              title: '',\r\n              description: '',\r\n              status: 'INIT',\r\n              viewId: '',\r\n              comments: [],\r\n              comment: ''\r\n            });\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onResolve = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to resolve ticket',\r\n      message: 'Are you sure you wish to resolve this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onResolve(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket resolved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to resolve ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onStart = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to start ticket',\r\n      message: 'Are you sure you wish to start this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onStart(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket started successfully.');\r\n              }else{\r\n                Toast.fail('Failed to start ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        comments: [],\r\n        comment: ''\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        comments: comments,\r\n        comment: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  onAddComment = (id: string) => {\r\n    if(isNN(this.state.comment)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onAddComment(id, {\r\n        _id: '',\r\n        // ticketId: id, \r\n        comment: this.state.comment,\r\n        createdBy: this.props.user.name,\r\n        createdAt: new Date()\r\n      } as ITicketComment, this.props.appUser, this.props.user, this.props.tickets, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          this.setState({\r\n            comment: ''\r\n          });\r\n          Toast.success('Comment added successfully.');\r\n        }else{\r\n          Toast.fail('Failed to add comment.');\r\n        }\r\n      });\r\n  }else{\r\n    Toast.warn('Please fill comment before Add.');\r\n  }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Tickets', link: 'tickets'}]} />\r\n        {\r\n          this.props.appUser.role === ROLE.USER &&\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('new-ticket')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n        }\r\n        {(isNNObject(this.props.tickets) && this.props.tickets.isUpToDate && !this.props.tickets.isError && isNN(this.props.tickets.data)) ?\r\n        this.props.tickets.data.map((d: ITicket, i: number) => {\r\n            return(\r\n              <View key={'tkt' + i} style={styles.row}>\r\n               <View style={styles.ele}>\r\n                  <Text>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  {(this.state.isEdit && this.state.id === d._id) ?\r\n                    <TextInput type='text' placeholder='Title' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n                    :\r\n                    <Text>{d.title}</Text>\r\n                  }\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  {(this.state.isEdit && this.state.id === d._id) ?\r\n                    <TextArea placeholder='Description' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n                    :\r\n                    <Text>{d.description}</Text>\r\n                  }\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.status}</Text>\r\n                </View>\r\n                {(this.state.isEdit && this.state.id === d._id) ?\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      title: '',\r\n                      description: '',\r\n                      status: 'INIT',\r\n                      viewId: '',\r\n                      comments: [],\r\n                      comment: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n                :\r\n                <View style={styles.ele}>\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      title: d.title,\r\n                      description: d.description,\r\n                      status: 'INIT',\r\n                      viewId: '',\r\n                      comments: [],\r\n                      comment: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                }\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                }\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.onResolve(d._id);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>RESOLVE</Text>\r\n                  </TouchableHighlight>\r\n                }\r\n                {((this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) && d.status === 'INIT') &&\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.onStart(d._id);\r\n                }}>\r\n                  <Text className='pointer' style={{color: COLOR.SECONDARY}}>START</Text>\r\n                </TouchableHighlight>\r\n                }\r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onView(d._id, d.comments);\r\n                }}>\r\n                  <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n                </TouchableHighlight>\r\n                </View>\r\n                }\r\n                {this.state.viewId === d._id &&\r\n                <View style={myStyles.cmntsCnr}>\r\n                  <View style={myStyles.cmntsHdr}>\r\n                    <Text style={myStyles.cmntsHdrTxt}>Comments</Text>\r\n                  </View>\r\n                  <View style={myStyles.cmntsCnt}>\r\n                    {isNN(this.state.comments) ?\r\n                      this.state.comments.map((e, j) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? myStyles.cmntCnrFst : myStyles.cmntCnr}>\r\n                          <View style={myStyles.cmntHdr}>\r\n                            <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{e.comment}</Text>\r\n                          </View>\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No Comments found!!!</Text>\r\n                    }\r\n                    <View style={myStyles.addCmntCnt}>\r\n                      <TextArea placeholder='Comment Text' className='form-control' style={{...CommonStyles.textInput, ...myStyles.newCmnt}} value={this.state.comment} onChange={(event: any) => this.setState({comment: event.target.value})} />\r\n                      <View style={myStyles.saveBtn}>\r\n                        <Button\r\n                          title='ADD COMMENT'\r\n                          onPress={() => this.onAddComment(d._id)}\r\n                          />\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>{(this.props.tickets.isUpToDate ? (this.props.tickets.isError ? this.props.tickets.errorMessage : \"No Ticket found!!!\") : \"Loading...\")}</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst myStyles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    marginTop: 3,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  },\r\n  addCmntCnt: {\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  newCmnt:{\r\n    width: '100%',\r\n    borderWidth: 1,\r\n    borderColor: COLOR.HR_COLOR\r\n  },\r\n  saveBtn:{\r\n    marginTop: 5\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { ITicketComment } from '../models/home/ticket-comment';\r\nimport { loadAll, save, remove, resolve, start, addComment } from '../store/actions/ticket';\r\nimport Page from '../components/home/tickets';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, homeId, callback)),\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, scallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, tickets, scallback)),\r\n    onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(resolve(id, user, homeIndex, tickets, scallback)),\r\n    onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(start(id, user, homeIndex, tickets, scallback)),\r\n    onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) =>  dispatch(addComment(ticketId, comment, appUser, user, tickets, callback))\r\n});\r\n\r\nexport const Tickets = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, Text, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string,\r\n  status: string\r\n};\r\n\r\nexport default class NewTicket extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      status: 'INIT'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ticket = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          status: this.state.status\r\n        } as ITicket;\r\n        this.props.onSave(ticket, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              title: '',\r\n              description: '',\r\n              status: 'INIT'\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Tickets', link: 'tickets'}, {title: 'New Ticket', link: 'new-ticket' }]} />  \r\n        {this.props.appUser.role === ROLE.USER ?\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n            </View>\r\n            {/* <View style={modelStyles.row}>\r\n              <Text>{this.state.status}</Text>\r\n            </View> */}\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <Text>Only User can Add New Ticket. If you have USER role and you want to add new ticket change your role to User from settings->My Role and try again.</Text>\r\n            </View>\r\n          </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { save } from '../store/actions/ticket';\r\nimport Page from '../components/home/new-ticket';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, scallback))\r\n});\r\n\r\nexport const NewTicket = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  key: string,\r\n  className: string,\r\n  onPress: () => void\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Checkbox extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    isActive: false,\r\n    text: '',\r\n    key: '',\r\n    className: '',\r\n    onPress: () => {}\r\n  }\r\n  render() {\r\n    return (\r\n      <span className={this.props.className} style={styles.container}>\r\n        <input type='checkbox' key={this.props.key} checked={this.props.isActive} onClick={this.props.onPress} />\r\n        <label style={styles.text}>{this.props.text}</label>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    // flexDirection: 'row',\r\n    marginRight: 10\r\n  },\r\n  circle: {\r\n    height: 24,\r\n    width: 24,\r\n    // borderRadius: 12,\r\n    borderWidth: 2,\r\n    borderColor: COLOR.PRIMARY,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  dot: {\r\n    height: 12,\r\n    width: 12,\r\n    // borderRadius: 6,\r\n    backgroundColor: COLOR.PRIMARY\r\n  },\r\n  text: {\r\n    marginLeft: 5\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Image, Text } from '../../common/elements';\r\nimport Checkbox from '../../common/checkbox';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport { isNN } from '../../../util/index';\r\nimport { FILE_BASE_PATH, ROLE } from '../../../constants';\r\nimport Button from '../../common/button';\r\nimport { toDateTimeString } from '../../../util/convert';\r\nimport { COLOR } from '../../../constants';\r\n\r\ninterface IProps {\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onActiveChange: () => void,\r\n  onEnter: (id: string) => void,\r\n  onExit: (id: string) => void,\r\n  onApprove: (id: string) => void,\r\n  onReject: (id: string) => void\r\n};\r\n\r\ninterface IState{\r\n  isZoomImage: boolean,\r\n  zoomImage: string\r\n};\r\n\r\nexport default class VisitorsView extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isZoomImage: false,\r\n      zoomImage: '',\r\n    }\r\n    this.onToggleZoomImage = this.onToggleZoomImage.bind(this);\r\n  };\r\n  static defaultProps = {\r\n    onEnter: () => {},\r\n    onExit: () => {},\r\n    onApprove: () => {},\r\n    onReject: () => {}\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onToggleZoomImage = (isZoom: boolean) => {\r\n    this.setState({\r\n      isZoomImage: isZoom\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(<>\r\n      <View style={pageStyles.row}>\r\n        <Text>{'No of ' + (this.props.isActive ? 'Active' : '') + ' Visitors: ' + this.props.data.length}</Text>\r\n        {this.props.appUser.role !== ROLE.GATEKEEPER &&\r\n        <Checkbox isActive={this.props.isActive} text='Only Active Visitors' onPress={this.props.onActiveChange} className='fr' />\r\n        }\r\n      </View>\r\n      <View className='fl' style={styles.cardContainer}>\r\n        {isNN(this.props.data) ?\r\n        this.props.data.map((d: IVisitor, i: number) => {\r\n          return(\r\n            <View key={i} className='fl' style={styles.card}>\r\n              {isNN(d.image) &&\r\n              <View className='center'>\r\n                <Image src={FILE_BASE_PATH + d.image} className='pointer' style={styles.img} onClick={() => this.setState({isZoomImage: true, zoomImage: d.image})} />\r\n              </View>  \r\n              }\r\n              <View style={styles.content}>\r\n                <View style={pageStyles.ele}>\r\n                  <Text className='bold'>{d.name + ' [' + d.type + ']'}</Text>\r\n                </View>\r\n                {(d.age > 0 || isNN(d.gender)) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : 'Female') : '')}</Text>\r\n                </View>\r\n                }\r\n                <View style={pageStyles.ele}>\r\n                  To <Text className='bold'>{d.homeNumber}</Text> on <Text className='bold'>{toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                {(!d.isEntered && !d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <Text>{((d.gateNo) ? 'In gate ' + d.gateNo + ' by ': 'By ') + d.createdBy}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.mobileNo) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                {(!d.isApproved && !d.isRejected && !d.isEntered) && \r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.PRIMARY}}>WAITING FOR APPROVAL</View>\r\n                </View>\r\n                }\r\n                {(d.isApproved || d.isRejected ) && \r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: (d.isApproved ? COLOR.SUCCESS : COLOR.ERROR)}}>{d.isApproved ? 'APPROVED' : 'REJECTED'}</View>\r\n                  <View>{'By ' + d.approvedBy}</View>\r\n                  <View>{'On ' + toDateTimeString(d.approvedAt)}</View>\r\n                </View>\r\n                }\r\n                {d.isEntered &&\r\n                <View style={pageStyles.ele}>\r\n                  <View>{'Entry By ' + d.enteredBy + ' in gate ' + d.gateNo}</View>\r\n                  <View>{'On ' + toDateTimeString(d.enteredAt)}</View>\r\n                </View>\r\n                }\r\n                {(d.isApproved && !d.isEntered) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.ERROR}}>NOT ENTERED</View>\r\n                </View>\r\n                }\r\n                {(!d.isRejected && d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View>{'Exit By ' + d.exitBy + ' in gate ' +  d.exitGateNo}</View>\r\n                  <View>{'On ' + toDateTimeString(d.exitAt)}</View>\r\n                </View>\r\n                }\r\n                {(d.isEntered && !d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.ERROR}}>STAYING IN</View>\r\n                </View>\r\n                }\r\n                {this.props.appUser.role === ROLE.GATEKEEPER &&\r\n                <View style={pageStyles.ele} className='center'>\r\n                  {(!d.isEntered && !d.isRejected) && <Button title='Enter' onPress={() => { this.props.onEnter(d._id) }} />}\r\n                  {((d.isEntered || d.isRejected) && !d.isExit) && <Button title={d.isRejected ? 'Remove' : 'Exit'} onPress={() => { this.props.onExit(d._id) }} />}\r\n                </View>\r\n                }\r\n                {(this.props.appUser.role === ROLE.USER && !d.isApproved && !d.isRejected && !d.isEntered) &&\r\n                <View style={pageStyles.ele} className='center'>\r\n                  <Button title='Approve' style={{marginRight: '10px'}} onPress={() => { this.props.onApprove(d._id) }} />\r\n                  <Button title='Reject' onPress={() => { this.props.onReject(d._id) }} />\r\n                </View>\r\n                }\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Visitor found!!!</Text>\r\n      }\r\n      </View>\r\n      <Modal\r\n          open={this.state.isZoomImage}\r\n          onClose={() => this.onToggleZoomImage(false)}>\r\n          <View className='center'>\r\n            <Image src={FILE_BASE_PATH + this.state.zoomImage} style={{ height: '50%', width: '50%' }} />\r\n          </View>\r\n        </Modal>\r\n    </>\r\n    );\r\n  }\r\n};\r\n\r\nexport const styles = {\r\n  cardContainer: {\r\n    flex: 1, \r\n    width: '100%',\r\n    padding: 10,\r\n    marginBottom: 10\r\n  },\r\n  card: {\r\n    flex: 1, \r\n    margin: 15\r\n  },\r\n  img:{\r\n    // width: 25,\r\n    height: '25vh',\r\n    margin: 0,\r\n    borderRadius: '50%',\r\n    marginBottom: '-25px'\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 10,\r\n    paddingTop: '25px',\r\n    borderColor: COLOR.HR_COLOR,\r\n    borderWidth: 1,\r\n    'border-style': 'solid',\r\n    borderRadius: 10,\r\n  }\r\n};","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../styles/page\";\r\nimport Toast from  '../../util/toast';\r\nimport VisitorsView from './gatekeeper/visitors-view'\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  void,\r\n  onApprove: (id: string, callback: (result: boolean) => void) => void,\r\n  onReject: (id: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true,\r\n      isLoading: false\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n    this.onApprove = this.onApprove.bind(this);\r\n    this.onReject = this.onReject.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, this.props.user.homes[this.props.appUser.homeIndex]._id, this.state.isActive, (result: Array<IVisitor>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n  \r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n  \r\n  onApprove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Approve Visitor Entry',\r\n      message: 'Are you sure you wish to Approve the visitor to Enter?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onApprove(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isApproved = true;\r\n                this.state.data[foundIndex].approvedBy = this.props.user.name;\r\n                this.state.data[foundIndex].approvedAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor approved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to approve the entry of visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onReject = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Reject Visitor Entry',\r\n      message: 'Are you sure you wish to reject visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReject(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isRejected = true;\r\n                this.state.data[foundIndex].approvedBy = this.props.user.name;\r\n                this.state.data[foundIndex].approvedAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor rejected successfully.');\r\n              }else{\r\n                Toast.fail('Failed to reject visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={pageStyles.content}>\r\n        <Breadcrum data={[{title: 'Visitors', link: 'visitors'}]} />\r\n        <VisitorsView data={this.state.data} isActive={this.state.isActive} user={this.props.user} appUser={this.props.appUser} onActiveChange={this.onActiveChange} onApprove={this.onApprove} onReject={this.onReject} />\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { loadAll, approve, reject } from '../store/actions/visitor';\r\n\r\nimport { IVisitor } from '../models/home';\r\nimport Page from '../components/home/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, isActive, sCallback, fCallback)),\r\n    onApprove: (id: string, callback: (result: boolean) => void) => dispatch(approve(id, callback)),\r\n    onReject: (id: string, callback: (result: boolean) => void) => dispatch(reject(id, callback))\r\n});\r\n\r\nexport const Visitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, password: string, newPassword: string, scallback: (result: boolean, message: string) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  password: string,\r\n  newPassword: string,\r\n  confirmNewPassword: string\r\n};\r\n\r\nexport default class ChangePassword extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      password: '',\r\n      newPassword: '',\r\n      confirmNewPassword: ''\r\n    }\r\n    this.passwordPolicyCheck = this.passwordPolicyCheck.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  passwordPolicyCheck = (p: string) => {\r\n    let anUpperCase = /[A-Z]/;\r\n    let aLowerCase = /[a-z]/; \r\n    let aNumber = /[0-9]/;\r\n    let aSpecial = /[!|@|#|$|%|^|&|*|(|)|-|_]/;\r\n    let result = \"\";\r\n\r\n    if(p.length < 6){\r\n      result=\"New Password not long enough!\"\r\n        return result;\r\n    }\r\n\r\n    var numUpper = 0;\r\n    var numLower = 0;\r\n    var numNums = 0;\r\n    var numSpecials = 0;\r\n    for(var i=0; i<p.length; i++){\r\n        if(anUpperCase.test(p[i]))\r\n            numUpper++;\r\n        else if(aLowerCase.test(p[i]))\r\n            numLower++;\r\n        else if(aNumber.test(p[i]))\r\n            numNums++;\r\n        else if(aSpecial.test(p[i]))\r\n            numSpecials++;\r\n    }\r\n\r\n    if(numUpper < 1 || numLower < 1 || numNums < 1 || numSpecials < 1){\r\n      result=\"New Password dose not match with password policy!\";\r\n        return result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onUpdate = () => {\r\n    if(isNN(this.state.password) && isNN(this.state.newPassword) && isNN(this.state.confirmNewPassword)){\r\n      if(this.state.newPassword === this.state.confirmNewPassword){\r\n        let policyResult = this.passwordPolicyCheck(this.state.newPassword);\r\n        if(policyResult.length < 1){\r\n          this.setState({\r\n            isLoading: true\r\n          });\r\n          this.props.onUpdate(this.props.user._id, this.state.password, this.state.newPassword, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              Toast.success('Password updated successfully. Please login with your new password.');\r\n              this.props.onLogout((result: boolean) => {\r\n              });\r\n            }else{\r\n              Toast.fail(message);\r\n            }\r\n          });\r\n        }else{\r\n          Toast.warn(policyResult);\r\n        }\r\n      }else{\r\n        Toast.warn('New Password and Confirm New Password not matchs.');\r\n      }\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n          <Breadcrum data={[{title: 'Change Password', link: 'change-password'}]} />\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.password} onChange={(event: any) => this.setState({password: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='New Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.newPassword} onChange={(event: any) => this.setState({newPassword: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='Confirm New Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.confirmNewPassword} onChange={(event: any) => this.setState({confirmNewPassword: event.target.value})} />\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={this.onUpdate}\r\n              />\r\n            </View>\r\n            <View style={{ marginTop: 7 }}>\r\n              <Text>Note: Password should contain adleast one uppercase, one lowercase, one number and one special character.</Text>\r\n            </View>\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { changePassword, logout } from '../store/actions/account';\r\n\r\nimport Page from '../components/home/change-password';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => dispatch(changePassword(userId, password, newPassword, callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const ChangePassword = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  name: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class MyProfile extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      name: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.user.name,\r\n      mobileNo: this.props.user.mobileNo,\r\n      emailId: this.props.user.emailId\r\n    });\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onUpdate = () => {\r\n    if(isNN(this.state.name) && isNN(this.state.mobileNo) && isNN(this.state.emailId)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.props.user._id, this.state.name, this.state.mobileNo, (this.state.emailId ? this.state.emailId.toLowerCase() : ''), this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          Toast.success('Profile updated successfully.');\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n          <Breadcrum data={[{title: 'My Profile', link: 'my-profile'}]} />\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={this.onUpdate}\r\n              />\r\n            </View>\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { updateProfile } from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-profile';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updateProfile(userId, name, mobileNo, emailId, user, callback))\r\n});\r\n\r\nexport const MyProfile = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Picker } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onUpdate: (role: string, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  role: string\r\n};\r\n\r\nexport default class MyRole extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      role: ''\r\n    }\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      role: this.props.appUser.role,\r\n    });\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onUpdate = () => {\r\n    if(isNN(this.state.role)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.state.role, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          Toast.success('Role updated successfully.');\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select role before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n          <Breadcrum data={[{title: 'My Role', link: 'my-role'}]} />\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <Picker\r\n                className='form-control'\r\n                value={this.state.role}\r\n                style={modelStyles.ele}\r\n                onChange={(event: any) => this.setState({role: event.target.value})}>\r\n                  {\r\n                  this.props.user.role.split(',').map((d: string, i: number) => {\r\n                    return(<option key={'role' + i} value={d}>{d}</option>);\r\n                  })\r\n                  }\r\n              </Picker>\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={this.onUpdate}\r\n              />\r\n            </View>\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { updateRole} from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-role';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (role: string, callback: (result: boolean, message: string) => void) => dispatch(updateRole(role, callback))\r\n});\r\n\r\nexport const MyRole = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IUser } from '../../models/user';\r\nimport { IAd } from '../../models/ad';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'ad';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getAdResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getAdResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let foundIndex = ads.findIndex(d => d._id === result.data);\r\n        ads[foundIndex]._id = result.data;\r\n        ads[foundIndex].title = data.title;\r\n        ads[foundIndex].description = data.description;\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          ads.unshift({\r\n            _id: result.data,\r\n            title: data.title,\r\n            description: data.description,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IAd);\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      ads = ads.filter((d, i) => d._id !== id);\r\n      dispatch(getAdResult(ads, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onLoad: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string\r\n};\r\n\r\nexport default class Ads extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      title: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ad = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description\r\n        } as IAd;\r\n        this.props.onSave(this.props.user.client._id, ad, this.props.user, this.props.ads.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              title: '',\r\n              description: ''\r\n            });\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.ads.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ad removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ad.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Ads', link: 'ads'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-ad')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n      {(this.props.ads.isUpToDate && !this.props.ads.isError && isNN(this.props.ads.data)) ?\r\n        this.props.ads.data.map((d: IAd, i: number) => {\r\n          return(\r\n            (this.state.isEdit === true && this.state.id === d._id) ?\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                  <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: false,\r\n                    id: '',\r\n                    title: '',\r\n                    description: ''\r\n                  });\r\n                }}>\r\n                  <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n            :\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.title}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d._id,\r\n                    title: d.title,\r\n                    description: d.description\r\n                  });\r\n                }}>\r\n                  <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{(this.props.ads.isUpToDate ? (this.props.ads.isError ? this.props.ads.errorMessage : \"No Ad found!!!\") : \"Loading...\")}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { loadAll, save, remove } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/ads';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, callback)),\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback)),\r\n    onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(remove(id, ads, callback))\r\n});\r\n\r\nexport const Ads = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string\r\n};\r\n\r\nexport default class NewAd extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      title: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ad = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description\r\n        } as IAd;\r\n        this.props.onSave(this.props.user.client._id, ad, this.props.user, this.props.ads.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              title: '',\r\n              description: ''\r\n            });\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Ads', link: 'ads'}, {title: 'New Ad', link: 'new-ad'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { save } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/new-ad';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback))\r\n});\r\n\r\nexport const NewAd = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IUserHome } from '../../../models/user-home';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IMember>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Users extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.getHomes = this.getHomes.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getHomes = (userId: string) => {\r\n    let homes = '';\r\n    if((this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)) && (this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data))){\r\n      let homeIds = [] as Array<string>;\r\n      this.props.userHomes.data.filter(uh => uh.userId === userId).map((uh: IUserHome, i: number) => homeIds.push(uh.homeId));\r\n      this.props.homes.data.filter(d => homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n    }\r\n    return homes;\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      let homes = this.props.homes.data.filter(h => h.number.toLocaleLowerCase() === searchText);\r\n      this.setState({\r\n        searchResult: this.props.users.data.filter(d => (d.name + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.mobileNo + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.emailId + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.number + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (isNN(homes.filter(h => h.memberIds.indexOf(d._id) >= 0)))),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.appUser.homeIndex, this.props.user, this.props.users, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('User removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove user.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Users', link: 'users'}]} />\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-user/0/false')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('approve-users')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right', marginRight: 15}}>View Users Waiting for Approval</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search User\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IMember, i: number) => {\r\n            return(\r\n              <View key={'usr' + i} style={styles.row}>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'User Id: ' + (isNN(d.number) ? d.number : '')}</Text>                  \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Mobile No: ' + (isNN(d.mobileNo) ? d.mobileNo : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Email: ' + (isNN(d.emailId) ? d.emailId : '')}</Text>         \r\n                </View> */}\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Owner Name: ' + (isNN(d.ownername) ? d.ownername : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Owner Mobile No: ' + (d.ownermobile > 0 ? d.ownermobile : '')}</Text>         \r\n                </View> */}\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Role: ' + (isNN(d.type) ? d.type.replace(/,/g, ', ') : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Home(s): ' + this.getHomes(d._id)}</Text>         \r\n                </View> */}\r\n                {(d._id !== this.props.user._id) &&\r\n                  <View style={styles.ele}>\r\n                    <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                      this.props.history.push('edit-user/' + d._id + '/false');////TODO\r\n                      // this.props.navigation.navigate('EditUser', {id: d._id});\r\n                      // this.setState({\r\n                      //   isEdit: true,\r\n                      //   id: d.id\r\n                      // });\r\n                    }}>\r\n                      <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                    </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                  </View>\r\n                }\r\n              </View>\r\n              \r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No user match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IUsers } from '../models/store/users';\r\nimport { removeByAM } from '../store/actions/member';\r\n\r\nimport Page from '../components/home/manager/users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => dispatch(removeByAM(id, homeIndex, user, users, callback))\r\n});\r\n\r\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'home';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IHome>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      result.data.forEach((h: any) => {\r\n        h.memberIds = h.members;\r\n        delete h.members;\r\n      });\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Homes.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNN(result.data._id)) {\r\n      result.data.memberIds = result.data.members;\r\n      delete result.data.members;\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Home.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n          var foundIndex = homes.data.findIndex(d => d._id === result.data);\r\n          homes.data[foundIndex]._id = result.data;\r\n          homes.data[foundIndex].number = data.number;\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n            homes.data.push({\r\n              _id: result.data,\r\n              // name: name,\r\n              number: data.number\r\n            } as IHome);\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const checkNumberAvail = (id: string, number: string, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().get(controller + '/checkno/' + number, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes = user.homes.filter((d, i) => d._id !== id);\r\n      homes.data = homes.data.filter((d, i) => d._id !== id);\r\n      ////userHomes.data = userHomes.data.filter((d, i) => d.homeId !== id);\r\n      dispatch(getUserResult(user));\r\n      dispatch(getHomesResult(homes.data, true, false, \"\"));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IUserHome } from '../../../models/user-home';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IHome>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Users extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.getUsers = this.getUsers.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getUsers = (homeId: string) => {\r\n    let users = '';\r\n    if((this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)) && (this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data))){\r\n      let userIds = [] as Array<string>;\r\n      this.props.userHomes.data.filter(uh => uh.homeId === homeId).map((uh: IUserHome, i: number) => userIds.push(uh.userId));\r\n      this.props.users.data.filter(d => userIds.indexOf(d._id) >= 0).map((u: IMember, i: number) => users += (users.length > 0 ? ', ' : '') + u.name);\r\n    }\r\n    return users;\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      this.setState({\r\n        searchResult: this.props.homes.data.filter(d => (d.number + '').toLocaleLowerCase().indexOf(searchText) >= 0),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homes, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('Home removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove home.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Homes', link: 'homes'}]} />\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-home/0')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search Home\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IHome, i: number) => {\r\n            return(\r\n              <View key={'home' + i} style={styles.row}>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <Text>{'Number: ' + d.number}</Text>         \r\n                </View>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Address: ' + (isNN(d.address) ? d.address : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'User(s): ' + this.getUsers(d._id)}</Text>         \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('view-home/' + d._id);\r\n                    // this.props.navigation.navigate('ViewHome', {id: d._id});\r\n                  }}>\r\n                    <Image src={Images.view} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('edit-home/' + d._id);\r\n                    // this.props.navigation.navigate('EditHome', {id: d._id});\r\n                    // this.setState({\r\n                    //   isEdit: true,\r\n                    //   id: d.id\r\n                    // });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No home match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { remove } from '../store/actions/home';\r\n\r\nimport Page from '../components/home/manager/homes';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => dispatch(remove(id, user, homes, callback))\r\n});\r\n\r\nexport const Homes = connect(mapStateToProps, mapDispatchToProps)(Page);","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  mListCnr: {\r\n    borderColor: COLOR.SECONDARY, \r\n    borderWidth: 1,\r\n    height: '50%'\r\n  },\r\n  mListActiveRow: {\r\n    padding: 3,\r\n    backgroundColor: COLOR.SECONDARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid',\r\n    width: '100%',\r\n    marginBottom: '1px'\r\n  },\r\n  mListRow: {\r\n    padding: 3,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid',\r\n    width: '100%',\r\n    marginBottom: '1px'\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { ScrollView, TouchableHighlight, View, TextInput, Text, Image } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport { styles as commonStyles} from '../../../styles/common';\r\nimport { styles as mlistStyles} from '../../../styles/mlist';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR, ROLE } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Images from '../../images';\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  homeIds: Array<string>,\r\n  role: {\r\n    isAdmin: boolean,\r\n    isManager: boolean,\r\n    isGatekeeper: boolean,\r\n    isUser: boolean\r\n  },\r\n  isShowHomes: boolean\r\n};\r\n\r\nexport default class EditUser extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      homeIds: [],\r\n      role: {\r\n        isAdmin: false,\r\n        isManager: false,\r\n        isGatekeeper: false,\r\n        isUser: false\r\n      },\r\n      isShowHomes: false\r\n    }\r\n    this.getHomes = this.getHomes.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onToggleHomeModel = this.onToggleHomeModel.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let userId = this.props.match.params.id;\r\n    if(userId.length > 0 && userId !== '0'){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(userId, (result: IMember, homeIds: Array<string>) => {\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            isLoading: false,\r\n            id: result._id,\r\n            number: result.number,\r\n            name: result.name,\r\n            age: result.age,\r\n            gender: result.gender,\r\n            mobileNo: result.mobileNo,\r\n            emailId: result.emailId,\r\n            type: result.type,\r\n            homeIds: homeIds,\r\n            role: {\r\n              isAdmin: (',' + result.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n              isManager: (',' + result.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n              isGatekeeper: (',' + result.role + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n              isUser: (',' + result.role + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n            }\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load User.');\r\n        }\r\n      }, (message: string) => {\r\n        Toast.fail(isNN(message) ? message : 'Failed to load User.');\r\n      });\r\n    }\r\n\r\n    /*\r\n    if(userId > 0 && (this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data))){\r\n      let users = this.props.users.data.filter((u: IUser, i: number) => u._id === userId);\r\n      if(isNNObject(users) && users.length > 0){\r\n        let homeIds = [] as Array<string>;\r\n        if(this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data)){\r\n          this.props.userHomes.data.filter((uh: IUserHome, i: number) => uh.userId === userId).map(uh => {\r\n            homeIds.push(uh.homeId);\r\n          });\r\n        }\r\n        this.setState({\r\n          id: users[0]._id,\r\n          name: users[0].name,\r\n          mobileNo: users[0].mobileNo,\r\n          emailId: users[0].emailId,\r\n          ////ownername: users[0].ownername,\r\n          ////ownermobile: users[0].ownermobile,\r\n          homeIds: homeIds,\r\n          role: {\r\n            isAdmin: (',' + users[0].type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n            isManager: (',' + users[0].type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n            isGatekeeper: (',' + users[0].type + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n            isUser: (',' + users[0].type + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n          }\r\n        });\r\n      }\r\n    }\r\n    */\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getHomes = () => {\r\n    let homes = '';\r\n    if(isNN(this.state.homeIds) && (this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data))){\r\n      this.props.homes.data.filter(d => this.state.homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n    }\r\n    return homes;\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n      let role = '';\r\n      if(this.state.role.isAdmin){\r\n        role = ROLE.ADMIN\r\n      }\r\n      if(this.state.role.isManager){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.MANAGER\r\n      }\r\n      if(this.state.role.isGatekeeper){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.GATEKEEPER\r\n      }\r\n      if(this.state.role.isUser){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.USER\r\n      }\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: role\r\n        } as IMember;\r\n        this.props.onSave(member, this.state.homeIds, this.props.user, this.props.users, this.props.match.params.isApprove === 'true', (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              homeIds: [],\r\n              role: {\r\n                isAdmin: false,\r\n                isManager: false,\r\n                isGatekeeper: false,\r\n                isUser: false\r\n              }\r\n            });\r\n            Toast.success('User saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save user.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onToggleHomeModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowHomes: isShow\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Users', link: 'users'}, {title: 'Edit User', link: 'edit-user/0'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>Role: </Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Checkbox isActive={this.state.role.isAdmin} text={ROLE.ADMIN} onPress={() => {\r\n              this.state.role.isAdmin = !this.state.role.isAdmin;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isManager} text={ROLE.MANAGER} onPress={() => {\r\n              this.state.role.isManager = !this.state.role.isManager;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isGatekeeper} text={ROLE.GATEKEEPER} onPress={() => {\r\n              this.state.role.isGatekeeper = !this.state.role.isGatekeeper;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isUser} text={ROLE.USER} onPress={() => {\r\n              this.state.role.isUser = !this.state.role.isUser;\r\n              this.setState({});\r\n            }} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Home(s): ' + this.getHomes()}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isShowHomes: true\r\n              });\r\n             }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          {(this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)) &&\r\n          <Modal\r\n          open={this.state.isShowHomes}\r\n          onClose={() => this.onToggleHomeModel(false)}>\r\n            <View style={popupStyles.container}>\r\n              <ScrollView style={{...mlistStyles.mListCnr, maxHeight: '50%'}}>\r\n                {\r\n                  this.props.homes.data.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text key={'home' + i} style={(this.state.homeIds.indexOf(d._id) >= 0 ? mlistStyles.mListActiveRow : mlistStyles.mListRow)} onClick={() => {\r\n                        if(this.state.homeIds.indexOf(d._id) >= 0){\r\n                          this.setState({\r\n                            homeIds: this.state.homeIds.filter(e => e !== d._id)\r\n                          });\r\n                        }else{\r\n                          this.state.homeIds.push(d._id);\r\n                          this.setState({});\r\n                        }\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n                </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title={this.props.match.params.isApprove === 'true' ? 'Approve' : 'SAVE'}\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IMember } from '../models/home';\r\nimport { IUsers } from '../models/store/users';\r\nimport { load, saveByAM } from '../store/actions/member';\r\nimport Page from '../components/home/manager/edit-user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => dispatch(saveByAM(data, homeIds, user, users, isApprove, callback))\r\n});\r\n\r\nexport const EditUser = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport Spinner from '../../common/spinner';\r\nimport { IMember } from '../../../models/home/member';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport Toast from  '../../../util/toast';\r\nimport { isNN } from '../../../util';\r\nimport { toDateTimeString } from '../../../util/convert';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  onLoad: (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onReject: (id: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IMember>,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class ApproveUsers extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoading: false\r\n    }\r\n    this.onApprove = this.onApprove.bind(this);\r\n    this.onReject = this.onReject.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad((result: Array<IMember>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  onApprove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Approve',\r\n      message: 'You want to Approve the user?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.props.history.push('edit-user/' + id + '/true');\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onReject = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Reject',\r\n      message: 'You want to Reject the user?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReject(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                this.setState({\r\n                  data: this.state.data.filter(v => v._id !== id)\r\n                });\r\n                Toast.success('User rejected successfully.');\r\n              }else{\r\n                Toast.fail('Failed to reject the user.');\r\n              }\r\n            }); \r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Users', link: 'users'}, {title: 'Users Waiting for Approval', link: 'approve-users'}]} />\r\n        {isNN(this.state.data) ?\r\n        this.state.data.map((d: IMember, i: number) => {\r\n          return(\r\n            <View key={i} style={pageStyles.row}>\r\n              <View style={pageStyles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.name}</Text>\r\n              </View>\r\n              {(d.age > 0 || isNN(d.gender)) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : 'Female') : '')}</Text>\r\n              </View>\r\n              }\r\n              <View style={pageStyles.ele}>\r\n                On <Text style={{fontWeight: 'bold'}}>{toDateTimeString(d.createdAt)}</Text>\r\n              </View>\r\n              {isNN(d.mobileNo) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.emailId) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n              }\r\n              <View style={pageStyles.ele}>\r\n                <Button title='Approve' style={{marginRight: '10px'}} onPress={() => { this.onApprove(d._id); }} />\r\n                <Button title='Reject' onPress={() => { this.onReject(d._id); }} />\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No users found!!!</Text>\r\n      }\r\n      <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { loadWFAUsers, reject } from '../store/actions/member';\r\nimport { IMember } from '../models/home';\r\n\r\nimport Page from '../components/home/manager/approve-users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadWFAUsers(sCallback, fCallback)),\r\n    onReject: (id: string, callback: (result: boolean) => void) => dispatch(reject(id, callback))\r\n});\r\n\r\nexport const ApproveUsers = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { TouchableHighlight, ScrollView, View, TextInput, Text, Image, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from '../../../styles/page';\r\nimport { styles as modelStyles } from '../../../styles/model';\r\nimport {styles as commonStyles} from '../../../styles/common';\r\nimport { styles as mlistStyles} from '../../../styles/mlist';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Images from '../../images';\r\nimport { styles as iconStyles } from '../../../styles/icon';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => void,\r\n  onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n\tblockId: string,\r\n\tnumber: string,\r\n\taddress: string,\r\n  bedRoom: number,\r\n  parking: string,\r\n  description: string,\r\n  members: Array<string>,\r\n  isShowUsers: boolean\r\n};\r\n\r\nexport default class EditHome extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      blockId: '',\r\n      number: '',\r\n      address: '',\r\n      bedRoom: 1,\r\n      parking: '',\r\n      description: '',\r\n      members: [],\r\n      isShowUsers: false\r\n    }\r\n    this.getUsers = this.getUsers.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onToggleUserModel = this.onToggleUserModel.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let homeId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    if(homeId.length > 0 && homeId !== '0'){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(homeId, (result: IHome) => {\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            isLoading: false,\r\n            id: result._id,\r\n            blockId: result._blockId,\r\n            number: result.number,\r\n            address: result.address,\r\n            bedRoom: result.bedRoom,\r\n            parking: result.parking,\r\n            description: result.description,\r\n            members: result.memberIds\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load Home.');\r\n        }\r\n      }, (message: string) => {\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Home.');\r\n      });\r\n    }\r\n    \r\n    /*\r\n    if(homeId > 0 && (this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data))){\r\n      let homes = this.props.homes.data.filter((u: IHome, i: number) => u._id === homeId);\r\n      if(isNNObject(homes) && homes.length > 0){\r\n        let members = [] as Array<string>;\r\n        if(this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data)){\r\n          this.props.userHomes.data.filter((uh: IUserHome, i: number) => uh.homeId === homeId).map(uh => {\r\n            members.push(uh.userId);\r\n          });\r\n        }\r\n        this.setState({\r\n          id: homes[0]._id,\r\n          blockId: homes[0]._blockId,\r\n          number: homes[0].number,\r\n          address: homes[0].address,\r\n          bedRoom: homes[0].bedRoom,\r\n          parking: homes[0].parking,\r\n          description: homes[0].description,\r\n          members: members\r\n        });\r\n      }\r\n    }\r\n    */\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getUsers = () => {\r\n    let users = '';\r\n    if(isNN(this.state.members) && (this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data))){\r\n      this.props.users.data.filter(d => this.state.members.indexOf(d._id) >= 0).map((u: IMember, i: number) => \r\n        users += (users.length > 0 ? ', ' : '') + u.name + (isNN(u.number) ? '(' + u.number + ')' : '')\r\n      );\r\n    }\r\n    return users;\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.blockId) && isNN(this.state.number)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      /*\r\n      this.props.onCheckNumberAvail(this.state.id, this.state.number, (result: boolean) => {\r\n        if(result === true){\r\n          */\r\n         let home = {\r\n           _id: this.state.id,\r\n           _blockId: this.state.blockId,\r\n           number: this.state.number,\r\n           address: this.state.address,\r\n           bedRoom: this.state.bedRoom,\r\n           parking: this.state.parking,\r\n           description: this.state.description,\r\n           memberIds: this.state.members\r\n         } as IHome;\r\n          this.props.onSave(home, this.props.user, this.props.homes, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                id: '',\r\n                blockId: '',\r\n                number: '',\r\n                address: '',\r\n                bedRoom: 1,\r\n                parking: '',\r\n                description: '',\r\n                members: []\r\n              });\r\n              Toast.success('Home saved successfully.');\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to save home.');\r\n            }\r\n          });\r\n          /*\r\n        }else{\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          Toast.warn('Home with same Number already available. Please change the home number.');\r\n        }\r\n      });\r\n      */\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onToggleUserModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowUsers: isShow\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Homes', link: 'homes'}, {title: 'Edit Home', link: 'edit-home/0'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <Picker\r\n            className='form-control'\r\n            value={this.state.blockId}\r\n            style={modelStyles.ele}\r\n            onChange={(event: any) => this.setState({blockId: event.target.value})}>\r\n              <option key={'block0'} value=''>Select Block</option>\r\n              {(this.props.blocks && this.props.blocks.isUpToDate && !this.props.blocks.isError && isNN(this.props.blocks.data)) &&\r\n                this.props.blocks.data.map((d: IBlock, i: number) => {\r\n                  return(<option key={'block' + i} value={d._id}>{d.name}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Address\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.address} onChange={(event: any) => this.setState({address: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>No of bed rooms: </Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.bedRoom === 1} text='1' onPress={() => this.setState({bedRoom: 1})} />\r\n            <RadioButton isActive={this.state.bedRoom === 2} text='2' onPress={() => this.setState({bedRoom: 2})} />\r\n            <RadioButton isActive={this.state.bedRoom === 3} text='3' onPress={() => this.setState({bedRoom: 3})} />\r\n            <RadioButton isActive={this.state.bedRoom === 4} text='4' onPress={() => this.setState({bedRoom: 4})} />\r\n            <RadioButton isActive={this.state.bedRoom === 5} text='5' onPress={() => this.setState({bedRoom: 5})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Parking\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.parking} onChange={(event: any) => this.setState({parking: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Description\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'User(s): ' + this.getUsers()}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isShowUsers: true\r\n              });\r\n             }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          {(this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)) &&\r\n          <Modal\r\n          open={this.state.isShowUsers}\r\n          onClose={() => this.onToggleUserModel(false)}>\r\n            <View style={popupStyles.container}>\r\n              <ScrollView style={{...mlistStyles.mListCnr, maxHeight: '50%'}}>\r\n              {\r\n                this.props.users.data.map((d: IMember, i: number) => {\r\n                  return(\r\n                    <Text key={'user' + i} style={(this.state.members.indexOf(d._id) >= 0 ? mlistStyles.mListActiveRow : mlistStyles.mListRow)} onClick={() => {\r\n                      if(this.state.members.indexOf(d._id) >= 0){\r\n                        this.setState({\r\n                          members: this.state.members.filter(e => e !== d._id)\r\n                        });\r\n                      }else{\r\n                        this.state.members.push(d._id);\r\n                        this.setState({});\r\n                      }\r\n                    }}>{d.name + (d.number ? '(' + d.number + ')' : '')}</Text>\r\n                  )\r\n                })\r\n              }\r\n              </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { IHome } from '../models/home';\r\nimport { IUser } from '../models/user';\r\nimport { load, save, checkNumberAvail } from '../store/actions/home';\r\nimport Page from '../components/home/manager/edit-home';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => dispatch(save(data, user, homes, callback)),\r\n    onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => dispatch(checkNumberAvail(id, number, callback))\r\n});\r\n\r\nexport const EditHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport Toast from  '../../../util/toast';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport VisitorsView from './visitors-view'\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onEnter: (id: string, gateNo: string, callback: (result: boolean) => void) => void,\r\n  onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true,\r\n      isLoading: false\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n    this.onEnter = this.onEnter.bind(this);\r\n    this.onExit = this.onExit.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, '', this.state.isActive, (result: Array<IVisitor>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n\r\n  onEnter = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Allow Visitor Entry',\r\n      message: 'Are you sure you wish to Allow the visitor to Enter?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onEnter(id, this.props.gateNo, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isEntered = true;\r\n                this.state.data[foundIndex].enteredBy = this.props.user.name;\r\n                this.state.data[foundIndex].enteredAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor entered successfully.');\r\n              }else{\r\n                Toast.fail('Failed to allow the entry of visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onExit = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Exit Visitor',\r\n      message: 'Are you sure you wish to exit visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onExit(id, this.props.gateNo, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                this.setState({\r\n                  data: this.state.data.filter(v => v._id !== id)\r\n                });\r\n                Toast.success('Visitor exit successfully.');\r\n              }else{\r\n                Toast.fail('Failed to exit visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={pageStyles.content}>\r\n        <Breadcrum data={[{title: 'Visitors', link: 'all-visitors'}]} />\r\n        <VisitorsView data={this.state.data} isActive={this.state.isActive} user={this.props.user} appUser={this.props.appUser} onActiveChange={this.onActiveChange} onEnter={this.onEnter} onExit={this.onExit} />\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IVisitor } from '../models/home';\r\nimport { loadAll, enter, exit } from '../store/actions/visitor';\r\n\r\nimport Page from '../components/home/gatekeeper/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    homes: state.Homes,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, isActive, sCallback, fCallback)),\r\n    onEnter: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(enter(id, gateNo, callback)),\r\n    onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(exit(id, gateNo, callback))\r\n});\r\n\r\nexport const AllVisitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { INotification } from '../../../models/notification';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN, isNNObject } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => void,\r\n  onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  data: Array<INotification>,\r\n  title: string,\r\n  body: string\r\n};\r\n\r\nexport default class Notification extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      data: [],\r\n      title: '',\r\n      body: ''\r\n    }\r\n    this.onPush = this.onPush.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (result: Array<INotification>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onPush = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.body)){\r\n      confirmAlert({\r\n        title: 'Confirm to send push notification',\r\n        message: 'Are you sure? This notification will send to all users using this app in your Appartment. Are you sure you want to Push?',\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n              this.setState({\r\n                isLoading: true\r\n              });\r\n              let notification = {\r\n                title: this.state.title,\r\n                body: this.state.body\r\n              } as INotification;\r\n              this.props.onPush(this.props.user.client._id, notification, this.props.user, (result: INotification | null) => {\r\n                this.setState({\r\n                  isLoading: false,\r\n                });\r\n                if(isNNObject(result)){\r\n                  let data = this.state.data;\r\n                  data.unshift(result as INotification);\r\n                  this.setState({\r\n                    data: data,\r\n                    title: '',\r\n                    body: ''\r\n                  });\r\n                  Toast.success('Notification pushed successfully.');\r\n                }else{\r\n                  Toast.fail('Failed to push Notification.');\r\n                }\r\n              });\r\n            }\r\n          },\r\n          {\r\n            label: 'No',\r\n            onClick: () => {}\r\n          }\r\n        ]\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Push.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Notification', link: 'notification'}]} />\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n        </View>\r\n        <View style={modelStyles.row}>\r\n          <TextArea placeholder=\"Body\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.body} onChange={(event: any) => this.setState({body: event.target.value})} />\r\n        </View>\r\n        <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n            <Button\r\n            style={{marginRight: 10}}\r\n            title=\"PUSH\"\r\n            onPress={this.onPush}\r\n            />\r\n            <Button\r\n            title=\"CLEAR\"\r\n            onPress={() => {\r\n              this.setState({\r\n                title: '',\r\n                body: ''\r\n              });\r\n            }}\r\n            />\r\n        </View>\r\n      {(isNN(this.state.data)) ?\r\n        this.state.data.map((d: INotification, i: number) => {\r\n          return(\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.body}</Text>\r\n              </View>\r\n              <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                <Button title=\"Duplicate\" onPress={() => {\r\n                  this.setState({\r\n                    title: d.title,\r\n                    body: d.body\r\n                  });\r\n                }} />\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Nofification found!!!</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { INotification } from '../models/notification';\r\nimport { loadAll, push } from '../store/actions/notification';\r\nimport Page from '../components/home/manager/notification';\r\nimport { IUser } from '../models/user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, sCallback, fCallback)),\r\n    onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => dispatch(push(appClientId, data, user, callback))\r\n});\r\n\r\nexport const Notification = connect(mapStateToProps, mapDispatchToProps)(Page);","import { INotification } from '../../models/notification';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { IUser } from '../../models/user';\r\n\r\nlet controller: string = 'notification';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Notification.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const push = (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => (dispatch: any) => {  \r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback({\r\n        _id: result.data,\r\n        title: data.title,\r\n        body: data.body,\r\n        createdBy: user.name,\r\n        createdAt: new Date()\r\n      } as INotification);\r\n    }else{\r\n      callback(null);\r\n    }\r\n  }, data);\r\n};","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'outing';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getOutingResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getOutingResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    // Not Implemented\r\n        callback(false);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      console.log('result:', result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        outings.data.unshift(data);\r\n        dispatch(getOutingResult(outings.data, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    },data);\r\n  }\r\n};\r\n\r\nexport const retunBack = (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().delete(controller + '/return/' + id, (result: any, message: string) => {\r\n    debugger;\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      var foundIndex = outings.data.findIndex(d => d._id === id);\r\n      outings.data[foundIndex].isReturned = true;\r\n      outings.data[foundIndex].returnedAt = new Date();\r\n      dispatch(getOutingResult(outings.data, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getOutingResult = (data: Array<IOuting>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_OUTINGS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IOutings\r\n});","import * as React from 'react';\r\nimport { View, TextInput, TextArea } from '../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  outings: IOutings,\r\n  onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  place: string,\r\n  address: string,\r\n  datePickerType: string,\r\n  datePickerDate: Date\r\n};\r\n\r\nexport default class NewOuting extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      fromDate: '',\r\n      toDate: '',\r\n      place: '',\r\n      address: '',\r\n      datePickerType: '',\r\n      datePickerDate: new Date()\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNNObject(this.state.fromDate) && isNNObject(this.state.toDate) && isNN(this.state.place) && isNN(this.state.address)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let outing = {\r\n          ////homeId: this.props.user.home[this.props.appUser.homeIndex].id,\r\n          _homeId: this.props.user.homes[this.props.appUser.homeIndex].number,\r\n          fromDate: this.state.fromDate,\r\n          toDate : this.state.toDate,\r\n          place: this.state.place,\r\n          address: this.state.address,\r\n          isReturned: false,\r\n          createdBy: this.props.user.name,\r\n          createdAt: new Date()\r\n        } as IOuting;\r\n        this.props.onSave(outing, this.props.user.homes[this.props.appUser.homeIndex]._id, this.props.user, this.props.outings, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              fromDate: '',\r\n              toDate: '',\r\n              place: '',\r\n              address: '',\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Outing submitted successfully.');\r\n          }else{\r\n            Toast.fail('Failed to submit Outing.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before submit Outing.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Notice', link: 'notice'}, {title: 'New Outing', link: 'new-outing' }]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Place\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.place} onChange={(event: any) => this.setState({place: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Address\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.address} onChange={(event: any) => this.setState({address: event.target.value})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { IOuting } from '../models/outing';\r\nimport { save } from '../store/actions/outing';\r\nimport Page from '../components/home/new-outing';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    outings: state.Outings\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(save(data, homeId, user, outings, callback))\r\n});\r\n\r\nexport const NewOuting = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user';\r\nimport { IDocument } from '../../models/document';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants';\r\n\r\nlet controller: string = 'document';\r\n\r\nexport const loadAll = (homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getDocumentResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getDocumentResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Documents.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // document.file = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          var foundIndex = documents.findIndex(d => d._id === result.data._id);\r\n          documents[foundIndex]._id = result.data._id;\r\n          ////documents[foundIndex].userId = data.userId;\r\n          ////documents[foundIndex].homeId = data.homeId;\r\n          documents[foundIndex].title = data.title;\r\n          documents[foundIndex].description = data.description;\r\n          documents[foundIndex].file = data.file;\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          documents.unshift({\r\n            _id: result.data._id,\r\n            ////userId: data.userId,\r\n            ////homeId: data.homeId,\r\n            title: data.title,\r\n            description: data.description,\r\n            file: data.file,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IDocument);\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      documents = documents.filter((d, i) => d._id !== id);\r\n      dispatch(getDocumentResult(documents, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getDocumentResult = (data: Array<IDocument>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_DOCUMENTS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IDocuments\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IDocument } from '../../models/document';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { FILE_BASE_PATH } from '../../constants';\r\nimport { isNN, generateUUID } from '../../util/index';\r\nimport { toDateString } from '../../util/convert';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  homeIndex: number,\r\n  user: IUser,\r\n  documents: IDocuments,\r\n  onLoad: (homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  homeId: string,\r\n  title: string,\r\n  description: string,\r\n  fileName: string\r\n};\r\n\r\nexport default class MyDocuments extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onFileSelect = this.onFileSelect.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.homes[this.props.homeIndex]._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Documents.');\r\n      }\r\n    });\r\n  };\r\n\r\n  onFileSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        // upload file to api.\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        this.props.onUpload(data, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false\r\n          });\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }else{\r\n            this.setState({\r\n              fileName: fileName\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.fileName)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        /*\r\n        let data = this.state.data;\r\n        data.id = this.state.id,\r\n        data.userId = this.props.user._id,\r\n        data.homeId = this.state.homeId;\r\n        data.title = this.state.title;\r\n        data.description = this.state.description;\r\n        data.createdBy = this.props.user._id;\r\n        data.createdOn = new Date();\r\n        */\r\n        \r\n        let document = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          file: this.state.fileName,\r\n          createdBy: this.props.user.name,\r\n          createdAt: new Date()\r\n        } as IDocument;\r\n        this.props.onSave(this.state.homeId, document, this.props.homeIndex, this.props.user, this.props.documents.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n              title: '',\r\n              description: '',\r\n              fileName: ''\r\n            });\r\n            Toast.success('Document saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save document.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      id: '',\r\n      homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n    });\r\n  };\r\n  \r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.documents.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Document removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove document.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'My Documents', link: 'my-documents'}]} />\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n        </View>\r\n        <View style={modelStyles.row}>\r\n          <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n        </View>\r\n        {isNN(this.props.user.homes) &&\r\n        <View style={modelStyles.row}>\r\n        <Text style={{marginRight: 10}}>Home:</Text>\r\n        {this.props.user.homes.map((h: IHome, i: number) => {\r\n          return(\r\n            <RadioButton isActive={h._id === this.state.homeId} text={h.number} key={'home' + i} onPress={() => this.setState({homeId: h._id})} />\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n        }\r\n        <View style={modelStyles.row}>\r\n          {/* <Button\r\n              title='Select Document'\r\n              onPress={this.onImageSelect}\r\n              /> */}\r\n              <input type='file' name='file' placeholder='Select Document' onChange={this.onFileSelect}/>\r\n              {isNN(this.state.fileName) &&\r\n              <Text style={{marginLeft: 15}}>{this.state.fileName}</Text>\r\n              }\r\n        </View>\r\n        <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n            <Button\r\n            style={{marginRight: 10}}\r\n            title='SAVE'\r\n            onPress={this.onSave}\r\n            />\r\n            <Button\r\n            title='CLEAR'\r\n            onPress={this.onClear}\r\n            />\r\n        </View>\r\n      {(this.props.documents.isUpToDate && !this.props.documents.isError && isNN(this.props.documents.data)) ?\r\n        this.props.documents.data.map((d: IDocument, i: number) => {\r\n          return(\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n              </View>\r\n              {isNN(d.description) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              }\r\n              {isNN(this.props.user.homes.filter(ho => ho._id === d._id)) &&\r\n              <View style={styles.ele}>\r\n                <Text>{'Home: ' + this.props.user.homes.filter(ho => ho._id === d._id)[0].number}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.file) &&\r\n              <View style={styles.ele}>\r\n                <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n              </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                {/* <TouchableHighlight underlayColor={COLOR.ICON_BTN_UNDERLAY} style={{marginRight: 25}} onPress={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d.id,\r\n                    homeId: d.homeId,\r\n                    title: d.title,\r\n                    description: d.description,\r\n                  });\r\n                }}>\r\n                  <Image source={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight> */}\r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{this.props.documents.isUpToDate ? 'No Documents found!!!' : (this.props.documents.isError ?  this.props.documents.errorMessage : 'No Documents found!!!')}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IDocument } from '../models/document';\r\nimport { loadAll, save, remove } from '../store/actions/documents';\r\nimport { upload } from '../store/actions/file';\r\nimport Page from '../components/home/my-documents';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    homeIndex: state.AppUser.homeIndex,\r\n    user: state.User,\r\n    documents: state.Documents\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(homeId, callback)),\r\n    onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(save(homeId, data, homeIndex, user, documents, callback)),\r\n    onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(remove(id, documents, callback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(upload(data, callback))\r\n});\r\n\r\nexport const MyDocuments = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { IBlock } from '../../models/block/block';\r\nimport { IUser } from '../../models/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util';\r\n\r\nlet controller: string = 'block';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getBlockResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getBlockResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = blocks.findIndex(d => d._id === result.data);\r\n        blocks[foundIndex]._id = result.data;\r\n        blocks[foundIndex].name = data.name;\r\n        blocks[foundIndex].description = data.description;\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        blocks.unshift({\r\n            _id: result.data,\r\n            name: data.name,\r\n            description: data.description,\r\n            createdBy: user.name\r\n          } as IBlock);\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      blocks = blocks.filter((d, i) => d._id !== id);\r\n      dispatch(getBlockResult(blocks, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IBlock>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Blocks extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.blocks.isUpToDate && !this.props.blocks.isError && isNN(this.props.blocks.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      this.setState({\r\n        searchResult: this.props.blocks.data.filter(d => (d.name + '').toLocaleLowerCase().indexOf(searchText) >= 0),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.blocks.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('Home removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove home.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Blocks', link: 'blocks'}]} />\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-block/0')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search Block\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IBlock, i: number) => {\r\n            return(\r\n              <View key={'block' + i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Name: ' + d.name}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Description: ' + (isNN(d.description) ? d.description : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('edit-block/' + d._id);////TODO\r\n                    // this.props.navigation.navigate('EditBlock', {id: d._id});\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No block match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { remove } from '../store/actions/block';\r\nimport Page from '../components/home/manager/blocks';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => dispatch(remove(id, blocks, callback))\r\n});\r\n\r\nexport const Blocks = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as commonStyles} from '../../../styles/common';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n\tname: string,\r\n\tdescription: string\r\n};\r\n\r\nexport default class EditBlock extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      name: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let blockId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    if(blockId.length > 0 && blockId !== '0' && this.props.blocks && isNN(this.props.blocks.data)){\r\n      let block = this.props.blocks.data.filter((d, i) => {\r\n        return d._id === blockId\r\n      });\r\n      if(isNN(block)){\r\n        this.setState({\r\n          id: block[0]._id,\r\n          name: block[0].name,\r\n          description: block[0].description\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n         let block = {\r\n           _id: this.state.id,\r\n           name: this.state.name,\r\n           description: this.state.description\r\n         } as IBlock;\r\n          this.props.onSave(this.props.user.client._id, block, this.props.user, (this.props.blocks && this.props.blocks.data) ? this.props.blocks.data : [], (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                id: '',\r\n                name: '',\r\n                description: ''\r\n              });\r\n              Toast.success('Block saved successfully.');\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to save block.');\r\n            }\r\n          });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Blocks', link: 'blocks'}, {title: 'Edit Block', link: 'edit-block/0'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Description\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { IUser } from '../models/user';\r\nimport { save } from '../store/actions/block';\r\nimport Page from '../components/home/manager/edit-block';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, blocks, callback))\r\n});\r\n\r\nexport const EditBlock = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, ScrollView, TextInput, Text, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome } from '../../../models/home';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\nimport { COLOR, MONTH } from '../../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  amount: number,\r\n  description: string,\r\n  month: number,\r\n  year: number,\r\n  searchText: string,\r\n  showHomes: boolean,\r\n  isAllHome: boolean,\r\n  homes: Array<IHome>\r\n};\r\n\r\nexport default class PaymentForm extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      amount: 0,\r\n      description: '',\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n      searchText: '',\r\n      showHomes: false,\r\n      isAllHome: false,\r\n      homes: []\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n  };\r\n\r\n  onSave = () => {\r\n    if(this.state.amount > 0 && (this.state.isAllHome || this.state.homes.length > 0)){\r\n      let homeIds = [] as any;\r\n      this.state.homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        amount: this.state.amount,\r\n        description: this.state.description,\r\n        month: this.state.month,\r\n        year: this.state.year,\r\n        isAllHome: this.state.isAllHome,\r\n        homes: homeIds\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onSave(this.props.user.client._id, data, this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          this.setState({\r\n            amount: 0,\r\n            description: '',\r\n            month: new Date().getMonth(),\r\n            year: new Date().getFullYear(),\r\n            searchText: '',\r\n            showHomes: false,\r\n            isAllHome: false,\r\n            homes: []\r\n          });\r\n          Toast.success('Payment saved successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to save payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Save.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({ \r\n      amount: 0,\r\n      description: '',\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n      searchText: '',\r\n      showHomes: false,\r\n      isAllHome: false,\r\n      homes: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Amount\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.amount > 0 ? this.state.amount + '' : ''} onChange={(event: any) => this.setState({amount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={{marginTop: 15}}>{'Payment for ' + this.state.year + ' '}</Text>\r\n            <Picker\r\n              className='form-control'\r\n              value={this.state.month}\r\n              style={ modelStyles.ele}\r\n              onChange={(event: any) => this.setState({month: event.target.value})}>\r\n              {\r\n                MONTH.filter((m, i) => m.value <= new Date().getMonth()).map((m: any, i: number) => {\r\n                  return(<option key={'month' + i} value={m.value}>{m.title}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={{marginRight: 15}}>{'Apply to Home(s): ' + (this.state.isAllHome ? '' : this.state.homes.length)}</Text>\r\n            <Checkbox isActive={this.state.isAllHome} text='All Homes' onPress={() => this.setState({isAllHome: !this.state.isAllHome})} />\r\n          </View>\r\n          {!this.state.isAllHome &&\r\n          <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.state.homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6, color: COLOR.SECONDARY }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          homes: this.state.homes.filter((h, i) => h._id !== d._id)\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n          }\r\n          {!this.state.isAllHome &&\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Enter Home Number\" className='form-control'\r\n            style={{...modelStyles.ele,\r\n              flexDirection: 'row',\r\n              padding: 6,\r\n              borderWidth: 1,\r\n              borderColor: COLOR.HR_COLOR,\r\n              borderRadius: 5\r\n            }}\r\n            value={this.state.searchText} \r\n            onChange={(event: any) => this.setState({showHomes: true, searchText: event.target.value})} />\r\n          </View>\r\n          }\r\n            {(!this.state.isAllHome && this.state.showHomes && isNN(this.state.searchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n              <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.searchText.toLowerCase()) >= 0 && (this.state.homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6}}\r\n                      onClick={() => {\r\n                        let homes = this.state.homes;\r\n                        homes.push(d);\r\n                        this.setState({\r\n                          homes: homes\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n              </ScrollView>\r\n            }\r\n          <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n              <Button\r\n              style={{marginRight: 10}}\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={this.onClear}\r\n              />\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Text, TextInput, ScrollView, TextArea } from '../../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IPayment } from '../../../models/home';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR, MONTH } from '../../../constants';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN } from '../../../util';\r\nimport Toast from '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  isShowSearch: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  datePickerType: string,\r\n  datePickerDate: Date,\r\n  homes: Array<IHome>,\r\n  searchText: string,\r\n  showHomes: boolean,\r\n  data: Array<IPayment>,\r\n  isShowUpdateModel: boolean,\r\n  uPaymentId: string,\r\n  uAmount: number,\r\n  uDescription: string\r\n};\r\n\r\nexport default class PaymentHistory extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isShowSearch: true,\r\n      fromDate: '',\r\n      toDate: '',\r\n      datePickerType: '',\r\n      datePickerDate: new Date(),\r\n      homes: [],\r\n      searchText: '',\r\n      showHomes: false,\r\n      data: [],\r\n      isShowUpdateModel: false,\r\n      uPaymentId: '',\r\n      uAmount: 0,\r\n      uDescription: ''\r\n    };\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(this.state.fromDate && this.state.toDate){\r\n      let homeIds = [] as any;\r\n      this.state.homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        fromDate: this.state.fromDate,\r\n        toDate: this.state.toDate,\r\n        homes: homeIds\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onSearch(this.props.user.client._id, data, this.props.user, (result: Array<IPayment>) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          isShowSearch: false,\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        Toast.fail(message ? message : 'Failed to load payment.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Search.');\r\n    }\r\n  };\r\n\r\n  onUpdate = () => {\r\n    if(isNN(this.state.uPaymentId) && this.state.uAmount > 0){\r\n      let data = {\r\n        amount: this.state.uAmount,\r\n        description: this.state.uDescription,\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.state.uPaymentId, data, this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          let pData = this.state.data;\r\n          var foundIndex = pData.findIndex(d => d._id === this.state.uPaymentId);\r\n          pData[foundIndex].amount = this.state.uAmount;\r\n          pData[foundIndex].description = this.state.uDescription;\r\n          this.setState({\r\n            isShowUpdateModel: false,\r\n            uPaymentId: '',\r\n            uAmount: 0,\r\n            uDescription: '',\r\n            data: pData\r\n          });\r\n          Toast.success('Payment updated successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to update payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          {this.state.isShowSearch ?\r\n          <View>\r\n            <View style={modelStyles.row}>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                this.setState({\r\n                  fromDate: date\r\n                });\r\n              }}\r\n              value={this.state.fromDate}\r\n              />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                this.setState({\r\n                  toDate: date\r\n                });\r\n              }}\r\n              value={this.state.toDate}\r\n              />\r\n          </View>\r\n            <View style={modelStyles.row}>\r\n            <Text style={{marginRight: 15}}>{'Home(s): ' + (this.state.homes.length > 0 ? this.state.homes.length : 'All')}</Text>\r\n          </View>\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.state.homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6, color: COLOR.SECONDARY }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          homes: this.state.homes.filter((h, i) => h._id !== d._id)\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Enter Home Number\" className='form-control'\r\n            style={{...modelStyles.ele,\r\n              flexDirection: 'row',\r\n              padding: 6,\r\n              borderWidth: 1,\r\n              borderColor: COLOR.HR_COLOR,\r\n              borderRadius: 5\r\n            }}\r\n            value={this.state.searchText} \r\n            onChange={(event: any) => this.setState({showHomes: true, searchText: event.target.value})} />\r\n          </View>\r\n            {(this.state.showHomes && isNN(this.state.searchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.searchText.toLowerCase()) >= 0 && (this.state.homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6}}\r\n                      onClick={() => {\r\n                        let homes = this.state.homes;\r\n                        homes.push(d);\r\n                        this.setState({\r\n                          homes: homes\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            }\r\n            <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                <Button\r\n                title=\"SEARCH\"\r\n                onPress={this.onSearch}\r\n                />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View>\r\n             <Text \r\n             className='fr pointer'\r\n             style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right'}}\r\n             onClick={() => {\r\n               this.setState({\r\n                 isShowSearch: true\r\n               });\r\n             }}>Show Search</Text>\r\n          </View>\r\n          }\r\n          <View>\r\n            {(isNN(this.state.data)) ?\r\n              this.state.data.map((d: IPayment, i: number) => {\r\n                return(\r\n                  <View key={i} style={pageStyles.row}>\r\n                    <View style={pageStyles.ele}>\r\n                        <Text style={{fontWeight: 'bold'}}>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text style={{fontWeight: 'bold'}}>{'Rs.' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                    </View>\r\n                    {isNN(d.description) &&\r\n                      <View style={pageStyles.ele}>\r\n                        <Text>{d.description}</Text>\r\n                      </View>\r\n                    }\r\n                    <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                      <Button title=\"Update\" onPress={() => {\r\n                        this.setState({\r\n                          isShowUpdateModel: true,\r\n                          uPaymentId: d._id,\r\n                          uAmount: d.amount,\r\n                          uDescription: d.description\r\n                        });\r\n                      }} />\r\n                    </View>\r\n                  </View>\r\n                )\r\n              })\r\n              :\r\n              <Text style={{padding: 20}}>No Payment found!!!</Text>\r\n            }\r\n          </View>\r\n          <Modal\r\n          open={this.state.isShowUpdateModel}\r\n          onClose={() => {\r\n            this.setState({\r\n              isShowUpdateModel: false,\r\n              uPaymentId: '',\r\n              uAmount: 0,\r\n              uDescription: ''\r\n            });\r\n          }}>\r\n          <View style={popupStyles.container}>\r\n            <View style={popupStyles.content}>\r\n              <View style={modelStyles.row}>\r\n                <TextInput type='text' placeholder=\"Amount\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.uAmount > 0 ? this.state.uAmount + '' : ''} onChange={(event: any) => this.setState({uAmount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View style={modelStyles.row}>\r\n                <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.uDescription} onChange={(event: any) => this.setState({uDescription: event.target.value})} />\r\n              </View>\r\n              <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Button\r\n                  style={{marginRight: 10}}\r\n                  title=\"SAVE\"\r\n                  onPress={this.onUpdate}\r\n                  />\r\n                  <Button\r\n                  title=\"CLEAR\"\r\n                  onPress={() => {\r\n                    this.setState({\r\n                      uAmount: 0,\r\n                      uDescription: ''\r\n                    });\r\n                  }}\r\n                  />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  }\r\n};","import * as React from 'react';\r\nimport { TouchableHighlight, View } from '../../common/elements';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IPayment } from '../../../models/home';\r\nimport { COLOR } from '../../../constants';\r\nimport PaymentForm from './payment-form';\r\nimport PaymentHistory from './payment-history';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  activeTab: number,\r\n  history: Array<IPayment>\r\n};\r\n\r\nexport default class Payment extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1,\r\n      history: []\r\n    }\r\n  };\r\n  \r\n  componentDidMount(){\r\n    /*\r\n    this.props.onLoad(this.props.user.client._id, '', (result: Array<IPayment>) => {\r\n      if(isNN(result)){\r\n        this.setState({\r\n          history: result\r\n        });\r\n      }\r\n    }, (message: string) => {\r\n      Toast.fail(message ? message : 'Failed to load Payments.');\r\n    });\r\n    */\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Payment', link: 'payment'}]} />\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              NEW\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>          \r\n              HISTORY\r\n            </TouchableHighlight>\r\n          </View>\r\n          <View className='tab-content' style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              this.state.activeTab === 1 ? \r\n                <PaymentForm history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} onSave={this.props.onSave} />\r\n              :\r\n                <PaymentHistory history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} onSearch={this.props.onSearch} onUpdate={this.props.onUpdate} />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IPayment } from '../models/home';\r\nimport { loadAll, save, search, updatePay } from '../store/actions/payment';\r\nimport Page from '../components/home/manager/payment';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, homeId, sCallback, fCallback)),\r\n    onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, callback)),\r\n    onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(search(appClientId, data, user, sCallback, fCallback)),\r\n    onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updatePay(id, data, user, callback))\r\n});\r\n\r\nexport const Payment = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { styles as modelStyles } from '../../../../styles/model';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IBlock } from '../../../../models/block';\r\nimport { IHome } from '../../../../models/home';\r\n\r\ninterface IProps {\r\n  blocks: IBlocks,\r\n  data: IHome\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Info extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      homeId: '',\r\n      data: {} as IHome\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { blocks, data } = this.props;\r\n    let blockName = '';\r\n    if(data && isNN(data._id) && blocks && blocks.isUpToDate && !blocks.isError && blocks.data){\r\n      let block = blocks.data.filter((d: IBlock, i: number) => d._id === data._blockId);\r\n      if(block && block.length > 0){\r\n        blockName = block[0].name;\r\n      }\r\n    }\r\n    if(data && isNN(data._id)){\r\n    return(\r\n        <View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Block: ' + blockName}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Number: ' + data.number}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Address: ' + data.address}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'No of bed room(s): ' + data.bedRoom}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Parking: ' + data.parking}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Description: ' + data.description}</Text>\r\n          </View>\r\n        </View>\r\n    );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IMember } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IMember>\r\n};\r\n\r\nexport default class Members extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IMember>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Members.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n    if(isNN(data)){\r\n      return(\r\n        <View>\r\n          {\r\n            data.map((d: IMember, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{(isNN(d.createdBy) ? d.createdBy : '') + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>\r\n                </View>\r\n              </View>\r\n              );\r\n          })\r\n        }\r\n        </View>\r\n      );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IVehicle } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVehicle>\r\n};\r\n\r\nexport default class Vehicles extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IVehicle>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n    if(isNN(data)){\r\n      return(\r\n        <View>\r\n          {\r\n            data.map((d: IVehicle, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>                  \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.number}</Text>\r\n                </View>\r\n              </View>\r\n              );\r\n          })\r\n        }\r\n        </View>\r\n      );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IServent } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IServent>\r\n};\r\n\r\nexport default class Servents extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IServent>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Servents.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n    if(isNN(data)){\r\n      return(\r\n        <View>\r\n          {\r\n            data.map((d: IServent, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n        }\r\n        </View>\r\n      );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TouchableHighlight } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { ITicket } from '../../../../models/home';\r\nimport { ITicketComment } from '../../../../models/home/ticket-comment';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<ITicket>,\r\n  viewId: string,\r\n  comments: Array<ITicketComment>\r\n};\r\n\r\nexport default class Tickets extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      viewId: '',\r\n      comments: []\r\n    }\r\n    this.onView = this.onView.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<ITicket>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        comments: []\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        comments: comments\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n    if(isNN(data)){\r\n      return(\r\n        <View>\r\n          {\r\n            data.map((d: ITicket, i: number) => {\r\n            return(\r\n              <View key={'tkt' + i} style={styles.row}>\r\n               <View style={styles.ele}>\r\n                  <Text>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                    <Text>{d.title}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                    <Text>{d.description}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.status}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onView(d._id, d.comments);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n                  </TouchableHighlight>\r\n                </View>\r\n                {this.state.viewId === d._id &&\r\n                <View style={myStyles.cmntsCnr}>\r\n                  <View style={myStyles.cmntsHdr}>\r\n                    <Text style={myStyles.cmntsHdrTxt}>Comments</Text>\r\n                  </View>\r\n                  <View style={myStyles.cmntsCnt}>\r\n                    {isNN(this.state.comments) ?\r\n                      this.state.comments.map((e: ITicketComment, j: number) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? myStyles.cmntCnrFst : myStyles.cmntCnr}>\r\n                          <View style={myStyles.cmntHdr}>\r\n                            <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{e.comment}</Text>\r\n                          </View>\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No Comments found!!!</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n        }\r\n        </View>\r\n      );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst myStyles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    marginTop: 3,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  }\r\n};","import * as React from 'react';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IVisitor } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUser } from '../../../../models/user';\r\nimport VisitorsView from '../../gatekeeper/visitors-view';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, this.state.isActive, (result: Array<IVisitor>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Visitors.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <VisitorsView data={this.state.data} isActive={this.state.isActive} user={this.props.user} appUser={this.props.appUser} onActiveChange={this.onActiveChange} />\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TouchableHighlight } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles as pageStyles } from '../../../../styles/page';\r\nimport { IPayment } from '../../../../models/home';\r\nimport { ITransaction } from '../../../../models/home/transaction';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { MONTH, COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IPayment>,\r\n  viewId: string,\r\n  transactions: Array<ITransaction>\r\n};\r\n\r\nexport default class Payments extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      viewId: '',\r\n      transactions: []\r\n    }\r\n    this.onView = this.onView.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IPayment>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Payments.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onView = (id: string, transactions: Array<ITransaction>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        transactions: []\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        transactions: transactions\r\n      });\r\n    }\r\n  };\r\n\r\n  getAmountPaid = (transactions: Array<ITransaction>) => {\r\n    let amount = 0;\r\n    if(isNN(transactions)){\r\n      transactions.filter((d: ITransaction, i: number) => d.isSuccess === true).map((d:ITransaction, i: number) => amount += d.amount);\r\n    }\r\n    return amount;\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n    if(isNN(data)){\r\n      return(\r\n        <View>\r\n          {\r\n            data.map((d: IPayment, i: number) => {\r\n            return(\r\n              <View key={i} style={pageStyles.row}>\r\n                    <View style={pageStyles.ele}>\r\n                        <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text>{'Rs. ' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text>{'Amount Paid Rs. ' + this.getAmountPaid(d.transactions)}</Text>\r\n                    </View>\r\n                    {isNN(d.description) &&\r\n                      <View style={pageStyles.ele}>\r\n                        <Text>{d.description}</Text>\r\n                      </View>\r\n                    }\r\n                    <View style={pageStyles.ele}>\r\n                      <TouchableHighlight style={{}} onClick={() => {\r\n                        this.onView(d._id, d.transactions);\r\n                      }}>\r\n                        <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Transactions'}</Text>\r\n                      </TouchableHighlight>\r\n                    </View>\r\n                    {this.state.viewId === d._id &&\r\n                    <View style={myStyles.cmntsCnr}>\r\n                  <View style={myStyles.cmntsHdr}>\r\n                    <Text style={myStyles.cmntsHdrTxt}>Transactions</Text>\r\n                  </View>\r\n                  <View style={myStyles.cmntsCnt}>\r\n                    {isNN(this.state.transactions) ?\r\n                      this.state.transactions.map((e: ITransaction, j: number) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? myStyles.cmntCnrFst : myStyles.cmntCnr}>\r\n                          <View style={myStyles.cmntHdr}>\r\n                            <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Ref Id: ' + e.txnRef}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Txn Id: ' + e.txnId}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Amount: ' + e.amount}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Status: ' + (e.isSuccess ? 'SUCCESS' : 'FAILED')}</Text>\r\n                          </View>\r\n                          {\r\n                            isNN(e.reason) &&\r\n                            <View style={myStyles.cmntCnt}>\r\n                              <Text>{'Reason: ' + e.reason}</Text>\r\n                            </View>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No transactions found!!!</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                  </View>\r\n              );\r\n          })\r\n        }\r\n        </View>\r\n      );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nconst myStyles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR, \r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    marginTop: 3,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { FILE_BASE_PATH } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IDocument>\r\n};\r\n\r\nexport default class Documents extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IDocument>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n    if(isNN(data)){\r\n      return(\r\n        <View>\r\n          {\r\n            data.map((d: IDocument, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n                </View>\r\n                {isNN(d.description) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.description}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.file) &&\r\n                <View style={styles.ele}>\r\n                <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n        }\r\n        </View>\r\n      );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, TouchableHighlight, Image } from '../../../common/elements';\r\nimport Spinner from '../../../common/spinner';\r\nimport Breadcrum from '../../../common/breadcrum';\r\nimport { IUser } from '../../../../models/user/user';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUsers } from '../../../../models/store/users';\r\nimport { IHomes } from '../../../../models/store/homes';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IHome, IMember, IVehicle, IServent, ITicket, IVisitor, IPayment } from '../../../../models/home';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from  '../../../../util/toast';\r\nimport Images from '../../../images';\r\nimport { COLOR } from '../../../../constants';\r\nimport { isNN } from '../../../../util/index';\r\nimport Info from './info';\r\nimport Members from './members';\r\nimport Vehicles from './vehicles';\r\nimport Servents from './servents';\r\nimport Tickets from './tickets';\r\nimport Visitors from './visitors';\r\nimport Payments from './payments';\r\nimport Documents from './documents';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadServents: (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVisitors: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  homeId: string,\r\n  activeTab: number,\r\n  data: IHome\r\n};\r\n\r\nexport default class ViewHome extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      homeId: '',\r\n      activeTab: 1,\r\n      data: {} as IHome\r\n    }\r\n    this.toggleLoading = this.toggleLoading.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let homeId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    this.setState({\r\n      homeId: homeId\r\n    });\r\n    if(homeId.length > 0){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(homeId, (result: IHome) => {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            data: result\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load Home.');\r\n        }\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Home.');\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleLoading = (isLoading: boolean) => {\r\n    this.setState({\r\n      isLoading: isLoading\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { activeTab } = this.state;\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Homes', link: 'homes'}, {title: 'View Home', link: 'view-home'}]} />\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              <Image src={activeTab === 1 ? Images.infoInv : Images.info} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>          \r\n              <Image src={activeTab === 2 ? Images.membersInv : Images.members} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              <Image src={activeTab === 3 ? Images.vehicleInv : Images.vehicle} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 4})}>\r\n              <Image src={activeTab === 4 ? Images.serventInv : Images.servent} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 5 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 5})}>\r\n              <Image src={activeTab === 5 ? Images.supportInv : Images.support} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 6 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 6})}>\r\n              <Image src={activeTab === 6 ? Images.visitorsInv : Images.visitors} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 7 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 7})}>\r\n              <Image src={activeTab === 7 ? Images.moneyInv : Images.money} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 8 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 8})}>\r\n              <Image src={activeTab === 8 ? Images.documentInv : Images.document} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              activeTab === 1 ?\r\n                  <Info blocks={this.props.blocks} data={this.state.data} />\r\n              :\r\n                activeTab === 2 ?\r\n                  <Members homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadMembers} />\r\n                :\r\n                  activeTab === 3 ?\r\n                    <Vehicles homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadVehicles} />\r\n                  :\r\n                    activeTab === 4 ?\r\n                      <Servents homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadServents} />\r\n                    :\r\n                      activeTab === 5 ?\r\n                        <Tickets homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadTickets} />\r\n                      :\r\n                        activeTab === 6 ?\r\n                          <Visitors appUser={this.props.appUser} user={this.props.user} homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadVisitors} />\r\n                        :\r\n                          activeTab === 7 ?\r\n                            <Payments homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadPayments} />\r\n                          :\r\n                            <Documents homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadDocuments} />\r\n            }            \r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  },\r\n  tabImage: {\r\n    width: 20,\r\n    height: 20\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHome, IMember, IVehicle, IServent, ITicket, IPayment } from '../models/home';\r\nimport { IDocument } from '../models/document';\r\nimport { load } from '../store/actions/home';\r\nimport { loadAllByHome as loadMembers} from '../store/actions/member';\r\nimport { loadAllByHome as loadVehicles } from '../store/actions/vehicle';\r\nimport { loadAllByHome as loadServents } from '../store/actions/servent';\r\nimport { loadAllByHome as loadTickets } from '../store/actions/ticket';\r\nimport { loadAll as loadVisitors } from '../store/actions/visitor';\r\nimport { loadAll as loadPayments } from '../store/actions/payment';\r\nimport { loadAllByHome as loadDocuments } from '../store/actions/documents';\r\nimport Page from '../components/home/manager/view-home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadMembers(homeId, sCallback, fCallback)),\r\n    onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => dispatch(loadVehicles(homeId, sCallback, fCallback)),\r\n    onLoadServents: (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => dispatch(loadServents(homeId, sCallback, fCallback)),\r\n    onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => dispatch(loadTickets(homeId, sCallback, fCallback)),\r\n    onLoadVisitors: (homeId: string, isActive: boolean, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => dispatch(loadVisitors('', homeId, isActive, sCallback, fCallback)),\r\n    onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadPayments('', homeId, sCallback, fCallback)),\r\n    onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => dispatch(loadDocuments(homeId, sCallback, fCallback))\r\n});\r\n\r\nexport const ViewHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IUser } from '../../models/user';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n//import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'poll';\r\n\r\nexport const loadAll = (appClientId: string, userRole: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getPollResult([], false, false, ''));\r\n  // new Api().get(controller + 'loadall/?appClientId=' + appClientId + '&userRole=' + userRole, (result: any, message: string) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getPollResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = polls.findIndex(d => d._id === result.data);\r\n        polls[foundIndex]._id = result.data;\r\n        polls[foundIndex].topic = data.topic;\r\n        polls[foundIndex].description = data.description;\r\n        polls[foundIndex].isAllowMultiple = data.isAllowMultiple;\r\n        polls[foundIndex].isOneVotePerFlat = data.isOneVotePerFlat;\r\n        polls[foundIndex].isAnonymous = data.isAnonymous;\r\n        polls[foundIndex].fromDate = data.fromDate;\r\n        polls[foundIndex].toDate = data.toDate;\r\n        polls[foundIndex].options = data.options;\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        scallback(true);\r\n      }else{\r\n        scallback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      // console.log(\"OUT: \" + result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        polls.unshift(data);\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        scallback(true);\r\n      }else{\r\n        scallback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, polls: Array<IPoll>, userId: string, scallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      polls = polls.filter((d, i) => d._id !== id);\r\n      dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n      scallback(true);\r\n    }else{\r\n      scallback(false);\r\n    }\r\n  }, {\r\n    Id: id,\r\n    UserId: userId\r\n  });\r\n};\r\n\r\nexport const vote = (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/vote/' + pollId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      var foundIndex = polls.data.findIndex(d => d._id === pollId);\r\n      polls.data[foundIndex].votes = result.data;\r\n      dispatch(getPollResult(polls.data, true, false, ''));\r\n\r\n      /*\r\n      // Update home\r\n      if(!isNN(user.homes[appUser.homeIndex].votes)){\r\n        user.home[appUser.homeIndex].vote = [];\r\n      }\r\n      result.data.map((v: IVote, vi: number) => {\r\n        user.home[appUser.homeIndex].vote.push(v);\r\n      });\r\n      dispatch(getUserResult(user));\r\n      */\r\n      // Update polls\r\n      // if(polls.isUpToDate && !polls.isError && isNN(polls.data) && ((',' + user.type + ',').indexOf(ROLE.ADMIN) >= 0 || (',' + user.type + ',').indexOf(ROLE.MANAGER) >= 0)){\r\n        if(polls.isUpToDate && !polls.isError && isNN(polls.data)){\r\n        let lstPoll = polls.data;\r\n        let pollIndex = lstPoll.findIndex(p => p._id === pollId);\r\n        lstPoll[pollIndex].votes = result.data;\r\n        /*\r\n        if(!isNN(lstPoll[pollIndex].votes)){\r\n          lstPoll[pollIndex].vote = [];\r\n        }\r\n        result.data.map((v: IVote, vi: number) => {\r\n          lstPoll[pollIndex].vote.unshift(v);\r\n        });\r\n        */\r\n        dispatch(getPollResult(lstPoll, true, false, \"\"));\r\n      }\r\n     // dispatch(getUserResult(user));\r\n      \r\n      scallback(true);\r\n    }else{\r\n      scallback(false);\r\n    }\r\n  }, {\r\n    votes: votes\r\n  });\r\n};\r\n\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});","import { jsError } from \"./index\";\r\n\r\nexport function percentage(_partialValue: number, _totalValue: number) {\r\n    try{\r\n        if(_totalValue > 0){\r\n            return (100 * _partialValue) / _totalValue;\r\n        }else{\r\n            return 0;\r\n        }\r\n    } catch (ex) {\r\n    jsError(ex, 'calc.percentage'); \r\n    return 0; \r\n  }\r\n };","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Text, Image, TextInput, TextArea } from '../../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IPolls } from '../../../models/store/polls';\r\nimport { IPoll } from '../../../models/poll/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN, isNNObject } from '../../../util/index';\r\nimport { percentage } from '../../../util/calc';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onSave: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, polls: Array<IPoll>, userID: string, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isEdit: boolean,\r\n  isLoading: boolean,\r\n  id: string,\r\n  topic: string,\r\n  description: string,\r\n  isAllowMultiple: boolean,\r\n  isOneVotePerFlat: boolean,\r\n  isAnonymous: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  pollOption: Array<string>,\r\n  showVotePoll: IPoll,\r\n  datePickerType: string,\r\n  datePickerDate: Date\r\n};\r\n\r\nexport default class Poll extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      isLoading: false,\r\n      id: '',\r\n      topic: '',\r\n      description: '',\r\n      isAllowMultiple: false,\r\n      isOneVotePerFlat: false,\r\n      isAnonymous: false,\r\n      fromDate: new Date(),\r\n      toDate: new Date(),\r\n      pollOption: [],\r\n      showVotePoll: { _id: '' } as IPoll,\r\n      datePickerType: '',\r\n      datePickerDate: new Date()\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n   onSave = () => {\r\n    if(isNN(this.state.topic) && isNN(this.state.description) && isNNObject(this.state.fromDate) && isNNObject(this.state.toDate) && isNN(this.state.pollOption.filter(po => isNN(po)))){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let poll = {\r\n          _id: this.state.id,\r\n          topic: this.state.topic,\r\n          description: this.state.description,\r\n          isAllowMultiple: this.state.isAllowMultiple,\r\n          isOneVotePerFlat: this.state.isOneVotePerFlat,\r\n          isAnonymous: this.state.isAnonymous,\r\n          fromDate: this.state.fromDate,\r\n          toDate: this.state.toDate,\r\n          options: this.state.pollOption.filter(po => isNN(po))\r\n        } as IPoll;\r\n        this.props.onSave(this.props.user.client._id, poll, this.props.polls.data, this.props.user, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              topic: '',\r\n              description: '',\r\n              isAllowMultiple: false,\r\n              isOneVotePerFlat: false,\r\n              isAnonymous: false,\r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              pollOption: [],\r\n              showVotePoll: { _id: '' } as IPoll,\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Poll saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save pol.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.polls.data, this.props.user._id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Poll removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove poll.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  loadVotes = () => {\r\n    if(isNNObject(this.state.showVotePoll) && this.state.showVotePoll._id.length > 0){\r\n      let votes = [] as any;\r\n      this.state.showVotePoll.options.map((po: string, poi: number) => \r\n        votes.push({\r\n          option: po,\r\n          votes: this.state.showVotePoll.votes.filter(v => v.option === poi).length\r\n        })\r\n      );\r\n      return(\r\n        <View style={{padding: 15}}>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{this.state.showVotePoll.topic}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{this.state.showVotePoll.description}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{'Votes: ' + this.state.showVotePoll.votes.length}</Text>\r\n          </View>\r\n        {\r\n        votes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n          return(\r\n            <View key={'pvo' + voi} style={styles.ele}>\r\n              <Text>\r\n                {vo.votes + ' (' + percentage(vo.votes, this.state.showVotePoll.votes.length) +  '%) - ' + vo.option}\r\n              </Text>\r\n            </View>\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n      )\r\n    }else{\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n        {this.state.isEdit === false &&\r\n        <Button\r\n        title=\"ADD NEW\"\r\n        onPress={() => {\r\n          this.setState({\r\n            isEdit: true,\r\n            id: '',\r\n            topic: '',\r\n            description: '',\r\n            isAllowMultiple: false,\r\n            isOneVotePerFlat: false,\r\n            isAnonymous: false,\r\n            fromDate: new Date(),\r\n            toDate: new Date(),\r\n            pollOption: [],\r\n            showVotePoll: { _id: '' } as IPoll,\r\n            datePickerType: '',\r\n            datePickerDate: new Date()\r\n           });\r\n        }}\r\n        />\r\n        }\r\n        {\r\n         (this.state.isEdit === true && this.state.id.length === 0)  ?\r\n         <View key={\"p0\"} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.topic} onChange={(event: any) => this.setState({topic: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => this.setState({isAllowMultiple: !this.state.isAllowMultiple})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => this.setState({isOneVotePerFlat: !this.state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAnonymous} text='Anonymous Voting' onPress={() => this.setState({isAnonymous: !this.state.isAnonymous})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(this.state.pollOption) ?\r\n            this.state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} style={styles.ele}>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={e} onChange={(event: any) => {\r\n                    let newOptions = this.state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    this.setState({pollOption: newOptions});\r\n                  }} />\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    let newOptions = this.state.pollOption;\r\n                    delete newOptions[j];\r\n                    this.setState({pollOption: newOptions});\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text>No Option found!!!</Text>\r\n            </View>\r\n          }\r\n            <View style={styles.ele}>\r\n              <TouchableHighlight\r\n              onClick={() => {\r\n                if(!isNN(this.state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = this.state.pollOption;\r\n                  newOptions.push('');\r\n                  this.setState({pollOption: newOptions});\r\n                }\r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          <View style={styles.ele}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n              <Image src={Images.tick} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight style={{}} onClick={() => {\r\n              this.setState({\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n        :\r\n        []\r\n        }\r\n      {\r\n      (isNNObject(this.props.polls) && this.props.polls.isUpToDate && !this.props.polls.isError && isNN(this.props.polls.data)) ?      \r\n      this.props.polls.data.map((d: IPoll, i: number) => {\r\n      return(\r\n        (this.state.isEdit === true && this.state.id === d._id) ?\r\n        <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.topic} onChange={(event: any) => this.setState({topic: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => this.setState({isAllowMultiple: !this.state.isAllowMultiple})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => this.setState({isOneVotePerFlat: !this.state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAnonymous} text='Anonymous Voting' onPress={() => this.setState({isAnonymous: !this.state.isAnonymous})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(this.state.pollOption) ?\r\n            this.state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} style={styles.ele}>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={e} onChange={(event: any) => {\r\n                    let newOptions = this.state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    this.setState({pollOption: newOptions});\r\n                  }} />\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    let newOptions = this.state.pollOption;\r\n                    delete newOptions[j];\r\n                    this.setState({pollOption: newOptions});\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text>No Option found!!!</Text>\r\n            </View>\r\n          }\r\n            <View style={styles.ele}>\r\n              <TouchableHighlight\r\n              onClick={() => {\r\n                if(!isNN(this.state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = this.state.pollOption;\r\n                  newOptions.push('');\r\n                  this.setState({pollOption: newOptions});\r\n                }            \r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          <View style={styles.ele}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n              <Image src={Images.tick} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>                \r\n            <TouchableHighlight style={{}} onClick={() => {\r\n              this.setState({\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>        \r\n          </View>\r\n        </View>\r\n        :\r\n        <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{d.topic}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{d.description}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{toDateString(d.fromDate) + \" to \" + toDateString(d.toDate)}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isAllowMultiple === true ? modelStyles.radioActive : {...modelStyles.radio, marginLeft: 5})}\r\n            >\r\n              <Text style={(d.isAllowMultiple === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>Allow Multiple Votes</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isOneVotePerFlat === true ? {...modelStyles.radioActive} : {...modelStyles.radio, marginLeft: 5})}\r\n             >\r\n              <Text style={(d.isOneVotePerFlat === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>One Vote per Flat</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isAnonymous === true ? {...modelStyles.radioActive} : {...modelStyles.radio, marginLeft: 5})}\r\n             >\r\n              <Text style={(d.isAnonymous === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>Anonymous Voting</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(d.options) ?\r\n            d.options.map((e: string, j: number) => {\r\n              return(\r\n                <View key={\"po\" + j} style={styles.ele}>\r\n                  <Text key={\"pot\" + j} style={{width: '100%'}}>{e}</Text>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text style={{padding: 10}}>No Option found!!!</Text> \r\n            </View>           \r\n          }\r\n          <View style={styles.ele}>\r\n          {(d.fromDate > new Date()) &&\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isEdit: true,\r\n                id: d._id,\r\n                topic: d.topic,\r\n                description: d.description,\r\n                isAllowMultiple: d.isAllowMultiple,\r\n                isOneVotePerFlat: d.isOneVotePerFlat,\r\n                isAnonymous: d.isAnonymous,\r\n                fromDate: d.fromDate,\r\n                toDate: d.toDate,\r\n                pollOption: (isNN(d.options) ? d.options : [])\r\n              });\r\n            }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          }\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.onRemove(d._id);\r\n            }}>\r\n              <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>\r\n            <Text className='pointer' style={{color: COLOR.SECONDARY}} onClick={() => {\r\n              this.setState({showVotePoll: d})\r\n            }}>View Votes</Text>\r\n          </View>\r\n        </View>\r\n      )\r\n      })\r\n      :\r\n      <Text style={{padding: 20}}>{(this.props.polls.isUpToDate ? (this.props.polls.isError ? this.props.polls.errorMessage : \"No poll found!!!\") : \"Loading...\")}</Text>\r\n    }\r\n    <Modal\r\n      open={(isNNObject(this.state.showVotePoll) && this.state.showVotePoll._id.length > 0)}\r\n      onClose={() => this.setState({showVotePoll : { _id: '' } as IPoll})}>\r\n      <View style={popupStyles.container}>\r\n        <View style={popupStyles.content}>\r\n        {\r\n          this.loadVotes()\r\n        }\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n    <Spinner visible={this.state.isLoading} />\r\n    </View>  \r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Checkbox from '../common/checkbox';\r\nimport Spinner from '../common/spinner';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { styles } from \"../../styles/page\";\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { percentage } from '../../util/calc';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  votePollId: string,\r\n  votes: Array<IVote>,\r\n  currentDate: Date\r\n};\r\n\r\nexport default class Poll extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    let currentDate = new Date();\r\n    this.state = {\r\n      isLoading: false,\r\n      votePollId: '',\r\n      votes: [],\r\n      currentDate: new Date((currentDate.getMonth() + 1) + '/' + currentDate.getDate() + '/' + currentDate.getFullYear())\r\n    }\r\n    this.loadVotes = this.loadVotes.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  loadVotes = (poll: IPoll) => {\r\n    let votes = [] as any;\r\n    poll.options.map((po: string, poi: number) => \r\n      votes.push({\r\n        option: po,\r\n        votes: poll.votes.filter(v => v.option === poi).length\r\n      })\r\n    );\r\n    return(\r\n    votes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n      return(\r\n        <View key={'pvo' + voi} style={styles.ele}>\r\n          <Text>\r\n            {vo.votes + ' (' + percentage(vo.votes, poll.votes.length) +  '%) - ' + vo.option}\r\n          </Text>\r\n        </View>\r\n      )\r\n    })\r\n    )\r\n  };\r\n\r\n  onSelectOption = (poll: IPoll, optionId: number) => {\r\n    if(this.state.votePollId === poll._id){\r\n      if(isNN(this.state.votes.filter(v => v.option === optionId))){\r\n        this.setState({\r\n          votes: this.state.votes.filter(v => v.option !== optionId)\r\n        });\r\n      }else{\r\n        let votes = [] as Array<IVote>;\r\n        if(poll.isAllowMultiple){\r\n          votes = this.state.votes;\r\n        }\r\n          votes.push({\r\n            _homeId: this.props.user.homes[this.props.appUser.homeIndex]._id,\r\n            _memberId: this.props.user._id,\r\n            option: optionId,\r\n            isActive: true,\r\n            createdBy: this.props.user._id\r\n          } as IVote);\r\n          this.setState({\r\n            votes: votes\r\n          });\r\n        // if(poll.isAllowMultiple || !isNN(this.state.votes.filter(v => v.pollId === poll.id))){\r\n\r\n        // }\r\n      }\r\n    }else{\r\n      let votes = [] as Array<IVote>;\r\n      votes.push({\r\n        _homeId: this.props.user.homes[this.props.appUser.homeIndex]._id,\r\n        _memberId: this.props.user._id,\r\n        option: optionId,\r\n        isActive: true,\r\n        createdBy: this.props.user._id\r\n      } as IVote);\r\n      this.setState({\r\n        votePollId: poll._id,\r\n        votes: votes\r\n      });\r\n    }\r\n  };\r\n\r\n  onVote = (pollId: string) => {\r\n    if(this.state.votePollId === pollId &&  isNN(this.state.votes)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onVote(pollId, this.state.votes, this.props.polls, this.props.user, this.props.appUser, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          this.setState({\r\n            votePollId: '',\r\n            votes: []\r\n          });\r\n          Toast.success('Your vote saved successfully.');\r\n        }else{\r\n          Toast.fail('Failed to save your vote.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select any option to vote.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n      {\r\n        (isNNObject(this.props.polls) && this.props.polls.isUpToDate && !this.props.polls.isError && isNN(this.props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= this.state.currentDate))) ?\r\n        this.props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= this.state.currentDate).map((d: IPoll, i: number) => {\r\n          return(\r\n            <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.topic}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === this.props.user.homes[this.props.appUser.homeIndex]._id))) &&\r\n                d.options.map((o: string, oi: number) => {\r\n                  return(\r\n                    <View key={\"popt\" + oi} style={styles.ele}>\r\n                      <Checkbox isActive={(this.state.votePollId === d._id && isNN(this.state.votes.filter(v => v.option === oi)))} text={o} onPress={() => this.onSelectOption(d, oi)} />\r\n                    </View>\r\n                  )\r\n                })\r\n              }\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === this.props.user.homes[this.props.appUser.homeIndex]._id))) &&\r\n                <View style={{marginTop: 5, width: '100%'}}>\r\n                  <Button title=\"Vote\" onPress={() => this.onVote(d._id)} style={{width: '100%'}} />\r\n                </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>Your Votes:</Text>\r\n              </View>\r\n              {isNN(d.options) &&\r\n                this.loadVotes(d)\r\n              }\r\n            </View>\r\n          )\r\n      })\r\n      :\r\n      <Text style={{padding: 20}}>{(this.props.polls.isUpToDate ? (this.props.polls.isError ? this.props.polls.errorMessage : \"No active poll found!!!\") : \"Loading...\")}</Text>\r\n    }\r\n    <Spinner visible={this.state.isLoading} />\r\n    </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Button from '../common/button';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateTimeString } from '../../util/convert';\r\nimport { ROLE, COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  outings: IOutings,\r\n  onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Outing extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false\r\n    }\r\n    this.onReturnBack = this.onReturnBack.bind(this);\r\n  };\r\n\r\n  componentDidMount(){};\r\n  \r\n  componentWillUnmount(){};\r\n  \r\n  onReturnBack = (outingId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to return back from outing',\r\n      message: 'Are you sure? You return back from this outing?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReturnBack(outingId, this.props.user, this.props.outings, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result){\r\n                Toast.success('Successfully returned back.');\r\n              }else{\r\n                Toast.fail('Failed to Return back.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n      {(this.props.appUser.role === ROLE.USER && (!isNNObject(this.props.outings) || !isNN(this.props.outings.data.filter(o => o.isReturned !== true)))) &&\r\n        <Button\r\n        title=\"Go Outing\"\r\n        onPress={() => {\r\n          this.props.history.push('new-outing')\r\n        }}\r\n        />\r\n      }\r\n      {\r\n        (isNNObject(this.props.outings) && this.props.outings.isUpToDate && !this.props.outings.isError && isNN(this.props.outings.data)) ?\r\n        this.props.outings.data.map((d: IOuting, i: number) => {\r\n          return(\r\n            <View key={\"o\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{toDateTimeString(d.fromDate) + \" to \" + toDateTimeString(d.toDate)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.place}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.address}</Text>\r\n              </View>\r\n              {d.isReturned &&\r\n              <View style={styles.ele}>\r\n                <Text>{'Returned on ' + toDateTimeString(d.returnedAt)}</Text>\r\n              </View>\r\n              }\r\n              {this.props.appUser.role !== ROLE.USER && \r\n                <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Text>No one in the home</Text>\r\n                </View>\r\n              }\r\n              {(this.props.appUser.role === ROLE.USER && d.isReturned !== true) &&\r\n                <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Button title=\"Return to Home\" onPress={() => {\r\n                    this.onReturnBack(d._id);\r\n                  }} />\r\n                </View>\r\n              }\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{(this.props.outings.isUpToDate ? (this.props.outings.isError ? this.props.outings.errorMessage : \"No Outings found!!!\") : \"Loading...\")}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { TouchableHighlight, View } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IComplaint, IRemainder } from '../../models/home/index';\r\nimport AMPoll from './manager/poll';\r\nimport UserPoll from './poll';\r\nimport Outing from './outing';\r\nimport CustomList from './custom-list';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  polls: IPolls,\r\n  outings: IOutings,\r\n  remainders: Array<IRemainder>,\r\n  complaints: Array<IComplaint>,\r\n  onLoadAds: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => void,\r\n  onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => void,\r\n  onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, scallback: (result: boolean) => void) => void,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onLoadOuting: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  activeTab: number,\r\n  isShowPoll: boolean\r\n};\r\n\r\nexport default class Notification extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: (isNNObject(this.props.user) && (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER)) ? 1 : 2,\r\n      isShowPoll: isNNObject(this.props.user) && (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER || (this.props.appUser.role === ROLE.USER && this.props.appUser.homeIndex >= 0))\r\n    }\r\n  };\r\n  \r\n  componentDidMount(){\r\n    this.props.onLoadAds(this.props.user.client._id, (result: boolean) => {\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n    if(this.state.isShowPoll){\r\n      this.props.onLoadPoll(this.props.user.client._id, this.props.appUser.role, (result: boolean) => {\r\n        if(!result){\r\n          Toast.fail('Failed to load Poll.');\r\n        }\r\n      });\r\n    }\r\n    this.props.onLoadOuting(this.props.user.client._id, this.props.appUser.role === ROLE.USER ? this.props.user.homes[this.props.appUser.homeIndex]._id : '', (result: boolean) => {\r\n      if(!result){\r\n        Toast.fail('Failed to load Outing.');\r\n      }\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Notice', link: 'notice'}]} />\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n          {this.state.isShowPoll &&\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>\r\n              POLL\r\n            </TouchableHighlight>\r\n          }\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>\r\n              ADS\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              OUTING\r\n            </TouchableHighlight>\r\n            {/* <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 4})}>\r\n              REMINDERS\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 5 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 5})}>\r\n            COMPLAINTS\r\n            </TouchableHighlight> */}\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              this.state.activeTab === 1 ? \r\n                (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) ? \r\n                  <AMPoll appUser={this.props.appUser} user={this.props.user} polls={this.props.polls} onSave={this.props.onSavePoll} onRemove={this.props.onRemovePoll} />\r\n                :\r\n                  <UserPoll appUser={this.props.appUser} user={this.props.user} polls={this.props.polls} onVote={this.props.onVote} />\r\n              :\r\n                this.state.activeTab === 2 ?\r\n                  <CustomList data={(this.props.ads.isUpToDate ? this.props.ads.data : [])} message={(this.props.ads.isUpToDate ? (this.props.ads.isError ? this.props.ads.errorMessage : \"No data found!!!\") : \"Loading...\")} />\r\n                :\r\n                this.state.activeTab === 3 ?\r\n                  <Outing history={this.props.history} appUser={this.props.appUser} user={this.props.user} outings={this.props.outings} onReturnBack={this.props.onReturnBack} />\r\n                :\r\n                  <CustomList data={this.state.activeTab === 4 ? this.props.remainders : this.props.complaints} message=\"No data found!!!\" />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { IPolls } from '../models/store/polls';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { IPoll, IVote } from '../models/poll/index';\r\nimport { loadAll as loadAllAds } from '../store/actions/ad';\r\nimport { loadAll as loadAllPools, save, remove, vote } from '../store/actions/poll';\r\nimport { loadAll as loadAllOutings, retunBack } from '../store/actions/outing';\r\nimport Page from '../components/home/notification';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    polls: state.Polls,\r\n    outings: state.Outings,\r\n    remainders: [],\r\n    complaints: []\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoadAds: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAllAds(appClientId, callback)),\r\n    onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => dispatch(loadAllPools(appClientId, userRole, callback)),\r\n    onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => dispatch(save(appClientId, data, polls, user, scallback)),\r\n    onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, scallback: (result: boolean) => void) => dispatch(remove(id, polls, userId, scallback)),\r\n    onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => dispatch(vote(pollId, votes, polls, user, appUser, scallback)),\r\n    onLoadOuting: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAllOutings(appClientId, homeId, callback)),\r\n    onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(retunBack(id, user, outings, callback))\r\n});\r\n\r\nexport const Notice = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user';\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Help extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Info', link: 'info'}]} />\r\n          {/* <Image source={Images.workInProgress} style={{width: 50, height: 45, marginTop: 35}} />\r\n          <Text>Work in progress!!!</Text> */}\r\n          <View style={{...modelStyles.container, paddingLeft: 10, paddingRight: 10}}>\r\n            <View className='center' style={modelStyles.row}>\r\n              <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'center'}}>{this.props.user.client.name}</Text>\r\n            </View>\r\n            <View className='center' style={modelStyles.row}>\r\n                <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'center'}}>{this.props.user.client.description}</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>\r\n                {\"Apartment Residents & Apartment Owners need a common platform through which they can connect with association, get to know & discuss common issues of the neighborhood\"}\r\n              </Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>Home users</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Maintenance Admin Payment</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Receive real-time notifications</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Visitor management</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Lodge any complaint related to your apartment and track</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>Admin Users</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Create polls and gather the opinion of all Apartment residents</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>All details of your flat, staff who work in your flat, visitors coming to your flat</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Accounts  and much more...</Text>\r\n            </View>\r\n          </View>\r\n        </main>\r\n      );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  listItem: {\r\n    marginLeft: 15\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport Page from '../components/home/help';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n});\r\n\r\nexport const Help = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    render() {\r\n    return (\r\n            <View style={{flex: 1, backgroundColor: COLOR.INVERSE, padding: 40}}>\r\n                <Text>Page not found!!!</Text>\r\n            </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport TitleBar from './title-bar';\r\nimport NavBar from './nav-bar';\r\nimport TabBar from './tab-bar';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNNObject, isNN } from '../../util';\r\nimport Toast from  '../../util/toast';\r\n\r\nimport { Dashboard as CDashboard} from '../../containers/dashboard';\r\nimport { Members as CMembers } from '../../containers/members';\r\nimport { NewMember as CNewMember } from '../../containers/new-member';\r\nimport { Vehicles as CVehicles } from '../../containers/vehicles';\r\nimport { NewVehicle as CNewVehicle } from '../../containers/new-vehicle';\r\nimport { Servents as CServents } from '../../containers/servents';\r\nimport { NewServent as CNewServent } from '../../containers/new-servent';\r\nimport { Tickets as CTickets } from '../../containers/tickets';\r\nimport { NewTicket as CNewTicket } from '../../containers/new-ticket';\r\nimport { Visitors as CVisitors } from '../../containers/visitors';\r\n// import { NewVisitor as CNewVisitor } from '../../containers/new-visitor';\r\nimport { ChangePassword as CChangePassword } from '../../containers/change-password';\r\nimport { MyProfile as CMyProfile } from '../../containers/my-profile';\r\nimport { MyRole as CMyRole } from '../../containers/my-role';\r\nimport { Ads as CAds } from '../../containers/ads';\r\nimport { NewAd as CNewAd } from '../../containers/new-ad';\r\nimport { Users as CUsers } from '../../containers/users';\r\nimport { Homes as CHomes } from '../../containers/homes';\r\nimport { EditUser as CEditUser } from '../../containers/edit-user';\r\nimport { ApproveUsers as CApproveUsers } from '../../containers/approve-users';\r\n\r\nimport { EditHome as CEditHome } from '../../containers/edit-home';\r\nimport { AllVisitors as CAllVisitors } from '../../containers/all-visitors';\r\nimport { Notification as CNotification } from '../../containers/notification';\r\nimport { NewOuting as CNewOuting } from '../../containers/new-outing';\r\nimport { MyDocuments as CMyDocuments } from '../../containers/my-documents';\r\nimport { Blocks as CBlocks } from '../../containers/blocks';\r\nimport { EditBlock as CEditBlock } from '../../containers/edit-block';\r\nimport { Payment as CPayment } from '../../containers/payment';\r\nimport { ViewHome as CViewHome } from '../../containers/view-home';\r\nimport { Notice as CNotice } from '../../containers/notice';\r\nimport { Help as CHelp } from '../../containers/help';\r\nimport NotFound from '../../components/not-found';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  getProfile: (callback: (result: boolean, message: string) => void) => void,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isMenuExpand: boolean\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isMenuExpand: false\r\n    }\r\n    this.onToggleMenu = this.onToggleMenu.bind(this);\r\n    this.isUser = this.isUser.bind(this);\r\n    this.isAdmin = this.isAdmin.bind(this);\r\n    this.isManager = this.isManager.bind(this);\r\n    this.isGateKeeper = this.isGateKeeper.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(!isNNObject(this.props.user) || !isNN(this.props.user._id)){\r\n      this.setState({\r\n          isLoading: true\r\n      });\r\n      this.props.getProfile( (result: boolean, message: string) => {\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n        if(result !== true){\r\n          Toast.fail('Failed to load Profile: ' + message);\r\n        }\r\n      });\r\n    }\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onToggleMenu = () => {\r\n    this.setState({\r\n      isMenuExpand: !this.state.isMenuExpand\r\n    });\r\n  };\r\n\r\n  isUser = () => {\r\n    return this.props.appUser.role === ROLE.USER;\r\n  };\r\n\r\n  isAdmin = () => {\r\n    return this.props.appUser.role === ROLE.ADMIN;\r\n  };\r\n  \r\n  isManager = () => {\r\n    return this.props.appUser.role === ROLE.MANAGER;\r\n  };\r\n\r\n  isGateKeeper = () => {\r\n    return this.props.appUser.role === ROLE.GATEKEEPER;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      !this.state.isLoading &&\r\n        <View style={styles.container}>\r\n          <TitleBar appUser={this.props.appUser} user={this.props.user} isMenuExpand={this.state.isMenuExpand} onToggleMenu={this.onToggleMenu} onHomeChange={this.props.onHomeChange} onLogout={this.props.onLogout}/>\r\n          <NavBar appUser={this.props.appUser} user={this.props.user} isExpand={this.state.isMenuExpand} onToggleMenu={this.onToggleMenu} />\r\n            {((isNN(this.props.appUser.role) && !this.isUser()) || isNN(this.props.user.homes)) ?\r\n            <Switch>\r\n              <Route path={'/'} exact component={CDashboard} />\r\n              {/* <Route path={'/login'} exact component={CLogin} /> */}\r\n              {this.isUser() && <Route path={'/members'} exact component={CMembers} />}\r\n              {this.isUser() && <Route path={'/new-member'} exact component={CNewMember} />}\r\n              {this.isUser() && <Route path={'/vehicles'} exact component={CVehicles} />}\r\n              {this.isUser() && <Route path={'/new-vehicle'} exact component={CNewVehicle} />}\r\n              {this.isUser() && <Route path={'/servents'} exact component={CServents} />}\r\n              {this.isUser() && <Route path={'/new-servent'} exact component={CNewServent} />}\r\n              {(this.isUser() || this.isAdmin() || this.isManager()) && <Route path={'/tickets'} exact component={CTickets} />}\r\n              {this.isUser() && <Route path={'/new-ticket'} exact component={CNewTicket} />}\r\n              {this.isUser() && <Route path={'/visitors'} exact component={CVisitors} />}\r\n              {/* {this.isUser() && <Route path={'/new-visitor'} exact component={CNewVisitor} />} */}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/ads'} exact component={CAds} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/new-ad'} exact component={CNewAd} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/notification'} exact component={CNotification} />}\r\n              {this.isAdmin() && <Route path={'/users'} exact component={CUsers} />}\r\n              {this.isAdmin() && <Route path={'/edit-user/:id/:isApprove'} exact component={CEditUser} />}\r\n              {this.isAdmin() && <Route path={'/approve-users'} exact component={CApproveUsers} />}\r\n              {this.isAdmin() && <Route path={'/homes'} exact component={CHomes} />}\r\n              {this.isAdmin() && <Route path={'/view-home/:id'} exact component={CViewHome} />}\r\n              {this.isAdmin() && <Route path={'/edit-home/:id'} exact component={CEditHome} />}\r\n              {this.isAdmin() && <Route path={'/blocks'} exact component={CBlocks} />}\r\n              {this.isAdmin() && <Route path={'/edit-block/:id'} exact component={CEditBlock} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/payment'} exact component={CPayment} />}\r\n              {(this.isAdmin() || this.isManager() || this.isGateKeeper()) && <Route path={'/all-visitors'} exact component={CAllVisitors} />}\r\n              <Route path={'/notice'} exact component={CNotice} />\r\n              {this.isUser() && <Route path={'/new-outing'} exact component={CNewOuting} />}\r\n              <Route path={'/my-profile'} exact component={CMyProfile} />\r\n              {this.props.user.role.split(',').length > 0 && <Route path={'/my-role'} exact component={CMyRole} />}\r\n              <Route path={'/my-documents'} exact component={CMyDocuments} />\r\n              <Route path={'/change-password'} exact component={CChangePassword} />\r\n              <Route path={'/info'} exact component={CHelp} />              \r\n              <Route component={NotFound} />\r\n            </Switch>\r\n            :\r\n            <Text style={{margin: 20}}>No home assigned to you. Please contact administrator/manager.</Text>\r\n            }\r\n          {(isNNObject(this.props.user) && isNN(this.props.user._id)) &&\r\n          <TabBar />\r\n          }\r\n          <Spinner visible={this.state.isLoading} text={\"Loading...\"} />\r\n        </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLOR.INVERSE,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start'\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { getProfile, homeChange, logout } from '../store/actions/account';\r\nimport Page from '../components/home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    getProfile: (callback: (result: boolean, message: string) => void) => dispatch(getProfile(callback)),\r\n    onHomeChange: (index: number, callback: (result: boolean) => void) => dispatch(homeChange(index, callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Login } from '../containers/login';\r\nimport { Home } from '../containers/home';\r\nimport { IAppUser } from '../models/app-user/app-user';\r\nimport { isNN } from '../util';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  setLogin: (isLoggedIn: boolean) => void\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class AppContainer extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // };\r\n\r\n  componentDidMount() {\r\n    let token: string | null = sessionStorage.getItem('auth_token');\r\n    if(isNN(token)){\r\n      this.props.setLogin(true);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n        this.props.appUser.isLoggedIn ? \r\n          <HashRouter>\r\n            <Home />\r\n          </HashRouter>\r\n        :\r\n          <Login />\r\n    )\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { setLogin } from '../store/actions/account';\r\nimport Page from '../components/app-container';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n   appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n   setLogin: (isLoggedIn: boolean) => dispatch(setLogin(isLoggedIn))\r\n});\r\n\r\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(Page);","\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\r\nimport { store } from './store/app-store';\r\nimport { AppContainer } from './containers/app-container';\r\n// import FCM from './services/fcm';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './css/bootstrap.min.css';\r\nimport './css/common.scss';\r\n\r\nexport default class App extends React.Component {\r\n    componentDidMount() {\r\n        // FCM.init();\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        // FCM.notificationDisplayedListener();\r\n        // FCM.notificationListener();\r\n        // FCM.notificationOpenedListener();\r\n    };\r\n  \r\n    render() {\r\n        return(\r\n          <Provider store={store}>\r\n            <AppContainer />\r\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_RIGHT} />\r\n          </Provider>      \r\n        )\r\n    }\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}