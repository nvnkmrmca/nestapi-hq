{"version":3,"sources":["store/action-types.ts","store/reducers/app-user.ts","store/reducers/user.ts","store/reducers/ads.ts","store/reducers/polls.ts","store/reducers/outings.ts","store/reducers/documents.ts","store/reducers/users.ts","store/reducers/homes.ts","store/reducers/user-homes.ts","store/reducers/tickets.ts","store/reducers/blocks.ts","store/reducers/gate-no.ts","store/reducers/state.ts","store/app-store.ts","constants/index.ts","util/index.ts","store/api/api.ts","store/actions/account.ts","components/common/elements.tsx","components/common/button.tsx","components/common/spinner.tsx","components/images.ts","styles/common.ts","util/toast.ts","components/common/radio-button.tsx","styles/model.ts","components/login/sign-up.tsx","components/login/index.tsx","containers/login.tsx","components/home/title-bar.tsx","constants/nav.ts","theme/scripts/scrollbar/index.js","components/home/nav-bar.tsx","components/home/tab-bar.tsx","store/actions/payment.ts","store/actions/visitor.ts","store/actions/file.ts","components/home/my-dues.tsx","util/convert.ts","components/home/history.tsx","components/home/custom-list.tsx","components/home/home.tsx","components/home/manager/home.tsx","styles/popup.ts","components/common/checkbox.tsx","styles/page.ts","components/home/gatekeeper/visitors-view.tsx","components/home/gatekeeper/new-visitor.tsx","components/home/gatekeeper/home.tsx","components/home/dashboard.tsx","containers/dashboard.tsx","store/actions/member.ts","components/common/breadcrum.tsx","components/home/members.tsx","containers/members.tsx","components/home/new-member.tsx","containers/new-member.tsx","store/actions/vehicle.ts","components/home/vehicles.tsx","containers/vehicles.tsx","components/home/new-vehicle.tsx","containers/new-vehicle.tsx","store/actions/servant.ts","styles/comments.ts","components/home/servants.tsx","containers/servants.tsx","components/home/gatekeeper/takeaways.tsx","containers/all-takeaways.tsx","components/home/new-servant.tsx","containers/new-servant.tsx","store/actions/ticket.ts","components/home/tickets.tsx","containers/tickets.tsx","components/home/new-ticket.tsx","containers/new-ticket.tsx","components/home/visitors.tsx","containers/visitors.tsx","containers/change-password.tsx","components/home/change-password.tsx","components/home/my-profile.tsx","containers/my-profile.tsx","components/home/my-role.tsx","containers/my-role.tsx","store/actions/ad.ts","components/home/manager/ads.tsx","containers/ads.tsx","components/home/manager/new-ad.tsx","containers/new-ad.tsx","components/home/manager/users.tsx","containers/users.tsx","store/actions/home.ts","components/home/manager/homes.tsx","containers/homes.tsx","styles/mlist.ts","components/home/manager/edit-user.tsx","containers/edit-user.tsx","components/home/manager/approve-users.tsx","containers/approve-users.tsx","components/home/manager/edit-home.tsx","containers/edit-home.tsx","components/home/gatekeeper/visitors.tsx","containers/all-visitors.tsx","components/home/manager/notification.tsx","containers/notification.tsx","store/actions/notification.ts","store/actions/outing.ts","components/home/new-outing.tsx","containers/new-outing.tsx","store/actions/documents.ts","components/home/my-documents.tsx","containers/my-documents.tsx","store/actions/block.ts","components/home/manager/blocks.tsx","containers/blocks.tsx","components/home/manager/edit-block.tsx","containers/edit-block.tsx","components/home/manager/payment-form.tsx","components/home/manager/payment-history.tsx","components/home/manager/payment.tsx","containers/payment.tsx","components/home/manager/view-home/info.tsx","components/home/manager/view-home/members.tsx","components/home/manager/view-home/vehicles.tsx","components/home/manager/view-home/servants.tsx","components/home/manager/view-home/tickets.tsx","components/home/manager/view-home/visitors.tsx","components/home/manager/view-home/payments.tsx","components/home/manager/view-home/documents.tsx","components/home/manager/view-home/index.tsx","containers/view-home.tsx","store/actions/poll.ts","util/calc.ts","components/home/manager/poll.tsx","components/home/poll.tsx","components/home/outing.tsx","components/home/notification.tsx","containers/notice.tsx","components/home/help.tsx","containers/help.tsx","components/not-found/index.tsx","theme/scripts/sidebar/index.js","theme/scripts/popover/index.js","components/home/index.tsx","containers/home.tsx","components/app-container.tsx","containers/app-container.tsx","App.tsx","theme/scripts/utils/index.js","services/init-fcm.js","serviceWorker.js","services/register-sw.js","index.tsx"],"names":["actionTypes","handleLoginResult","state","payload","Object","objectSpread","isLoggedIn","handleRoleResult","role","handleHomeIndexResult","homeIndex","handleResult","_id","number","name","age","gender","mobileNo","emailId","type","image","createdBy","updatedBy","homes","client","data","isUpToDate","isError","errorMessage","State","combineReducers","AppUser","arguments","length","undefined","action","SET_LOGIN_STATUS","SET_ROLE","SET_HOME_INDEX","RESET","User","description","address","upi","id","rep","repType","LOAD_USER","Ads","LOAD_ADS","Polls","LOAD_POLLS","Outings","LOAD_OUTINGS","Documents","LOAD_DOCUMENTS","Users","LOAD_USERS","Homes","LOAD_HOMES","UserHomes","LOAD_USERHOMES","Tickets","LOAD_TICKETS","Blocks","LOAD_BLOCKS","GateNo","SET_GATE_NO","store","createStore","compose","applyMiddleware","reduxThunk","API_BASE_PATH","IMAGE_BASE_PATH","FILE_BASE_PATH","DEFAULT_DATE_FORMAT","DEFAULT_DATE_TIME_FORMAT","COLOR","ROLE","USER","ADMIN","GATEKEEPER","MANAGER","MONTH","title","value","isNN","_input","isNNObject","json2Str","JSON","stringify","ex","jsError","generateUUID","d","Date","getTime","performance","now","replace","c","r","Math","random","floor","toString","_ex","_funName","console","log","onEnter","_e","_callback","keyCode","which","Api","url","get","callback","_this","fetch","post","delete","patch","put","upload","_callee","token","clientId","userId","formData","regenerator_default","a","wrap","_context","prev","next","getAS","sent","FormData","append","file","method","headers","Accept","x-access-token","client-id","user-id","body","then","response","status","sessionStorage","removeItem","window","location","reload","json","message","catch","error","stop","_callee2","key","_context2","getItem","abrupt","t0","_callee3","_context3","Content-Type","logout","dispatch","setLoginResult","setHomeIndexResult","resetState","setGateNoResult","gateNo","setRoleResult","getUserResult","getUsersResult","getHomesResult","getBlockResult","View","styled","div","_templateObject","ScrollView","_templateObject2","Image","img","_templateObject3","TextInput","input","_templateObject4","TextArea","textarea","_templateObject5","Picker","select","_templateObject6","Text","label","_templateObject7","common_button","props","onPress","className","style","react","onClick","spinner","visible","Images","logo","workInProgress","username","password","mobile","email","loading","avatarMale","avatarFemale","styles","Toast","success","msg","toast","fail","warn","warning","info","show","bgColor","textColor","radio_button","isActive","text","checked","htmlFor","container","head","flexDirection","alignContent","backgroundColor","paddingLeft","paddingRight","paddingTop","paddingBottom","flex","alignSelf","width","font-weight","fontSize","color","close","marginBottom","row","marginTop","ele","radio","borderColor","borderWidth","display","radioText","radioActive","radioActiveText","saveBtn","SignUp","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSave","clientCode","member","toLowerCase","onSignUp","result","setState","bind","assertThisInitialized","_this2","modelStyles","placeholder","CommonStyles","onChange","event","target","React","Index","onLogin","userName","isLoading","onForgetPassword","isForgetPass","isSignUp","mobileNumber","onForgetPassSubmit","onCreateAccount","maxWidth","alignItems","justifyContent","src","height","txtIcon","txt","onKeyPress","e","textAlign","sign_up_SignUp","float","borderStyle","borderRadius","margin","cursor","marginLeft","resizeMode","top","Login","connect","ownProps","fcm_token","localStorage","controller","setItem","rememberMe","fcmToken","os","osVersion","login","forgetPassword","assign","signup","Page","title_bar","href","appUser","user","data-toggle","map","i","index","onHomeChange","indexOf","split","react_router_dom","to","toLocaleUpperCase","alt","confirmAlert","buttons","onLogout","NAV","icon","path","roles","child","isMRole","initScrollBar","scrollables","$","each","el","PerfectScrollbar","nav_bar","useEffect","react_default","createElement","padding","tab_bar","loadAll","appClientId","homeId","sCallback","fCallback","save","search","MyDues","getTotalDue","totalDue","home","payments","amountPaid","transactions","filter","t","j","isSuccess","amount","payNow","paymentId","transactionRef","payment","successCallback","Status","responseCode","transaction","txnRef","txnId","reason","onPaymentUpdate","updateResult","clearTxn","txnFailure","failureCallback","fontWeight","p","myDueFirst","myDue","m","forMonth","forYear","borderLeftColor","borderLeftWidth","toDateString","_format","moment","format","toDateTimeString","History","activeTab","slice","paidDate","createdAt","custom_list","Home","history","push","members","vehicles","my_dues_MyDues","onPaymentUpload","history_History","manager_home","users","blocks","marginRight","content","common_checkbox","borderBottomColor","borderBottomWidth","border-bottom-style","VisitorsView","onToggleZoomImage","isZoom","isZoomImage","zoomImage","searchText","homeNumber","passCode","pageStyles","isSearch","onActiveChange","cardContainer","card","isEntered","isExit","personCount","vehicleType","vehicleNo","isApproved","isRejected","approvedBy","approvedAt","enteredBy","enteredAt","exitBy","exitGateNo","exitAt","arriveAt","getDate","toDate","onExit","onApprove","onReject","onRemove","onSelect","index_es","open","onClose","defaultProps","NewVisitor","onImageSelect","files","arrFileName","fileName","onUpload","showHomes","arriveAtTime","setHours","parseInt","visitor","isUser","onToggleLoading","onClear","homeSearchText","searchResult","isShowSearch","onSearch","overflow","entry_default","minDate","maxDate","add","date","dist_entry_default","time","maxLength","popupStyles","visitors_view_VisitorsView","viewAllVisitors","viewAllTakeaways","onBlur","onGateNoChanged","new_visitor_NewVisitor","onSaveVisitor","onSearchVisitor","Dashboard","home_Home","gatekeeper_home_Home","ads","outings","tickets","setGateNo","approvalid","paymentIndex","findIndex","update","saveVisitor","fileUpload","searchVisitor","foundIndex","breadcrum","link","Members","isEdit","remove","NewMember","Vehicles","vehicle","NewVehicle","loadAllByHome","cmntsCnr","cmntsHdr","cmntsHdrTxt","cmntsCnt","cmntCnr","borderTopWidth","borderTopColor","cmntCnrFst","cmntHdr","cmntCnt","addCmntCnt","newCmnt","Servants","servant","viewId","takeaways","takeawayTitle","takeawayDesc","editTakeawayId","editTakeawayTitle","editTakeawayDesc","onView","onCreateTakeaway","updatedAt","unshift","onUpdateTakeaway","takeawayIndex","onRemoveTakeaway","servantId","onLoad","_this3","commonStyles","commentsStyles","createTakeaway","removeTakeaway","Takeaways","AllTakeaways","loadActiveTakeaways","exitTakeaway","NewServant","arrTickets","getTicketsResult","_homeId","comments","ticket","comment","editCommentId","editComment","onResolve","onStart","onAddComment","createdByName","onUpdateComment","onRemoveComment","ticketId","resolve","start","ticketIndex","commentIndex","addComment","removeComment","NewTicket","Visitors","loadData","v","isRequestNew","approve","reject","ChangePassword","onUpdate","newPassword","changePassword","_useState","useState","_useState2","slicedToArray","setLoading","_useState3","_useState4","setPassword","_useState5","_useState6","setNewPassword","_useState7","_useState8","confirmNewPassword","setConfirmNewPassword","policyResult","anUpperCase","aLowerCase","aNumber","aSpecial","numUpper","numLower","numNums","numSpecials","test","passwordPolicyCheck","MyProfile","updateProfile","MyRole","updateRole","getAdResult","ad","NewAd","getHomes","userHomes","homeIds","uh","h","toLocaleLowerCase","memberIds","searchResultIndex","removeByAM","load","getUsers","userIds","u","mListCnr","mListActiveRow","mListRow","EditUser","isAdmin","isManager","isGatekeeper","match","params","isApprove","onToggleHomeModel","isShow","isShowHomes","mlistStyles","maxHeight","isAM","saveByAM","ApproveUsers","accountController","loadWFAUsers","EditHome","blockId","_blockId","bedRoom","parking","onToggleUserModel","isShowUsers","onCheckNumberAvail","checkNumberAvail","AllVisitors","enter","exit","Notification","onPush","notification","getOutingResult","NewOuting","fromDate","outing","place","isReturned","datePickerType","datePickerDate","getDocumentResult","MyDocuments","onFileSelect","document","documents","ho","rel","EditBlock","homeCount","b","block","forEach","concat","PaymentForm","isAllHome","month","year","getMonth","getFullYear","PaymentHistory","uPaymentId","uAmount","uDescription","pData","isShowUpdateModel","mode","Payment","payment_form_PaymentForm","payment_history_PaymentHistory","updatePay","Info","_this$props","blockName","Payments","getAmountPaid","myStyles","ViewHome","toggleLoading","info_Info","view_home_members_Members","onLoadMembers","view_home_vehicles_Vehicles","onLoadVehicles","view_home_servants_Servants","onLoadServants","view_home_tickets_Tickets","onLoadTickets","view_home_visitors_Visitors","onLoadVisitors","payments_Payments","onLoadPayments","view_home_documents_Documents","onLoadDocuments","loadMembers","loadVehicles","loadServants","loadTickets","loadVisitors","loadPayments","loadDocuments","getPollResult","percentage","_partialValue","_totalValue","Poll","topic","pollOption","po","poll","isAllowMultiple","isOneVotePerFlat","isAnonymous","options","polls","showVotePoll","loadVotes","votes","poi","option","sort","vo","voi","borderBottomStyle","newOptions","onSelectOption","optionId","votePollId","_memberId","onVote","pollId","currentDate","o","oi","Outing","onReturnBack","outingId","returnedAt","isShowPoll","onLoadAds","onLoadPoll","onLoadOuting","poll_Poll","onSavePoll","onRemovePoll","home_poll_Poll","outing_Outing","remainders","complaints","Notice","loadAllAds","userRole","loadAllPools","Id","UserId","lstPoll","pollIndex","vote","loadAllOutings","retunBack","listItem","Help","not_found","initSideBar","on","$this","parent","hasClass","children","slideUp","removeClass","slideDown","addClass","find","attr","substr","pathname","toggleClass","preventDefault","click","setTimeout","dispatchEvent","EVENT","initPopover","popover","tooltip","isGateKeeper","getProfile","react_router","exact","component","CDashboard","CMembers","CNewMember","CVehicles","CNewVehicle","CServants","CNewServant","CTickets","CNewTicket","CVisitors","CNewOuting","CAds","CNewAd","CNotification","CUsers","CEditUser","CApproveUsers","CHomes","CViewHome","CEditHome","CBlocks","CEditBlock","CPayment","CAllVisitors","CAllTakeaways","CNotice","CMyProfile","CMyRole","CMyDocuments","CChangePassword","CHelp","NotFound","mresult","bresult","hresult","homeChange","AppContainer","setLogin","containers_home_Home","App","createEvent","initUIEvent","addEventListener","not","host","messaging","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","usePublicVapidKey","requestPermission","asyncToGenerator","mark","getToken","err","fcmInit","es","containers_app_container_AppContainer","lib","ToastsStore","position","ToastsContainerPosition","TOP_RIGHT","Component","Boolean","hostname","navigator","serviceWorker","register","registration","scope","ReactDOM","render","App_App","getElementById","ready","unregister"],"mappings":"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","file":"static/js/main.bd09aaf3.chunk.js","sourcesContent":["export enum actionTypes{\r\n    SET_LOGIN_STATUS,\r\n    SET_ROLE,\r\n    SET_HOME_INDEX,\r\n    LOAD_USER,\r\n    LOAD_ADS,\r\n    LOAD_POLLS,\r\n    LOAD_OUTINGS,\r\n    LOAD_DOCUMENTS,\r\n    LOAD_USERS,\r\n    LOAD_HOMES,\r\n    LOAD_USERHOMES,\r\n    LOAD_TICKETS,\r\n    SAVE_MEMBER,\r\n    LOAD_BLOCKS,\r\n    SET_GATE_NO,\r\n    RESET\r\n};","import { actionTypes } from '../action-types';\r\nimport { IAppUser } from '../../models/app-user/app-user';\r\n\r\nconst createEmptyResult = (): IAppUser => ({\r\n    isLoggedIn: false,\r\n    role: '',\r\n    homeIndex: -1\r\n});\r\n\r\nexport const AppUser = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_LOGIN_STATUS:\r\n            return handleLoginResult(state, action.payload);\r\n        case actionTypes.SET_ROLE:\r\n            return handleRoleResult(state, action.payload);\r\n        case actionTypes.SET_HOME_INDEX:\r\n            return handleHomeIndexResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleLoginResult = (state: IAppUser, payload: boolean): IAppUser => {\r\n    return {\r\n        ...state,\r\n        isLoggedIn: payload\r\n    };\r\n};\r\n\r\nconst handleRoleResult = (state: IAppUser, payload: string): IAppUser => {\r\n    return {\r\n        ...state,\r\n        role: payload\r\n    };\r\n};\r\n\r\nconst handleHomeIndexResult = (state: IAppUser, payload: number): IAppUser => {\r\n    return {\r\n        ...state,\r\n        homeIndex: payload\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\n\r\nconst createEmptyResult = (): IUser => ({\r\n    _id: '',\r\n    number: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    type: '',\r\n    role: '',\r\n    image: '',\r\n    createdBy: '',\r\n    updatedBy: '',\r\n    homes: [],\r\n    client: {\r\n        _id: '',\r\n        name: '',\r\n        description: '',\r\n        address: '',\r\n        upi: {\r\n            id: '',\r\n            name: ''\r\n        },\r\n        rep: {\r\n            name: '',\r\n            mobileNo: '',\r\n            emailId: '',\r\n            repType: ''\r\n        }\r\n    }\r\n});\r\n\r\nexport const User = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USER:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUser, payload: IUser): IUser => {\r\n    return {\r\n        ...state,\r\n        _id: payload._id,\r\n        number: payload.number,\r\n        name: payload.name,\r\n        age: payload.age,\r\n        gender: payload.gender,\r\n        mobileNo: payload.mobileNo,\r\n        emailId: payload.emailId,\r\n        type: payload.type,\r\n        role: payload.role,\r\n        image: payload.image,\r\n        createdBy: payload.createdBy,\r\n        updatedBy: payload.updatedBy,\r\n        homes: payload.homes,\r\n        client: payload.client\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IAds } from '../../models/store/ads';\r\n\r\nconst createEmptyResult = (): IAds => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Ads = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_ADS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IAds, payload: IAds): IAds => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IPolls } from '../../models/store/polls';\r\n\r\nconst createEmptyResult = (): IPolls => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Polls = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_POLLS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IPolls, payload: IPolls): IPolls => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IOutings } from '../../models/store/outings';\r\n\r\nconst createEmptyResult = (): IOutings => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Outings = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_OUTINGS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IOutings, payload: IOutings): IOutings => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IDocuments } from '../../models/store/documents';\r\n\r\nconst createEmptyResult = (): IDocuments => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Documents = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_DOCUMENTS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IDocuments, payload: IDocuments): IDocuments => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUsers } from '../../models/store/users';\r\n\r\nconst createEmptyResult = (): IUsers => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Users = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUsers, payload: IUsers): IUsers => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IHomes } from '../../models/store/homes';\r\n\r\nconst createEmptyResult = (): IHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Homes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_HOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IHomes, payload: IHomes): IHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUserHomes } from '../../models/store/user-homes';\r\n\r\nconst createEmptyResult = (): IUserHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const UserHomes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERHOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUserHomes, payload: IUserHomes): IUserHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\n\r\nconst createEmptyResult = (): ITickets => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Tickets = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_TICKETS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: ITickets, payload: ITickets): ITickets => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IBlocks } from '../../models/store/blocks';\r\n\r\nconst createEmptyResult = (): IBlocks => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Blocks = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_BLOCKS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IBlocks, payload: IBlocks): IBlocks => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\n\r\nexport const GateNo = (state = '', action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_GATE_NO:\r\n            return handleResult(state, action.payload);\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: string, payload: string): string => {\r\n    return payload;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { IAppState } from '../../models/app-state';\r\nimport { AppUser } from './app-user';\r\nimport { User } from './user';\r\nimport { Ads } from './ads';\r\nimport { Polls } from './polls';\r\nimport { Outings } from './outings';\r\nimport { Documents } from './documents';\r\nimport { Users } from './users';\r\nimport { Homes } from './homes';\r\nimport { UserHomes } from './user-homes';\r\nimport { Tickets } from './tickets';\r\nimport { Blocks } from './blocks';\r\nimport { GateNo } from './gate-no';\r\n\r\nexport const State = combineReducers<IAppState>({\r\n    AppUser: AppUser,\r\n    User: User,\r\n    Ads: Ads,\r\n    Polls: Polls,\r\n    Outings: Outings,\r\n    Documents: Documents,\r\n    Users: Users,\r\n    Homes: Homes,\r\n    UserHomes: UserHomes,\r\n    Tickets: Tickets,\r\n    Blocks: Blocks,\r\n    GateNo: GateNo\r\n});\r\n","import { Store, createStore, compose, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport { State } from './reducers/state';\r\nimport { IAppState } from '../models/app-state';\r\n\r\nexport const store: Store<IAppState> = createStore(\r\n  State,\r\n  compose(\r\n    applyMiddleware(reduxThunk),\r\n  )\r\n);","// const API_BASE_PATH = 'http://localhost:3001/';\r\nconst API_BASE_PATH = 'https://nestadmin.herokuapp.com/';\r\n\r\nexport const API_PATH = API_BASE_PATH + 'api/';\r\nexport const IMAGE_BASE_PATH = API_BASE_PATH + 'image/';\r\nexport const FILE_BASE_PATH = API_BASE_PATH + 'file/';\r\nexport const DEFAULT_DATE_FORMAT = 'DD/MMM/YYYY';\r\nexport const DEFAULT_DATE_TIME_FORMAT = 'DD/MMM/YYYY hh:mm A';\r\nexport const COLOR = {\r\n    PRIMARY: '#0078d7',\r\n    SECONDARY: '#0067b9',\r\n    INVERSE: '#FFFFFF',\r\n    ERROR: '#FF0000',\r\n    SUCCESS: '#008000',\r\n    ICON_BTN_UNDERLAY: '#cce1f1',\r\n    CARD_UNDERLAY: '#cce1f1',\r\n    TAB_UNDERLAY: '#cce1f1',\r\n    SETTING_UNDERLAY: '#cce1f1',\r\n    HR_COLOR: '#e1e1e1',\r\n    FONT_COLOR1: '#8e8e93',\r\n    FONT_COLOR2: '#000000',\r\n    FONT_COLOR3: '#FFFFFF',\r\n    MODAL_BG: '#cce1f1'\r\n};\r\nexport const ROLE = {\r\n    USER: 'USER',\r\n    ADMIN: 'ADMIN',\r\n    GATEKEEPER: 'GATEKEEPER',\r\n    MANAGER: 'MANAGER'\r\n};\r\nexport const MONTH = [\r\n    {title: 'JAN', value: 0},\r\n    {title: 'FEB', value: 1},\r\n    {title: 'MAR', value: 2},\r\n    {title: 'APR', value: 3},\r\n    {title: 'MAY', value: 4},\r\n    {title: 'JUN', value: 5},\r\n    {title: 'JUL', value: 6},\r\n    {title: 'AUG', value: 7},\r\n    {title: 'SEP', value: 8},\r\n    {title: 'OCT', value: 9},\r\n    {title: 'NOV', value: 10},\r\n    {title: 'DEC', value: 11}\r\n]","//import { config as apiConfig } from '../store/api/config';\r\n\r\nexport function parseJSON(response: any) {\r\n     return response.json()\r\n};\r\n\r\nexport function isNN(_input: any) { \r\n  return (isNNObject(_input) && _input.length > 0) \r\n};\r\n\r\nexport function isNNObject(_input: any) { \r\n  return (_input !== null && _input !== undefined) \r\n};\r\n\r\nexport function str2Json(_input: string) { \r\n  try {\r\n    return JSON.parse(isNN(_input) ? _input : \"{}\"); \r\n  } catch (ex) { \r\n    jsError(ex, \"String2JSON\"); \r\n    return {}; \r\n  } \r\n};\r\n\r\nexport function json2Str(_input: any) { \r\n  try {\r\n    return (isNNObject(_input) ? JSON.stringify(_input) : \"\");\r\n  } catch (ex) { \r\n    jsError(ex, \"JSON2String\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function getBaseURL(_isApi: boolean) { \r\n  try {\r\n    let baseURL: string = \"\";\r\n    let arrURL = window.location.href.split(\"/\");\r\n    if(isNNObject(arrURL) && arrURL.length > 2){\r\n      if(_isApi){\r\n        //baseURL = arrURL[0] + \"//\" + arrURL[2] + apiConfig.baseURL;\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2];\r\n      }else{\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2] + \"/\";\r\n      }\r\n    }else{\r\n      baseURL = window.location.href;\r\n    }\r\n    return baseURL;\r\n  } catch (ex) { \r\n    jsError(ex, \"getBaseURL\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function generateUUID() { // Public Domain/MIT\r\n  var d = new Date().getTime();\r\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n      d += performance.now(); //use high-precision timer if available\r\n  }\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      var r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n}\r\n\r\nexport function jsError(_ex: any, _funName: string) {\r\n   //alert(\"Javascript Error\\n------------------\\nName: \" + _ex.name + \"\\nMessage: \" + _ex.message + \"\\nFunction: \" + _funName + \"\\nFile: \" + _ex.fileName + \"\\nLine Number: \" + _ex.lineNumber + \"\\nColumn Number: \" + _ex.columnNumber); \r\n   console.log(\"Error:\" + _funName + \":\" + _ex);\r\n};\r\n\r\nexport function onEnter(_e: any, _callback: Function) {\r\n  let code = (_e.keyCode ? _e.keyCode : _e.which);\r\n  if(code === 13 && typeof _callback === 'function') {\r\n    _callback();\r\n  }\r\n};","// import { AsyncStorage } from 'react-native';\r\nimport { API_PATH } from \"../../constants\";\r\nimport { isNNObject, json2Str, isNN } from \"../../util/index\";\r\n\r\nexport default class Api {\r\n    private url: string = API_PATH;\r\n     \r\n    // private url: string =  \"https://192.168.43.80:45456/api/\";\r\n    // private url: string =  \"http://192.168.43.80:45455/api/\";\r\n\r\n    /**\r\n    * HTTP GET operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public get = (url: string, callback: Function) => {\r\n        this.fetch(url, 'GET', callback);\r\n    };\r\n\r\n    /**\r\n    * HTTP POST operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public post = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'POST', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP DELETE operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public delete = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'DELETE', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PATCH operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public patch = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PATCH', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PUT operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public put = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PUT', callback, data);\r\n    };\r\n\r\n    public upload = async(url: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        \r\n        var formData = new FormData();\r\n        formData.append('file', data.file, data.name);\r\n        formData.append('name', data.name);\r\n\r\n        fetch(this.url + url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    // 'Content-Type': 'multipart/form-data',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: formData,\r\n            }).then(response => {\r\n                if(response && response.status && response.status === 401){\r\n                    sessionStorage.removeItem('auth_token');\r\n                    sessionStorage.removeItem('user_id');\r\n                    sessionStorage.removeItem('client_id');\r\n                    window.location.reload();\r\n                }\r\n                return response.json();\r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n\r\n/*\r\n    private fetch = (url: string, method: string, callback: Function, data?: any) => {\r\n        AsyncStorage.getItem('auth_token').then((token) => {\r\n            AsyncStorage.getItem('user_id').then((userId) => {\r\n                this.next(url, 'PUT', token, userId, callback, data);\r\n            }).catch(ex => {\r\n                this.next(url, 'PUT', token, '', callback, data);\r\n            }); \r\n        }).catch(ex => {\r\n            this.next(url, 'PUT', '', '', callback, data);\r\n        });\r\n    };\r\n    */\r\n\r\n    private getAS = async (key: string) => {\r\n        try {\r\n            // return await AsyncStorage.getItem(key);\r\n            return await sessionStorage.getItem(key);\r\n        } catch (error) {\r\n            return '';\r\n        }\r\n    };\r\n    \r\n    private fetch = async(url: string, method: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        fetch(this.url + url, \r\n            {\r\n                method: method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: isNNObject(data) ? json2Str(data) : null,\r\n            }).then(response => {\r\n                if(response && response.status && response.status === 401){\r\n                    sessionStorage.removeItem('auth_token');\r\n                    sessionStorage.removeItem('user_id');\r\n                    sessionStorage.removeItem('client_id');\r\n                    window.location.reload();\r\n                }\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n    private callback = (callback: Function, data: any, message: any) => {\r\n        // console.log('message: '+ message);\r\n        if(isNNObject(callback) && typeof callback == \"function\"){\r\n            callback(data, message);\r\n        }\r\n    };\r\n\r\n    /*\r\n        private handleResult = (data: any) => {\r\n        if (data) {\r\n            if (data.message) {\r\n                return null;\r\n            } else {\r\n                return data;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private onBadRequest = () => {\r\n       \r\n    };\r\n    \r\n    private onError = () => {\r\n        \r\n        // alert('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n        // console.error('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n         \r\n    };\r\n    \r\n    private onUnAuthorized = () => {\r\n        // alert('UnAuthorized Request');\r\n                 \r\n    };\r\n    */\r\n};","// import { AsyncStorage, Platform } from 'react-native';\r\nimport { actionTypes } from '../action-types';\r\nimport Api from '../api/api';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IUsers } from '../../models/store/users';\r\n// import { IAd } from '../../models/ad/ad';\r\n// import { IAds } from '../../models/store/ads';\r\n// import { IPoll } from '../../models/poll/poll';\r\n// import { IPolls } from '../../models/store/polls';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IHomes } from '../../models/store/homes';\r\n// import { IUserHome } from '../../models/user-home/user-home';\r\n// import { IUserHomes } from '../../models/store/user-homes';\r\nimport { IMember } from '../../models/home';\r\n// import { ITicket } from '../../models/home/ticket';\r\n// import { ITickets } from '../../models/store/tickets';\r\nimport { IBlock } from '../../models/block';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'account/';\r\n\r\nexport const login = (userName: string, password: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  let fcm_token: string | null = localStorage.getItem('fcm_token');\r\n    new Api().post(controller + 'login', (result: any, message: string) => {\r\n      // console.log('OUT: ', result);\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.token) && isNN(result.data.userId))\r\n      {\r\n        // console.log('IN: ', result);\r\n        try {\r\n          // console.log(result.token);\r\n          sessionStorage.setItem('auth_token', result.data.token);\r\n          sessionStorage.setItem('client_id', result.data.clientId);\r\n          sessionStorage.setItem('user_id', result.data.userId);\r\n        } catch (error) {\r\n          // console.error('AsyncStorage error: ' + error.message);\r\n        }\r\n        dispatch(setLoginResult(true));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, {\r\n      userName: userName,\r\n      password: password,\r\n      rememberMe: false,\r\n      fcmToken: fcm_token,\r\n      os: 'web', // Platform.OS, ////TODO\r\n      osVersion: 'web' // Platform.Version ////TODO\r\n    });\r\n};\r\n\r\nexport const getProfile = (callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 'profile', (result: any, message: string) => {\r\n    // console.log('OUT: ', result);\r\n    if(isNNObject(result) && isNNObject(result.data) && isNN(result.data._id))\r\n    {\r\n      dispatch(getUserResult(result.data as IUser));\r\n      dispatch(setHomeIndexResult(isNN(result.data.homes) ? 0 : -1));\r\n      let roles = result.data.role.split(',');\r\n      if(isNN(roles)){\r\n        dispatch(setRoleResult(roles[0]));\r\n      }\r\n      // dispatch(getAdResult(((isNNObject(result.data.ad) && result.data.ad instanceof Array) ? result.data.ad as Array<IAd> : []), true, false, ''));\r\n      // dispatch(getPollResult(((isNNObject(result.data.poll) && result.data.poll instanceof Array) ? result.data.poll as Array<IPoll> : []), true, false, ''));\r\n    \r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0){\r\n        new Api().get('members', (mresult: any, message: string) => {\r\n          if (isNNObject(mresult) && isNN(mresult.data)) {\r\n            dispatch(getUsersResult(mresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(mresult.message) ? mresult.message : 'Failed to load Members.');\r\n          }\r\n        });\r\n        /*\r\n        loadAllMember(result.data.client._id, (members: Array<IMember>) => {\r\n          console.log('members: ', members)\r\n          dispatch(getUsersResult(members, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n        new Api().get('blocks/' + result.data.client._id, (bresult: any, message: string) => {\r\n          if (isNNObject(bresult) && isNN(bresult.data)) {\r\n            dispatch(getBlockResult(bresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n      }\r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0 || roles.indexOf(ROLE.GATEKEEPER) >= 0){\r\n        new Api().get('homes/' + result.data.client._id, (hresult: any, message: string) => {\r\n          if (isNNObject(hresult) && isNN(hresult.data)) {\r\n            hresult.data.forEach((h: any) => {\r\n              h.memberIds = h.members;\r\n              delete h.members;\r\n            });\r\n            dispatch(getHomesResult(hresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n        \r\n        /*\r\n        loadAllHome(result.data.client._id, (homes: Array<IHome>) => {\r\n          console.log('homes: ', homes)\r\n          dispatch(getHomesResult(homes, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n      }\r\n      \r\n      // dispatch(getUsersResult(((isNNObject(result.data.users) && result.data.users instanceof Array) ? result.data.users as Array<IUser> : []), true, false, ''));\r\n      // dispatch(getHomesResult(((isNNObject(result.data.homes) && result.data.homes instanceof Array) ? result.data.homes as Array<IHome> : []), true, false, ''));\r\n      // dispatch(getUserHomesResult(((isNNObject(result.data.userHomes) && result.data.userHomes instanceof Array) ? result.data.userHomes as Array<IUserHome> : []), true, false, ''));\r\n      \r\n      // dispatch(getHomesResult([], true, false, ''));\r\n      // dispatch(getUserHomesResult([], true, false, ''));\r\n      // dispatch(getTicketsResult(((isNNObject(result.data.tickets) && result.data.tickets instanceof Array) ? result.data.tickets as Array<ITicket> : []), true, false, ''));\r\n      //dispatch(setLoginResult(true));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const homeChange = (index: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(setHomeIndexResult(index));\r\n  callback(true);\r\n};\r\n\r\nexport const changePassword = (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'changepassword/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    password: password,\r\n    newPassword: newPassword\r\n  });\r\n};\r\n\r\nexport const forgetPassword = (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'resetpassword', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.data))\r\n    {\r\n      if(result.data.data === true){\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, result.data.message);\r\n      }\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    mobileNo: mobileNumber,\r\n    emailId: email\r\n  });\r\n};\r\n\r\nexport const updateProfile = (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  new Api().put(controller + 'profile/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.name = name;\r\n      user.mobileNo = mobileNo;\r\n      user.emailId = emailId;\r\n\r\n      dispatch(getUserResult(user));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    name: name,\r\n    mobileNo: mobileNo,\r\n    emailId: emailId\r\n  });\r\n};\r\n\r\nexport const updateRole = (role: string, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  dispatch(setRoleResult(role));\r\n  callback(true, '');\r\n};\r\n\r\nexport const logout = (callback: (result: boolean) => void) => (dispatch: any) => {\r\n  try {\r\n    sessionStorage.removeItem('auth_token');\r\n    sessionStorage.removeItem('user_id');\r\n    sessionStorage.removeItem('client_id');\r\n    dispatch(setLoginResult(false));\r\n    dispatch(setHomeIndexResult(-1));\r\n    dispatch(resetState());\r\n    callback(true);\r\n  } catch (error) {\r\n    // console.error('AsyncStorage error: ' + error.message);\r\n    callback(false);\r\n  }\r\n};\r\n\r\nexport const setLogin = (isLoggedIn: boolean) => (dispatch: any) => {\r\n  dispatch(setLoginResult(isLoggedIn));\r\n};\r\n\r\nexport const signup = (data: IMember, clientCode: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    clientCode: clientCode,\r\n    password: data.mobileNo\r\n  });\r\n  new Api().post(controller + 'signup', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const setGateNo = (gateNo: string) => (dispatch: any) => {\r\n  dispatch(setGateNoResult(gateNo));\r\n};\r\n\r\nconst setGateNoResult = (gateNo: string) => ({\r\n  type: actionTypes.SET_GATE_NO,\r\n  payload: gateNo\r\n});\r\nconst setLoginResult = (data: boolean) => ({\r\n  type: actionTypes.SET_LOGIN_STATUS,\r\n  payload: data\r\n});\r\nconst setRoleResult = (data: string) => ({\r\n  type: actionTypes.SET_ROLE,\r\n  payload: data\r\n});\r\nconst setHomeIndexResult = (data: number) => ({\r\n  type: actionTypes.SET_HOME_INDEX,\r\n  payload: data\r\n});\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n/*\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});\r\n*/\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});\r\n/*\r\nconst getUserHomesResult = (data: Array<IUserHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERHOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUserHomes\r\n});\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});\r\n*/\r\nconst resetState = () => ({\r\n  type: actionTypes.RESET\r\n});","import styled from 'styled-components';\r\n\r\nexport const View = styled.div`\r\n`;\r\n\r\nexport const ScrollView = styled.div`\r\noverflow: auto;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n`;\r\n\r\nexport const Picker = styled.select`\r\n`;\r\n\r\nexport const Text = styled.label`\r\n`;\r\n\r\n// export const Button = styled.button`\r\n//   cursor: pointer;\r\n//   background: transparent;\r\n//   font-size: 16px;\r\n//   border-radius: 3px;\r\n//   color: ${props => (props.primary ? 'violet' : 'palevioletred')};\r\n//   border: ${props =>\r\n//     props.primary ? '2px solid violet' : '2px solid palevioletred'};\r\n//   margin: 0 1em;\r\n//   padding: 0.25em 1em;\r\n//   transition: 0.5s all ease-out;\r\n\r\n//   &:hover {\r\n//     color: white;\r\n//     background-color: ${props =>\r\n//       props.primary ? 'violet' : 'palevioletred'};\r\n//   }\r\n// `;","import * as React from 'react';\r\n\r\ninterface IProps {\r\n  title: string,\r\n  onPress: () => void,\r\n  className?: string,\r\n  style? : {}\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const {title, onPress, className, style} = props;\r\n  return (\r\n    <input type='button' className={'btn' + (className ? className : ' btn-primary')} value={title} onClick={() => onPress()} style={{...style}} />\r\n  );\r\n}","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\n\r\ninterface IProps {\r\n  visible: boolean,\r\n  text?: string\r\n};\r\n\r\nexport default (props: IProps) => {\r\n    return (\r\n      props.visible ?\r\n      <View id='loader'>\r\n        <View className=\"spinner\"></View>\r\n      </View>\r\n      :\r\n      null\r\n      // <View>\r\n      //   <View className='loader-overlay'></View>\r\n      //   <View className='loader'>\r\n      //     <Image className='' src={Images.loading} style={{width: '50px', height: '50px'}} />\r\n      //     <View style={{color: COLOR.SECONDARY, fontWeight: 'bold', marginTop: 5}}>{this.props.text}</View>\r\n      //   </View>\r\n      // </View>\r\n    );\r\n};","import { IMAGE_BASE_PATH } from '../constants/index';\r\n\r\nexport default class Images {\r\n    static readonly logo = IMAGE_BASE_PATH + 'logo.png';\r\n    static readonly workInProgress = IMAGE_BASE_PATH + 'work-in-progress.png';\r\n    static readonly username = IMAGE_BASE_PATH + 'username.png';\r\n    static readonly password = IMAGE_BASE_PATH + 'password.png';\r\n    static readonly mobile = IMAGE_BASE_PATH + 'mobile.png';\r\n    static readonly email = IMAGE_BASE_PATH + 'email.png';\r\n    static readonly loading = IMAGE_BASE_PATH + 'loading.gif';\r\n    static readonly avatarMale = IMAGE_BASE_PATH + 'avatar-male.png';\r\n    static readonly avatarFemale = IMAGE_BASE_PATH + 'avatar-female.gif';\r\n};","export const styles = {\r\n  textInput: {\r\n    // borderBottomWidth: 1,\r\n    // borderBottomColor: COLOR.FONT_COLOR2,\r\n    // paddingBottom: 5\r\n    }\r\n  };\r\n  ","import {ToastsStore as toast} from 'react-toasts';\r\n\r\n class Toast {\r\n   static success = (msg: string) => {\r\n       // Toast.show(msg, '#003300', '#FFFFFF');\r\n       toast.success(msg);\r\n    }\r\n    static fail = (msg: string) => {\r\n        // Toast.show(msg, '#b30000', '#FFFFFF');\r\n        toast.error(msg);\r\n    }\r\n    static warn = (msg: string) => {\r\n        // Toast.show(msg, '#e68a00', '#FFFFFF');\r\n        toast.warning(msg);\r\n    }\r\n    static info = (msg: string) => {\r\n        // Toast.show(msg, '#000080', '#FFFFFF');\r\n        toast.info(msg);\r\n    }\r\n    static show = (msg: string, bgColor: string, textColor: string) => {\r\n\r\n        toast.info(msg);\r\n        \r\n        /*\r\n        // Add a Toast on screen.\r\n        RNToast.show(msg, {\r\n            duration: RNToast.durations.SHORT,\r\n            position: RNToast.positions.TOP,\r\n            shadow: true,\r\n            animation: true,\r\n            hideOnPress: true,\r\n            delay: 0,\r\n            backgroundColor: bgColor,\r\n            textColor: textColor,\r\n            onShow: () => {\r\n                // calls on toast\\`s appear animation start\r\n            },\r\n            onShown: () => {\r\n                // calls on toast\\`s appear animation end.\r\n            },\r\n            onHide: () => {\r\n                // calls on toast\\`s hide animation start.\r\n            },\r\n            onHidden: () => {\r\n                // calls on toast\\`s hide animation end.\r\n            }\r\n        });\r\n        */\r\n    }\r\n};\r\n\r\nexport default Toast;","import * as React from 'react';\r\nimport { isNN, generateUUID } from '../../util';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  onPress?: () => void,\r\n  key?: string,\r\n  className?: string\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const {isActive, text, onPress, key, className} = props;\r\n  let id = generateUUID();\r\n  return (\r\n    <span className={'mR-10' + (className ? className : '')}>\r\n      <input type='radio' id={id} key={key} checked={isActive} onClick={onPress ? onPress : () => {}} />\r\n      {isNN(text) &&\r\n        <label htmlFor={id} className='mL-5 va-m'>{text}</label>\r\n      }\r\n    </span>\r\n  );\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    container: {\r\n    },\r\n    head: {\r\n      flexDirection: 'row',\r\n      alignContent: 'flex-start',\r\n      backgroundColor: COLOR.PRIMARY,\r\n      paddingLeft: 10,\r\n      paddingRight: 10,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    title: {\r\n      flex: 15,\r\n      alignSelf: 'flex-start',\r\n      width: 'auto',\r\n      'font-weight': 'bold',\r\n      fontSize: 20,\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    close: {\r\n      flex: 1,\r\n      alignSelf: 'flex-end',\r\n      marginBottom: 5\r\n    },\r\n    row: {\r\n      // flexDirection: 'row',\r\n      marginTop: 3,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    ele: {\r\n      flex: 1,\r\n      width: '100%'\r\n    },\r\n    radio: {\r\n      borderColor: COLOR.HR_COLOR,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioText: {\r\n      // 'font-weight': 'bold',\r\n      // color: COLOR.HR_COLOR\r\n    },\r\n    radioActive: {\r\n      backgroundColor: COLOR.PRIMARY,\r\n      borderColor: COLOR.PRIMARY,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioActiveText: {\r\n      // 'font-weight': 'bold',\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    saveBtn: {\r\n      marginTop: 5,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    }\r\n  };","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport { IMember } from '../../models/home';\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  onSignUp: (data: IMember, clientCode: string, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  id: string,\r\n  clientCode: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class SignUp extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      clientCode: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.clientCode) && isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.mobileNo) && isNN(this.state.emailId)){\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSignUp(member, this.state.clientCode, (result: boolean) => {\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              clientCode: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Submit.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View  style={{flex: 1}}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"App Code\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.clientCode} onChange={(event: any) => this.setState({clientCode: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Name\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' className='form-control' placeholder=\"Age\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n            <RadioButton isActive={this.state.gender === 'O'} text='Other' onPress={() => this.setState({gender: 'O'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Mobile Number\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Email ID\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TextInput, Image } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Images from '../images';\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, onEnter } from '../../util';\r\nimport Toast from  '../../util/toast';\r\nimport { IMember } from '../../models/home';\r\nimport SignUp from './sign-up';\r\n\r\ninterface IProps {\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => void,\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => void,\r\n    onSignUp: (data: IMember, clientCode: string, sCallback: (result: boolean, message: string) => void) => void\r\n}\r\n\r\ninterface IState{\r\n    userName: string,\r\n    password: string,\r\n    message: string,\r\n    isLoading: boolean,\r\n    isForgetPass: boolean,\r\n    isSignUp: boolean,\r\n    mobileNumber: string,\r\n    email: string\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            message: '',\r\n            isLoading: false,\r\n            isForgetPass: false,\r\n            isSignUp: false,\r\n            mobileNumber: '',\r\n            email: ''\r\n        };\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onForgetPassword = this.onForgetPassword.bind(this);\r\n        this.onForgetPassSubmit = this.onForgetPassSubmit.bind(this);\r\n        this.onCreateAccount = this.onCreateAccount.bind(this);\r\n        this.onSignUp = this.onSignUp.bind(this);\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    onLogin = () =>{\r\n        if(isNN(this.state.userName) && isNN(this.state.password)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            this.props.onLogin(this.state.userName, this.state.password, (result: boolean, message: string) => {\r\n                if(result === true){                        \r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            // Toast.warn('Enter Mobile Number and Password to continue.');\r\n            Toast.warn('Enter Mobile Number and Password to continue.');\r\n        }\r\n    };\r\n    \r\n    onForgetPassword = () =>{\r\n        this.setState({\r\n            isForgetPass: true,\r\n            isSignUp: false,\r\n            mobileNumber: '',\r\n            email: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    onForgetPassSubmit = () => {\r\n        if(isNN(this.state.mobileNumber) && isNN(this.state.email)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            this.props.onForgetPassword(this.state.mobileNumber, this.state.email.toLowerCase(), (result: boolean, message: string) => {\r\n                if(result === true){\r\n                    Toast.success('Password reset success. Login with New password sent to your Email. Change password after login.');\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: '',\r\n                        isForgetPass: false,\r\n                        isSignUp: false,\r\n                        userName: '',\r\n                        password: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            Toast.warn('Enter Mobile Number and Email to continue.');\r\n        }\r\n    };\r\n\r\n    onCreateAccount = () =>{\r\n        this.setState({\r\n            isForgetPass: false,\r\n            isSignUp: true,\r\n            mobileNumber: '',\r\n            email: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    onSignUp = (data: IMember, clientCode: string, callback: (result: boolean) => void) => {\r\n        this.setState({\r\n            message: '',\r\n            isLoading: true\r\n        });\r\n        this.props.onSignUp(data, clientCode, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                  isForgetPass: false,\r\n                  isSignUp: false,\r\n                  message: ''\r\n              });\r\n              Toast.success('Sign Up success. Please wait till Manager approves then you can access your account.');\r\n              callback(true);\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to Sign Up.');\r\n              callback(false);\r\n            }\r\n          });\r\n    };\r\n\r\n  render() {\r\n    return (\r\n            <View className='container' style={{backgroundColor: COLOR.INVERSE, maxWidth: '270px'}}>\r\n                <View className='row' style={{flexDirection: 'row', alignItems: 'center', justifyContent:'center', marginBottom: 30, marginTop: 5}}>\r\n                    <Image src={Images.logo} style={{width: 150, height: 150}}/>\r\n                </View>\r\n                {this.state.isForgetPass &&\r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <Image className='absolute' src={Images.mobile} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control' placeholder='Registered Mobile Number' value={this.state.mobileNumber} style={{...CommonStyles.textInput, ...styles.txt}}\r\n                        onChange={(event: any) => this.setState({mobileNumber: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onForgetPassSubmit);\r\n                        }} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 40}}>\r\n                        <Image className='absolute' src={Images.email} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control' placeholder='Registered Email' value={this.state.email} style={{...CommonStyles.textInput, ...styles.txt}}\r\n                        onChange={(event: any) => this.setState({email: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onForgetPassSubmit);\r\n                        }} />\r\n                    </View>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"Reset my password\" : \"Loading...\"}\r\n                    onPress={this.onForgetPassSubmit}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View style={{marginTop: 15}}>\r\n                        <Text className='pointer' onClick={() => { \r\n                            this.setState({\r\n                                isForgetPass: false,\r\n                                isSignUp: false,\r\n                                mobileNumber: \"\",\r\n                                email: \"\",\r\n                                message: \"\"\r\n                            });\r\n                         }} style={{marginBottom: 5, textAlign: 'center', color: COLOR.SECONDARY}}>Go back to Login.</Text>\r\n                    </View>\r\n                </View>\r\n                }\r\n                {this.state.isSignUp && <>\r\n                    <SignUp onSignUp={this.onSignUp} />\r\n                    <View style={{marginTop: 15, textAlign: 'center'}}>\r\n                        <Text className='pointer' onClick={() => { \r\n                            this.setState({\r\n                                isForgetPass: false,\r\n                                isSignUp: false,\r\n                                mobileNumber: \"\",\r\n                                email: \"\",\r\n                                message: \"\"\r\n                            });\r\n                         }} style={{marginBottom: 5, textAlign: 'center', color: COLOR.SECONDARY}}>Go back to Login.</Text>\r\n                    </View>\r\n                    </>\r\n                }\r\n                {(!this.state.isForgetPass && !this.state.isSignUp) && \r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <Image className='absolute' src={Images.username} style={styles.txtIcon} />\r\n                        <TextInput type='text' className='form-control' placeholder='Mobile Number' style={{...CommonStyles.textInput, ...styles.txt}} value={this.state.userName} \r\n                        onChange={(event: any) => this.setState({userName: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onLogin);\r\n                        }} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 15}}>\r\n                        <Image className='absolute' src={Images.password} style={styles.txtIcon} />\r\n                        <TextInput type='password'  className='form-control' placeholder='Password' value={this.state.password} style={{...CommonStyles.textInput, ...styles.txt}}\r\n                        onChange={(event: any) => this.setState({password: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onLogin);\r\n                        }} />\r\n                    </View>\r\n                    <Text className='col-12 pointer' onClick={this.onForgetPassword} style={{marginBottom: 15, textAlign: 'right', color: COLOR.SECONDARY}}>Forgot Password?</Text>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"LOGIN\" : \"Loading...\"}\r\n                    onPress={this.onLogin}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View className='col-12' style={{marginTop: 15, alignItems: 'center', justifyContent:'center'}}>\r\n                        <Text className='col-12' style={{marginBottom: 5, textAlign: 'center'}}>Dont have an account?</Text>\r\n                        <View className='col' style={{float: 'left', alignItems: 'center', justifyContent:'center', borderWidth: 1, borderColor: '#000000', borderStyle: 'solid', borderRadius: 10}}>\r\n                            <Text style={{textAlign: 'center', margin: '7px', cursor: 'pointer'}} onClick={this.onCreateAccount}>CREATE / JOIN YOUR FLAT</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                }\r\n                <Spinner visible={this.state.isLoading} text={\"\"} />\r\n            </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n    row: {\r\n        // flexDirection: 'row',\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        marginBottom: 25\r\n    },     \r\n    txtIcon: {\r\n        marginLeft: 6,\r\n        // marginRight: -15,\r\n        height: 15,\r\n        width: 15,\r\n        resizeMode : 'stretch',\r\n        alignItems: 'center',\r\n        top: 11\r\n\r\n    },\r\n    txt: {\r\n        flex: 1,\r\n        paddingLeft: 25\r\n    }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IMember } from '../models/home';\r\nimport { login, forgetPassword, signup } from '../store/actions/account';\r\n\r\nimport Page from '../components/login/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => dispatch(login(userName, password, callback)),\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => dispatch(forgetPassword(mobileNumber, email, callback)),\r\n    onSignUp: (data: IMember, clientCode: string, callback: (result: boolean, message: string) => void) => dispatch(signup(data, clientCode, callback))\r\n});\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { Image } from '../common/elements';\r\nimport { isNN } from '../../util/index';\r\nimport Images from '../images';\r\nimport { ROLE } from '../../constants/index';\r\nimport { IHome } from '../../models/home';\r\nimport Toast from  '../../util/toast';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const onHomeChange = (index: number) => {\r\n    props.onHomeChange(index, (result: boolean) => {\r\n      if(result === true){\r\n        \r\n      }else{\r\n      }\r\n    });\r\n  }\r\n  \r\n  const logout = () => {\r\n    confirmAlert({\r\n      title: 'Confirm to logout',\r\n      message: 'Are you sure you wish to logout?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            props.onLogout((result: boolean) => {\r\n              if(result === true){\r\n                Toast.success('Logout Success!');\r\n              }else{\r\n                Toast.fail('Failed to logout!');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return (\r\n  <div className=\"header navbar\">\r\n    <div className=\"header-container\">\r\n      <ul className=\"nav-left\">\r\n        <li>\r\n          <a id='sidebar-toggle' className=\"sidebar-toggle\" href=\"javascript:void(0);\">\r\n            <i className=\"ti-menu\"></i>\r\n          </a>\r\n        </li>\r\n        <li className=\"search-box\">\r\n          <a className=\"search-toggle no-pdd-right\" href=\"javascript:void(0);\">\r\n            <i className=\"search-icon ti-search pdd-right-10\"></i>\r\n            <i className=\"search-icon-close ti-close pdd-right-10\"></i>\r\n          </a>\r\n        </li>\r\n        <li className=\"search-input\">\r\n          <input className=\"form-control\" type=\"text\" placeholder=\"Search...\" />\r\n        </li>\r\n      </ul>\r\n      <ul className=\"nav-right\">\r\n        {(props.appUser.role === ROLE.USER) &&\r\n        <li className=\"notifications dropdown\">\r\n          <span className=\"counter bgc-red\">{props.user.homes.length}</span>\r\n          <a href=\"\" className=\"dropdown-toggle no-after\" data-toggle=\"dropdown\">\r\n            <i className=\"fa fa-home\"></i>\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n            <li className=\"pX-20 pY-15 bdB\">\r\n              <i className=\"fa fa-home pR-10\"></i>\r\n              <span className=\"fsz-sm fw-600 c-grey-900\">Home(s)</span>\r\n            </li>\r\n            <li>\r\n              <ul className=\"ovY-a pos-r scrollable lis-n p-0 m-0 fsz-sm\">\r\n              {\r\n                props.user.homes.map((d: IHome, i: number) => {\r\n                  return(\r\n                    <li key={'h' + i}>\r\n                      <a href=\"javascript:void(0);\" className='peers fxw-nw td-n p-20 bdB c-grey-800 cH-blue bgcH-grey-100'>\r\n                        <div className=\"peer peer-greed\" onClick={() => onHomeChange(i)}>\r\n                          <span>\r\n                            <span className={(props.appUser.homeIndex === i ? 'fw-500' : 'c-grey-600')}>{'' + d.number}</span>\r\n                          </span>\r\n                        </div>\r\n                      </a>\r\n                    </li>\r\n                  )\r\n                })\r\n                }\r\n                </ul>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        }\r\n        {(props.user.role.indexOf(',') > 0) &&\r\n        <li className=\"notifications dropdown\">\r\n        <span className=\"counter bgc-red\">{props.user.role.split(',').length}</span>\r\n        <a href=\"\" className=\"dropdown-toggle no-after\" data-toggle=\"dropdown\">\r\n          <i className=\"ti-user\"></i>\r\n        </a>\r\n        <ul className=\"dropdown-menu\">\r\n          <li className=\"pX-20 pY-15 bdB\">\r\n            <i className=\"ti-user pR-10\"></i>\r\n            <span className=\"fsz-sm fw-600 c-grey-900\">Role(s)</span>\r\n          </li>\r\n          <li>\r\n            <ul className=\"ovY-a pos-r scrollable lis-n p-0 m-0 fsz-sm\">\r\n            {\r\n              props.user.role.split(',').map((d: string, i: number) => {\r\n                return(\r\n                  <li key={'r' + i}>\r\n                    <a href=\"javascript:void(0);\" className='peers fxw-nw td-n p-20 bdB c-grey-800 cH-blue bgcH-grey-100'>\r\n                      <div className=\"peer peer-greed\">\r\n                        <span>\r\n                          <span className={'tt-c ' + (props.appUser.role === d ? 'fw-500' : 'c-grey-600')}>{'' + d.toLowerCase()}</span>\r\n                        </span>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                )\r\n              })\r\n              }\r\n              </ul>\r\n          </li>\r\n          <li className=\"pX-20 pY-15 ta-c bdT\">\r\n            <span>\r\n              <Link className=\"c-grey-600 cH-blue fsz-sm td-n\" to='my-role'>Change Role <i className=\"ti-angle-right fsz-xs mL-10\"></i></Link>\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n        }\r\n\r\n        <li className=\"notifications dropdown\">\r\n          <span className=\"counter bgc-red\">0</span>\r\n          <a href=\"\" className=\"dropdown-toggle no-after\" data-toggle=\"dropdown\">\r\n            <i className=\"ti-bell\"></i>\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n            <li className=\"pX-20 pY-15 bdB\">\r\n              <i className=\"ti-bell pR-10\"></i>\r\n              <span className=\"fsz-sm fw-600 c-grey-900\">Notification(s)</span>\r\n            </li>\r\n            <li>\r\n              <ul className=\"ovY-a pos-r scrollable lis-n p-0 m-0 fsz-sm\">\r\n                <li>\r\n                  <a href=\"\" className='peers fxw-nw td-n p-20 bdB c-grey-800 cH-blue bgcH-grey-100'>\r\n                    <div className=\"peer peer-greed\">\r\n                      <span>\r\n                        <span className=\"c-grey-600\">No notification found.</span>\r\n                        </span>\r\n                    </div>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        \r\n        <li className=\"dropdown\">\r\n          <a href=\"\" className=\"dropdown-toggle no-after peers fxw-nw ai-c lh-1\" data-toggle=\"dropdown\">\r\n            <div className=\"peer mR-10\">\r\n              <Image className=\"w-2r bdrs-50p\" src={isNN(props.user.image) ? props.user.image : (props.user.gender.toLocaleUpperCase() === 'F' ? Images.avatarFemale : Images.avatarMale)} alt='' />\r\n            </div>\r\n            <div className=\"peer\">\r\n              <span className=\"fsz-sm c-grey-900\">{props.user.name}</span>\r\n            </div>\r\n          </a>\r\n          <ul className=\"dropdown-menu fsz-sm\">\r\n            <li>\r\n              <Link className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" to='my-profile'>\r\n                <i className=\"fa fa-user mR-10\"></i>\r\n                <span>Profile</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" to='my-documents'>\r\n                <i className=\"fa fa-file-text mR-10\"></i>\r\n                <span>Documents</span>\r\n              </Link>\r\n            </li>\r\n            {props.user.role.indexOf(',') > 0 &&\r\n            <li>\r\n              <Link className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" to='my-role'>\r\n                <i className=\"ti-user mR-10\"></i>\r\n                <span>Role</span>\r\n              </Link>\r\n            </li>\r\n            }\r\n            <li>\r\n              <Link className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" to='change-password'>\r\n                <i className=\"fa fa-key mR-10\"></i>\r\n                <span>Password</span>\r\n              </Link>\r\n            </li>\r\n            <li role=\"separator\" className=\"divider\"></li>\r\n            <li>\r\n              <a href=\"#\" className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" onClick={logout}>\r\n                <i className=\"ti-power-off mR-10\"></i>\r\n                <span>Logout</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  );\r\n};","import { ROLE } from \".\";\r\n\r\nexport const NAV = [\r\n    {title: 'Home', icon:'c-blue-500 ti-home', path: '/'},\r\n    {title: 'Members', icon:'c-brown-500 fa fa-users', path: '/members', roles: [ROLE.USER]},\r\n    {title: 'Vehicles', icon:'c-indigo-500 fa fa-car', path: '/vehicles', roles: [ROLE.USER]},\r\n    {title: 'Servants', icon:'c-deep-purple-500 fa fa-female', path: '/servants', roles: [ROLE.USER]},\r\n    {title: 'Tickets', icon:'c-orange-500 ti-headphone-alt', path: '/tickets', roles: [ROLE.USER, ROLE.ADMIN, ROLE.MANAGER]},\r\n    {title: 'Visitors', icon:'c-pink-500 fa fa-id-card-o', path: '/visitors', roles: [ROLE.USER]},\r\n    {title: 'Ads', icon:'c-teal-500 fa fa-bullhorn', path: '/ads', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n    {title: 'Notification', icon:'c-red-500 ti-bell', path: '/notification', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n    {title: 'Users', icon:'c-deep-purple-500 fa fa-users', path: '/users', roles: [ROLE.ADMIN]},\r\n    {title: 'Homes', icon:'c-blue-700 fa fa-home',path: '/homes', roles: [ROLE.ADMIN]},\r\n    {title: 'Blocks', icon:'c-brown-500 fa fa-building', path: '/blocks', roles: [ROLE.ADMIN]},\r\n    {title: 'Visitors', icon:'c-pink-500 fa fa-id-card-o', path: '/all-visitors', roles: [ROLE.ADMIN, ROLE.MANAGER, ROLE.GATEKEEPER]},\r\n    {title: 'Payment', icon:'c-indigo-500 fa fa-credit-card', path: '/payment', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n    {title: 'Notice', icon:'c-blue-a400 ti-notepad', path: '/notice'},\r\n    {title: 'Settings', icon:'c-deep-orange-500 ti-settings', child: [\r\n        {title: 'My Profile', path: '/my-profile'},\r\n        {title: 'My Role', path: '/my-role', isMRole: true},\r\n        {title: 'My Documents', path: '/my-documents'},\r\n        {title: 'Change Password', path: '/change-password'}\r\n    ]},\r\n    {title: 'Info', icon:'c-deep-purple-a700 ti-info-alt', path: '/info'}\r\n];","import * as $ from 'jquery';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\nconst initScrollBar = () => {\r\n  const scrollables = $('.scrollable');\r\n  if (scrollables.length > 0) {\r\n    scrollables.each((index, el) => {\r\n      new PerfectScrollbar(el);\r\n    });\r\n  }\r\n};\r\n\r\nexport default initScrollBar;","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image } from '../common/elements';\r\nimport { isNN } from '../../util/index';\r\nimport { NAV } from '../../constants/nav';\r\nimport Images from '../images';\r\nimport initScrollBar from '../../theme/scripts/scrollbar/index';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  useEffect(() => {\r\n    initScrollBar();\r\n  });\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar-inner\">\r\n        <div className=\"sidebar-logo\">\r\n          <div className=\"peers ai-c fxw-nw\">\r\n            <div className=\"peer peer-greed\">\r\n              <Link className=\"sidebar-link td-n\" to='/'>\r\n                <div className=\"peers ai-c fxw-nw\">\r\n                  <div className=\"peer\">\r\n                    <div className=\"logo\">\r\n                      <Image src={Images.logo} className='' style={{ width: 70, height: 65, padding: '13px 15px'}} alt='' />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"peer peer-greed\">\r\n                    <h5 className=\"lh-1 mB-0 logo-text\">Nest</h5>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"peer\">\r\n              <div className=\"mobile-toggle sidebar-toggle\">\r\n                <a href=\"\" className=\"td-n\">\r\n                  <i className=\"ti-arrow-circle-left\"></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {(NAV && NAV.length > 0) &&\r\n        <ul className=\"sidebar-menu scrollable pos-r\">\r\n          {\r\n            NAV.map((d: any, i: number) => {\r\n              if((isNN(d.path) || isNN(d.child)) && (!isNN(d.roles) || d.roles.indexOf(props.appUser.role) >= 0) && (!d.isMRole || props.user.role.indexOf(',') > 0)){\r\n                return(\r\n                  <li key={'nav-item-' + i} className={'nav-item' + (isNN(d.child) ? ' dropdown' : '') + (i === 0 ? ' mT-30' : '')}>\r\n                    <Link className={(isNN(d.child) ? 'dropdown-toggle' : 'sidebar-link')} to={isNN(d.path) ? d.path : '#' }>\r\n                    <span className=\"icon-holder\">\r\n                      <i className={d.icon}></i>\r\n                    </span>\r\n                    <span className=\"title\">{d.title}</span>\r\n                    {isNN(d.child) &&\r\n                    <span className=\"arrow\">\r\n                      <i className=\"ti-angle-right\"></i>\r\n                    </span>\r\n                    }\r\n                  </Link>\r\n                    {isNN(d.child) &&\r\n                    <ul className=\"dropdown-menu\">\r\n                      {\r\n                        d.child.map((d: any, i: number) => {\r\n                          return(\r\n                            <li key={'sub-nav-item-' + i}>\r\n                              <Link className='sidebar-link' to={isNN(d.path) ? d.path : '#'}>{d.title}</Link>\r\n                            </li>\r\n                          )\r\n                        })\r\n                      }\r\n                    </ul>\r\n                    }\r\n                  </li>\r\n                )\r\n              }\r\n            })\r\n          }\r\n        </ul>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n};","import * as React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <footer className=\"bdT ta-c p-30 lh-0 fsz-sm c-grey-600\">\r\n      <span>Copyright © Nest. All rights reserved.</span>\r\n    </footer>\r\n  );\r\n};","import Api from '../api/api';\r\nimport { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'payment';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const search = (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const save = (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to save Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const updatePay = (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().put(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to update Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const upload = (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'upload', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.approvalid > 0)\r\n    {\r\n      /*\r\n      var homeIndex = user.homes.findIndex(d => d._id === homeId);\r\n      if(file.approvalid > 0)\r\n      {        \r\n        var paymentIndex = user.home[homeIndex].paymentApproval.findIndex(d => d.approvalid === file.approvalid);\r\n        user.home[homeIndex].paymentApproval[paymentIndex] = result.data;\r\n      }else{\r\n        user.home[homeIndex].paymentApproval.push(result.data);\r\n      }\r\n      */\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, file);\r\n};\r\n\r\nexport const update = (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/transaction/' + paymentId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      transaction._id = result.data;\r\n      // var homeIndex = user.homes.findIndex(d => d._id === params.homeid);\r\n      // if(paymentId.length > 0)\r\n      // {        \r\n        var paymentIndex = user.homes[homeIndex].payments.findIndex(d => d._id === paymentId);\r\n        if(!user.homes[homeIndex].payments[paymentIndex].transactions){\r\n          user.homes[homeIndex].payments[paymentIndex].transactions = [];\r\n        }\r\n        user.homes[homeIndex].payments[paymentIndex].transactions.push(transaction);\r\n      // }else{\r\n      //   user.homes[homeIndex].payments.push(result.data);\r\n      // }\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, transaction);\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","// import { actionTypes } from '../action-types';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants/index';\r\n// import { IHome } from '../../models/home';\r\n\r\nlet controller: string = 'visitor';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : '') + '/' + isActive, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  // data.image = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data._id.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          var foundIndex = visitors.findIndex(d => d._id === result.data);\r\n          visitors[foundIndex]._id = result.data;\r\n          visitors[foundIndex].name = name;\r\n          visitors[foundIndex].age = data.age;\r\n          visitors[foundIndex].gender = data.gender;\r\n          visitors[foundIndex].mobileNo = data.mobileNo;\r\n          visitors[foundIndex].emailId = data.emailId;\r\n          visitors[foundIndex].image = result.image;\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        sCallback(result.data as IVisitor);\r\n      } else {\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data._id.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          data._id = result.data;\r\n          data.createdBy = user.name;\r\n          visitors.unshift(data);\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        sCallback(result.data as IVisitor);\r\n      } else {\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      /*\r\n      user.homes[homeIndex].visitors = user.homes[homeIndex].visitors.filter((d, i) => d._id != id);\r\n      dispatch(getUserResult(user as IUser));\r\n      */\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const enter = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/enter/' + id + '/' + gateNo, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const exit = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/exit/' + id + '/' + gateNo, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const approve = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/approve/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const reject = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/reject/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const search = (text: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/search/' + text, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n    }\r\n  });\r\n};","import Api from '../api/api';\r\nimport { isNNObject } from '../../util/index';\r\n\r\nlet controller: string = 'upload';\r\n\r\nexport const upload = (data: any, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().upload(controller, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};","import * as React from 'react';\r\nimport { ScrollView, View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNN, generateUUID } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\nimport { MONTH, COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome,\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  payment: {\r\n    paymentId: string,\r\n    amount: number,\r\n    transactionRef: string\r\n  }\r\n};\r\n\r\nexport default class MyDues extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      payment: {\r\n        paymentId: '',\r\n        amount: 0,\r\n        transactionRef: ''\r\n      }\r\n    }\r\n    this.getTotalDue = this.getTotalDue.bind(this);\r\n    this.payNow = this.payNow.bind(this);\r\n    this.clearTxn = this.clearTxn.bind(this);\r\n    this.txnFailure = this.txnFailure.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getTotalDue = () => {\r\n    let totalDue = 0;\r\n    this.props.home.payments.map((d: IPayment, i: number) => {\r\n      let amountPaid = 0;\r\n        d.transactions.filter((t, j) => t.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n      totalDue += d.amount - amountPaid;\r\n      return 1;\r\n    });\r\n    return totalDue;\r\n  };\r\n\r\n  payNow = (paymentId: string, amount: number) => {\r\n    if(paymentId && paymentId.length > 0 && amount && amount > 0){\r\n      if(isNN(this.props.user.client.upi.id) && isNN(this.props.user.client.upi.name)){\r\n        let transactionRef = generateUUID();\r\n        this.setState({\r\n          payment: {\r\n            paymentId: paymentId,\r\n            amount: amount,\r\n            transactionRef: transactionRef\r\n          }\r\n        });\r\n        \r\n        Toast.warn('Payment is in progress. Please contact administrator.');\r\n        // RNUpiPayment.initializePayment({\r\n        //   vpa: this.props.user.client.upi.id, // or can be john@ybl or mobileNo@upi\r\n        //   payeeName: this.props.user.client.upi.name,\r\n        //   amount: amount + '',\r\n        //   transactionRef: transactionRef,\r\n        //   transactionNote: ''\r\n        // }, this.successCallback, this.failureCallback);\r\n      }else{\r\n        Toast.warn('Please update UPI ID and UPI Name to app administrator to proceed further.');\r\n      }\r\n    }else{\r\n      Toast.warn('Amount should be more then 0 to proceed payment.');\r\n    }\r\n  };\r\n  \r\n  successCallback = (result: any) => {\r\n    console.log('Payment Success...', result);\r\n    if(result && result.Status)\r\n    {\r\n      if(result.Status === 'SUCCESS' && result.responseCode && result.responseCode === '00'){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let transaction = {\r\n          txnRef: result.txnRef,\r\n          txnId: result.txnId,\r\n          amount: this.state.payment.amount,\r\n          status: 'PAID',\r\n          isSuccess: true,\r\n          reason: ''\r\n        } as ITransaction;\r\n        this.props.onPaymentUpdate(this.state.payment.paymentId, transaction, (updateResult: boolean) => {\r\n          this.setState({\r\n            isLoading: false\r\n          });\r\n          this.clearTxn();\r\n          if(updateResult === true){\r\n            Toast.success('Payment success.');\r\n          }else{\r\n            Toast.fail('Payment failed.');\r\n          }\r\n        });\r\n      }else{\r\n        this.txnFailure(result);\r\n      }\r\n    }else{\r\n      this.txnFailure(result);\r\n    }\r\n  };\r\n   \r\n  failureCallback = (result: any) => {\r\n    this.txnFailure(result);\r\n  };\r\n\r\n  txnFailure = (result: any) => {\r\n    console.log('Payment Failure...', result);\r\n    let msg: string = '';\r\n    if(result && result.Status)\r\n    {\r\n      if(result.Status === 'FAILURE' && result.responseCode && result.responseCode === 'ZM'){\r\n        msg = 'Payment failed because of wrong pin.';\r\n      }\r\n      else if(result.Status === 'FAILURE' && result.message && result.message.length > 0){\r\n        msg = 'Payment failed because ' + result.message;\r\n      }else{\r\n        msg = 'Payment failed.';\r\n      }\r\n    }\r\n    else{\r\n      msg = 'Payment failed.';\r\n    }\r\n    Toast.fail(msg);\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    let transaction = {\r\n      txnRef: this.state.payment.transactionRef,\r\n      txnId: '',\r\n      amount: this.state.payment.amount,\r\n      status: 'FAIL',\r\n      isSuccess: false,\r\n      reason: msg\r\n    } as ITransaction;\r\n    this.props.onPaymentUpdate(this.state.payment.paymentId, transaction, (updateResult: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      this.clearTxn();\r\n      // if(updateResult === true){\r\n      //   Toast.success('Payment success.');\r\n      // }else{\r\n      //   Toast.fail('Payment failed.');\r\n      // }\r\n    });\r\n  };\r\n\r\n  clearTxn = () => {\r\n    this.setState({\r\n      payment: {\r\n        paymentId: '',\r\n        amount: 0,\r\n        transactionRef: ''\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <View style={{ margin: 5 }}>\r\n          <Text style={{ marginTop: 2, fontWeight: 'bold' }}>{'Total Due Amount: Rs ' + this.getTotalDue()}</Text>\r\n        </View>\r\n        <ScrollView>\r\n        {isNN(this.props.home.payments) ?\r\n        this.props.home.payments.filter((p: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          if (isNN(p.transactions)) {\r\n            p.transactions.filter(t => t.isSuccess === true).map((p, j) => amountPaid += p.amount);\r\n          }\r\n          return(amountPaid < p.amount);\r\n        }).map((d: IPayment, i: number) => {\r\n            let amountPaid = 0;\r\n            if (isNN(d.transactions)) {\r\n              d.transactions.filter(p => p.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n            }\r\n            if (amountPaid < d.amount) {\r\n              return (\r\n                <View key={'my-due' + i} style={(i === 0) ? styles.myDueFirst : styles.myDue }>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Text>{'Due for: ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + '/' + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%', marginTop: 4, marginBottom: 3 }}>\r\n                    <Text style={{ fontSize: 17 }}>{'Rs ' + (d.amount - amountPaid)}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%'}}>\r\n                    <Text>{'Due Date: 15/' + MONTH.filter(m => m.value === d.forMonth)[0].title + '/' + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Button \r\n                    title='PAY NOW'\r\n                    onPress={() => this.payNow(d._id, (d.amount - amountPaid))} \r\n                    />\r\n                  </View>\r\n                </View>\r\n              )\r\n            } else {\r\n              return null;\r\n            }\r\n          })\r\n          :<Text style={{ padding: 20 }}>No due found.</Text>\r\n        }\r\n        </ScrollView>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  myDue: {\r\n    margin: 7, \r\n    paddingLeft: 15,\r\n    borderLeftColor: COLOR.HR_COLOR, \r\n    borderLeftWidth: 1 \r\n  },\r\n  myDueFirst: {\r\n    margin: 7\r\n  }\r\n};","import moment from 'moment';\r\nimport { isNN, jsError, isNNObject } from './index';\r\nimport { DEFAULT_DATE_FORMAT, DEFAULT_DATE_TIME_FORMAT } from '../constants/index';\r\n\r\nexport function toDateString(_input: any, _format?: string) {\r\n  try {\r\n    if(isNNObject(_input)) {\r\n      if (typeof _input != 'string') {\r\n        _input.toString();\r\n      }\r\n      if (!isNN(_format)) {\r\n       _format = DEFAULT_DATE_FORMAT;\r\n      }\r\n      return moment(_input).format(_format);\r\n    } else {\r\n      return '';\r\n    }\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateString'); \r\n    return ''; \r\n  }\r\n};\r\n\r\nexport function toDateTimeString(_input: any, _format?: string) {\r\n  try {\r\n    return toDateString(_input, DEFAULT_DATE_TIME_FORMAT);\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateTimeString'); \r\n    return ''; \r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, ScrollView } from '../common/elements';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNN } from '../../util';\r\nimport { toDateString } from '../../util/convert';\r\nimport { MONTH, COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  home: IHome,\r\n};\r\n\r\ninterface IState {\r\n  activeTab: number\r\n};\r\n\r\nexport default class History extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <ScrollView style={{}}>\r\n        {isNN(this.props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true)))) ?\r\n        this.props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true))).slice(0, 3).map((d: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          let paidDate = null;\r\n          d.transactions.filter(t => t.isSuccess === true).map((t: ITransaction, j: number) => {\r\n            amountPaid += t.amount;\r\n            if(j === 0){\r\n              paidDate = t.createdAt;\r\n            }\r\n            return 1;\r\n          });\r\n              return (\r\n                <View key={'my-his' + i} style={(i === 0) ? styles.myDueFirst : styles.myDue }>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Text style={{}}>{\"Paid for: \" + MONTH.filter(m => m.value === d.forMonth)[0].title + \"/\" + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%', marginTop: 4, marginBottom: 3 }}>\r\n                    <Text style={{ fontSize: 17 }}>{\"Rs \" + amountPaid}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%'}}>\r\n                    <Text>{\"Paid On: \" + toDateString(paidDate)}</Text>\r\n                  </View>\r\n                </View>\r\n              )\r\n          })\r\n          :<Text>No history found!</Text>\r\n        }\r\n        </ScrollView>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  myDue: {\r\n    margin: 7, \r\n    paddingLeft: 15,\r\n    borderLeftColor: COLOR.HR_COLOR, \r\n    borderLeftWidth: 1 \r\n  },\r\n  myDueFirst: {\r\n    margin: 7\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { Text, View } from '../common/elements';\r\nimport { isNN } from '../../util/index';\r\n\r\nexport default (props: any) => {\r\n  const {data, message} = props;\r\n  return(\r\n    isNN(data) ?\r\n    data.map((d: any, i: number) => {\r\n      return(\r\n        <View className='bdB pB-3'>\r\n          <View>\r\n            <Text key={i} className='fw-600'>\r\n              {d.title}\r\n            </Text>\r\n          </View>\r\n          <View>\r\n            <Text key={i}>\r\n              {d.description}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      )\r\n    })\r\n    :\r\n    isNN(message) ? <Text>{message}</Text> : null\r\n  );\r\n};","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport MyDues from './my-dues';\r\nimport History from './history';\r\nimport CustomList from './custom-list';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  activeTab: number\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item w-100\">\r\n            <View className=\"row gap-20\">\r\n              <View className='col-md-3'>\r\n                <View className=\"layers bd bgc-white p-20 cur-p\" onClick={() => this.props.history.push('members')}>\r\n                  <View className=\"layer w-100 mB-10\">\r\n                    <h6 className=\"lh-1\">Member(s)</h6>\r\n                  </View>\r\n                  <View className=\"layer w-100\">\r\n                    <View className=\"peers ai-sb fxw-nw\">\r\n                      <View className=\"peer peer-greed\">\r\n                        <span className=\"icon-holder\">\r\n                          <i className='c-brown-500 fa fa-users fa-2x'></i>\r\n                        </span>\r\n                      </View>\r\n                      <View className=\"peer\">\r\n                        <span className=\"d-ib lh-0 va-m fw-600 bdrs-10em pX-15 pY-15 bgc-brown-50 c-brown-500\">\r\n                          {this.props.home.members ? this.props.home.members.length : 0}\r\n                        </span>\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n              <View className='col-md-3'>\r\n                <View className=\"layers bd bgc-white p-20 cur-p\" onClick={() => this.props.history.push('vehicles')}>\r\n                  <View className=\"layer w-100 mB-10\">\r\n                    <h6 className=\"lh-1\">Vehicle(s)</h6>\r\n                  </View>\r\n                  <View className=\"layer w-100\">\r\n                    <View className=\"peers ai-sb fxw-nw\">\r\n                      <View className=\"peer peer-greed\">\r\n                        <span className=\"icon-holder\">\r\n                          <i className='c-indigo-500 fa fa-car fa-2x'></i>\r\n                        </span>\r\n                      </View>\r\n                      <View className=\"peer\">\r\n                        <span className=\"d-ib lh-0 va-m fw-600 bdrs-10em pX-15 pY-15 bgc-indigo-50 c-indigo-500\">\r\n                          {this.props.home.vehicles ? this.props.home.vehicles.length : 0}\r\n                        </span>\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n              <View className='col-md-3'>\r\n                <View className=\"layers bd bgc-white p-20 cur-p\" onClick={() => this.props.history.push('servants')}>\r\n                  <View className=\"layer w-100 mB-10\">\r\n                    <h6 className=\"lh-1\">Servant(s)</h6>\r\n                  </View>\r\n                  <View className=\"layer w-100\">\r\n                    <View className=\"peers ai-sb fxw-nw\">\r\n                      <View className=\"peer peer-greed\">\r\n                        <span className=\"icon-holder\">\r\n                          <i className='c-deep-purple-500 fa fa-female fa-2x'></i>\r\n                        </span>\r\n                      </View>\r\n                      <View className=\"peer\">\r\n                        <span className=\"d-ib lh-0 va-m c-deep-purple-500\">View all</span>\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n              <View className='col-md-3'>\r\n                <View className=\"layers bd bgc-white p-20 cur-p\" onClick={() => this.props.history.push('tickets')}>\r\n                  <View className=\"layer w-100 mB-10\">\r\n                    <h6 className=\"lh-1\">Ticket(s)</h6>\r\n                  </View>\r\n                  <View className=\"layer w-100\">\r\n                    <View className=\"peers ai-sb fxw-nw\">\r\n                      <View className=\"peer peer-greed\">\r\n                        <span className=\"icon-holder\">\r\n                          <i className='c-orange-500 ti-headphone-alt fa-2x'></i>\r\n                        </span>\r\n                      </View>\r\n                      <View className=\"peer\">\r\n                        <span className=\"d-ib lh-0 va-m c-orange-500\">View all</span>\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View className=\"row gap-20\">\r\n              <View className='col-md-3'>\r\n                <View className=\"layers bd bgc-white p-20 cur-p\" onClick={() => this.props.history.push('visitors')}>\r\n                  <View className=\"layer w-100 mB-10\">\r\n                    <h6 className=\"lh-1\">Visitor(s)</h6>\r\n                  </View>\r\n                  <View className=\"layer w-100\">\r\n                    <View className=\"peers ai-sb fxw-nw\">\r\n                      <View className=\"peer peer-greed\">\r\n                        <span className=\"icon-holder\">\r\n                          <i className='c-pink-500 fa fa-id-card-o fa-2x'></i>\r\n                        </span>\r\n                      </View>\r\n                      <View className=\"peer\">\r\n                        <span className=\"d-ib lh-0 va-m c-pink-500\">View all</span>\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </View>\r\n\r\n          <View className=\"masonry-item col-12\">\r\n            <View className='tab-bar bgc-white p-20'>\r\n              <span className={'tab' + (this.state.activeTab === 1 ? ' active': '')} onClick={() => this.setState({activeTab: 1})}>\r\n                MY DUES\r\n                </span>\r\n              <span className={'tab' + (this.state.activeTab === 2 ? ' active': '')} onClick={() => this.setState({activeTab: 2})}>\r\n                ADVANCE\r\n              </span>\r\n              <span className={'tab' + (this.state.activeTab === 3 ? ' active' : '')} onClick={() => this.setState({activeTab: 3})}>\r\n                HISTORY\r\n              </span>\r\n              {/* <span className={'tab' + (this.state.activeTab === 4 ? ' active' : ')} onClick={() => this.setState({activeTab: 4})}>\r\n                DEPOSITS\r\n              </span> */}\r\n            </View>\r\n            <View className='bgc-white p-20'>\r\n            {this.state.activeTab === 1 ?\r\n                <MyDues history={this.props.history} user={this.props.user} home={this.props.home} onPaymentUpload={this.props.onPaymentUpload} onPaymentUpdate={this.props.onPaymentUpdate} />\r\n              :\r\n              this.state.activeTab === 2 ?\r\n                <CustomList data={[]} message='No advance found!' />\r\n                :\r\n                this.state.activeTab === 3 ?\r\n                <History history={this.props.history} home={this.props.home} />\r\n                :\r\n                this.state.activeTab === 4 ?\r\n                <CustomList data={[]} message=\"Work in progress\" />\r\n                :\r\n                []\r\n              }\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View } from '../../common/elements';\r\nimport { ROLE } from '../../../constants';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item w-100\">\r\n          <View className=\"row gap-20\">\r\n            <View className='col-md-3'>\r\n              <View className=\"layers bd bgc-white p-20 cur-p\" onClick={() => props.history.push('tickets')}>\r\n                <View className=\"layer w-100 mB-10\">\r\n                  <h6 className=\"lh-1\">Ticket(s)</h6>\r\n                </View>\r\n                <View className=\"layer w-100\">\r\n                  <View className=\"peers ai-sb fxw-nw\">\r\n                    <View className=\"peer peer-greed\">\r\n                      <span className=\"icon-holder\">\r\n                        <i className='c-orange-500 ti-headphone-alt fa-2x'></i>\r\n                      </span>\r\n                    </View>\r\n                    <View className=\"peer\">\r\n                    <span className=\"d-ib lh-0 va-m c-orange-500\">View all</span>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View className='col-md-3'>\r\n              <View className=\"layers bd bgc-white p-20 cur-p\" onClick={() => props.history.push('ads')}>\r\n                <View className=\"layer w-100 mB-10\">\r\n                    <h6 className=\"lh-1\">ads</h6>\r\n                  </View>\r\n                <View className=\"layer w-100\">\r\n                  <View className=\"peers ai-sb fxw-nw\">\r\n                    <View className=\"peer peer-greed\">\r\n                      <span className=\"icon-holder\">\r\n                        <i className='c-teal-500 fa fa-bullhorn fa-2x'></i>\r\n                      </span>\r\n                    </View>\r\n                    <View className=\"peer\">\r\n                      <span className=\"d-ib lh-0 va-m c-teal-500\">View all</span>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View className='col-md-3'>\r\n              <View className=\"layers bd bgc-white p-20 cur-p\" onClick={() => props.history.push('notification')}>\r\n                <View className=\"layer w-100 mB-10\">\r\n                  <h6 className=\"lh-1\">Notification</h6>\r\n                </View>\r\n                <View className=\"layer w-100\">\r\n                  <View className=\"peers ai-sb fxw-nw\">\r\n                    <View className=\"peer peer-greed\">\r\n                      <span className=\"icon-holder\">\r\n                        <i className='c-red-500 ti-bell fa-2x'></i>\r\n                      </span>\r\n                    </View>\r\n                    <View className=\"peer\">\r\n                      <span className=\"d-ib lh-0 va-m c-red-500\">View all</span>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View className='col-md-3'>\r\n              <View className=\"layers bd bgc-white p-20 cur-p\" onClick={() => props.history.push('all-visitors')}>\r\n                <View className=\"layer w-100 mB-10\">\r\n                  <h6 className=\"lh-1\">Visitor(s)</h6>\r\n                </View>\r\n                <View className=\"layer w-100\">\r\n                  <View className=\"peers ai-sb fxw-nw\">\r\n                    <View className=\"peer peer-greed\">\r\n                      <span className=\"icon-holder\">\r\n                        <i className='c-pink-500 fa fa-id-card-o fa-2x'></i>\r\n                      </span>\r\n                    </View>\r\n                    <View className=\"peer\">\r\n                      <span className=\"d-ib lh-0 va-m c-pink-500\">View all</span>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View className=\"row gap-20\">\r\n            {props.appUser.role === ROLE.ADMIN &&\r\n            <View className='col-md-3'>\r\n              <View className=\"layers bd bgc-white p-20 cur-p\" onClick={() => props.history.push('users')}>\r\n                <View className=\"layer w-100 mB-10\">\r\n                  <h6 className=\"lh-1\">User(s)</h6>\r\n                </View>\r\n                <View className=\"layer w-100\">\r\n                  <View className=\"peers ai-sb fxw-nw\">\r\n                    <View className=\"peer peer-greed\">\r\n                      <span className=\"icon-holder\">\r\n                        <i className='c-deep-purple-500 fa fa-users fa-2x'></i>\r\n                      </span>\r\n                    </View>\r\n                    <View className=\"peer\">\r\n                      <span className=\"d-ib lh-0 va-m fw-600 bdrs-10em pX-15 pY-15 bgc-deep-purple-50 c-deep-purple-500\">\r\n                      {props.users.isUpToDate ?\r\n                      (!props.users.isError) ? props.users.data.length : 0\r\n                      :\r\n                      \"Loading\"\r\n                      }\r\n                      </span>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            }\r\n            {props.appUser.role === ROLE.ADMIN &&\r\n            <View className='col-md-3'>\r\n              <View className=\"layers bd bgc-white p-20 cur-p\" onClick={() => props.history.push('homes')}>\r\n                <View className=\"layer w-100 mB-10\">\r\n                  <h6 className=\"lh-1\">Home(s)</h6>\r\n                </View>\r\n                <View className=\"layer w-100\">\r\n                  <View className=\"peers ai-sb fxw-nw\">\r\n                    <View className=\"peer peer-greed\">\r\n                      <span className=\"icon-holder\">\r\n                        <i className='c-blue-700 fa fa-home fa-2x'></i>\r\n                      </span>\r\n                    </View>\r\n                    <View className=\"peer\">\r\n                      <span className=\"d-ib lh-0 va-m fw-600 bdrs-10em pX-15 pY-15 bgc-blue-50 c-blue-700\">\r\n                      {props.homes.isUpToDate ?\r\n                      (!props.homes.isError) ? props.homes.data.length : 0\r\n                      :\r\n                      \"Loading\"\r\n                      }\r\n                      </span>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            }\r\n            {props.appUser.role === ROLE.ADMIN &&\r\n            <View className='col-md-3'>\r\n              <View className=\"layers bd bgc-white p-20 cur-p\" onClick={() => props.history.push('blocks')}>\r\n                <View className=\"layer w-100 mB-10\">\r\n                  <h6 className=\"lh-1\">Block(s)</h6>\r\n                </View>\r\n                <View className=\"layer w-100\">\r\n                  <View className=\"peers ai-sb fxw-nw\">\r\n                    <View className=\"peer peer-greed\">\r\n                      <span className=\"icon-holder\">\r\n                        <i className='c-brown-500 fa fa-building fa-2x'></i>\r\n                      </span>\r\n                    </View>\r\n                    <View className=\"peer\">\r\n                      <span className=\"d-ib lh-0 va-m fw-600 bdrs-10em pX-15 pY-15 bgc-brown-50 c-brown-500\">\r\n                      {props.blocks.isUpToDate ?\r\n                      (!props.blocks.isError) ? props.blocks.data.length : 0\r\n                      :\r\n                      \"Loading\"\r\n                      }\r\n                      </span>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n            }\r\n            <View className='col-md-3'>\r\n              <View className=\"layers bd bgc-white p-20 cur-p\" onClick={() => props.history.push('payment')}>\r\n                <View className=\"layer w-100 mB-10\">\r\n                  <h6 className=\"lh-1\">Payment</h6>\r\n                </View>\r\n                <View className=\"layer w-100\">\r\n                  <View className=\"peers ai-sb fxw-nw\">\r\n                    <View className=\"peer peer-greed\">\r\n                      <span className=\"icon-holder\">\r\n                        <i className='c-indigo-500 fa fa-credit-card fa-2x'></i>\r\n                      </span>\r\n                    </View>\r\n                    <View className=\"peer\">\r\n                      <span className=\"d-ib lh-0 va-m c-indigo-500\">View all</span>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n        \r\n      </View>\r\n    </View>\r\n  );\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    container: {\r\n      // backgroundColor: COLOR.MODAL_BG,\r\n      height: '80%',\r\n      marginTop: 30,\r\n      marginBottom: 25,\r\n      marginLeft: 15,\r\n      marginRight: 15\r\n    },\r\n    head: {\r\n      // padding: 7,\r\n      // flexDirection: 'row'\r\n      alignContent: 'center'\r\n    },\r\n    title: {\r\n      flex: 1,\r\n      // flexDirection: 'row',\r\n      alignContent: 'center',\r\n      color: COLOR.FONT_COLOR2\r\n    },\r\n    close: {\r\n      width: 20,\r\n      flex: 1,\r\n      // flexDirection: 'row',\r\n      justifyContent: 'flex-end',\r\n      alignContent: 'flex-end',\r\n      alignSelf: 'flex-end'\r\n    },\r\n    content: {\r\n      // padding: 15\r\n    }\r\n  };","import * as React from 'react';\r\nimport { generateUUID } from '../../util';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  onPress?: () => void,\r\n  key?: string,\r\n  className?: string\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const {isActive, text, onPress, key, className} = props;\r\n  let id = generateUUID();\r\n  return (\r\n    <span className={'mR-10' + (className ? className : '')}>\r\n      <input type='checkbox' id={id} key={key ? key : id} checked={isActive} className='va-m' onClick={onPress ? onPress : () =>{}} />\r\n      <label htmlFor={id} className='mL-5 va-m'>{text}</label>\r\n    </span>\r\n  );\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    content: {\r\n      backgroundColor: COLOR.INVERSE\r\n    },\r\n    row: {\r\n      // flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n      // backgroundColor: COLOR.INVERSE,\r\n      borderBottomColor: COLOR.HR_COLOR,\r\n      borderBottomWidth: 1,\r\n      'border-bottom-style': 'solid',\r\n      marginTop: 5,\r\n      // marginBottom: 10,\r\n      // paddingLeft: 10,\r\n      // paddingRight: 10,\r\n      // borderRadius: 10\r\n    },\r\n    ele: {\r\n      // flexDirection: 'row',\r\n      alignItems: 'flex-start',\r\n      marginTop: 1,\r\n      marginBottom: 3,\r\n      padding: 2\r\n    }\r\n  };","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport moment from 'moment';\r\nimport { View, Image, Text, TextInput } from '../../common/elements';\r\nimport Checkbox from '../../common/checkbox';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { styles as modelStyles } from '../../../styles/model';\r\nimport { isNN } from '../../../util/index';\r\nimport { FILE_BASE_PATH, ROLE } from '../../../constants';\r\nimport Button from '../../common/button';\r\nimport { toDateTimeString } from '../../../util/convert';\r\nimport { COLOR } from '../../../constants';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  isSearch: boolean,\r\n  onActiveChange: () => void,\r\n  onEnter: (id: string) => void,\r\n  onExit: (id: string) => void,\r\n  onApprove: (id: string) => void,\r\n  onReject: (id: string) => void,\r\n  onSelect: (data: IVisitor) => void,\r\n  onRemove: (id: string) => void\r\n};\r\n\r\ninterface IState{\r\n  isZoomImage: boolean,\r\n  zoomImage: string,\r\n  searchText: string\r\n};\r\n\r\nexport default class VisitorsView extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isZoomImage: false,\r\n      zoomImage: '',\r\n      searchText: ''\r\n    }\r\n    this.onToggleZoomImage = this.onToggleZoomImage.bind(this);\r\n  };\r\n  static defaultProps = {\r\n    isSearch: false,\r\n    onActiveChange: () => {},\r\n    onEnter: () => {},\r\n    onExit: () => {},\r\n    onApprove: () => {},\r\n    onReject: () => {},\r\n    onSelect: () => {},\r\n    onRemove: () => {}\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onToggleZoomImage = (isZoom: boolean) => {\r\n    this.setState({\r\n      isZoomImage: isZoom\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { searchText } = this.state;\r\n    searchText = isNN(searchText) ? searchText.toLowerCase() : searchText;\r\n    let data = ((isNN(searchText) && isNN(this.props.data)) ? this.props.data.filter((d, i) => d.homeNumber.toLowerCase().indexOf(searchText) >= 0 || d.passCode.toLowerCase().indexOf(searchText) >= 0 || d.name.toLowerCase().indexOf(searchText) >= 0) : this.props.data);\r\n    return(<>\r\n      <View style={pageStyles.row}>\r\n        <Text>{'No of ' + (this.props.isActive ? 'Active' : '') + ' Visitors: ' + this.props.data.length}</Text>\r\n        {(!this.props.isSearch && this.props.appUser.role !== ROLE.GATEKEEPER) &&\r\n        <Checkbox isActive={this.props.isActive} text='Only Active Visitors' onPress={this.props.onActiveChange} className='fr' />\r\n        }\r\n      </View>\r\n      {isNN(this.props.data) &&\r\n      <View style={{width: '100%', marginTop: 10, marginBottom: 5}}>\r\n        <TextInput type='text' placeholder=\"Enter passcode to search\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: '100%'}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})} />\r\n      </View>\r\n      }\r\n      <View style={styles.cardContainer}>\r\n        {isNN(data) ?\r\n        data.map((d: IVisitor, i: number) => {\r\n          return(\r\n            <View key={i} className='fl' style={styles.card}>\r\n              {isNN(d.image) &&\r\n              <View className='center'>\r\n                <Image src={FILE_BASE_PATH + d.image} className='pointer' style={styles.img} onClick={() => this.setState({isZoomImage: true, zoomImage: d.image})} />\r\n              </View>  \r\n              }\r\n              <View style={styles.content}>\r\n                {isNN(d.passCode) &&\r\n                <View style={pageStyles.ele}>\r\n                  <Text className='bold'>{d.passCode}</Text>\r\n                </View>\r\n                }\r\n                <View style={pageStyles.ele}>\r\n                  <Text className='bold'>{d.name + ' [' + d.type + ']'}</Text>\r\n                </View>\r\n                {(d.age > 0 || isNN(d.gender)) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other')) : '')}</Text>\r\n                </View>\r\n                }\r\n                <View style={pageStyles.ele}>\r\n                  To <Text className='bold'>{d.homeNumber}</Text> on <Text className='bold'>{toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                {(!d.isEntered && !d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <Text>{((d.gateNo) ? 'In gate ' + d.gateNo + ' by ': 'By ') + d.createdBy}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.mobileNo) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                {d.personCount > 0 && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.personCount + ' Person' + (d.personCount > 1 ? 's' : '') + (d.vehicleType === 'WALK' ? ' by WALK' : ' in ' + d.vehicleType + (isNN(d.vehicleNo) ? ' ' + d.vehicleNo : ''))}</Text>\r\n                </View>\r\n                }\r\n                {(!d.isApproved && !d.isRejected && !d.isEntered) && \r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.PRIMARY}}>WAITING FOR APPROVAL</View>\r\n                </View>\r\n                }\r\n                {(d.isApproved || d.isRejected ) && \r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: (d.isApproved ? COLOR.SUCCESS : COLOR.ERROR)}}>{d.isApproved ? 'APPROVED' : 'REJECTED'}</View>\r\n                  <View>{'By ' + d.approvedBy}</View>\r\n                  <View>{'On ' + toDateTimeString(d.approvedAt)}</View>\r\n                </View>\r\n                }\r\n                {d.isEntered &&\r\n                <View style={pageStyles.ele}>\r\n                  <View>{'Entry By ' + d.enteredBy + ' in gate ' + d.gateNo}</View>\r\n                  <View>{'On ' + toDateTimeString(d.enteredAt)}</View>\r\n                </View>\r\n                }\r\n                {(d.isApproved && !d.isEntered) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.ERROR}}>NOT ENTERED</View>\r\n                </View>\r\n                }\r\n                {(!d.isRejected && d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View>{'Exit By ' + d.exitBy + ' in gate ' +  d.exitGateNo}</View>\r\n                  <View>{'On ' + toDateTimeString(d.exitAt)}</View>\r\n                </View>\r\n                }\r\n                {(d.isEntered && !d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.ERROR}}>STAYING IN</View>\r\n                </View>\r\n                }\r\n                {(!d.isEntered && d.arriveAt) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text className='bold' style={{color: COLOR.ERROR}}>{'Expected Arrival ' + toDateTimeString(d.arriveAt)}</Text>\r\n                </View>\r\n                }\r\n                {(!this.props.isSearch && this.props.appUser.role === ROLE.GATEKEEPER) &&\r\n                <View style={pageStyles.ele} className='center'>\r\n                  {(!d.isEntered && !d.isRejected && (!d.arriveAt || new Date(d.arriveAt).getDate() === moment().toDate().getDate())) && <Button title='Enter' onPress={() => { this.props.onEnter(d._id) }} />}\r\n                  {((d.isEntered || d.isRejected) && !d.isExit) && <Button title={d.isRejected ? 'Remove' : 'Exit'} onPress={() => { this.props.onExit(d._id) }} />}\r\n                </View>\r\n                }\r\n                {(!this.props.isSearch && this.props.appUser.role === ROLE.USER && !d.isApproved && !d.isRejected && !d.isEntered) &&\r\n                <View style={pageStyles.ele} className='center'>\r\n                  <Button title='Approve' style={{marginRight: '10px'}} onPress={() => { this.props.onApprove(d._id) }} />\r\n                  <Button title='Reject' onPress={() => { this.props.onReject(d._id) }} />\r\n                </View>\r\n                }\r\n                {(!this.props.isSearch && this.props.appUser.role === ROLE.USER && isNN(d.passCode) && !d.isEntered && !d.isRejected) &&\r\n                <View style={pageStyles.ele} className='center'>\r\n                  <Button title='Remove' onPress={() => { this.props.onRemove(d._id) }} />\r\n                </View>\r\n                }\r\n                {this.props.isSearch &&\r\n                <View style={pageStyles.ele} className='center'>\r\n                  <Button title='Select' onPress={() => { this.props.onSelect(d) }} />\r\n                </View>\r\n                }\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No visitor found.</Text>\r\n      }\r\n      </View>\r\n      <Modal\r\n          open={this.state.isZoomImage}\r\n          onClose={() => this.onToggleZoomImage(false)}>\r\n          <View className='center'>\r\n            <Image src={FILE_BASE_PATH + this.state.zoomImage} style={{ height: '50%', width: '50%' }} />\r\n          </View>\r\n        </Modal>\r\n    </>\r\n    );\r\n  }\r\n};\r\n\r\nexport const styles = {\r\n  cardContainer: {\r\n    flex: 1, \r\n    width: '100%',\r\n    padding: 10,\r\n    marginBottom: 10\r\n  },\r\n  card: {\r\n    flex: 1, \r\n    margin: 15\r\n  },\r\n  img:{\r\n    // width: 25,\r\n    height: '25vh',\r\n    margin: 0,\r\n    borderRadius: '50%',\r\n    marginBottom: '-25px'\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 10,\r\n    paddingTop: '25px',\r\n    borderColor: COLOR.HR_COLOR,\r\n    borderWidth: 1,\r\n    borderStyle: 'solid',\r\n    borderRadius: 10,\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport DatePicker from 'react-date-picker';\r\nimport TimePicker from 'react-time-picker';\r\nimport moment from 'moment';\r\nimport { View, ScrollView, TextInput, Text, Picker,  Image } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { isNN, generateUUID, onEnter, isNNObject } from '../../../util/index';\r\nimport { COLOR, ROLE } from '../../../constants';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHome, IVisitor } from '../../../models/home';\r\nimport Images from '../../images';\r\nimport VisitorsView from './visitors-view';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  homeId: string,\r\n  id: string,\r\n  type: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  arriveAt: any,\r\n  arriveAtTime: any,\r\n\tpersonCount: number,\r\n\tvehicleType: string,\r\n\tvehicleNo: string,\r\n  fileName: string,\r\n  showHomes: boolean,\r\n  homeSearchText: string,\r\n  searchResult: Array<IVisitor>,\r\n  isShowSearch: boolean\r\n};\r\n\r\nexport default class NewVisitor extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      homeId: '',\r\n      id: '',\r\n      type: 'VISITOR',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      arriveAt: null,\r\n      arriveAtTime: null,\r\n      personCount: 1,\r\n      vehicleType: 'BIKE',\r\n      vehicleNo: '',\r\n      fileName: '',\r\n      showHomes: false,\r\n      homeSearchText: '',\r\n      searchResult: [],\r\n      isShowSearch: false\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onImageSelect = this.onImageSelect.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.appUser.role === ROLE.USER){\r\n      this.setState({\r\n        homeId: this.props.user.homes[this.props.appUser.homeIndex]._id\r\n      });\r\n    } \r\n  };\r\n\r\n  onImageSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        this.setState({\r\n          fileName: fileName\r\n        });\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        this.props.onUpload(data, (result: boolean, message: string) => {\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSave = () => {\r\n    if((this.props.appUser.role === ROLE.USER || isNN(this.props.gateNo)) && (this.props.appUser.role !== ROLE.USER || isNNObject(this.state.arriveAt)) && this.state.showHomes === false && this.state.homeId.length > 0 && isNN(this.state.name) && this.state.personCount > 0 && isNN(this.state.fileName)){\r\n      let arriveAt = this.state.arriveAt;\r\n      if(isNNObject(arriveAt)){\r\n        let arriveAtTime;\r\n        if(isNNObject(this.state.arriveAt) && isNN(this.state.arriveAtTime)){\r\n          arriveAtTime = this.state.arriveAtTime.split(':');\r\n        }\r\n        if(isNN(arriveAtTime) && arriveAtTime.length > 1){\r\n          arriveAt.setHours(parseInt(arriveAtTime[0]), parseInt(arriveAtTime[1]), 0,0);\r\n        }else{\r\n          arriveAt.setHours(0, 0, 0, 0);\r\n        }\r\n      }\r\n      let visitor = {\r\n        _id: '',\r\n        type: this.state.type,\r\n        name: this.state.name,\r\n        age: this.state.age,\r\n        gender: this.state.gender,\r\n        mobileNo: this.state.mobileNo,\r\n        emailId: '',\r\n        arriveAt: arriveAt,\r\n        personCount: this.state.personCount,\r\n        vehicleType: this.state.vehicleType,\r\n        vehicleNo: this.state.vehicleNo,\r\n        image: this.state.fileName,\r\n        passCode: '',\r\n        gateNo: this.props.gateNo\r\n      } as IVisitor;\r\n      visitor = Object.assign(visitor, {\r\n        isUser: (this.props.appUser.role === ROLE.USER)\r\n      });\r\n      this.props.onToggleLoading(true);\r\n      this.props.onSave(this.state.homeId, visitor, this.props.user, this.props.appUser, (result: IVisitor) => {\r\n          // this.props.navigation.navigation.goBack(null);\r\n          this.onClear();\r\n          this.props.onToggleLoading(false);\r\n          if(this.props.appUser.role === ROLE.USER){\r\n            Toast.success('Visitor Request created successfully. Please share the passcode(' + result.passCode + ') to yor visitor and ask him/her to show it to the security in the gate while entering.');\r\n          }else{\r\n            Toast.success('Visitor created successfully. Notification sent to the home members for approval. If this visitor got approved from home member then allow him/her inside.')\r\n          }\r\n      }, (message: string) => {\r\n          this.props.onToggleLoading(false);\r\n          Toast.fail('Failed to save visitor ' + visitor.name + '.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill Gate Number, Home, Name, People count and Image before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({ \r\n      homeId: (this.props.appUser.role === ROLE.USER) ? this.state.homeId : '',\r\n      id: '',\r\n      type: 'VISITOR',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      arriveAt: null,\r\n      arriveAtTime: null,\r\n      personCount: 1,\r\n      vehicleType: 'BIKE',\r\n      vehicleNo: '',\r\n      fileName: '',\r\n      showHomes: false,\r\n      homeSearchText: '',\r\n      searchResult: [],\r\n      isShowSearch: false\r\n    });\r\n  };\r\n  \r\n  onSearch = () => {\r\n    if(this.state.mobileNo.length > 2){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onSearch(this.state.mobileNo, (result: Array<IVisitor>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          isShowSearch: true,\r\n          searchResult: result\r\n        });\r\n\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(message);\r\n        this.setState({\r\n          isShowSearch: false,\r\n          searchResult: []\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View>\r\n          {this.props.appUser.role === ROLE.GATEKEEPER &&\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder='Enter Home Number' className='form-control'\r\n            style={{...modelStyles.ele, ...styles.ele,\r\n              flexDirection: 'row',\r\n              padding: 12,\r\n              borderWidth: 1,\r\n              borderColor: COLOR.HR_COLOR,\r\n              borderRadius: 5\r\n            }} \r\n            value={this.state.homeSearchText} \r\n            onChange={(event: any) => this.setState({showHomes: true, homeSearchText: event.target.value})} />\r\n          </View>\r\n          }\r\n          {\r\n            (this.props.appUser.role === ROLE.GATEKEEPER && this.state.showHomes && isNN(this.state.homeSearchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n              {\r\n                this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.homeSearchText.toLowerCase()) >= 0).map((d: IHome, i: number) => {\r\n                  return(\r\n                    <Text \r\n                    className='pointer'\r\n                    key={'ho' + i}\r\n                    style={{...styles.ele, flexDirection: 'column', margin: 3, padding: 6, backgroundColor: COLOR.CARD_UNDERLAY}}\r\n                    onClick={() => {\r\n                      this.setState({homeSearchText: d.number, homeId: d._id, showHomes: false});\r\n                    }}>{d.number}</Text>\r\n                  )\r\n                })\r\n              }\r\n            </ScrollView>\r\n          }\r\n          {this.props.appUser.role === ROLE.GATEKEEPER &&\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'VISITOR'} text='Visitor' onPress={() => this.setState({type: 'VISITOR'})} />\r\n            <RadioButton isActive={this.state.type === 'DELIVERY'} text='Delivery' onPress={() => this.setState({type: 'DELIVERY'})} />\r\n          </View>\r\n          }\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder='Mobile Number' className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} \r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSearch);\r\n            }} />\r\n            <span className='icon-holder cur-p' onClick={this.onSearch}>\r\n              <i className='ti-search pdd-right-10 fw-900'></i>\r\n            </span>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          {this.props.appUser.role === ROLE.USER &&\r\n          <View style={modelStyles.row}>\r\n            <Text>Arrival At &nbsp;</Text>\r\n            <DatePicker minDate={moment().toDate()} maxDate={moment().add(2,'d').toDate()}\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                arriveAt: date\r\n              });\r\n            }}\r\n            value={this.state.arriveAt}\r\n            />\r\n            <Text>&nbsp;</Text>\r\n            <TimePicker\r\n            value={this.state.arriveAtTime}\r\n            // minTime={(isNN(this.state.arriveAt) && this.state.arriveAt.getDate() === moment().toDate().getDate()) ? moment().toDate() : null}\r\n            onChange={(time: any) => {\r\n              this.setState({\r\n                arriveAtTime: time\r\n              });\r\n            }}\r\n            />\r\n          </View>\r\n          }\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' placeholder='Age' className='form-control' maxLength={3} style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele, width: 'auto', display:'inline-block', marginRight: 10}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n            <View style={{display:'inline-block', width: 'auto'}}>\r\n              <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n              <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n              <RadioButton isActive={this.state.gender === 'O'} text='Other' onPress={() => this.setState({gender: 'O'})} />\r\n            </View>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' placeholder='People Count' className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele, width: 'auto', display:'inline-block', marginRight: 10}} value={this.state.personCount > 0 ? this.state.personCount + '' : ''} onChange={(event: any) => this.setState({personCount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n            <Picker className='form-control' value={this.state.vehicleType} style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele, display:'inline-block', width: 'auto', marginRight: 10}}\r\n            onChange={(event: any) => this.setState({vehicleType: event.target.value})}>\r\n              <option value='WALK'>WALK</option>\r\n              <option value='CYCLE'>CYCLE</option>\r\n              <option value='BIKE'>BIKE</option>\r\n              <option value='CAR'>CAR</option>\r\n              <option value='VAN'>VAN</option>\r\n              <option value='JEEP'>JEEP</option>\r\n              <option value='TEMPO'>TEMPO</option>\r\n              <option value='BUS'>BUS</option>\r\n              <option value='TRUCK'>TRUCK</option>\r\n            </Picker>\r\n            <TextInput type='text' placeholder='Vehicle No' className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele, display:'inline-block', width: 'auto'}} value={this.state.vehicleNo} onChange={(event: any) => this.setState({vehicleNo: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n              <input type='file' name='image' placeholder='SELECT IMAGE' onChange={this.onImageSelect}/>\r\n              {isNN(this.state.fileName) &&\r\n              <Text style={{...styles.ele, marginLeft: 15}}>{this.state.fileName}</Text>\r\n              }\r\n          </View>\r\n          <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              style={{...styles.ele, marginRight: 10}}\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={this.onClear}\r\n              style={styles.ele}\r\n              />\r\n          </View>\r\n          {this.state.isShowSearch &&\r\n          <Modal\r\n          open={this.state.isShowSearch}\r\n          onClose={() => this.setState({ isShowSearch: false })}>\r\n            <View style={popupStyles.container}>\r\n              <VisitorsView user={this.props.user} appUser={this.props.appUser} data={this.state.searchResult} isActive={false} isSearch={true} onSelect={(data: IVisitor) => {\r\n                this.setState({\r\n                  isShowSearch: false,\r\n                  searchResult: [],\r\n                  name: data.name,\r\n                  age: data.age,\r\n                  gender: data.gender,\r\n                  mobileNo: data.mobileNo,\r\n                  vehicleType: data.vehicleType,\r\n                  vehicleNo: data.vehicleNo,\r\n                  fileName: data.image\r\n                });\r\n                }} />\r\n            </View>\r\n          </Modal>\r\n          }\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  },\r\n  ele: {\r\n    fontSize: 17\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, TextInput, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home';\r\nimport NewVisitor from './new-visitor';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\nimport { COLOR } from '../../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onGateNoChanged: (gateNo: string) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearchVisitor: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  gateNo: string,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      gateNo: '',\r\n      isLoading: false\r\n    }\r\n    this.viewAllVisitors = this.viewAllVisitors.bind(this);\r\n    this.viewAllTakeaways = this.viewAllTakeaways.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      gateNo: this.props.gateNo\r\n    })\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  viewAllVisitors = () => {\r\n    if(isNN(this.state.gateNo)) {\r\n      this.props.history.push('all-visitors')\r\n    } else {\r\n      Toast.warn('Please enter Gate Number to view this page.');\r\n    }\r\n  };\r\n  \r\n  viewAllTakeaways = () => {\r\n    if(isNN(this.state.gateNo)) {\r\n      this.props.history.push('all-takeways')\r\n    } else {\r\n      Toast.warn('Please enter Gate Number to view this page.');\r\n    }\r\n  };\r\n  \r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n            <View className='bgc-white p-20'>\r\n              <View className=\"\">\r\n                <TextInput type='text' placeholder='Gate Number' className='form-control' style={{width: 'auto'}} value={this.state.gateNo} onChange={(event: any) => this.setState({gateNo: event.target.value})} onBlur={() => this.props.onGateNoChanged(this.state.gateNo)} />\r\n              \r\n              \r\n                <Text className='fr pointer' onClick={this.viewAllTakeaways} style={{...styles.ele, color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right'}}>View all Active Takeaways</Text>\r\n                <Text className='fr pointer' onClick={this.viewAllVisitors} style={{...styles.ele, color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right', marginRight: 20}}>View all Active Visitors</Text>\r\n              </View>\r\n              <NewVisitor appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} gateNo={this.state.gateNo} onToggleLoading={(isLoading) => this.setState({ isLoading: isLoading })} onSave={this.props.onSaveVisitor} onUpload={this.props.onUpload} onSearch={this.props.onSearchVisitor} />\r\n              <Spinner visible={this.state.isLoading} />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  ele: {\r\n    fontSize: 17\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { Text, View } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { IVisitor } from '../../models/home';\r\nimport Home from './home';\r\nimport AMHome from './manager/home';\r\nimport GKHome from './gatekeeper/home';\r\nimport { ROLE } from '../../constants/index';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  outings: IOutings,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  tickets: ITickets,\r\n  blocks: IBlocks,\r\n  gateNo: string,\r\n  onGateNoChanged: (gateNo: string) => void,\r\n  onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearchVisitor: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n};\r\n\r\nexport default class Dashboard extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    if(this.props.appUser.role === ROLE.USER) {\r\n      if(this.props.appUser.homeIndex >= 0 && isNN(this.props.user.homes)) {\r\n        return(<Home history={this.props.history} user={this.props.user} home={this.props.user.homes[this.props.appUser.homeIndex]} onPaymentUpload={(file: any, homeId: string, callback: (result: boolean) => void) => this.props.onPaymentUpload(file, homeId, this.props.user, callback)} onPaymentUpdate={(paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => this.props.onPaymentUpdate(paymentId, transaction, this.props.appUser.homeIndex, this.props.user, callback)} />);\r\n      }else{\r\n        return(<View id='mainContent'><Text style={{margin: 20}}>No home assigned to you. Please contact administrator/manager.</Text></View>);\r\n      }\r\n    }\r\n    else if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      return(<AMHome history={this.props.history} appUser={this.props.appUser} user={this.props.user} users={this.props.users} homes={this.props.homes} blocks={this.props.blocks} />);\r\n    }\r\n    else if(this.props.appUser.role === ROLE.GATEKEEPER) {\r\n      return(<GKHome history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} gateNo={this.props.gateNo} onGateNoChanged={this.props.onGateNoChanged} onSaveVisitor={this.props.onSaveVisitor} onUpload={this.props.onUpload} onSearchVisitor={this.props.onSearchVisitor} />);\r\n    }else{\r\n      return(<View id='mainContent'><Text style={{margin: 20}}>No role assigned to you. Please contact administrator/manager.</Text></View>);\r\n    }\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { ITransaction } from '../models/home/transaction';\r\nimport { IVisitor } from '../models/home';\r\nimport { setGateNo } from '../store/actions/account';\r\nimport { upload, update } from '../store/actions/payment';\r\nimport { save as saveVisitor, search as searchVisitor } from '../store/actions/visitor';\r\nimport { upload as fileUpload } from '../store/actions/file';\r\nimport Page from '../components/home/dashboard';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    outings: state.Outings,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    tickets: state.Tickets,\r\n    blocks: state.Blocks,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onGateNoChanged: (gateNo: string) => dispatch(setGateNo(gateNo)),\r\n    onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => dispatch(upload(file, homeId, user, callback)),\r\n    onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => dispatch(update(paymentId, transaction, homeIndex, user, callback)),\r\n    onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => dispatch(saveVisitor(homeId, data, user, appUser, sCallback, fCallback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(fileUpload(data, callback)),\r\n    onSearchVisitor: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => dispatch(searchVisitor(searchText, sCallback, fCallback))\r\n});\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IMember } from '../../models/home/member';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n////import { number } from 'prop-types';\r\n////import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'member';\r\nlet accountController: string = 'account';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.member) && isNN(result.data.member._id)) {\r\n      sCallback(result.data.member, result.data.homeIds ? result.data.homeIds : []);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Member.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IMember, user: IUser, homeIndex: number, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        let members = user.homes[homeIndex].members;\r\n        var foundIndex = members.findIndex(d => d._id === result.data);\r\n        members[foundIndex]._id = result.data;\r\n        members[foundIndex].number = data.number;\r\n        members[foundIndex].name = data.name;\r\n        members[foundIndex].age = data.age;\r\n        members[foundIndex].gender = data.gender;\r\n        members[foundIndex].mobileNo = data.mobileNo;\r\n        members[foundIndex].emailId = data.emailId;\r\n        members[foundIndex].type = data.type;\r\n        \r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    data = Object.assign(data, {\r\n      password: data.mobileNo\r\n    });\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        let members = user.homes[homeIndex].members;\r\n        members.push(data);\r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const saveByAM = (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    isAM: true,\r\n    homeIds: homeIds,\r\n    isApprove: isApprove\r\n  });\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          var foundIndex = users.data.findIndex(d => d._id === result.data);\r\n          if(foundIndex >= 0){\r\n            users.data[foundIndex]._id = result.data;\r\n            users.data[foundIndex].name = data.name;\r\n          } else {\r\n            users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          }\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const removeByAM = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadWFAUsers = (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(accountController + '/wfausers', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNNObject(result) && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const reject = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(accountController + '/rejectuser/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  data: Array<{title: string, link: string}>\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return (\r\n    <div className='mB-10'>\r\n      <Link to=''>Home</Link>\r\n      {props.data.map((d, i) => {\r\n        return(<>\r\n        <span key={'bd' + i} className='mL-10 mR-10'>/</span>\r\n        {(i === props.data.length - 1) ?\r\n        <span key={'bc' + i}>{d.title}</span>\r\n        :\r\n        <Link key={'bc' + i} to={'/' + d.link}>{d.title}</Link>\r\n        }\r\n        </>);\r\n      })}\r\n    </div>\r\n  );\r\n}","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Image, Text, TextInput } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport RadioButton from '../common/radio-button';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IMember } from '../../models/home/member';\r\nimport { styles } from '../../styles/page';\r\nimport { styles as iconStyles } from '../../styles/icon';\r\nimport { styles as modelStyles } from '../../styles/model';\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => void,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class Members extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSave(member, this.props.user, this.props.homeIndex, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n            Toast.success('Member saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n          }\r\n        });\r\n    }else{\r\n      // Toast.warn('Please fill all the required fields before '+ (this.state.id > 0 ? 'Update' : 'Save') + '.');\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.homeIndex, this.props.user, this.props.users, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Member removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove member.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n            <Breadcrum data={[{title: 'Members', link: 'members'}]} />\r\n            <View className='bgc-white p-20'>\r\n\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-member')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n      {isNN(this.props.user.homes[this.props.homeIndex].members) ?\r\n        this.props.user.homes[this.props.homeIndex].members.map((d: IMember, i: number) => {\r\n          return(\r\n            (this.state.isEdit === true && this.state.id === d._id) ?\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n                <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n                <RadioButton isActive={this.state.gender === 'O'} text='Other' onPress={() => this.setState({gender: 'O'})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n                <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n              <span className=\"icon-holder mR-10 cur-p\" onClick={this.onSave}>\r\n                <i className=\"c-green-500 fa fa-check\"></i>\r\n              </span>\r\n\t\t\t\t      <span className=\"icon-holder cur-p\" onClick={() => {\r\n                  this.setState({\r\n                    isEdit: false,\r\n                    id: '',\r\n                    number: '',\r\n                    name: '',\r\n                    age: 0,\r\n                    gender: '',\r\n                    mobileNo: '',\r\n                    emailId: '',\r\n                    type: 'OWNER',\r\n                    role: 'USER'\r\n                  });\r\n                }}>\r\n\t\t\t\t\t      <i className=\"c-red-500 fa fa-times\"></i>\r\n\t\t\t\t      </span>\r\n              </View>\r\n            </View>\r\n            :\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                <Text>{d.name}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n              </View>\r\n              {isNN(d.mobileNo) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.emailId) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.emailId}</Text>\r\n              </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                <Text>{d.type}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d._id,\r\n                    number: d.number,\r\n                    name: d.name,\r\n                    age: d.age,\r\n                    gender: d.gender,\r\n                    mobileNo: d.mobileNo,\r\n                    emailId: d.emailId,\r\n                    type: d.type,\r\n                    role: d.role\r\n                  });\r\n                }}>\r\n                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                </span>\r\n                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <i className=\"c-red-500 fa fa-trash\"></i>\r\n                </span>    \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No member found.</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUsers } from '../models/store/users';\r\nimport { IUser } from '../models/user/user';\r\nimport { IMember } from '../models/home';\r\nimport { save, remove } from '../store/actions/member';\r\nimport Page from '../components/home/members';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    users: state.Users,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, sCallback)),\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, sCallback: (result: boolean) => void) => dispatch(remove(id, homeIndex, user, users, sCallback))\r\n});\r\n\r\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\n// import { CheckBox  } from 'react-native-elements';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IMember } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class NewMember extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSave(member, this.props.user, this.props.homeIndex, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Member saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n            <Breadcrum data={[{title: 'Members', link: 'members'}, {title: 'New Member', link: 'new-member'}]} />\r\n            <View className='bgc-white p-20'>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n            <RadioButton isActive={this.state.gender === 'O'} text='Other' onPress={() => this.setState({gender: 'O'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IMember } from '../models/home';\r\nimport { save } from '../store/actions/member';\r\nimport Page from '../components/home/new-member';\r\n////import { number } from 'prop-types';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, sCallback))\r\n});\r\n\r\nexport const NewMember = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'vehicle';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IVehicle, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let vehicles = user.homes[homeIndex].vehicles;\r\n        var foundIndex = vehicles.findIndex(d => d._id === result.data);\r\n        vehicles[foundIndex]._id = result.data;\r\n        vehicles[foundIndex].number = data.number;\r\n        vehicles[foundIndex].type = data.type;\r\n        user.homes[homeIndex].vehicles = vehicles;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n  new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      data._id = result.data;\r\n      data.createdBy = user.name;\r\n      let vehicles = user.homes[homeIndex].vehicles;\r\n      vehicles.push(data);\r\n      user.homes[homeIndex].vehicles = vehicles;\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].vehicles = user.homes[homeIndex].vehicles.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Text, Image, TextInput, } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN } from '../../util/index';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string, \r\n  number: string, \r\n  type: string\r\n};\r\n\r\nexport default class Vehicles extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '', \r\n      number: '', \r\n      type: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.number) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let vehicle = {\r\n          _id: this.state.id,\r\n          number: this.state.number,\r\n          type: this.state.type\r\n        } as IVehicle;\r\n        this.props.onSave(vehicle, this.props.user, this.props.homeIndex, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              number: '',\r\n              type: ''\r\n            });\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Vehicle removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove vehicle.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Vehicles', link: 'vehicles'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-vehicle')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n        {isNN(this.props.user.homes[this.props.homeIndex].vehicles) ?\r\n          this.props.user.homes[this.props.homeIndex].vehicles.map((d: IVehicle, i: number) => {\r\n            return(\r\n              (this.state.isEdit === true && this.state.id === d._id) ?\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <RadioButton isActive={this.state.type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => this.setState({type: 'TWO WHEELER'})} />\r\n                  <RadioButton isActive={this.state.type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => this.setState({type: 'FOUR WHEELER'})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={this.onSave}>\r\n                  <i className=\"c-green-500 fa fa-check\"></i>\r\n                </span>\r\n                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      number: '', \r\n                      type: ''\r\n                    });\r\n                  }}>\r\n                  <i className=\"c-red-500 fa fa-times\"></i>\r\n                </span>\r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>                  \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.number}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      number: d.number,\r\n                      type: d.type\r\n                    });\r\n                  }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No vehicle found.</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVehicle } from '../models/home';\r\nimport { save, remove } from '../store/actions/vehicle';\r\nimport Page from '../components/home/vehicles';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, sCallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, sCallback))\r\n});\r\n\r\nexport const Vehicles = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string, \r\n  number: string, \r\n  type: string\r\n};\r\n\r\nexport default class NewVehicle extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '', \r\n      number: '', \r\n      type: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.number) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let vehicle = {\r\n          _id: this.state.id,\r\n          number: this.state.number,\r\n          type: this.state.type\r\n        } as IVehicle;\r\n        this.props.onSave(vehicle, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              type: ''\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Vehicles', link: 'vehicles'}, {title: 'New Vehicle', link: 'new-vehicle' }]} />  \r\n        <View className='bgc-white p-20'>        \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => this.setState({type: 'TWO WHEELER'})} />\r\n            <RadioButton isActive={this.state.type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => this.setState({type: 'FOUR WHEELER'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVehicle } from '../models/home';\r\nimport { save } from '../store/actions/vehicle';\r\nimport Page from '../components/home/new-vehicle';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, sCallback))\r\n});\r\n\r\nexport const NewVehicle = connect(mapStateToProps, mapDispatchToProps)(Page);","import { IServant, ITakeaway } from '../../models/home/servant';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'servant';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Servants.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IServant, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n      //   let servants = user.homes[homeIndex].servants;\r\n      //   var foundIndex = servants.findIndex(d => d._id === result.data);\r\n      //   servants[foundIndex]._id = result.data;\r\n      //   servants[foundIndex].name = data.name;\r\n      //   servants[foundIndex].age = data.age;\r\n      //   servants[foundIndex].gender = data.gender;\r\n      //   servants[foundIndex].mobileNo = data.mobileNo;\r\n      //   servants[foundIndex].emailId = data.emailId;\r\n           \r\n      //   user.homes[homeIndex].servants = servants;\r\n      //   dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // data._id = result.data;\r\n        // data.createdBy = user.name;\r\n        // let servants = user.homes[homeIndex].servants;\r\n        // servants.push(data);\r\n        // user.homes[homeIndex].servants = servants;\r\n        // dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // user.homes[homeIndex].servants = user.homes[homeIndex].servants.filter((d, i) => d._id !== id);\r\n      // dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const createTakeaway = (id: string, data: ITakeaway, sCallback:(result: string) => void, fCallback:(message: string) => void) => (dispatch: any) => {\r\n  if(isNN(data._id)){\r\n    new Api().put(controller + '/takeaway/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        sCallback(result.data);\r\n      }else{\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to update takeaway.');\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/takeaway/' + id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        sCallback(result.data);\r\n      }else{\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to create Takeaway.');\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const removeTakeaway = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/takeaway/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const exitTakeaway = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/exittakeaway/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, {\r\n    gateNo: gateNo\r\n  });\r\n};\r\n\r\nexport const loadActiveTakeaways = (appClientId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/takeaways/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Takeaways.');\r\n    }\r\n  });\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    padding: 15,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  },\r\n  addCmntCnt: {\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  newCmnt:{\r\n    width: '100%',\r\n    borderWidth: 1,\r\n    borderColor: COLOR.HR_COLOR\r\n  },\r\n  saveBtn:{\r\n    marginTop: 5\r\n  }\r\n};","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Text, Image, TextInput, TextArea } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServant, ITakeaway } from '../../models/home/servant';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as commonStyles} from '../../styles/common';\r\nimport {styles as commentsStyles} from '../../styles/comments';\r\nimport Images from '../images';\r\nimport { isNN } from '../../util/index';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\nimport Button from '../common/button';\r\nimport { toDateTimeString } from '../../util/convert';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, sCallback: (result: boolean) => void) => void,\r\n  onCreateTakeaway: (id: string, data: ITakeaway, sCallback:(result: string) => void, fCallback:(message: string) => void) => void,\r\n  onRemoveTakeaway: (id: string, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IServant>,\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  viewId: string,\r\n  takeaways: Array<ITakeaway>,\r\n  takeawayTitle: string,\r\n  takeawayDesc: string,\r\n  editTakeawayId: string,\r\n  editTakeawayTitle: string\r\n  editTakeawayDesc: string\r\n};\r\n\r\nexport default class Servants extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      viewId: '',\r\n      takeaways: [],\r\n      takeawayTitle: '',\r\n      takeawayDesc: '',\r\n      editTakeawayId: '',\r\n      editTakeawayTitle: '',\r\n      editTakeawayDesc: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onView = this.onView.bind(this);\r\n    this.onCreateTakeaway = this.onCreateTakeaway.bind(this);\r\n    this.onUpdateTakeaway = this.onUpdateTakeaway.bind(this);\r\n    this.onRemoveTakeaway = this.onRemoveTakeaway.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.homes[this.props.homeIndex]._id, (result: Array<IServant>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let servant = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : ''\r\n        } as IServant;\r\n        this.props.onSave(this.props.user.homes[this.props.homeIndex]._id, servant, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            var foundIndex = this.state.data.findIndex(d => d._id === this.state.id);\r\n            this.state.data[foundIndex].name = this.state.name;\r\n            this.state.data[foundIndex].age = this.state.age;\r\n            this.state.data[foundIndex].gender = this.state.gender;\r\n            this.state.data[foundIndex].mobileNo = this.state.mobileNo;\r\n            this.state.data[foundIndex].emailId = this.state.emailId;\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              viewId: '',\r\n              takeaways: [],\r\n              takeawayTitle: '',\r\n              takeawayDesc: '',\r\n              editTakeawayId: '',\r\n              editTakeawayTitle: '',\r\n              editTakeawayDesc: ''\r\n            });\r\n            Toast.success('Servant saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servant.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, (result: boolean) => {\r\n              if(result === true){\r\n                this.setState({\r\n                  isLoading: false,\r\n                  data: this.state.data.filter((d, i) => d._id !== id),\r\n                  viewId: '',\r\n                  takeaways: [],\r\n                  takeawayTitle: '',\r\n                  takeawayDesc: '',\r\n                  editTakeawayId: '',\r\n                  editTakeawayTitle: '',\r\n                  editTakeawayDesc: ''\r\n                });\r\n                Toast.success('Servant removed successfully.');\r\n              }else{\r\n                this.setState({\r\n                  isLoading: false,\r\n                });\r\n                Toast.fail('Failed to remove servant.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n  \r\n  onView = (id: string, takeaways: Array<ITakeaway>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        takeaways: [],\r\n        takeawayTitle: '',\r\n        takeawayDesc: '',\r\n        editTakeawayId: '',\r\n        editTakeawayTitle: '',\r\n        editTakeawayDesc: ''\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        takeaways: takeaways,\r\n        takeawayTitle: '',\r\n        takeawayDesc: '',\r\n        editTakeawayId: '',\r\n        editTakeawayTitle: '',\r\n        editTakeawayDesc: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  onCreateTakeaway = (id: string) => {\r\n    if(isNN(this.state.takeawayTitle) && isNN(this.state.takeawayDesc)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onCreateTakeaway(id, {\r\n        _id: '',\r\n        title: this.state.takeawayTitle,\r\n        description: this.state.takeawayDesc,\r\n        createdBy: this.props.user.name,\r\n        createdAt: new Date(),\r\n        updatedBy: this.props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITakeaway, (result: string) => {\r\n        var foundIndex = this.state.data.findIndex(d => d._id === id);\r\n        this.state.data[foundIndex].takeaways.unshift({\r\n          _id: result,\r\n          title: this.state.takeawayTitle,\r\n          description: this.state.takeawayDesc,\r\n          createdAt: new Date(),\r\n          createdBy: this.props.user.name,\r\n          updatedBy: this.props.user._id,\r\n          updatedAt: new Date()\r\n        } as ITakeaway);\r\n        this.setState({\r\n          isLoading: false,\r\n          takeawayTitle: '',\r\n          takeawayDesc: ''\r\n        });\r\n        Toast.success('Takeayway added successfully.');\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        Toast.fail('Failed to add takeaway.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill Takeaway title & description before Add.');\r\n    }\r\n  };\r\n\r\n  onUpdateTakeaway = (id: string) => {\r\n    if(isNN(this.state.editTakeawayTitle) && isNN(this.state.editTakeawayDesc)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onCreateTakeaway(id, {\r\n        _id: this.state.editTakeawayId,\r\n        title: this.state.editTakeawayTitle,\r\n        description: this.state.editTakeawayDesc,\r\n        createdBy: this.props.user.name,\r\n        createdAt: new Date(),\r\n        updatedBy: this.props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITakeaway, (result: string) => {\r\n        var foundIndex = this.state.data.findIndex(d => d._id === id);        \r\n        var takeawayIndex = this.state.data[foundIndex].takeaways.findIndex(d => d._id === this.state.editTakeawayId);\r\n        this.state.data[foundIndex].takeaways[takeawayIndex].title = this.state.editTakeawayTitle;\r\n        this.state.data[foundIndex].takeaways[takeawayIndex].description = this.state.editTakeawayDesc;\r\n        this.state.data[foundIndex].takeaways[takeawayIndex].updatedBy = this.props.user.name;\r\n        this.state.data[foundIndex].takeaways[takeawayIndex].updatedAt = new Date();\r\n        this.setState({\r\n          isLoading: false,\r\n          editTakeawayId: '',\r\n          editTakeawayTitle: '',\r\n          editTakeawayDesc: ''\r\n        });\r\n        Toast.success('Takeayway updated successfully.');\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        Toast.fail('Failed to update takeaway.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill Takeaway title & description before Add.');\r\n    }\r\n  };\r\n\r\n  onRemoveTakeaway = (id: string, servantId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete this takeaway?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemoveTakeaway(id, (result: boolean) => {\r\n              var foundIndex = this.state.data.findIndex(d => d._id === servantId);        \r\n              this.state.data[foundIndex].takeaways = this.state.data[foundIndex].takeaways.filter((d, i) => d._id !== id);\r\n              if(result === true){\r\n                this.setState({\r\n                  isLoading: false,\r\n                  editTakeawayId: '',\r\n                  editTakeawayTitle: '',\r\n                  editTakeawayDesc: '',\r\n                  viewId: ''\r\n                });\r\n                Toast.success('Takeaway removed successfully.');\r\n              }else{\r\n                this.setState({\r\n                  isLoading: false\r\n                });\r\n                Toast.fail('Failed to remove takeaway.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Servants', link: 'servants'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-servant')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n        {isNN(this.state.data) ?\r\n          this.state.data.map((d: IServant, i: number) => {\r\n            return(\r\n              (this.state.isEdit === true && this.state.id === d._id) ?\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n                  <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n                  <RadioButton isActive={this.state.gender === 'O'} text='Other' onPress={() => this.setState({gender: 'O'})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={this.onSave}>\r\n\t\t\t\t\t          <i className=\"c-green-500 fa fa-check\"></i>\r\n\t\t\t\t          </span>\r\n\t\t\t\t          <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      name: '',\r\n                      age: 0,\r\n                      gender: '',\r\n                      mobileNo: '',\r\n                      emailId: '',\r\n                      viewId: '',\r\n                      takeaways: [],\r\n                      takeawayTitle: '',\r\n                      takeawayDesc: '',\r\n                      editTakeawayId: '',\r\n                      editTakeawayTitle: '',\r\n                      editTakeawayDesc: ''\r\n                    });\r\n                  }}>\r\n\t\t\t\t\t          <i className=\"c-red-500 fa fa-times\"></i>\r\n\t\t\t\t          </span>\r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={styles.ele}>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      name: d.name,\r\n                      age: d.age,\r\n                      gender: d.gender,\r\n                      mobileNo: d.mobileNo,\r\n                      emailId: d.emailId,\r\n                      viewId: '',\r\n                      takeaways: [],\r\n                      takeawayTitle: '',\r\n                      takeawayDesc: '',\r\n                      editTakeawayId: '',\r\n                      editTakeawayTitle: '',\r\n                      editTakeawayDesc: ''\r\n                    });\r\n                  }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n                  <span style={{}} onClick={() => {\r\n                    this.onView(d._id, d.takeaways);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Takeaways'}</Text>\r\n                  </span>   \r\n                </View>\r\n                {this.state.viewId === d._id &&\r\n                <View style={commentsStyles.cmntsCnr}>\r\n                  <View style={commentsStyles.cmntsHdr}>\r\n                    <Text className='bold' style={commentsStyles.cmntsHdrTxt}>Takeaways</Text>\r\n                  </View>\r\n                  <View style={commentsStyles.cmntsCnt}>\r\n                    <View style={commentsStyles.addCmntCnt}>\r\n                      <TextInput type='text' placeholder='Takeaway Title' className='form-control' style={{...commonStyles.textInput, ...commentsStyles.newCmnt, marginBottom: 10}} value={this.state.takeawayTitle} onChange={(event: any) => this.setState({takeawayTitle: event.target.value})} />\r\n                      <TextArea placeholder='Takeaway Description' className='form-control' style={{...commonStyles.textInput, ...commentsStyles.newCmnt}} value={this.state.takeawayDesc} onChange={(event: any) => this.setState({takeawayDesc: event.target.value})} />\r\n                      <View style={commentsStyles.saveBtn}>\r\n                        <Button\r\n                          title='ADD NEW TAKEAWAY'\r\n                          onPress={() => this.onCreateTakeaway(d._id)}\r\n                          />\r\n                      </View>\r\n                    </View>\r\n                    {isNN(this.state.takeaways) ?\r\n                      this.state.takeaways.map((e: ITakeaway, j: number) => {\r\n                        return(\r\n                        <View key={'tkycmt' + j} style={j === 0 ? commentsStyles.cmntCnrFst : commentsStyles.cmntCnr}>\r\n                          <View style={commentsStyles.cmntHdr}>\r\n                            <Text className='bold'>{e.createdBy + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            {\r\n                              (this.state.editTakeawayId === e._id && !e.isExit) ?\r\n                              <TextInput type='text' placeholder='Takeaway Title' className='form-control' style={{...commonStyles.textInput, ...commentsStyles.newCmnt, marginBottom: 10}} value={this.state.editTakeawayTitle} onChange={(event: any) => this.setState({editTakeawayTitle: event.target.value})} />\r\n                              :\r\n                              <Text>{e.title}</Text>\r\n                            }\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            {\r\n                              (this.state.editTakeawayId === e._id && !e.isExit) ?\r\n                              <TextArea placeholder='Takeaway Description' className='form-control' style={{...commonStyles.textInput, ...commentsStyles.newCmnt}} value={this.state.editTakeawayDesc} onChange={(event: any) => this.setState({editTakeawayDesc: event.target.value})} />\r\n                              :\r\n                              <Text>{e.description}</Text>\r\n                            }\r\n                          </View>\r\n                          {\r\n                            e.isExit ?\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text style={{color: COLOR.SUCCESS}}>{'Exit by ' + e.exitBy + ' in Gate ' + e.exitGateNo + ' on ' + toDateTimeString(e.exitAt)}</Text>\r\n                          </View>\r\n                          :\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text style={{color: COLOR.ERROR}}>Still not exit.</Text>\r\n                          </View>\r\n                          }\r\n                          {\r\n                            !e.isExit &&\r\n                            <>\r\n                              {\r\n                              this.state.editTakeawayId === e._id ?\r\n                              <View style={styles.ele}>\r\n                                <span className=\"icon-holder mR-10 cur-p\" onClick={() => this.onUpdateTakeaway(d._id)}>\r\n                                  <i className=\"c-green-500 fa fa-check\"></i>\r\n                                </span>\r\n                                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                                  this.setState({\r\n                                    editTakeawayId: '',\r\n                                    editTakeawayTitle: '',\r\n                                    editTakeawayDesc: ''\r\n                                  });\r\n                                }}>\r\n                                  <i className=\"c-red-500 fa fa-times\"></i>\r\n                                </span>\r\n                              </View>\r\n                              :\r\n                              <View style={styles.ele}>\r\n                                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                                  this.setState({\r\n                                    editTakeawayId: e._id,\r\n                                    editTakeawayTitle: e.title,\r\n                                    editTakeawayDesc: e.description\r\n                                  });\r\n                                }}>\r\n                                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                                  </span>\r\n                                  <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n                                    this.onRemoveTakeaway(e._id, d._id);\r\n                                  }}>\r\n                                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                                  </span>\r\n                              </View>\r\n                              }\r\n                            </>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No takeaway found.</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No servant found.</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IServant, ITakeaway } from '../models/home';\r\nimport { loadAllByHome, save, remove, createTakeaway, removeTakeaway } from '../store/actions/servant';\r\nimport Page from '../components/home/servants';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => dispatch(loadAllByHome(homeId, sCallback, fCallback)),\r\n    onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => dispatch(save(homeId, data, sCallback)),\r\n    onRemove: (id: string, sCallback: (result: boolean) => void) => dispatch(remove(id, sCallback)),\r\n    onCreateTakeaway: (id: string, data: ITakeaway, sCallback:(result: string) => void, fCallback:(message: string) => void) => dispatch(createTakeaway(id, data, sCallback, fCallback)),\r\n    onRemoveTakeaway: (id: string, sCallback: (result: boolean) => void) => dispatch(removeTakeaway(id, sCallback))\r\n});\r\n\r\nexport const Servants = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IServant, ITakeaway } from '../../../models/home/servant';\r\nimport { styles } from \"../../../styles/page\";\r\nimport {styles as commentsStyles} from '../../../styles/comments';\r\nimport Toast from  '../../../util/toast';\r\nimport { isNN } from '../../../util';\r\nimport { toDateTimeString } from '../../../util/convert';\r\nimport { ROLE } from '../../../constants';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void,\r\n  onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IServant>,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Takeaways extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoading: false\r\n    }\r\n    this.onExit = this.onExit.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (result: Array<IServant>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onExit = (id: string, servantId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Exit Servant with Takeaway',\r\n      message: 'Are you sure you wish to exit the servant with this takeaway things?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onExit(id, this.props.gateNo, (result: boolean) => {\r\n              if(result === true){\r\n                var foundIndex = this.state.data.findIndex(d => d._id === servantId);\r\n                this.state.data[foundIndex].takeaways = this.state.data[foundIndex].takeaways.filter(d => d._id !== id);\r\n                this.setState({\r\n                  isLoading: false\r\n                });\r\n                Toast.success('Servant exit with takeaway successfully.');\r\n              }else{\r\n                this.setState({\r\n                  isLoading: false,\r\n                });\r\n                Toast.fail('Failed to exit servant with takeaway.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Takeaways', link: 'all-takeaways'}]} />\r\n        <View className='bgc-white p-20'>\r\n        {(isNN(this.state.data) && isNN(this.state.data.filter(d => d.takeaways && d.takeaways.length > 0))) ?\r\n            this.state.data.filter(d => d.takeaways && d.takeaways.length > 0).map((d: IServant, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text className='bold'>{d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={commentsStyles.cmntsCnr}>\r\n                  <View style={commentsStyles.cmntsHdr}>\r\n                    <Text className='bold' style={commentsStyles.cmntsHdrTxt}>Takeaways</Text>\r\n                  </View>\r\n                  <View style={commentsStyles.cmntsCnt}>\r\n                    {isNN(d.takeaways) ?\r\n                      d.takeaways.map((e: ITakeaway, j: number) => {\r\n                        return(\r\n                        <View key={'tkycmt' + j} style={j === 0 ? commentsStyles.cmntCnrFst : commentsStyles.cmntCnr}>\r\n                          <View style={commentsStyles.cmntHdr}>\r\n                            <Text className='bold'>{e.createdBy + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text>{e.title}</Text>\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text>{e.description}</Text>\r\n                          </View>\r\n                          {this.props.appUser.role === ROLE.GATEKEEPER &&\r\n                          <View style={{...commentsStyles.cmntCnt, marginTop: 10}}>\r\n                            {!e.isExit && <Button title='Exit' onPress={() => { this.onExit(e._id, d._id) }} />}\r\n                          </View>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No takeaway found.</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found.</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IServant } from '../models/home';\r\nimport { loadActiveTakeaways, exitTakeaway } from '../store/actions/servant';\r\n\r\nimport Page from '../components/home/gatekeeper/takeaways';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) =>  dispatch(loadActiveTakeaways(appClientId, sCallback, fCallback)),\r\n    onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(exitTakeaway(id, gateNo, callback))\r\n});\r\n\r\nexport const AllTakeaways = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServant } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class NewServant extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let servant = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : ''\r\n        } as IServant;\r\n        this.props.onSave(this.props.user.homes[this.props.homeIndex]._id, servant, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: ''\r\n            });\r\n            // this.props..navigation.goBack(null)\r\n            Toast.success('Servant saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servant.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Servants', link: 'servants'}, {title: 'New Servant', link: 'new-servant' }]} />  \r\n        <View className='bgc-white p-20'>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={3} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n            <RadioButton isActive={this.state.gender === 'O'} text='Other' onPress={() => this.setState({gender: 'O'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IServant } from '../models/home';\r\nimport { save } from '../store/actions/servant';\r\nimport Page from '../components/home/new-servant';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => dispatch(save(homeId, data, sCallback))\r\n});\r\n\r\nexport const NewServant = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\n\r\nlet controller: string = 'ticket';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getTicketsResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      dispatch(getTicketsResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Tickets.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          if(isNN(tickets.data)) {\r\n            let arrTickets = [] as Array<ITicket>;\r\n            arrTickets = tickets.data;\r\n            var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n            arrTickets[foundIndex]._id = result.data;\r\n            arrTickets[foundIndex].title = data.title;\r\n            arrTickets[foundIndex].description = data.description;\r\n            arrTickets[foundIndex].status = data.status;\r\n            arrTickets[foundIndex].updatedBy = user.name;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n          arrTickets[foundIndex]._id = result.data;\r\n          arrTickets[foundIndex].title = data.title;\r\n          arrTickets[foundIndex].description = data.description;\r\n          arrTickets[foundIndex].status = data.status;\r\n          arrTickets[foundIndex].updatedBy = user.name;\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              _homeId: user.homes[homeIndex].number,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      // }\r\n      // if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n      //   user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n      //   dispatch(getUserResult(user as IUser));\r\n      // }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const resolve = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/resolve/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const start = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  let newStatus = 'IN-PROGRESS';\r\n  new Api().put(controller + '/start/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          arrTickets = tickets.data;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n          arrTickets[foundIndex].status = newStatus;\r\n          dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        let arrTickets = user.homes[homeIndex].tickets;\r\n        var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n        arrTickets[foundIndex].status = newStatus;\r\n        user.homes[homeIndex].tickets = arrTickets;\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  },{\r\n    status: newStatus\r\n  });\r\n};\r\n\r\nexport const addComment = (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(isNN(comment._id)){\r\n    new Api().put(controller + '/comment/' + comment._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n            var commentIndex = arrTickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n            // arrTickets[ticketIndex].comments[commentIndex] = result.data;\r\n            arrTickets[ticketIndex].comments[commentIndex].comment = comment.comment;\r\n            arrTickets[ticketIndex].comments[commentIndex].updatedBy = comment.updatedBy;\r\n            arrTickets[ticketIndex].comments[commentIndex].updatedAt = comment.updatedAt;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n          var commentIndex = user.homes[appUser.homeIndex].tickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n          user.homes[appUser.homeIndex].tickets[ticketIndex].comments[commentIndex] = comment;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }else{\r\n    new Api().post(controller + '/comment/' + ticketId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment._id = result.data;\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n              // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n              //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n              // }\r\n              arrTickets[ticketIndex].comments.unshift(comment);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n            // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n            //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n            // }\r\n            user.homes[appUser.homeIndex].tickets[ticketIndex].comments.unshift(comment);\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }\r\n};\r\n\r\nexport const removeComment = (id: string, ticketId: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/comment/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n        if(isNN(tickets.data)) {\r\n          var foundIndex = tickets.data.findIndex(d => d._id === ticketId);\r\n          tickets.data[foundIndex].comments = tickets.data[foundIndex].comments.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Image, Text, TextInput, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as commonStyles} from '../../styles/common';\r\nimport {styles as commentsStyles} from '../../styles/comments';\r\nimport Images from '../images';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateTimeString } from '../../util/convert';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => void,\r\n  onRemoveComment: (id: string, ticketId: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  data: Array<ITicket>,\r\n  isEdit: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string,\r\n  status: string,\r\n  viewId: string,\r\n  comments: Array<ITicketComment>,\r\n  comment: string,\r\n  editCommentId: string,\r\n  editComment: string\r\n};\r\n\r\nexport default class Tickets extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      data: [],\r\n      isEdit: false,\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      status: 'INIT',\r\n      viewId: '',\r\n      comments: [],\r\n      comment: '',\r\n      editCommentId: '',\r\n      editComment: ''\r\n    }\r\n    // this.getTickets = this.getTickets.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onResolve = this.onResolve.bind(this);\r\n    this.onStart = this.onStart.bind(this);\r\n    this.onView = this.onView.bind(this);\r\n    this.onAddComment = this.onAddComment.bind(this);\r\n    this.onUpdateComment = this.onUpdateComment.bind(this);\r\n    this.onRemoveComment = this.onRemoveComment.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) ? '' : this.props.user.homes[this.props.appUser.homeIndex]._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        // data: this.getTickets()\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Tickets.');\r\n      }\r\n    });\r\n    /*\r\n    if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoadAll(this.props.user.client._id, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          data: this.getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoadAllByHome(this.props.user, this.props.appUser.homeIndex, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          data: this.getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }\r\n    */\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  /*\r\n  getTickets = () => {\r\n    if(this.props.appUser.role === ROLE.USER) {\r\n      return isNN(this.props.user.homes[this.props.appUser.homeIndex].tickets) ? this.props.user.homes[this.props.appUser.homeIndex].tickets : [];\r\n    }else if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      return (this.props.tickets.isUpToDate && !this.props.tickets.isError && isNN(this.props.tickets.data)) ? this.props.tickets.data : [];\r\n    }else{\r\n      return [];\r\n    }\r\n  };\r\n  */\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ticket = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          status: this.state.status\r\n        } as ITicket;\r\n        this.props.onSave(ticket, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              title: '',\r\n              description: '',\r\n              status: 'INIT',\r\n              viewId: '',\r\n              comments: [],\r\n              comment: '',\r\n              editCommentId: '',\r\n              editComment: ''\r\n            });\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: '',\r\n                editCommentId: '',\r\n                editComment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onResolve = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to resolve ticket',\r\n      message: 'Are you sure you wish to resolve this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onResolve(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: '',\r\n                editCommentId: '',\r\n                editComment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket resolved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to resolve ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onStart = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to start ticket',\r\n      message: 'Are you sure you wish to start this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onStart(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: '',\r\n                editCommentId: '',\r\n                editComment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket started successfully.');\r\n              }else{\r\n                Toast.fail('Failed to start ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        comments: [],\r\n        comment: '',\r\n        editCommentId: '',\r\n        editComment: ''\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        comments: comments,\r\n        comment: '',\r\n        editCommentId: '',\r\n        editComment: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  onAddComment = (id: string) => {\r\n    if(isNN(this.state.comment)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onAddComment(id, {\r\n        _id: '',\r\n        comment: this.state.comment,\r\n        createdBy: this.props.user._id,\r\n        createdByName: this.props.user.name,\r\n        createdAt: new Date(),\r\n        updatedBy: this.props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITicketComment, this.props.appUser, this.props.user, this.props.tickets, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          this.setState({\r\n            comment: ''\r\n          });\r\n          Toast.success('Comment added successfully.');\r\n        }else{\r\n          Toast.fail('Failed to add comment.');\r\n        }\r\n      });\r\n  }else{\r\n    Toast.warn('Please fill comment before Add.');\r\n  }\r\n  };\r\n\r\n  onUpdateComment = (id: string) => {\r\n    if(isNN(this.state.editCommentId) && isNN(this.state.editComment)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onAddComment(id, {\r\n        _id: this.state.editCommentId,\r\n        comment: this.state.editComment,\r\n        updatedBy: this.props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITicketComment, this.props.appUser, this.props.user, this.props.tickets, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          this.setState({\r\n            editCommentId: '',\r\n            editComment: ''\r\n          });\r\n          Toast.success('Comment updated successfully.');\r\n        }else{\r\n          Toast.fail('Failed to update comment.');\r\n        }\r\n      });\r\n  }else{\r\n    Toast.warn('Please fill comment before update.');\r\n  }\r\n  };\r\n\r\n  onRemoveComment = (id: string, ticketId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete this comment?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemoveComment(id, ticketId, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              if(result === true){\r\n                this.setState({\r\n                  isLoading: false,\r\n                  editCommentId: '',\r\n                  editComment: '',\r\n                  viewId: ''\r\n                });\r\n                Toast.success('Comment removed successfully.');\r\n              }else{\r\n                this.setState({\r\n                  isLoading: false\r\n                });\r\n                Toast.fail('Failed to remove comment.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Tickets', link: 'tickets'}]} />\r\n        <View className='bgc-white p-20'>\r\n        {\r\n          this.props.appUser.role === ROLE.USER &&\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('new-ticket')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n        }\r\n        {(isNNObject(this.props.tickets) && this.props.tickets.isUpToDate && !this.props.tickets.isError && isNN(this.props.tickets.data)) ?\r\n        this.props.tickets.data.map((d: ITicket, i: number) => {\r\n            return(\r\n              <View key={'tkt' + i} style={styles.row}>\r\n               <View className='bold' style={styles.ele}>\r\n                  <Text className='bold'>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  {(this.state.isEdit && this.state.id === d._id) ?\r\n                    <TextInput type='text' placeholder='Title' className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n                    :\r\n                    <Text>{d.title}</Text>\r\n                  }\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  {(this.state.isEdit && this.state.id === d._id) ?\r\n                    <TextArea placeholder='Description' className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n                    :\r\n                    <Text>{d.description}</Text>\r\n                  }\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.status}</Text>\r\n                </View>\r\n                {(this.state.isEdit && this.state.id === d._id) ?\r\n                <View style={styles.ele}>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={this.onSave}>\r\n                    <i className=\"c-green-500 fa fa-check\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      title: '',\r\n                      description: '',\r\n                      status: 'INIT',\r\n                      viewId: '',\r\n                      comments: [],\r\n                      comment: ''\r\n                    });\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-times\"></i>\r\n                  </span>\r\n                </View>\r\n                :\r\n                <View style={styles.ele}>\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d._id,\r\n                    title: d.title,\r\n                    description: d.description,\r\n                    status: 'INIT',\r\n                    viewId: '',\r\n                    comments: [],\r\n                    comment: ''\r\n                  });\r\n                }}>\r\n                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                </span>\r\n                }\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <i className=\"c-red-500 fa fa-trash\"></i>\r\n                </span>\r\n                }\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <span style={{marginRight: 25}} onClick={() => {\r\n                    this.onResolve(d._id);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>RESOLVE</Text>\r\n                  </span>\r\n                }\r\n                {((this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) && d.status === 'INIT') &&\r\n                <span style={{marginRight: 25}} onClick={() => {\r\n                  this.onStart(d._id);\r\n                }}>\r\n                  <Text className='pointer' style={{color: COLOR.SECONDARY}}>START</Text>\r\n                </span>\r\n                }\r\n                <span style={{}} onClick={() => {\r\n                  this.onView(d._id, d.comments);\r\n                }}>\r\n                  <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n                </span>\r\n                </View>\r\n                }\r\n                {this.state.viewId === d._id &&\r\n                <View style={commentsStyles.cmntsCnr}>\r\n                  <View style={commentsStyles.cmntsHdr}>\r\n                    <Text className='bold' style={commentsStyles.cmntsHdrTxt}>Comments</Text>\r\n                  </View>\r\n                  <View style={commentsStyles.cmntsCnt}>\r\n                    <View style={commentsStyles.addCmntCnt}>\r\n                      <TextArea placeholder='Comment Text' className='form-control' style={{...commonStyles.textInput, ...commentsStyles.newCmnt}} value={this.state.comment} onChange={(event: any) => this.setState({comment: event.target.value})} />\r\n                      <View style={commentsStyles.saveBtn}>\r\n                        <Button\r\n                          title='ADD COMMENT'\r\n                          onPress={() => this.onAddComment(d._id)}\r\n                          />\r\n                      </View>\r\n                    </View>\r\n                    {isNN(this.state.comments) ?\r\n                      this.state.comments.map((e, j) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? commentsStyles.cmntCnrFst : commentsStyles.cmntCnr}>\r\n                          <View style={commentsStyles.cmntHdr}>\r\n                            <Text className='bold'>{e.createdByName + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            {\r\n                              this.state.editCommentId === e._id ?\r\n                              <TextArea placeholder='Comment Text' className='form-control' style={{...commonStyles.textInput, ...commentsStyles.newCmnt}} value={this.state.editComment} onChange={(event: any) => this.setState({editComment: event.target.value})} />\r\n                              :\r\n                              <Text>{e.comment}</Text>\r\n                            }\r\n                          </View>\r\n                          {\r\n                            e.createdBy === this.props.user._id &&\r\n                            <>\r\n                              {\r\n                              this.state.editCommentId === e._id ?\r\n                              <View style={styles.ele}>\r\n                                <span className=\"icon-holder mR-10 cur-p\" onClick={() => this.onUpdateComment(d._id)}>\r\n                                  <i className=\"c-green-500 fa fa-check\"></i>\r\n                                </span>\r\n                                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                                  this.setState({\r\n                                    editCommentId: '',\r\n                                    editComment: ''\r\n                                  });\r\n                                }}>\r\n                                  <i className=\"c-red-500 fa fa-times\"></i>\r\n                                </span>\r\n                              </View>\r\n                              :\r\n                              <View style={styles.ele}>\r\n                                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                                  this.setState({\r\n                                    editCommentId: e._id,\r\n                                    editComment: e.comment\r\n                                  });\r\n                                }}>\r\n                                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                                </span>\r\n                                <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n                                  this.onRemoveComment(e._id, d._id);\r\n                                }}>\r\n                                  <i className=\"c-red-500 fa fa-trash\"></i>\r\n                                </span>\r\n                              </View>\r\n                              }\r\n                            </>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No comment found.</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>{(this.props.tickets.isUpToDate ? (this.props.tickets.isError ? this.props.tickets.errorMessage : \"No ticket found.\") : \"Loading...\")}</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { ITicketComment } from '../models/home/ticket-comment';\r\nimport { loadAll, save, remove, resolve, start, addComment, removeComment } from '../store/actions/ticket';\r\nimport Page from '../components/home/tickets';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, homeId, callback)),\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, sCallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, tickets, sCallback)),\r\n    onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(resolve(id, user, homeIndex, tickets, sCallback)),\r\n    onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(start(id, user, homeIndex, tickets, sCallback)),\r\n    onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) =>  dispatch(addComment(ticketId, comment, appUser, user, tickets, callback)),\r\n    onRemoveComment: (id: string, ticketId: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(removeComment(id, ticketId, user, homeIndex, tickets, sCallback))\r\n});\r\n\r\nexport const Tickets = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, Text, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string,\r\n  status: string\r\n};\r\n\r\nexport default class NewTicket extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      status: 'INIT'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ticket = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          status: this.state.status\r\n        } as ITicket;\r\n        this.props.onSave(ticket, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              title: '',\r\n              description: '',\r\n              status: 'INIT'\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Tickets', link: 'tickets'}, {title: 'New Ticket', link: 'new-ticket' }]} />  \r\n        {this.props.appUser.role === ROLE.USER ?\r\n          <View className='bgc-white p-20'>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, this.onSave);\r\n              }} />\r\n            </View>\r\n            {/* <View style={modelStyles.row}>\r\n              <Text>{this.state.status}</Text>\r\n            </View> */}\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View className='bgc-white p-20'>\r\n            <View style={modelStyles.row}>\r\n              <Text>Only User can Add New Ticket. If you have USER role and you want to add new ticket change your role to User from settings->My Role and try again.</Text>\r\n            </View>\r\n          </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { save } from '../store/actions/ticket';\r\nimport Page from '../components/home/new-ticket';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, sCallback))\r\n});\r\n\r\nexport const NewTicket = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Text } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport { styles as pageStyles } from '../../styles/page';\r\nimport { styles as modelStyles } from '../../styles/model';\r\nimport {styles as popupStyles} from '../../styles/popup';\r\nimport Toast from  '../../util/toast';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport VisitorsView from './gatekeeper/visitors-view'\r\nimport NewVisitor from './gatekeeper/new-visitor';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  void,\r\n  onApprove: (id: string, callback: (result: boolean) => void) => void,\r\n  onReject: (id: string, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, callback: (result: boolean) => void) => void,\r\n  onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  isRequestNew: boolean,\r\n  isLoading: boolean,\r\n  passCode: string\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true,\r\n      isRequestNew: false,\r\n      isLoading: false,\r\n      passCode: ''\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n    this.onApprove = this.onApprove.bind(this);\r\n    this.onReject = this.onReject.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, this.props.user.homes[this.props.appUser.homeIndex]._id, this.state.isActive, (result: Array<IVisitor>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n  \r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n  \r\n  onApprove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Approve Visitor Entry',\r\n      message: 'Are you sure you wish to Approve the visitor to Enter?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onApprove(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isApproved = true;\r\n                this.state.data[foundIndex].approvedBy = this.props.user.name;\r\n                this.state.data[foundIndex].approvedAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor approved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to approve the entry of visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onReject = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Reject Visitor Entry',\r\n      message: 'Are you sure you wish to reject visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReject(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isRejected = true;\r\n                this.state.data[foundIndex].approvedBy = this.props.user.name;\r\n                this.state.data[foundIndex].approvedAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor rejected successfully.');\r\n              }else{\r\n                Toast.fail('Failed to reject visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Remove Visitor',\r\n      message: 'Are you sure you wish to remove visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.setState({ \r\n                  data: this.state.data.filter(v => v._id !== id)\r\n                });\r\n                Toast.success('Visitor removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onSave = (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => {\r\n    this.props.onSave(homeId, data, user, appUser, (result: IVisitor) => {\r\n      sCallback(result);\r\n      this.state.data.unshift(result);\r\n      this.setState({\r\n        passCode: result.passCode,\r\n        isRequestNew: false\r\n      });\r\n    }, (message: string) => {\r\n      fCallback(message);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Visitors', link: 'visitors'}]} />\r\n        <View className='bgc-white p-20'>\r\n        {this.props.appUser.role === ROLE.USER &&\r\n        <View style={{...modelStyles.row, textAlign: 'right'}}>\r\n          <Text className='pointer' onClick={() => this.setState({isRequestNew: !this.state.isRequestNew})} style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right'}}>{this.state.isRequestNew ? '< Back to Visitors' : 'Request for a New Visitor'}</Text>\r\n        </View>\r\n        }\r\n        {!this.state.isRequestNew && <VisitorsView data={this.state.data} isActive={this.state.isActive} user={this.props.user} appUser={this.props.appUser} onActiveChange={this.onActiveChange} onApprove={this.onApprove} onReject={this.onReject} onRemove={this.onRemove} />}\r\n        {this.state.isRequestNew && <NewVisitor appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} gateNo={this.props.gateNo} onToggleLoading={(isLoading) => this.setState({ isLoading: isLoading })} onSave={this.onSave} onUpload={this.props.onUpload} onSearch={this.props.onSearch} />}\r\n        {isNN(this.state.passCode) &&\r\n        <Modal\r\n        open={isNN(this.state.passCode)}\r\n        onClose={() => this.setState({ passCode: '' })}>\r\n          <View style={popupStyles.container}>\r\n            <View style={modelStyles.row}>{'Visitor Request created successfully. Please share the passcode(' + this.state.passCode + ') to yor visitor and ask him/her to show it to the security in the gate while entering.'}</View>\r\n            <View style={{...modelStyles.row, textAlign: 'center', fontSize: 30, fontWeight: 'bold', color: COLOR.SECONDARY}}>{this.state.passCode}</View>\r\n          </View>\r\n        </Modal>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { loadAll, approve, reject, remove, save, search } from '../store/actions/visitor';\r\nimport { upload as fileUpload } from '../store/actions/file';\r\nimport { IUser } from '../models/user';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IVisitor } from '../models/home';\r\n\r\nimport Page from '../components/home/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    homes: state.Homes,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, isActive, sCallback, fCallback)),\r\n    onApprove: (id: string, callback: (result: boolean) => void) => dispatch(approve(id, callback)),\r\n    onReject: (id: string, callback: (result: boolean) => void) => dispatch(reject(id, callback)),\r\n    onRemove: (id: string, callback: (result: boolean) => void) => dispatch(remove(id, callback)),\r\n    onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => dispatch(save(homeId, data, user, appUser, sCallback, fCallback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(fileUpload(data, callback)),\r\n    onSearch: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => dispatch(search(searchText, sCallback, fCallback))\r\n});\r\n\r\nexport const Visitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { changePassword, logout } from '../store/actions/account';\r\n\r\nimport Page from '../components/home/change-password';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => dispatch(changePassword(userId, password, newPassword, callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const ChangePassword = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, { useState } from 'react';\r\nimport { View, TextInput, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, password: string, newPassword: string, sCallback: (result: boolean, message: string) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n\r\n  const passwordPolicyCheck = (p: string) => {\r\n    let anUpperCase = /[A-Z]/;\r\n    let aLowerCase = /[a-z]/; \r\n    let aNumber = /[0-9]/;\r\n    let aSpecial = /[!|@|#|$|%|^|&|*|(|)|-|_]/;\r\n    let result = \"\";\r\n\r\n    if(p.length < 6){\r\n      result=\"New Password not long enough!\"\r\n        return result;\r\n    }\r\n\r\n    var numUpper = 0;\r\n    var numLower = 0;\r\n    var numNums = 0;\r\n    var numSpecials = 0;\r\n    for(var i=0; i<p.length; i++){\r\n        if(anUpperCase.test(p[i]))\r\n            numUpper++;\r\n        else if(aLowerCase.test(p[i]))\r\n            numLower++;\r\n        else if(aNumber.test(p[i]))\r\n            numNums++;\r\n        else if(aSpecial.test(p[i]))\r\n            numSpecials++;\r\n    }\r\n\r\n    if(numUpper < 1 || numLower < 1 || numNums < 1 || numSpecials < 1){\r\n      result=\"New Password dose not match with password policy!\";\r\n        return result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const onUpdate = () => {\r\n    if(isNN(password) && isNN(newPassword) && isNN(confirmNewPassword)){\r\n      if(newPassword === confirmNewPassword){\r\n        let policyResult = passwordPolicyCheck(newPassword);\r\n        if(policyResult.length < 1){\r\n          setLoading(true);\r\n          props.onUpdate(props.user._id, password, newPassword, (result: boolean, message: string) => {\r\n            setLoading(false);\r\n            if(result === true){\r\n              Toast.success('Password updated successfully. Please login with your new password.');\r\n                props.onLogout((result: boolean) => {});\r\n            }else{\r\n              Toast.fail(message);\r\n            }\r\n          });\r\n        }else{\r\n          Toast.warn(policyResult);\r\n        }\r\n      }else{\r\n        Toast.warn('New Password and Confirm New Password not matchs.');\r\n      }\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Change Password', link: 'change-password'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={password} onChange={(event: any) => setPassword(event.target.value)} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='New Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={newPassword} onChange={(event: any) => setNewPassword(event.target.value)} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='Confirm New Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={confirmNewPassword} onChange={(event: any) => setConfirmNewPassword(event.target.value)}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, onUpdate);\r\n              }} />\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={onUpdate}\r\n              />\r\n            </View>\r\n            <View style={{ marginTop: 7 }}>\r\n              <Text>Note: Password should contain adleast one uppercase, one lowercase, one number and one special character.</Text>\r\n            </View>\r\n          </View>\r\n          <Spinner visible={isLoading} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  name: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class MyProfile extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      name: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.user.name,\r\n      mobileNo: this.props.user.mobileNo,\r\n      emailId: this.props.user.emailId\r\n    });\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onUpdate = () => {\r\n    if(isNN(this.state.name) && isNN(this.state.mobileNo) && isNN(this.state.emailId)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.props.user._id, this.state.name, this.state.mobileNo, (this.state.emailId ? this.state.emailId.toLowerCase() : ''), this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          Toast.success('Profile updated successfully.');\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'My Profile', link: 'my-profile'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, this.onUpdate);\r\n              }} />\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={this.onUpdate}\r\n              />\r\n            </View>\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </View>\r\n        </View>\r\n        </View>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { updateProfile } from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-profile';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updateProfile(userId, name, mobileNo, emailId, user, callback))\r\n});\r\n\r\nexport const MyProfile = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Picker } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onUpdate: (role: string, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  role: string\r\n};\r\n\r\nexport default class MyRole extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      role: ''\r\n    }\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      role: this.props.appUser.role,\r\n    });\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onUpdate = () => {\r\n    if(isNN(this.state.role)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.state.role, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          Toast.success('Role updated successfully.');\r\n          this.props.history.push('/')\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select role before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'My Role', link: 'my-role'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <View style={modelStyles.row}>\r\n              <Picker\r\n                className='form-control'\r\n                value={this.state.role}\r\n                style={modelStyles.ele}\r\n                onChange={(event: any) => this.setState({role: event.target.value})}>\r\n                  {\r\n                  this.props.user.role.split(',').map((d: string, i: number) => {\r\n                    return(<option key={'role' + i} value={d}>{d}</option>);\r\n                  })\r\n                  }\r\n              </Picker>\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={this.onUpdate}\r\n              />\r\n            </View>\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </View>\r\n        </View>\r\n        </View>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { updateRole} from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-role';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (role: string, callback: (result: boolean, message: string) => void) => dispatch(updateRole(role, callback))\r\n});\r\n\r\nexport const MyRole = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IUser } from '../../models/user';\r\nimport { IAd } from '../../models/ad';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'ad';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getAdResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getAdResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let foundIndex = ads.findIndex(d => d._id === result.data);\r\n        ads[foundIndex]._id = result.data;\r\n        ads[foundIndex].title = data.title;\r\n        ads[foundIndex].description = data.description;\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          ads.unshift({\r\n            _id: result.data,\r\n            title: data.title,\r\n            description: data.description,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IAd);\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      ads = ads.filter((d, i) => d._id !== id);\r\n      dispatch(getAdResult(ads, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Image, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onLoad: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string\r\n};\r\n\r\nexport default class Ads extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      title: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ad = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description\r\n        } as IAd;\r\n        this.props.onSave(this.props.user.client._id, ad, this.props.user, this.props.ads.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              title: '',\r\n              description: ''\r\n            });\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.ads.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ad removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ad.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Ads', link: 'ads'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-ad')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n      {(this.props.ads.isUpToDate && !this.props.ads.isError && isNN(this.props.ads.data)) ?\r\n        this.props.ads.data.map((d: IAd, i: number) => {\r\n          return(\r\n            (this.state.isEdit === true && this.state.id === d._id) ?\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={this.onSave}>\r\n                  <i className=\"c-green-500 fa fa-check\"></i>\r\n                </span>\r\n                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                  this.setState({\r\n                    isEdit: false,\r\n                    id: '',\r\n                    title: '',\r\n                    description: ''\r\n                  });\r\n                }}>\r\n                  <i className=\"c-red-500 fa fa-times\"></i>\r\n                </span>\r\n              </View>\r\n            </View>\r\n            :\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.title}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d._id,\r\n                    title: d.title,\r\n                    description: d.description\r\n                  });\r\n                }}>\r\n                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                </span>\r\n                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <i className=\"c-red-500 fa fa-trash\"></i>\r\n                </span>\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{(this.props.ads.isUpToDate ? (this.props.ads.isError ? this.props.ads.errorMessage : \"No ad found.\") : \"Loading...\")}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { loadAll, save, remove } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/ads';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, callback)),\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback)),\r\n    onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(remove(id, ads, callback))\r\n});\r\n\r\nexport const Ads = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string\r\n};\r\n\r\nexport default class NewAd extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      title: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ad = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description\r\n        } as IAd;\r\n        this.props.onSave(this.props.user.client._id, ad, this.props.user, this.props.ads.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              title: '',\r\n              description: ''\r\n            });\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Ads', link: 'ads'}, {title: 'New Ad', link: 'new-ad'}]} />\r\n        <View className='bgc-white p-20'>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { save } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/new-ad';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback))\r\n});\r\n\r\nexport const NewAd = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View,  TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IUserHome } from '../../../models/user-home';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IMember>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Users extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.getHomes = this.getHomes.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getHomes = (userId: string) => {\r\n    let homes = '';\r\n    if((this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)) && (this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data))){\r\n      let homeIds = [] as Array<string>;\r\n      this.props.userHomes.data.filter(uh => uh.userId === userId).map((uh: IUserHome, i: number) => homeIds.push(uh.homeId));\r\n      this.props.homes.data.filter(d => homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n    }\r\n    return homes;\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      let homes = this.props.homes.data.filter(h => h.number.toLocaleLowerCase() === searchText);\r\n      this.setState({\r\n        searchResult: this.props.users.data.filter(d => (d.name + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.mobileNo + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.emailId + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.number + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (isNN(homes.filter(h => h.memberIds.indexOf(d._id) >= 0)))),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.appUser.homeIndex, this.props.user, this.props.users, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('User removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove user.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Users', link: 'users'}]} />\r\n          <View className='bgc-white p-20'>\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-user/0/false')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('approve-users')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right', marginRight: 15}}>View Users Waiting for Approval</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search User\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSearch);\r\n            }} />\r\n            <span className='icon-holder cur-p' onClick={this.onSearch}>\r\n              <i className='ti-search pdd-right-10 fw-900'></i>\r\n            </span>\r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IMember, i: number) => {\r\n            return(\r\n              <View key={'usr' + i} style={styles.row}>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'User Id: ' + (isNN(d.number) ? d.number : '')}</Text>                  \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Mobile No: ' + (isNN(d.mobileNo) ? d.mobileNo : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Email: ' + (isNN(d.emailId) ? d.emailId : '')}</Text>         \r\n                </View> */}\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Owner Name: ' + (isNN(d.ownername) ? d.ownername : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Owner Mobile No: ' + (d.ownermobile > 0 ? d.ownermobile : '')}</Text>         \r\n                </View> */}\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Role: ' + (isNN(d.type) ? d.type.replace(/,/g, ', ') : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Home(s): ' + this.getHomes(d._id)}</Text>         \r\n                </View> */}\r\n                {(d._id !== this.props.user._id) &&\r\n                  <View style={styles.ele}>\r\n                    <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                      this.props.history.push('edit-user/' + d._id + '/false');////TODO\r\n                      // this.props.navigation.navigate('EditUser', {id: d._id});\r\n                      // this.setState({\r\n                      //   isEdit: true,\r\n                      //   id: d.id\r\n                      // });\r\n                    }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n                  </View>\r\n                }\r\n              </View>\r\n              \r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No user match with your search.</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IUsers } from '../models/store/users';\r\nimport { removeByAM } from '../store/actions/member';\r\n\r\nimport Page from '../components/home/manager/users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => dispatch(removeByAM(id, homeIndex, user, users, callback))\r\n});\r\n\r\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'home';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IHome>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      result.data.forEach((h: any) => {\r\n        h.memberIds = h.members;\r\n        delete h.members;\r\n      });\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Homes.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNN(result.data._id)) {\r\n      result.data.memberIds = result.data.members;\r\n      delete result.data.members;\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Home.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n          var foundIndex = homes.data.findIndex(d => d._id === result.data);\r\n          homes.data[foundIndex]._id = result.data;\r\n          homes.data[foundIndex].number = data.number;\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n            homes.data.push({\r\n              _id: result.data,\r\n              // name: name,\r\n              number: data.number\r\n            } as IHome);\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const checkNumberAvail = (id: string, number: string, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().get(controller + '/checkno/' + number, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes = user.homes.filter((d, i) => d._id !== id);\r\n      homes.data = homes.data.filter((d, i) => d._id !== id);\r\n      ////userHomes.data = userHomes.data.filter((d, i) => d.homeId !== id);\r\n      dispatch(getUserResult(user));\r\n      dispatch(getHomesResult(homes.data, true, false, \"\"));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View,  TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IUserHome } from '../../../models/user-home';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IHome>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Users extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.getUsers = this.getUsers.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getUsers = (homeId: string) => {\r\n    let users = '';\r\n    if((this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)) && (this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data))){\r\n      let userIds = [] as Array<string>;\r\n      this.props.userHomes.data.filter(uh => uh.homeId === homeId).map((uh: IUserHome, i: number) => userIds.push(uh.userId));\r\n      this.props.users.data.filter(d => userIds.indexOf(d._id) >= 0).map((u: IMember, i: number) => users += (users.length > 0 ? ', ' : '') + u.name);\r\n    }\r\n    return users;\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      this.setState({\r\n        searchResult: this.props.homes.data.filter(d => (d.number + '').toLocaleLowerCase().indexOf(searchText) >= 0),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homes, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('Home removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove home.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Homes', link: 'homes'}]} />\r\n          <View className='bgc-white p-20'>\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-home/0')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search Home\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSearch);\r\n            }} />\r\n            <span className='icon-holder cur-p' onClick={this.onSearch}>\r\n              <i className='ti-search pdd-right-10 fw-900'></i>\r\n            </span>\r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IHome, i: number) => {\r\n            return(\r\n              <View key={'home' + i} style={styles.row}>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <Text>{'Number: ' + d.number}</Text>         \r\n                </View>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Address: ' + (isNN(d.address) ? d.address : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'User(s): ' + this.getUsers(d._id)}</Text>         \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                    this.props.history.push('view-home/' + d._id);\r\n                    // this.props.navigation.navigate('ViewHome', {id: d._id});\r\n                  }}>\r\n                    <i className=\"c-orange-500 fa fa-eye\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                    this.props.history.push('edit-home/' + d._id);\r\n                    // this.props.navigation.navigate('EditHome', {id: d._id});\r\n                    // this.setState({\r\n                    //   isEdit: true,\r\n                    //   id: d.id\r\n                    // });\r\n                  }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No home match with your search.</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { remove } from '../store/actions/home';\r\n\r\nimport Page from '../components/home/manager/homes';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => dispatch(remove(id, user, homes, callback))\r\n});\r\n\r\nexport const Homes = connect(mapStateToProps, mapDispatchToProps)(Page);","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  mListCnr: {\r\n    borderColor: COLOR.SECONDARY, \r\n    borderWidth: 1,\r\n    height: '50%'\r\n  },\r\n  mListActiveRow: {\r\n    padding: 3,\r\n    backgroundColor: COLOR.SECONDARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid',\r\n    width: '100%',\r\n    marginBottom: '1px'\r\n  },\r\n  mListRow: {\r\n    padding: 3,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid',\r\n    width: '100%',\r\n    marginBottom: '1px'\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { ScrollView,  View, TextInput, Text, Image } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport { styles as commonStyles} from '../../../styles/common';\r\nimport { styles as mlistStyles} from '../../../styles/mlist';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR, ROLE } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Images from '../../images';\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  homeIds: Array<string>,\r\n  role: {\r\n    isAdmin: boolean,\r\n    isManager: boolean,\r\n    isGatekeeper: boolean,\r\n    isUser: boolean\r\n  },\r\n  isShowHomes: boolean\r\n};\r\n\r\nexport default class EditUser extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      homeIds: [],\r\n      role: {\r\n        isAdmin: false,\r\n        isManager: false,\r\n        isGatekeeper: false,\r\n        isUser: false\r\n      },\r\n      isShowHomes: false\r\n    }\r\n    this.getHomes = this.getHomes.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onToggleHomeModel = this.onToggleHomeModel.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let userId = this.props.match.params.id;\r\n    if(userId.length > 0 && userId !== '0'){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(userId, (result: IMember, homeIds: Array<string>) => {\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            isLoading: false,\r\n            id: result._id,\r\n            number: result.number,\r\n            name: result.name,\r\n            age: result.age,\r\n            gender: result.gender,\r\n            mobileNo: result.mobileNo,\r\n            emailId: result.emailId,\r\n            type: result.type,\r\n            homeIds: homeIds,\r\n            role: {\r\n              isAdmin: (',' + result.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n              isManager: (',' + result.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n              isGatekeeper: (',' + result.role + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n              isUser: (',' + result.role + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n            }\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load User.');\r\n        }\r\n      }, (message: string) => {\r\n        Toast.fail(isNN(message) ? message : 'Failed to load User.');\r\n      });\r\n    }\r\n\r\n    /*\r\n    if(userId > 0 && (this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data))){\r\n      let users = this.props.users.data.filter((u: IUser, i: number) => u._id === userId);\r\n      if(isNNObject(users) && users.length > 0){\r\n        let homeIds = [] as Array<string>;\r\n        if(this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data)){\r\n          this.props.userHomes.data.filter((uh: IUserHome, i: number) => uh.userId === userId).map(uh => {\r\n            homeIds.push(uh.homeId);\r\n          });\r\n        }\r\n        this.setState({\r\n          id: users[0]._id,\r\n          name: users[0].name,\r\n          mobileNo: users[0].mobileNo,\r\n          emailId: users[0].emailId,\r\n          ////ownername: users[0].ownername,\r\n          ////ownermobile: users[0].ownermobile,\r\n          homeIds: homeIds,\r\n          role: {\r\n            isAdmin: (',' + users[0].type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n            isManager: (',' + users[0].type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n            isGatekeeper: (',' + users[0].type + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n            isUser: (',' + users[0].type + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n          }\r\n        });\r\n      }\r\n    }\r\n    */\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getHomes = () => {\r\n    let homes = '';\r\n    if(isNN(this.state.homeIds) && (this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data))){\r\n      this.props.homes.data.filter(d => this.state.homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n    }\r\n    return homes;\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n      let role = '';\r\n      if(this.state.role.isAdmin){\r\n        role = ROLE.ADMIN\r\n      }\r\n      if(this.state.role.isManager){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.MANAGER\r\n      }\r\n      if(this.state.role.isGatekeeper){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.GATEKEEPER\r\n      }\r\n      if(this.state.role.isUser){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.USER\r\n      }\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: role\r\n        } as IMember;\r\n        this.props.onSave(member, this.state.homeIds, this.props.user, this.props.users, this.props.match.params.isApprove === 'true', (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              homeIds: [],\r\n              role: {\r\n                isAdmin: false,\r\n                isManager: false,\r\n                isGatekeeper: false,\r\n                isUser: false\r\n              }\r\n            });\r\n            Toast.success('User saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save user.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onToggleHomeModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowHomes: isShow\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Users', link: 'users'}, {title: 'Edit User', link: 'edit-user/0'}]} />\r\n        <View className='bgc-white p-20'>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n            <RadioButton isActive={this.state.gender === 'O'} text='Other' onPress={() => this.setState({gender: 'O'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text className='mR-10'>Role: </Text>\r\n            <Checkbox isActive={this.state.role.isAdmin} text={ROLE.ADMIN} onPress={() => {\r\n              this.state.role.isAdmin = !this.state.role.isAdmin;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isManager} text={ROLE.MANAGER} onPress={() => {\r\n              this.state.role.isManager = !this.state.role.isManager;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isGatekeeper} text={ROLE.GATEKEEPER} onPress={() => {\r\n              this.state.role.isGatekeeper = !this.state.role.isGatekeeper;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isUser} text={ROLE.USER} onPress={() => {\r\n              this.state.role.isUser = !this.state.role.isUser;\r\n              this.setState({});\r\n            }} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Home(s): ' + this.getHomes()}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n              this.setState({\r\n                isShowHomes: true\r\n              });\r\n             }}>\r\n               <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n              </span>\r\n          </View>\r\n          {(this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)) &&\r\n          <Modal\r\n          open={this.state.isShowHomes}\r\n          onClose={() => this.onToggleHomeModel(false)}>\r\n            <View style={popupStyles.container}>\r\n              <ScrollView style={{...mlistStyles.mListCnr, maxHeight: '50%'}}>\r\n                {\r\n                  this.props.homes.data.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text key={'home' + i} style={(this.state.homeIds.indexOf(d._id) >= 0 ? mlistStyles.mListActiveRow : mlistStyles.mListRow)} onClick={() => {\r\n                        if(this.state.homeIds.indexOf(d._id) >= 0){\r\n                          this.setState({\r\n                            homeIds: this.state.homeIds.filter(e => e !== d._id)\r\n                          });\r\n                        }else{\r\n                          this.state.homeIds.push(d._id);\r\n                          this.setState({});\r\n                        }\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n                </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title={this.props.match.params.isApprove === 'true' ? 'Approve' : 'SAVE'}\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IMember } from '../models/home';\r\nimport { IUsers } from '../models/store/users';\r\nimport { load, saveByAM } from '../store/actions/member';\r\nimport Page from '../components/home/manager/edit-user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => dispatch(saveByAM(data, homeIds, user, users, isApprove, callback))\r\n});\r\n\r\nexport const EditUser = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport Spinner from '../../common/spinner';\r\nimport { IMember } from '../../../models/home/member';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport Toast from  '../../../util/toast';\r\nimport { isNN } from '../../../util';\r\nimport { toDateTimeString } from '../../../util/convert';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  onLoad: (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onReject: (id: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IMember>,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class ApproveUsers extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoading: false\r\n    }\r\n    this.onApprove = this.onApprove.bind(this);\r\n    this.onReject = this.onReject.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad((result: Array<IMember>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  onApprove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Approve',\r\n      message: 'You want to Approve the user?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.props.history.push('edit-user/' + id + '/true');\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onReject = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Reject',\r\n      message: 'You want to Reject the user?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReject(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                this.setState({\r\n                  data: this.state.data.filter(v => v._id !== id)\r\n                });\r\n                Toast.success('User rejected successfully.');\r\n              }else{\r\n                Toast.fail('Failed to reject the user.');\r\n              }\r\n            }); \r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Users', link: 'users'}, {title: 'Users Waiting for Approval', link: 'approve-users'}]} />\r\n        <View className='bgc-white p-20'>\r\n        {isNN(this.state.data) ?\r\n        this.state.data.map((d: IMember, i: number) => {\r\n          return(\r\n            <View key={i} style={pageStyles.row}>\r\n              <View style={pageStyles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.name}</Text>\r\n              </View>\r\n              {(d.age > 0 || isNN(d.gender)) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other')) : '')}</Text>\r\n              </View>\r\n              }\r\n              <View style={pageStyles.ele}>\r\n                On <Text style={{fontWeight: 'bold'}}>{toDateTimeString(d.createdAt)}</Text>\r\n              </View>\r\n              {isNN(d.mobileNo) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.emailId) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n              }\r\n              <View style={pageStyles.ele}>\r\n                <Button title='Approve' style={{marginRight: '10px'}} onPress={() => { this.onApprove(d._id); }} />\r\n                <Button title='Reject' onPress={() => { this.onReject(d._id); }} />\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No user found.</Text>\r\n      }\r\n      <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { loadWFAUsers, reject } from '../store/actions/member';\r\nimport { IMember } from '../models/home';\r\n\r\nimport Page from '../components/home/manager/approve-users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadWFAUsers(sCallback, fCallback)),\r\n    onReject: (id: string, callback: (result: boolean) => void) => dispatch(reject(id, callback))\r\n});\r\n\r\nexport const ApproveUsers = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport {  ScrollView, View, TextInput, Text, Image, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from '../../../styles/page';\r\nimport { styles as modelStyles } from '../../../styles/model';\r\nimport {styles as commonStyles} from '../../../styles/common';\r\nimport { styles as mlistStyles} from '../../../styles/mlist';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Images from '../../images';\r\nimport { styles as iconStyles } from '../../../styles/icon';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => void,\r\n  onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n\tblockId: string,\r\n\tnumber: string,\r\n\taddress: string,\r\n  bedRoom: number,\r\n  parking: string,\r\n  description: string,\r\n  members: Array<string>,\r\n  isShowUsers: boolean\r\n};\r\n\r\nexport default class EditHome extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      blockId: '',\r\n      number: '',\r\n      address: '',\r\n      bedRoom: 1,\r\n      parking: '',\r\n      description: '',\r\n      members: [],\r\n      isShowUsers: false\r\n    }\r\n    this.getUsers = this.getUsers.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onToggleUserModel = this.onToggleUserModel.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let homeId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    if(homeId.length > 0 && homeId !== '0'){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(homeId, (result: IHome) => {\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            isLoading: false,\r\n            id: result._id,\r\n            blockId: result._blockId,\r\n            number: result.number,\r\n            address: result.address,\r\n            bedRoom: result.bedRoom,\r\n            parking: result.parking,\r\n            description: result.description,\r\n            members: result.memberIds\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load Home.');\r\n        }\r\n      }, (message: string) => {\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Home.');\r\n      });\r\n    }\r\n    \r\n    /*\r\n    if(homeId > 0 && (this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data))){\r\n      let homes = this.props.homes.data.filter((u: IHome, i: number) => u._id === homeId);\r\n      if(isNNObject(homes) && homes.length > 0){\r\n        let members = [] as Array<string>;\r\n        if(this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data)){\r\n          this.props.userHomes.data.filter((uh: IUserHome, i: number) => uh.homeId === homeId).map(uh => {\r\n            members.push(uh.userId);\r\n          });\r\n        }\r\n        this.setState({\r\n          id: homes[0]._id,\r\n          blockId: homes[0]._blockId,\r\n          number: homes[0].number,\r\n          address: homes[0].address,\r\n          bedRoom: homes[0].bedRoom,\r\n          parking: homes[0].parking,\r\n          description: homes[0].description,\r\n          members: members\r\n        });\r\n      }\r\n    }\r\n    */\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getUsers = () => {\r\n    let users = '';\r\n    if(isNN(this.state.members) && (this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data))){\r\n      this.props.users.data.filter(d => this.state.members.indexOf(d._id) >= 0).map((u: IMember, i: number) => \r\n        users += (users.length > 0 ? ', ' : '') + u.name + (isNN(u.number) ? '(' + u.number + ')' : '')\r\n      );\r\n    }\r\n    return users;\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.blockId) && isNN(this.state.number)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      /*\r\n      this.props.onCheckNumberAvail(this.state.id, this.state.number, (result: boolean) => {\r\n        if(result === true){\r\n          */\r\n         let home = {\r\n           _id: this.state.id,\r\n           _blockId: this.state.blockId,\r\n           number: this.state.number,\r\n           address: this.state.address,\r\n           bedRoom: this.state.bedRoom,\r\n           parking: this.state.parking,\r\n           description: this.state.description,\r\n           memberIds: this.state.members\r\n         } as IHome;\r\n          this.props.onSave(home, this.props.user, this.props.homes, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                id: '',\r\n                blockId: '',\r\n                number: '',\r\n                address: '',\r\n                bedRoom: 1,\r\n                parking: '',\r\n                description: '',\r\n                members: []\r\n              });\r\n              Toast.success('Home saved successfully.');\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to save home.');\r\n            }\r\n          });\r\n          /*\r\n        }else{\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          Toast.warn('Home with same Number already available. Please change the home number.');\r\n        }\r\n      });\r\n      */\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onToggleUserModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowUsers: isShow\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Homes', link: 'homes'}, {title: 'Edit Home', link: 'edit-home/0'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View>\r\n          <View style={modelStyles.row}>\r\n            <Picker\r\n            className='form-control'\r\n            value={this.state.blockId}\r\n            style={modelStyles.ele}\r\n            onChange={(event: any) => this.setState({blockId: event.target.value})}>\r\n              <option key={'block0'} value=''>Select Block</option>\r\n              {(this.props.blocks && this.props.blocks.isUpToDate && !this.props.blocks.isError && isNN(this.props.blocks.data)) &&\r\n                this.props.blocks.data.map((d: IBlock, i: number) => {\r\n                  return(<option key={'block' + i} value={d._id}>{d.name}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Address\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.address} onChange={(event: any) => this.setState({address: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>No of bed rooms: </Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.bedRoom === 1} text='1' onPress={() => this.setState({bedRoom: 1})} />\r\n            <RadioButton isActive={this.state.bedRoom === 2} text='2' onPress={() => this.setState({bedRoom: 2})} />\r\n            <RadioButton isActive={this.state.bedRoom === 3} text='3' onPress={() => this.setState({bedRoom: 3})} />\r\n            <RadioButton isActive={this.state.bedRoom === 4} text='4' onPress={() => this.setState({bedRoom: 4})} />\r\n            <RadioButton isActive={this.state.bedRoom === 5} text='5' onPress={() => this.setState({bedRoom: 5})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Parking\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.parking} onChange={(event: any) => this.setState({parking: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Description\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'User(s): ' + this.getUsers()}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n              this.setState({\r\n                isShowUsers: true\r\n              });\r\n             }}>\r\n              <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n            </span>\r\n          </View>\r\n          {(this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)) &&\r\n          <Modal\r\n          open={this.state.isShowUsers}\r\n          onClose={() => this.onToggleUserModel(false)}>\r\n            <View style={popupStyles.container}>\r\n              <ScrollView style={{...mlistStyles.mListCnr, maxHeight: '50%'}}>\r\n              {\r\n                this.props.users.data.map((d: IMember, i: number) => {\r\n                  return(\r\n                    <Text key={'user' + i} style={(this.state.members.indexOf(d._id) >= 0 ? mlistStyles.mListActiveRow : mlistStyles.mListRow)} onClick={() => {\r\n                      if(this.state.members.indexOf(d._id) >= 0){\r\n                        this.setState({\r\n                          members: this.state.members.filter(e => e !== d._id)\r\n                        });\r\n                      }else{\r\n                        this.state.members.push(d._id);\r\n                        this.setState({});\r\n                      }\r\n                    }}>{d.name + (d.number ? '(' + d.number + ')' : '')}</Text>\r\n                  )\r\n                })\r\n              }\r\n              </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { IHome } from '../models/home';\r\nimport { IUser } from '../models/user';\r\nimport { load, save, checkNumberAvail } from '../store/actions/home';\r\nimport Page from '../components/home/manager/edit-home';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => dispatch(save(data, user, homes, callback)),\r\n    onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => dispatch(checkNumberAvail(id, number, callback))\r\n});\r\n\r\nexport const EditHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport Toast from  '../../../util/toast';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport VisitorsView from './visitors-view';\r\nimport { View } from '../../common/elements';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onEnter: (id: string, gateNo: string, callback: (result: boolean) => void) => void,\r\n  onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true,\r\n      isLoading: false\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n    this.onEnter = this.onEnter.bind(this);\r\n    this.onExit = this.onExit.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, '', this.state.isActive, (result: Array<IVisitor>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n\r\n  onEnter = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Allow Visitor Entry',\r\n      message: 'Are you sure you wish to Allow the visitor to Enter?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onEnter(id, this.props.gateNo, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isEntered = true;\r\n                this.state.data[foundIndex].enteredBy = this.props.user.name;\r\n                this.state.data[foundIndex].enteredAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor entered successfully.');\r\n              }else{\r\n                Toast.fail('Failed to allow the entry of visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onExit = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Exit Visitor',\r\n      message: 'Are you sure you wish to exit visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onExit(id, this.props.gateNo, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                this.setState({\r\n                  data: this.state.data.filter(v => v._id !== id)\r\n                });\r\n                Toast.success('Visitor exit successfully.');\r\n              }else{\r\n                Toast.fail('Failed to exit visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Visitors', link: 'all-visitors'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <VisitorsView user={this.props.user} appUser={this.props.appUser} data={this.state.data} isActive={this.state.isActive} onActiveChange={this.onActiveChange} onEnter={this.onEnter} onExit={this.onExit} />\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IVisitor } from '../models/home';\r\nimport { loadAll, enter, exit } from '../store/actions/visitor';\r\n\r\nimport Page from '../components/home/gatekeeper/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    homes: state.Homes,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, isActive, sCallback, fCallback)),\r\n    onEnter: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(enter(id, gateNo, callback)),\r\n    onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(exit(id, gateNo, callback))\r\n});\r\n\r\nexport const AllVisitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { INotification } from '../../../models/notification';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN, isNNObject, onEnter } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => void,\r\n  onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  data: Array<INotification>,\r\n  title: string,\r\n  body: string\r\n};\r\n\r\nexport default class Notification extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      data: [],\r\n      title: '',\r\n      body: ''\r\n    }\r\n    this.onPush = this.onPush.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (result: Array<INotification>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onPush = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.body)){\r\n      confirmAlert({\r\n        title: 'Confirm to send push notification',\r\n        message: 'Are you sure? This notification will send to all users using this app in your Appartment. Are you sure you want to Push?',\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n              this.setState({\r\n                isLoading: true\r\n              });\r\n              let notification = {\r\n                title: this.state.title,\r\n                body: this.state.body\r\n              } as INotification;\r\n              this.props.onPush(this.props.user.client._id, notification, this.props.user, (result: INotification | null) => {\r\n                this.setState({\r\n                  isLoading: false,\r\n                });\r\n                if(isNNObject(result)){\r\n                  let data = this.state.data;\r\n                  data.unshift(result as INotification);\r\n                  this.setState({\r\n                    data: data,\r\n                    title: '',\r\n                    body: ''\r\n                  });\r\n                  Toast.success('Notification pushed successfully.');\r\n                }else{\r\n                  Toast.fail('Failed to push Notification.');\r\n                }\r\n              });\r\n            }\r\n          },\r\n          {\r\n            label: 'No',\r\n            onClick: () => {}\r\n          }\r\n        ]\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Push.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Notification', link: 'notification'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n        </View>\r\n        <View style={modelStyles.row}>\r\n          <TextArea placeholder=\"Body\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.body} onChange={(event: any) => this.setState({body: event.target.value})}\r\n          onKeyPress={(e) => {\r\n            onEnter(e, this.onPush);\r\n          }} />\r\n        </View>\r\n        <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n            <Button\r\n            style={{marginRight: 10}}\r\n            title=\"PUSH\"\r\n            onPress={this.onPush}\r\n            />\r\n            <Button\r\n            title=\"CLEAR\"\r\n            onPress={() => {\r\n              this.setState({\r\n                title: '',\r\n                body: ''\r\n              });\r\n            }}\r\n            />\r\n        </View>\r\n      {(isNN(this.state.data)) ?\r\n        this.state.data.map((d: INotification, i: number) => {\r\n          return(\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.body}</Text>\r\n              </View>\r\n              <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                <Button title=\"Duplicate\" onPress={() => {\r\n                  this.setState({\r\n                    title: d.title,\r\n                    body: d.body\r\n                  });\r\n                }} />\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No nofification found.</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { INotification } from '../models/notification';\r\nimport { loadAll, push } from '../store/actions/notification';\r\nimport Page from '../components/home/manager/notification';\r\nimport { IUser } from '../models/user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, sCallback, fCallback)),\r\n    onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => dispatch(push(appClientId, data, user, callback))\r\n});\r\n\r\nexport const Notification = connect(mapStateToProps, mapDispatchToProps)(Page);","import { INotification } from '../../models/notification';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { IUser } from '../../models/user';\r\n\r\nlet controller: string = 'notification';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Notification.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const push = (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => (dispatch: any) => {  \r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback({\r\n        _id: result.data,\r\n        title: data.title,\r\n        body: data.body,\r\n        createdBy: user.name,\r\n        createdAt: new Date()\r\n      } as INotification);\r\n    }else{\r\n      callback(null);\r\n    }\r\n  }, data);\r\n};","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'outing';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getOutingResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getOutingResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    // Not Implemented\r\n        callback(false);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      console.log('result:', result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        outings.data.unshift(data);\r\n        dispatch(getOutingResult(outings.data, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    },data);\r\n  }\r\n};\r\n\r\nexport const retunBack = (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().delete(controller + '/return/' + id, (result: any, message: string) => {\r\n    debugger;\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      var foundIndex = outings.data.findIndex(d => d._id === id);\r\n      outings.data[foundIndex].isReturned = true;\r\n      outings.data[foundIndex].returnedAt = new Date();\r\n      dispatch(getOutingResult(outings.data, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getOutingResult = (data: Array<IOuting>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_OUTINGS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IOutings\r\n});","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { COLOR } from '../../constants';\r\nimport { isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  outings: IOutings,\r\n  onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  place: string,\r\n  address: string,\r\n  datePickerType: string,\r\n  datePickerDate: Date\r\n};\r\n\r\nexport default class NewOuting extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      fromDate: '',\r\n      toDate: '',\r\n      place: '',\r\n      address: '',\r\n      datePickerType: '',\r\n      datePickerDate: new Date()\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    // if(isNNObject(this.state.fromDate) && isNNObject(this.state.toDate) && isNN(this.state.place) && isNN(this.state.address)){\r\n    if(isNNObject(this.state.fromDate) && isNNObject(this.state.toDate)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let outing = {\r\n          ////homeId: this.props.user.home[this.props.appUser.homeIndex].id,\r\n          _homeId: this.props.user.homes[this.props.appUser.homeIndex].number,\r\n          fromDate: this.state.fromDate,\r\n          toDate : this.state.toDate,\r\n          place: this.state.place,\r\n          address: this.state.address,\r\n          isReturned: false,\r\n          createdBy: this.props.user.name,\r\n          createdAt: new Date()\r\n        } as IOuting;\r\n        this.props.onSave(outing, this.props.user.homes[this.props.appUser.homeIndex]._id, this.props.user, this.props.outings, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              fromDate: '',\r\n              toDate: '',\r\n              place: '',\r\n              address: '',\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Outing submitted successfully.');\r\n          }else{\r\n            Toast.fail('Failed to submit Outing.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before submit Outing.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Notice', link: 'notice'}, {title: 'New Outing', link: 'new-outing' }]} />\r\n        <View className='bgc-white p-20'>\r\n          <View style={modelStyles.row}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          {/* <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Place\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.place} onChange={(event: any) => this.setState({place: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Address\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.address} onChange={(event: any) => this.setState({address: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View> */}\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { IOuting } from '../models/outing';\r\nimport { save } from '../store/actions/outing';\r\nimport Page from '../components/home/new-outing';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    outings: state.Outings\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(save(data, homeId, user, outings, callback))\r\n});\r\n\r\nexport const NewOuting = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user';\r\nimport { IDocument } from '../../models/document';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants';\r\n\r\nlet controller: string = 'document';\r\n\r\nexport const loadAll = (homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getDocumentResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getDocumentResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Documents.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // document.file = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          var foundIndex = documents.findIndex(d => d._id === result.data._id);\r\n          documents[foundIndex]._id = result.data._id;\r\n          ////documents[foundIndex].userId = data.userId;\r\n          ////documents[foundIndex].homeId = data.homeId;\r\n          documents[foundIndex].title = data.title;\r\n          documents[foundIndex].description = data.description;\r\n          documents[foundIndex].file = data.file;\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          documents.unshift({\r\n            _id: result.data._id,\r\n            ////userId: data.userId,\r\n            ////homeId: data.homeId,\r\n            title: data.title,\r\n            description: data.description,\r\n            file: data.file,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IDocument);\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      documents = documents.filter((d, i) => d._id !== id);\r\n      dispatch(getDocumentResult(documents, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getDocumentResult = (data: Array<IDocument>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_DOCUMENTS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IDocuments\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Image, Text, TextInput, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IDocument } from '../../models/document';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { FILE_BASE_PATH } from '../../constants';\r\nimport { isNN, generateUUID } from '../../util/index';\r\nimport { toDateString } from '../../util/convert';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  homeIndex: number,\r\n  user: IUser,\r\n  documents: IDocuments,\r\n  onLoad: (homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  homeId: string,\r\n  title: string,\r\n  description: string,\r\n  fileName: string\r\n};\r\n\r\nexport default class MyDocuments extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onFileSelect = this.onFileSelect.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.homes[this.props.homeIndex]._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Documents.');\r\n      }\r\n    });\r\n  };\r\n\r\n  onFileSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        // upload file to api.\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        this.props.onUpload(data, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false\r\n          });\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }else{\r\n            this.setState({\r\n              fileName: fileName\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.fileName)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        /*\r\n        let data = this.state.data;\r\n        data.id = this.state.id,\r\n        data.userId = this.props.user._id,\r\n        data.homeId = this.state.homeId;\r\n        data.title = this.state.title;\r\n        data.description = this.state.description;\r\n        data.createdBy = this.props.user._id;\r\n        data.createdOn = new Date();\r\n        */\r\n        \r\n        let document = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          file: this.state.fileName,\r\n          createdBy: this.props.user.name,\r\n          createdAt: new Date()\r\n        } as IDocument;\r\n        this.props.onSave(this.state.homeId, document, this.props.homeIndex, this.props.user, this.props.documents.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n              title: '',\r\n              description: '',\r\n              fileName: ''\r\n            });\r\n            Toast.success('Document saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save document.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      id: '',\r\n      homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n    });\r\n  };\r\n  \r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.documents.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Document removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove document.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'My Documents', link: 'my-documents'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n        </View>\r\n        <View style={modelStyles.row}>\r\n          <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n        </View>\r\n        {isNN(this.props.user.homes) &&\r\n        <View style={modelStyles.row}>\r\n        <Text style={{marginRight: 10}}>Home:</Text>\r\n        {this.props.user.homes.map((h: IHome, i: number) => {\r\n          return(\r\n            <RadioButton isActive={h._id === this.state.homeId} text={h.number} key={'home' + i} onPress={() => this.setState({homeId: h._id})} />\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n        }\r\n        <View style={modelStyles.row}>\r\n          {/* <Button\r\n              title='Select Document'\r\n              onPress={this.onImageSelect}\r\n              /> */}\r\n              <input type='file' name='file' placeholder='Select Document' onChange={this.onFileSelect}/>\r\n              {isNN(this.state.fileName) &&\r\n              <Text style={{marginLeft: 15}}>{this.state.fileName}</Text>\r\n              }\r\n        </View>\r\n        <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n            <Button\r\n            style={{marginRight: 10}}\r\n            title='SAVE'\r\n            onPress={this.onSave}\r\n            />\r\n            <Button\r\n            title='CLEAR'\r\n            onPress={this.onClear}\r\n            />\r\n        </View>\r\n      {(this.props.documents.isUpToDate && !this.props.documents.isError && isNN(this.props.documents.data)) ?\r\n        this.props.documents.data.map((d: IDocument, i: number) => {\r\n          return(\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n              </View>\r\n              {isNN(d.description) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              }\r\n              {isNN(this.props.user.homes.filter(ho => ho._id === d._id)) &&\r\n              <View style={styles.ele}>\r\n                <Text>{'Home: ' + this.props.user.homes.filter(ho => ho._id === d._id)[0].number}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.file) &&\r\n              <View style={styles.ele}>\r\n                <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n              </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                {/* <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d.id,\r\n                    homeId: d.homeId,\r\n                    title: d.title,\r\n                    description: d.description,\r\n                  });\r\n                }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span> */}\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{this.props.documents.isUpToDate ? 'No document found.' : (this.props.documents.isError ?  this.props.documents.errorMessage : 'No document found.')}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IDocument } from '../models/document';\r\nimport { loadAll, save, remove } from '../store/actions/documents';\r\nimport { upload } from '../store/actions/file';\r\nimport Page from '../components/home/my-documents';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    homeIndex: state.AppUser.homeIndex,\r\n    user: state.User,\r\n    documents: state.Documents\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(homeId, callback)),\r\n    onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(save(homeId, data, homeIndex, user, documents, callback)),\r\n    onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(remove(id, documents, callback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(upload(data, callback))\r\n});\r\n\r\nexport const MyDocuments = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { IBlock } from '../../models/block/block';\r\nimport { IUser } from '../../models/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util';\r\nimport { IHome } from '../../models/home';\r\nimport { IHomes } from '../../models/store/homes';\r\n\r\nlet controller: string = 'block';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getBlockResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getBlockResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, homes: Array<IHome>, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = blocks.findIndex(d => d._id === result.data);\r\n        blocks[foundIndex]._id = result.data;\r\n        blocks[foundIndex].name = data.name;\r\n        blocks[foundIndex].description = data.description;\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.blockId))\r\n      {\r\n        blocks.unshift({\r\n            _id: result.data.blockId,\r\n            name: data.name,\r\n            description: data.description,\r\n            createdBy: user.name\r\n          } as IBlock);\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        if(isNN(result.data.homes)){\r\n          result.data.homes.forEach((h: any) => {\r\n            h.memberIds = h.members;\r\n            delete h.members;\r\n          });\r\n          homes = homes.concat(result.data.homes);\r\n          dispatch(getHomesResult(homes, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      blocks = blocks.filter((d, i) => d._id !== id);\r\n      dispatch(getBlockResult(blocks, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View,  TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  homes: IHomes,\r\n  onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IBlock>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Blocks extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.blocks.isUpToDate && !this.props.blocks.isError && isNN(this.props.blocks.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      this.setState({\r\n        searchResult: this.props.blocks.data.filter(d => (d.name + '').toLocaleLowerCase().indexOf(searchText) >= 0),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            let homes = (isNN(this.props.homes.data)) ? this.props.homes.data.filter(h => h._blockId === id) : [];\r\n            if(isNN(homes)){\r\n              let msg = '';\r\n              homes.map(h => {\r\n                msg += (msg.length > 0 ? ', ' : '') + h.number;\r\n              });\r\n              if(homes.length > 1){\r\n                msg = 'Homes ' + msg + ' are assigned under this block. Please move these homes to other block and try to delete';\r\n              }else{\r\n                msg = 'Home ' + msg + ' is assigned under this block. Please move this home to other block and try to delete.';\r\n              }\r\n              Toast.fail(msg);\r\n            }else{\r\n              this.setState({\r\n                isLoading: true\r\n              });\r\n              this.props.onRemove(id, this.props.blocks.data, (result: boolean) => {\r\n                this.setState({\r\n                  isLoading: false\r\n                });\r\n                if(result === true){\r\n                  this.onSearch();\r\n                  Toast.success('Home removed successfully.');\r\n                }else{\r\n                  Toast.fail('Failed to remove home.');\r\n                }\r\n              });\r\n            }\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Blocks', link: 'blocks'}]} />\r\n          <View className='bgc-white p-20'>\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-block/0')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search Block\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSearch);\r\n            }} />\r\n            <span className='icon-holder cur-p' onClick={this.onSearch}>\r\n              <i className='ti-search pdd-right-10 fw-900'></i>\r\n            </span> \r\n          </View>\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IBlock, i: number) => {\r\n            return(\r\n              <View key={'block' + i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Name: ' + d.name}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Description: ' + (isNN(d.description) ? d.description : '')}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text style={{marginRight: 10}}>Homes: </Text>\r\n                  {\r\n                    (isNN(this.props.homes.data) && isNN(this.props.homes.data.filter(h => h._blockId === d._id))) ?\r\n                    this.props.homes.data.filter(h => h._blockId === d._id).map((h, i) => {\r\n                    return(<Link to={'edit-home/' + h._id} style={{marginRight: 10}}>{h.number}</Link>)\r\n                    })\r\n                    :\r\n                    <Text>No homes assigned under this block.</Text>\r\n                  }\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                    this.props.history.push('edit-block/' + d._id);////TODO\r\n                    // this.props.navigation.navigate('EditBlock', {id: d._id});\r\n                  }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No block match with your search.</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { remove } from '../store/actions/block';\r\nimport Page from '../components/home/manager/blocks';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => dispatch(remove(id, blocks, callback))\r\n});\r\n\r\nexport const Blocks = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as commonStyles} from '../../../styles/common';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome } from '../../../models/home';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  homes: IHomes,\r\n  onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, homes: Array<IHome>, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n\tname: string,\r\n  description: string,\r\n  homeCount: number\r\n};\r\n\r\nexport default class EditBlock extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      name: '',\r\n      description: '',\r\n      homeCount: 0\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let blockId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    if(blockId.length > 0 && blockId !== '0' && this.props.blocks && isNN(this.props.blocks.data)){\r\n      let block = this.props.blocks.data.filter((d, i) => {\r\n        return d._id === blockId\r\n      });\r\n      if(isNN(block)){\r\n        this.setState({\r\n          id: block[0]._id,\r\n          name: block[0].name,\r\n          description: block[0].description\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && (isNN(this.state.id) || this.state.homeCount > 0)){\r\n      if(!isNN(this.props.blocks.data) || !isNN(this.props.blocks.data.filter(b => b.name === this.state.name))){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let block = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          description: this.state.description\r\n        } as IBlock;\r\n        block = Object.assign(block, {\r\n          homeCount: this.state.homeCount\r\n        });\r\n        this.props.onSave(this.props.user.client._id, block, this.props.user, (this.props.blocks && this.props.blocks.data) ? this.props.blocks.data : [], (this.props.homes && this.props.homes.data) ? this.props.homes.data : [], (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              name: '',\r\n              description: '',\r\n              homeCount: 0\r\n            });\r\n            Toast.success(isNN(this.state.id) ? 'Block saved successfully.' : 'Block saved and home(s) created successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save block.');\r\n          }\r\n        });\r\n      }else{\r\n        Toast.fail('Block with same name already exists. Please give different name.');\r\n      }\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Blocks', link: 'blocks'}, {title: 'Edit Block', link: 'edit-block/0'}]} />\r\n        <View className='bgc-white p-20'>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Description\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View>\r\n          {!isNN(this.state.id) &&\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' placeholder=\"Number of houses in this block\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.homeCount > 0 ? this.state.homeCount + '' : ''} onChange={(event: any) => this.setState({homeCount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          }\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { IUser } from '../models/user';\r\nimport { IHome } from '../models/home';\r\nimport { save } from '../store/actions/block';\r\nimport Page from '../components/home/manager/edit-block';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, homes: Array<IHome>, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, blocks, homes, callback))\r\n});\r\n\r\nexport const EditBlock = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, ScrollView, TextInput, Text, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome } from '../../../models/home';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\nimport { COLOR, MONTH } from '../../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  amount: number,\r\n  description: string,\r\n  month: number,\r\n  year: number,\r\n  searchText: string,\r\n  showHomes: boolean,\r\n  isAllHome: boolean,\r\n  homes: Array<IHome>\r\n};\r\n\r\nexport default class PaymentForm extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      amount: 0,\r\n      description: '',\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n      searchText: '',\r\n      showHomes: false,\r\n      isAllHome: false,\r\n      homes: []\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n  };\r\n\r\n  onSave = () => {\r\n    if(this.state.amount > 0 && (this.state.isAllHome || this.state.homes.length > 0)){\r\n      let homeIds = [] as any;\r\n      this.state.homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        amount: this.state.amount,\r\n        description: this.state.description,\r\n        month: this.state.month,\r\n        year: this.state.year,\r\n        isAllHome: this.state.isAllHome,\r\n        homes: homeIds\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onSave(this.props.user.client._id, data, this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          this.setState({\r\n            amount: 0,\r\n            description: '',\r\n            month: new Date().getMonth(),\r\n            year: new Date().getFullYear(),\r\n            searchText: '',\r\n            showHomes: false,\r\n            isAllHome: false,\r\n            homes: []\r\n          });\r\n          Toast.success('Payment saved successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to save payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Save.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({ \r\n      amount: 0,\r\n      description: '',\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n      searchText: '',\r\n      showHomes: false,\r\n      isAllHome: false,\r\n      homes: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Amount\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.amount > 0 ? this.state.amount + '' : ''} onChange={(event: any) => this.setState({amount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={{marginTop: 15}}>{'Payment for ' + this.state.year + ' '}</Text>\r\n            <Picker\r\n              className='form-control'\r\n              value={this.state.month}\r\n              style={ modelStyles.ele}\r\n              onChange={(event: any) => this.setState({month: event.target.value})}>\r\n              {\r\n                MONTH.filter((m, i) => m.value <= new Date().getMonth()).map((m: any, i: number) => {\r\n                  return(<option key={'month' + i} value={m.value}>{m.title}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={{marginRight: 15}}>{'Apply to Home(s): ' + (this.state.isAllHome ? '' : this.state.homes.length)}</Text>\r\n            <Checkbox isActive={this.state.isAllHome} text='All Homes' onPress={() => this.setState({isAllHome: !this.state.isAllHome})} />\r\n          </View>\r\n          {!this.state.isAllHome &&\r\n          <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.state.homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6, color: COLOR.SECONDARY }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          homes: this.state.homes.filter((h, i) => h._id !== d._id)\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n          }\r\n          {!this.state.isAllHome &&\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Enter Home Number\" className='form-control'\r\n            style={{...modelStyles.ele,\r\n              flexDirection: 'row',\r\n              padding: 6,\r\n              borderWidth: 1,\r\n              borderColor: COLOR.HR_COLOR,\r\n              borderRadius: 5\r\n            }}\r\n            value={this.state.searchText} \r\n            onChange={(event: any) => this.setState({showHomes: true, searchText: event.target.value})} />\r\n          </View>\r\n          }\r\n            {(!this.state.isAllHome && this.state.showHomes && isNN(this.state.searchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n              <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.searchText.toLowerCase()) >= 0 && (this.state.homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6}}\r\n                      onClick={() => {\r\n                        let homes = this.state.homes;\r\n                        homes.push(d);\r\n                        this.setState({\r\n                          homes: homes\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n              </ScrollView>\r\n            }\r\n          <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n              <Button\r\n              style={{marginRight: 10}}\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={this.onClear}\r\n              />\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Text, TextInput, ScrollView, TextArea } from '../../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IPayment } from '../../../models/home';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR, MONTH } from '../../../constants';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN } from '../../../util';\r\nimport Toast from '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  isShowSearch: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  datePickerType: string,\r\n  datePickerDate: Date,\r\n  homes: Array<IHome>,\r\n  searchText: string,\r\n  showHomes: boolean,\r\n  data: Array<IPayment>,\r\n  isShowUpdateModel: boolean,\r\n  uPaymentId: string,\r\n  uAmount: number,\r\n  uDescription: string\r\n};\r\n\r\nexport default class PaymentHistory extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isShowSearch: true,\r\n      fromDate: '',\r\n      toDate: '',\r\n      datePickerType: '',\r\n      datePickerDate: new Date(),\r\n      homes: [],\r\n      searchText: '',\r\n      showHomes: false,\r\n      data: [],\r\n      isShowUpdateModel: false,\r\n      uPaymentId: '',\r\n      uAmount: 0,\r\n      uDescription: ''\r\n    };\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(this.state.fromDate && this.state.toDate){\r\n      let homeIds = [] as any;\r\n      this.state.homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        fromDate: this.state.fromDate,\r\n        toDate: this.state.toDate,\r\n        homes: homeIds\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onSearch(this.props.user.client._id, data, this.props.user, (result: Array<IPayment>) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          isShowSearch: false,\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        Toast.fail(message ? message : 'Failed to load payment.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Search.');\r\n    }\r\n  };\r\n\r\n  onUpdate = () => {\r\n    if(isNN(this.state.uPaymentId) && this.state.uAmount > 0){\r\n      let data = {\r\n        amount: this.state.uAmount,\r\n        description: this.state.uDescription,\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.state.uPaymentId, data, this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          let pData = this.state.data;\r\n          var foundIndex = pData.findIndex(d => d._id === this.state.uPaymentId);\r\n          pData[foundIndex].amount = this.state.uAmount;\r\n          pData[foundIndex].description = this.state.uDescription;\r\n          this.setState({\r\n            isShowUpdateModel: false,\r\n            uPaymentId: '',\r\n            uAmount: 0,\r\n            uDescription: '',\r\n            data: pData\r\n          });\r\n          Toast.success('Payment updated successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to update payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          {this.state.isShowSearch ?\r\n          <View>\r\n            <View style={modelStyles.row}>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                this.setState({\r\n                  fromDate: date\r\n                });\r\n              }}\r\n              value={this.state.fromDate}\r\n              />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                this.setState({\r\n                  toDate: date\r\n                });\r\n              }}\r\n              value={this.state.toDate}\r\n              />\r\n          </View>\r\n            <View style={modelStyles.row}>\r\n            <Text style={{marginRight: 15}}>{'Home(s): ' + (this.state.homes.length > 0 ? this.state.homes.length : 'All')}</Text>\r\n          </View>\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.state.homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6, color: COLOR.SECONDARY }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          homes: this.state.homes.filter((h, i) => h._id !== d._id)\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Enter Home Number\" className='form-control'\r\n            style={{...modelStyles.ele,\r\n              flexDirection: 'row',\r\n              padding: 6,\r\n              borderWidth: 1,\r\n              borderColor: COLOR.HR_COLOR,\r\n              borderRadius: 5\r\n            }}\r\n            value={this.state.searchText} \r\n            onChange={(event: any) => this.setState({showHomes: true, searchText: event.target.value})} />\r\n          </View>\r\n            {(this.state.showHomes && isNN(this.state.searchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.searchText.toLowerCase()) >= 0 && (this.state.homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6}}\r\n                      onClick={() => {\r\n                        let homes = this.state.homes;\r\n                        homes.push(d);\r\n                        this.setState({\r\n                          homes: homes\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            }\r\n            <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                <Button\r\n                title=\"SEARCH\"\r\n                onPress={this.onSearch}\r\n                />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View>\r\n             <Text \r\n             className='fr pointer'\r\n             style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right'}}\r\n             onClick={() => {\r\n               this.setState({\r\n                 isShowSearch: true\r\n               });\r\n             }}>Show Search</Text>\r\n          </View>\r\n          }\r\n          <View>\r\n            {(isNN(this.state.data)) ?\r\n              this.state.data.map((d: IPayment, i: number) => {\r\n                return(\r\n                  <View key={i} style={pageStyles.row}>\r\n                    <View style={pageStyles.ele}>\r\n                        <Text style={{fontWeight: 'bold'}}>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text style={{fontWeight: 'bold'}}>{'Rs.' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                    </View>\r\n                    {isNN(d.description) &&\r\n                      <View style={pageStyles.ele}>\r\n                        <Text>{d.description}</Text>\r\n                      </View>\r\n                    }\r\n                    <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                      <Button title=\"Update\" onPress={() => {\r\n                        this.setState({\r\n                          isShowUpdateModel: true,\r\n                          uPaymentId: d._id,\r\n                          uAmount: d.amount,\r\n                          uDescription: d.description\r\n                        });\r\n                      }} />\r\n                    </View>\r\n                  </View>\r\n                )\r\n              })\r\n              :\r\n              <Text style={{padding: 20}}>No payment found.</Text>\r\n            }\r\n          </View>\r\n          <Modal\r\n          open={this.state.isShowUpdateModel}\r\n          onClose={() => {\r\n            this.setState({\r\n              isShowUpdateModel: false,\r\n              uPaymentId: '',\r\n              uAmount: 0,\r\n              uDescription: ''\r\n            });\r\n          }}>\r\n          <View style={popupStyles.container}>\r\n            <View style={popupStyles.content}>\r\n              <View style={modelStyles.row}>\r\n                <TextInput type='text' placeholder=\"Amount\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.uAmount > 0 ? this.state.uAmount + '' : ''} onChange={(event: any) => this.setState({uAmount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View style={modelStyles.row}>\r\n                <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.uDescription} onChange={(event: any) => this.setState({uDescription: event.target.value})} />\r\n              </View>\r\n              <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Button\r\n                  style={{marginRight: 10}}\r\n                  title=\"SAVE\"\r\n                  onPress={this.onUpdate}\r\n                  />\r\n                  <Button\r\n                  title=\"CLEAR\"\r\n                  onPress={() => {\r\n                    this.setState({\r\n                      uAmount: 0,\r\n                      uDescription: ''\r\n                    });\r\n                  }}\r\n                  />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  }\r\n};","import * as React from 'react';\r\nimport {  View } from '../../common/elements';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IPayment } from '../../../models/home';\r\nimport { COLOR } from '../../../constants';\r\nimport PaymentForm from './payment-form';\r\nimport PaymentHistory from './payment-history';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  activeTab: number,\r\n  history: Array<IPayment>\r\n};\r\n\r\nexport default class Payment extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1,\r\n      history: []\r\n    }\r\n  };\r\n  \r\n  componentDidMount(){\r\n    /*\r\n    this.props.onLoad(this.props.user.client._id, '', (result: Array<IPayment>) => {\r\n      if(isNN(result)){\r\n        this.setState({\r\n          history: result\r\n        });\r\n      }\r\n    }, (message: string) => {\r\n      Toast.fail(message ? message : 'Failed to load Payments.');\r\n    });\r\n    */\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Payment', link: 'payment'}]} />\r\n        <View className='bgc-white p-20'>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <span className={'tab' + (this.state.activeTab === 1 ? ' active': '')} onClick={() => this.setState({activeTab: 1})}>\r\n              NEW\r\n            </span>\r\n            <span className={'tab' + (this.state.activeTab === 2 ? ' active': '')} onClick={() => this.setState({activeTab: 2})}>\r\n              HISTORY\r\n            </span>\r\n          </View>\r\n          <View className='tab-content p-15'>\r\n            {\r\n              this.state.activeTab === 1 ? \r\n                <PaymentForm history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} onSave={this.props.onSave} />\r\n              :\r\n                <PaymentHistory history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} onSearch={this.props.onSearch} onUpdate={this.props.onUpdate} />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IPayment } from '../models/home';\r\nimport { loadAll, save, search, updatePay } from '../store/actions/payment';\r\nimport Page from '../components/home/manager/payment';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, homeId, sCallback, fCallback)),\r\n    onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, callback)),\r\n    onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(search(appClientId, data, user, sCallback, fCallback)),\r\n    onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updatePay(id, data, user, callback))\r\n});\r\n\r\nexport const Payment = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { styles as modelStyles } from '../../../../styles/model';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IBlock } from '../../../../models/block';\r\nimport { IHome } from '../../../../models/home';\r\n\r\ninterface IProps {\r\n  blocks: IBlocks,\r\n  data: IHome\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Info extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      homeId: '',\r\n      data: {} as IHome\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { blocks, data } = this.props;\r\n    let blockName = '';\r\n    if(data && isNN(data._id) && blocks && blocks.isUpToDate && !blocks.isError && blocks.data){\r\n      let block = blocks.data.filter((d: IBlock, i: number) => d._id === data._blockId);\r\n      if(block && block.length > 0){\r\n        blockName = block[0].name;\r\n      }\r\n    }\r\n    if(data && isNN(data._id)){\r\n    return(\r\n        <View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Block: ' + blockName}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Number: ' + data.number}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Address: ' + data.address}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'No of bed room(s): ' + data.bedRoom}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Parking: ' + data.parking}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Description: ' + data.description}</Text>\r\n          </View>\r\n        </View>\r\n    );\r\n    }else{\r\n      return(\r\n      <Text>No data found.</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IMember } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IMember>\r\n};\r\n\r\nexport default class Members extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IMember>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Members.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Members</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IMember, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{(isNN(d.createdBy) ? d.createdBy : '') + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>\r\n                </View>\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found.</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IVehicle } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVehicle>\r\n};\r\n\r\nexport default class Vehicles extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IVehicle>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Vehicles</Text>\r\n        </View>\r\n          {isNN(data) ? \r\n            data.map((d: IVehicle, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>                  \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.number}</Text>\r\n                </View>\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found.</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport {styles as commentsStyles} from '../../../../styles/comments';\r\nimport { IServant, ITakeaway } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateTimeString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IServant>,\r\n  viewId: string,\r\n  takeaways: Array<ITakeaway>\r\n};\r\n\r\nexport default class Servants extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      viewId: '',\r\n      takeaways: [],\r\n    }\r\n    this.onView = this.onView.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IServant>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Servants.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onView = (id: string, takeaways: Array<ITakeaway>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        takeaways: []\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        takeaways: takeaways\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Servants</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IServant, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text className='bold'>{d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={styles.ele}>\r\n                  <span style={{}} onClick={() => {\r\n                    this.onView(d._id, d.takeaways);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Takeaways'}</Text>\r\n                  </span>\r\n                </View>\r\n                {this.state.viewId === d._id &&\r\n                <View style={commentsStyles.cmntsCnr}>\r\n                  <View style={commentsStyles.cmntsHdr}>\r\n                    <Text className='bold' style={commentsStyles.cmntsHdrTxt}>Takeaways</Text>\r\n                  </View>\r\n                  <View style={commentsStyles.cmntsCnt}>\r\n                    {isNN(this.state.takeaways) ?\r\n                      this.state.takeaways.map((e: ITakeaway, j: number) => {\r\n                        return(\r\n                        <View key={'tkycmt' + j} style={j === 0 ? commentsStyles.cmntCnrFst : commentsStyles.cmntCnr}>\r\n                          <View style={commentsStyles.cmntHdr}>\r\n                            <Text className='bold'>{e.createdBy + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text>{e.title}</Text>\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text>{e.description}</Text>\r\n                          </View>\r\n                          {\r\n                            e.isExit ?\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text style={{color: COLOR.SUCCESS}}>{'Exit by ' + e.exitBy + ' in Gate ' + e.exitGateNo + ' on ' + toDateTimeString(e.exitAt)}</Text>\r\n                          </View>\r\n                          :\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text style={{color: COLOR.ERROR}}>Still not exit.</Text>\r\n                          </View>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No takeaway found.</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found.</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { ITicket } from '../../../../models/home';\r\nimport { ITicketComment } from '../../../../models/home/ticket-comment';\r\nimport Toast from '../../../../util/toast';\r\nimport {styles as commentsStyles} from '../../../../styles/comments';\r\nimport { toDateTimeString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<ITicket>,\r\n  viewId: string,\r\n  comments: Array<ITicketComment>\r\n};\r\n\r\nexport default class Tickets extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      viewId: '',\r\n      comments: []\r\n    }\r\n    this.onView = this.onView.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<ITicket>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        comments: []\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        comments: comments\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Tickets</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: ITicket, i: number) => {\r\n            return(\r\n              <View key={'tkt' + i} style={styles.row}>\r\n               <View style={styles.ele}>\r\n                  <Text className='bold'>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                    <Text>{d.title}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                    <Text>{d.description}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.status}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <span style={{}} onClick={() => {\r\n                    this.onView(d._id, d.comments);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n                  </span>\r\n                </View>\r\n                {this.state.viewId === d._id &&\r\n                <View style={commentsStyles.cmntsCnr}>\r\n                  <View style={commentsStyles.cmntsHdr}>\r\n                    <Text className='bold' style={commentsStyles.cmntsHdrTxt}>Comments</Text>\r\n                  </View>\r\n                  <View style={commentsStyles.cmntsCnt}>\r\n                    {isNN(this.state.comments) ?\r\n                      this.state.comments.map((e: ITicketComment, j: number) => {\r\n                        return(\r\n                        <View key={'tkycmt' + j} style={j === 0 ? commentsStyles.cmntCnrFst : commentsStyles.cmntCnr}>\r\n                          <View style={commentsStyles.cmntHdr}>\r\n                            <Text className='bold'>{e.createdByName + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text>{e.comment}</Text>\r\n                          </View>\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No comment found.</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found.</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IVisitor } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUser } from '../../../../models/user';\r\nimport VisitorsView from '../../gatekeeper/visitors-view';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { COLOR } from '../../../../constants';\r\nimport { styles } from '../../../../styles/page';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, this.state.isActive, (result: Array<IVisitor>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Visitors.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Visitors</Text>\r\n        </View>\r\n        <VisitorsView data={this.state.data} isActive={this.state.isActive} user={this.props.user} appUser={this.props.appUser} onActiveChange={this.onActiveChange} />\r\n      </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles as pageStyles } from '../../../../styles/page';\r\nimport { IPayment } from '../../../../models/home';\r\nimport { ITransaction } from '../../../../models/home/transaction';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { MONTH, COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IPayment>,\r\n  viewId: string,\r\n  transactions: Array<ITransaction>\r\n};\r\n\r\nexport default class Payments extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      viewId: '',\r\n      transactions: []\r\n    }\r\n    this.onView = this.onView.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IPayment>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Payments.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onView = (id: string, transactions: Array<ITransaction>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        transactions: []\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        transactions: transactions\r\n      });\r\n    }\r\n  };\r\n\r\n  getAmountPaid = (transactions: Array<ITransaction>) => {\r\n    let amount = 0;\r\n    if(isNN(transactions)){\r\n      transactions.filter((d: ITransaction, i: number) => d.isSuccess === true).map((d:ITransaction, i: number) => amount += d.amount);\r\n    }\r\n    return amount;\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={pageStyles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Payments</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IPayment, i: number) => {\r\n            return(\r\n              <View key={i} style={pageStyles.row}>\r\n                    <View style={pageStyles.ele}>\r\n                        <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text>{'Rs. ' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text>{'Amount Paid Rs. ' + this.getAmountPaid(d.transactions)}</Text>\r\n                    </View>\r\n                    {isNN(d.description) &&\r\n                      <View style={pageStyles.ele}>\r\n                        <Text>{d.description}</Text>\r\n                      </View>\r\n                    }\r\n                    <View style={pageStyles.ele}>\r\n                      <span style={{}} onClick={() => {\r\n                        this.onView(d._id, d.transactions);\r\n                      }}>\r\n                        <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Transactions'}</Text>\r\n                      </span>\r\n                    </View>\r\n                    {this.state.viewId === d._id &&\r\n                    <View style={myStyles.cmntsCnr}>\r\n                  <View style={myStyles.cmntsHdr}>\r\n                    <Text style={myStyles.cmntsHdrTxt}>Transactions</Text>\r\n                  </View>\r\n                  <View style={myStyles.cmntsCnt}>\r\n                    {isNN(this.state.transactions) ?\r\n                      this.state.transactions.map((e: ITransaction, j: number) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? myStyles.cmntCnrFst : myStyles.cmntCnr}>\r\n                          <View style={myStyles.cmntHdr}>\r\n                            <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Ref Id: ' + e.txnRef}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Txn Id: ' + e.txnId}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Amount: ' + e.amount}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Status: ' + (e.isSuccess ? 'SUCCESS' : 'FAILED')}</Text>\r\n                          </View>\r\n                          {\r\n                            isNN(e.reason) &&\r\n                            <View style={myStyles.cmntCnt}>\r\n                              <Text>{'Reason: ' + e.reason}</Text>\r\n                            </View>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No transaction found.</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                  </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found.</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};\r\n\r\nconst myStyles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR, \r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    marginTop: 3,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { FILE_BASE_PATH, COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IDocument>\r\n};\r\n\r\nexport default class Documents extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IDocument>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Documents</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IDocument, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n                </View>\r\n                {isNN(d.description) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.description}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.file) &&\r\n                <View style={styles.ele}>\r\n                <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found.</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View,  Image } from '../../../common/elements';\r\nimport Spinner from '../../../common/spinner';\r\nimport Breadcrum from '../../../common/breadcrum';\r\nimport { IUser } from '../../../../models/user/user';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUsers } from '../../../../models/store/users';\r\nimport { IHomes } from '../../../../models/store/homes';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IHome, IMember, IVehicle, IServant, ITicket, IVisitor, IPayment } from '../../../../models/home';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from  '../../../../util/toast';\r\nimport { isNN } from '../../../../util/index';\r\nimport Info from './info';\r\nimport Members from './members';\r\nimport Vehicles from './vehicles';\r\nimport Servants from './servants';\r\nimport Tickets from './tickets';\r\nimport Visitors from './visitors';\r\nimport Payments from './payments';\r\nimport Documents from './documents';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadServants: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVisitors: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  homeId: string,\r\n  activeTab: number,\r\n  data: IHome\r\n};\r\n\r\nexport default class ViewHome extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      homeId: '',\r\n      activeTab: 1,\r\n      data: {} as IHome\r\n    }\r\n    this.toggleLoading = this.toggleLoading.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let homeId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    this.setState({\r\n      homeId: homeId\r\n    });\r\n    if(homeId.length > 0){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(homeId, (result: IHome) => {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            data: result\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load Home.');\r\n        }\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Home.');\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleLoading = (isLoading: boolean) => {\r\n    this.setState({\r\n      isLoading: isLoading\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { activeTab } = this.state;\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Homes', link: 'homes'}, {title: 'View Home', link: 'view-home'}]} />\r\n        <View className='bgc-white p-20'>\r\n          <View className='tab-bar'>\r\n            <span className={'tab' + (this.state.activeTab === 1 ? ' active': '')} onClick={() => this.setState({activeTab: 1})}>\r\n              <span className=\"icon-holder\">\r\n                <i className=\"c-deep-purple-a700 ti-info-alt\"></i>\r\n              </span>\r\n            </span>\r\n            <span className={'tab' + (this.state.activeTab === 2 ? ' active': '')} onClick={() => this.setState({activeTab: 2})}>\r\n              <span className=\"icon-holder\">\r\n                <i className=\"c-brown-500 fa fa-users\"></i>\r\n              </span>\r\n            </span>\r\n            <span className={'tab' + (this.state.activeTab === 3 ? ' active': '')} onClick={() => this.setState({activeTab: 3})}>\r\n              <span className=\"icon-holder\">\r\n                <i className=\"c-indigo-500 fa fa-car\"></i>\r\n              </span>\r\n            </span>\r\n            <span className={'tab' + (this.state.activeTab === 4 ? ' active': '')} onClick={() => this.setState({activeTab: 4})}>\r\n              <span className=\"icon-holder\">\r\n                <i className=\"c-deep-purple-500 fa fa-female\"></i>\r\n              </span>\r\n            </span>\r\n            <span className={'tab' + (this.state.activeTab === 5 ? ' active': '')} onClick={() => this.setState({activeTab: 5})}>\r\n              <span className=\"icon-holder\">\r\n                <i className=\"c-orange-500 ti-headphone-alt\"></i>\r\n              </span>\r\n            </span>\r\n            <span className={'tab' + (this.state.activeTab === 6 ? ' active': '')} onClick={() => this.setState({activeTab: 6})}>\r\n              <span className=\"icon-holder\">\r\n                <i className=\"c-pink-500 fa fa-id-card-o\"></i>\r\n              </span>\r\n            </span>\r\n            <span className={'tab' + (this.state.activeTab === 7 ? ' active': '')} onClick={() => this.setState({activeTab: 7})}>\r\n              <span className=\"icon-holder\">\r\n                <i className=\"c-indigo-500 fa fa-credit-card\"></i>\r\n              </span>\r\n            </span>\r\n            <span className={'tab' + (this.state.activeTab === 8 ? ' active': '')} onClick={() => this.setState({activeTab: 8})}>\r\n              <span className=\"icon-holder\">\r\n                <i className=\"c-blue-500 fa fa-file-text\"></i>\r\n              </span>\r\n            </span>\r\n          </View>\r\n          <View className='p-15'>\r\n            {\r\n              activeTab === 1 ?\r\n                  <Info blocks={this.props.blocks} data={this.state.data} />\r\n              :\r\n                activeTab === 2 ?\r\n                  <Members homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadMembers} />\r\n                :\r\n                  activeTab === 3 ?\r\n                    <Vehicles homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadVehicles} />\r\n                  :\r\n                    activeTab === 4 ?\r\n                      <Servants homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadServants} />\r\n                    :\r\n                      activeTab === 5 ?\r\n                        <Tickets homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadTickets} />\r\n                      :\r\n                        activeTab === 6 ?\r\n                          <Visitors appUser={this.props.appUser} user={this.props.user} homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadVisitors} />\r\n                        :\r\n                          activeTab === 7 ?\r\n                            <Payments homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadPayments} />\r\n                          :\r\n                            <Documents homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadDocuments} />\r\n            }            \r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHome, IMember, IVehicle, IServant, ITicket, IPayment, IVisitor } from '../models/home';\r\nimport { IDocument } from '../models/document';\r\nimport { load } from '../store/actions/home';\r\nimport { loadAllByHome as loadMembers} from '../store/actions/member';\r\nimport { loadAllByHome as loadVehicles } from '../store/actions/vehicle';\r\nimport { loadAllByHome as loadServants } from '../store/actions/servant';\r\nimport { loadAllByHome as loadTickets } from '../store/actions/ticket';\r\nimport { loadAll as loadVisitors } from '../store/actions/visitor';\r\nimport { loadAll as loadPayments } from '../store/actions/payment';\r\nimport { loadAllByHome as loadDocuments } from '../store/actions/documents';\r\nimport Page from '../components/home/manager/view-home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadMembers(homeId, sCallback, fCallback)),\r\n    onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => dispatch(loadVehicles(homeId, sCallback, fCallback)),\r\n    onLoadServants: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => dispatch(loadServants(homeId, sCallback, fCallback)),\r\n    onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => dispatch(loadTickets(homeId, sCallback, fCallback)),\r\n    onLoadVisitors: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => dispatch(loadVisitors('', homeId, isActive, sCallback, fCallback)),\r\n    onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadPayments('', homeId, sCallback, fCallback)),\r\n    onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => dispatch(loadDocuments(homeId, sCallback, fCallback))\r\n});\r\n\r\nexport const ViewHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IUser } from '../../models/user';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n//import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'poll';\r\n\r\nexport const loadAll = (appClientId: string, userRole: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getPollResult([], false, false, ''));\r\n  // new Api().get(controller + 'loadall/?appClientId=' + appClientId + '&userRole=' + userRole, (result: any, message: string) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getPollResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = polls.findIndex(d => d._id === result.data);\r\n        polls[foundIndex]._id = result.data;\r\n        polls[foundIndex].topic = data.topic;\r\n        polls[foundIndex].description = data.description;\r\n        polls[foundIndex].isAllowMultiple = data.isAllowMultiple;\r\n        polls[foundIndex].isOneVotePerFlat = data.isOneVotePerFlat;\r\n        polls[foundIndex].isAnonymous = data.isAnonymous;\r\n        polls[foundIndex].fromDate = data.fromDate;\r\n        polls[foundIndex].toDate = data.toDate;\r\n        polls[foundIndex].options = data.options;\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        sCallback(true);\r\n      }else{\r\n        sCallback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      // console.log(\"OUT: \" + result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        polls.unshift(data);\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        sCallback(true);\r\n      }else{\r\n        sCallback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, polls: Array<IPoll>, userId: string, sCallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      polls = polls.filter((d, i) => d._id !== id);\r\n      dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n      sCallback(true);\r\n    }else{\r\n      sCallback(false);\r\n    }\r\n  }, {\r\n    Id: id,\r\n    UserId: userId\r\n  });\r\n};\r\n\r\nexport const vote = (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/vote/' + pollId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      var foundIndex = polls.data.findIndex(d => d._id === pollId);\r\n      polls.data[foundIndex].votes = result.data;\r\n      dispatch(getPollResult(polls.data, true, false, ''));\r\n\r\n      /*\r\n      // Update home\r\n      if(!isNN(user.homes[appUser.homeIndex].votes)){\r\n        user.home[appUser.homeIndex].vote = [];\r\n      }\r\n      result.data.map((v: IVote, vi: number) => {\r\n        user.home[appUser.homeIndex].vote.push(v);\r\n      });\r\n      dispatch(getUserResult(user));\r\n      */\r\n      // Update polls\r\n      // if(polls.isUpToDate && !polls.isError && isNN(polls.data) && ((',' + user.type + ',').indexOf(ROLE.ADMIN) >= 0 || (',' + user.type + ',').indexOf(ROLE.MANAGER) >= 0)){\r\n        if(polls.isUpToDate && !polls.isError && isNN(polls.data)){\r\n        let lstPoll = polls.data;\r\n        let pollIndex = lstPoll.findIndex(p => p._id === pollId);\r\n        lstPoll[pollIndex].votes = result.data;\r\n        /*\r\n        if(!isNN(lstPoll[pollIndex].votes)){\r\n          lstPoll[pollIndex].vote = [];\r\n        }\r\n        result.data.map((v: IVote, vi: number) => {\r\n          lstPoll[pollIndex].vote.unshift(v);\r\n        });\r\n        */\r\n        dispatch(getPollResult(lstPoll, true, false, \"\"));\r\n      }\r\n     // dispatch(getUserResult(user));\r\n      \r\n      sCallback(true);\r\n    }else{\r\n      sCallback(false);\r\n    }\r\n  }, {\r\n    votes: votes\r\n  });\r\n};\r\n\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});","import { jsError } from \"./index\";\r\n\r\nexport function percentage(_partialValue: number, _totalValue: number) {\r\n    try{\r\n        if(_totalValue > 0){\r\n            return (100 * _partialValue) / _totalValue;\r\n        }else{\r\n            return 0;\r\n        }\r\n    } catch (ex) {\r\n    jsError(ex, 'calc.percentage'); \r\n    return 0; \r\n  }\r\n };","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport DatePicker from 'react-date-picker';\r\nimport {  View, Text, Image, TextInput, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IPolls } from '../../../models/store/polls';\r\nimport { IPoll } from '../../../models/poll/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN, isNNObject } from '../../../util/index';\r\nimport { percentage } from '../../../util/calc';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onSave: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, polls: Array<IPoll>, userID: string, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isEdit: boolean,\r\n  isLoading: boolean,\r\n  id: string,\r\n  topic: string,\r\n  description: string,\r\n  isAllowMultiple: boolean,\r\n  isOneVotePerFlat: boolean,\r\n  isAnonymous: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  pollOption: Array<string>,\r\n  showVotePoll: IPoll,\r\n  datePickerType: string,\r\n  datePickerDate: Date\r\n};\r\n\r\nexport default class Poll extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      isLoading: false,\r\n      id: '',\r\n      topic: '',\r\n      description: '',\r\n      isAllowMultiple: false,\r\n      isOneVotePerFlat: false,\r\n      isAnonymous: false,\r\n      fromDate: new Date(),\r\n      toDate: new Date(),\r\n      pollOption: [],\r\n      showVotePoll: { _id: '' } as IPoll,\r\n      datePickerType: '',\r\n      datePickerDate: new Date()\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n   onSave = () => {\r\n    if(isNN(this.state.topic) && isNN(this.state.description) && isNNObject(this.state.fromDate) && isNNObject(this.state.toDate) && isNN(this.state.pollOption.filter(po => isNN(po)))){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let poll = {\r\n          _id: this.state.id,\r\n          topic: this.state.topic,\r\n          description: this.state.description,\r\n          isAllowMultiple: this.state.isAllowMultiple,\r\n          isOneVotePerFlat: this.state.isOneVotePerFlat,\r\n          isAnonymous: this.state.isAnonymous,\r\n          fromDate: this.state.fromDate,\r\n          toDate: this.state.toDate,\r\n          options: this.state.pollOption.filter(po => isNN(po))\r\n        } as IPoll;\r\n        this.props.onSave(this.props.user.client._id, poll, this.props.polls.data, this.props.user, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              topic: '',\r\n              description: '',\r\n              isAllowMultiple: false,\r\n              isOneVotePerFlat: false,\r\n              isAnonymous: false,\r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              pollOption: [],\r\n              showVotePoll: { _id: '' } as IPoll,\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Poll saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save pol.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.polls.data, this.props.user._id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Poll removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove poll.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  loadVotes = () => {\r\n    if(isNNObject(this.state.showVotePoll) && this.state.showVotePoll._id.length > 0){\r\n      let votes = [] as any;\r\n      this.state.showVotePoll.options.map((po: string, poi: number) => \r\n        votes.push({\r\n          option: po,\r\n          votes: this.state.showVotePoll.votes.filter(v => v.option === poi).length\r\n        })\r\n      );\r\n      return(\r\n        <View style={{padding: 15}}>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{this.state.showVotePoll.topic}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{this.state.showVotePoll.description}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{'Votes: ' + this.state.showVotePoll.votes.length}</Text>\r\n          </View>\r\n        {\r\n        votes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n          return(\r\n            <View key={'pvo' + voi} style={styles.ele}>\r\n              <Text>\r\n                {vo.votes + ' (' + percentage(vo.votes, this.state.showVotePoll.votes.length) +  '%) - ' + vo.option}\r\n              </Text>\r\n            </View>\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n      )\r\n    }else{\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n        {this.state.isEdit === false &&\r\n        <View style={{...styles.row, paddingBottom: 5}}>\r\n          <Button\r\n          title=\"ADD NEW\"\r\n          onPress={() => {\r\n            this.setState({\r\n              isEdit: true,\r\n              id: '',\r\n              topic: '',\r\n              description: '',\r\n              isAllowMultiple: false,\r\n              isOneVotePerFlat: false,\r\n              isAnonymous: false,\r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              pollOption: [],\r\n              showVotePoll: { _id: '' } as IPoll,\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n             });\r\n          }}\r\n          />\r\n        </View>\r\n        }\r\n        {\r\n         (this.state.isEdit === true && this.state.id.length === 0)  ?\r\n         <View key={\"p0\"} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.topic} onChange={(event: any) => this.setState({topic: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => this.setState({isAllowMultiple: !this.state.isAllowMultiple})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => this.setState({isOneVotePerFlat: !this.state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAnonymous} text='Anonymous Voting' onPress={() => this.setState({isAnonymous: !this.state.isAnonymous})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(this.state.pollOption) ?\r\n            this.state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} style={styles.ele}>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={e} onChange={(event: any) => {\r\n                    let newOptions = this.state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    this.setState({pollOption: newOptions});\r\n                  }} />\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    let newOptions = this.state.pollOption;\r\n                    delete newOptions[j];\r\n                    this.setState({pollOption: newOptions});\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-times\"></i>\r\n                  </span>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text>No option found.</Text>\r\n            </View>\r\n          }\r\n            <View style={styles.ele}>\r\n              <span\r\n              onClick={() => {\r\n                if(!isNN(this.state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = this.state.pollOption;\r\n                  newOptions.push('');\r\n                  this.setState({pollOption: newOptions});\r\n                }\r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </span>\r\n            </View>\r\n          <View style={styles.ele}>\r\n            <span className=\"icon-holder mR-10 cur-p\" onClick={this.onSave}>\r\n              <i className=\"c-green-500 fa fa-check\"></i>\r\n            </span>\r\n            <span className=\"icon-holder cur-p\" onClick={() => {\r\n              this.setState({\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <i className=\"c-red-500 fa fa-times\"></i>\r\n            </span>\r\n          </View>\r\n        </View>\r\n        :\r\n        []\r\n        }\r\n      {\r\n      (isNNObject(this.props.polls) && this.props.polls.isUpToDate && !this.props.polls.isError && isNN(this.props.polls.data)) ?      \r\n      this.props.polls.data.map((d: IPoll, i: number) => {\r\n      return(\r\n        (this.state.isEdit === true && this.state.id === d._id) ?\r\n        <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.topic} onChange={(event: any) => this.setState({topic: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => this.setState({isAllowMultiple: !this.state.isAllowMultiple})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => this.setState({isOneVotePerFlat: !this.state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAnonymous} text='Anonymous Voting' onPress={() => this.setState({isAnonymous: !this.state.isAnonymous})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(this.state.pollOption) ?\r\n            this.state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} style={styles.ele}>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={e} onChange={(event: any) => {\r\n                    let newOptions = this.state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    this.setState({pollOption: newOptions});\r\n                  }} />\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    let newOptions = this.state.pollOption;\r\n                    delete newOptions[j];\r\n                    this.setState({pollOption: newOptions});\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-times\"></i>\r\n                  </span>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text>No option found.</Text>\r\n            </View>\r\n          }\r\n            <View style={styles.ele}>\r\n              <span\r\n              onClick={() => {\r\n                if(!isNN(this.state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = this.state.pollOption;\r\n                  newOptions.push('');\r\n                  this.setState({pollOption: newOptions});\r\n                }            \r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </span>\r\n            </View>\r\n          <View style={styles.ele}>\r\n            <span className=\"icon-holder mR-10 cur-p\" onClick={this.onSave}>\r\n              <i className=\"c-green-500 fa fa-check\"></i>\r\n            </span>\r\n            <span className=\"icon-holder cur-p\" onClick={() => {\r\n              this.setState({\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <i className=\"c-red-500 fa fa-times\"></i>\r\n            </span>\r\n          </View>\r\n        </View>\r\n        :\r\n        <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{d.topic}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{d.description}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{toDateString(d.fromDate) + \" to \" + toDateString(d.toDate)}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isAllowMultiple === true ? modelStyles.radioActive : {...modelStyles.radio, marginLeft: 5})}\r\n            >\r\n              <Text style={(d.isAllowMultiple === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>Allow Multiple Votes</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isOneVotePerFlat === true ? {...modelStyles.radioActive} : {...modelStyles.radio, marginLeft: 5})}\r\n             >\r\n              <Text style={(d.isOneVotePerFlat === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>One Vote per Flat</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isAnonymous === true ? {...modelStyles.radioActive} : {...modelStyles.radio, marginLeft: 5})}\r\n             >\r\n              <Text style={(d.isAnonymous === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>Anonymous Voting</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(d.options) ?\r\n            d.options.map((e: string, j: number) => {\r\n              return(\r\n                <View key={\"po\" + j} style={styles.ele}>\r\n                  <Text key={\"pot\" + j} style={{width: '100%'}}>{e}</Text>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text style={{padding: 10}}>No option found.</Text> \r\n            </View>           \r\n          }\r\n          <View style={styles.ele}>\r\n          {(d.fromDate > new Date()) &&\r\n          <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n            this.setState({\r\n              isEdit: true,\r\n              id: d._id,\r\n              topic: d.topic,\r\n              description: d.description,\r\n              isAllowMultiple: d.isAllowMultiple,\r\n              isOneVotePerFlat: d.isOneVotePerFlat,\r\n              isAnonymous: d.isAnonymous,\r\n              fromDate: d.fromDate,\r\n              toDate: d.toDate,\r\n              pollOption: (isNN(d.options) ? d.options : [])\r\n            });\r\n          }}>\r\n            <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n          </span>\r\n          }\r\n          <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n              this.onRemove(d._id);\r\n            }}>\r\n            <i className=\"c-red-500 fa fa-trash\"></i>\r\n          </span>\r\n            <Text className='pointer' style={{color: COLOR.SECONDARY}} onClick={() => {\r\n              this.setState({showVotePoll: d})\r\n            }}>View Votes</Text>\r\n          </View>\r\n        </View>\r\n      )\r\n      })\r\n      :\r\n      <Text style={{padding: 20}}>{(this.props.polls.isUpToDate ? (this.props.polls.isError ? this.props.polls.errorMessage : \"No poll found.\") : \"Loading...\")}</Text>\r\n    }\r\n    <Modal\r\n      open={(isNNObject(this.state.showVotePoll) && this.state.showVotePoll._id.length > 0)}\r\n      onClose={() => this.setState({showVotePoll : { _id: '' } as IPoll})}>\r\n      <View style={popupStyles.container}>\r\n        <View style={popupStyles.content}>\r\n        {\r\n          this.loadVotes()\r\n        }\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n    <Spinner visible={this.state.isLoading} />\r\n    </View>  \r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Checkbox from '../common/checkbox';\r\nimport Spinner from '../common/spinner';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { styles } from \"../../styles/page\";\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { percentage } from '../../util/calc';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  votePollId: string,\r\n  votes: Array<IVote>,\r\n  currentDate: Date\r\n};\r\n\r\nexport default class Poll extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    let currentDate = new Date();\r\n    this.state = {\r\n      isLoading: false,\r\n      votePollId: '',\r\n      votes: [],\r\n      currentDate: new Date((currentDate.getMonth() + 1) + '/' + currentDate.getDate() + '/' + currentDate.getFullYear())\r\n    }\r\n    this.loadVotes = this.loadVotes.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  loadVotes = (poll: IPoll) => {\r\n    let votes = [] as any;\r\n    poll.options.map((po: string, poi: number) => \r\n      votes.push({\r\n        option: po,\r\n        votes: poll.votes.filter(v => v.option === poi).length\r\n      })\r\n    );\r\n    return(\r\n    votes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n      return(\r\n        <View key={'pvo' + voi} style={styles.ele}>\r\n          <Text>\r\n            {vo.votes + ' (' + percentage(vo.votes, poll.votes.length) +  '%) - ' + vo.option}\r\n          </Text>\r\n        </View>\r\n      )\r\n    })\r\n    )\r\n  };\r\n\r\n  onSelectOption = (poll: IPoll, optionId: number) => {\r\n    if(this.state.votePollId === poll._id){\r\n      if(isNN(this.state.votes.filter(v => v.option === optionId))){\r\n        this.setState({\r\n          votes: this.state.votes.filter(v => v.option !== optionId)\r\n        });\r\n      }else{\r\n        let votes = [] as Array<IVote>;\r\n        if(poll.isAllowMultiple){\r\n          votes = this.state.votes;\r\n        }\r\n          votes.push({\r\n            _homeId: this.props.user.homes[this.props.appUser.homeIndex]._id,\r\n            _memberId: this.props.user._id,\r\n            option: optionId,\r\n            isActive: true,\r\n            createdBy: this.props.user._id\r\n          } as IVote);\r\n          this.setState({\r\n            votes: votes\r\n          });\r\n        // if(poll.isAllowMultiple || !isNN(this.state.votes.filter(v => v.pollId === poll.id))){\r\n\r\n        // }\r\n      }\r\n    }else{\r\n      let votes = [] as Array<IVote>;\r\n      votes.push({\r\n        _homeId: this.props.user.homes[this.props.appUser.homeIndex]._id,\r\n        _memberId: this.props.user._id,\r\n        option: optionId,\r\n        isActive: true,\r\n        createdBy: this.props.user._id\r\n      } as IVote);\r\n      this.setState({\r\n        votePollId: poll._id,\r\n        votes: votes\r\n      });\r\n    }\r\n  };\r\n\r\n  onVote = (pollId: string) => {\r\n    if(this.state.votePollId === pollId &&  isNN(this.state.votes)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onVote(pollId, this.state.votes, this.props.polls, this.props.user, this.props.appUser, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          this.setState({\r\n            votePollId: '',\r\n            votes: []\r\n          });\r\n          Toast.success('Your vote saved successfully.');\r\n        }else{\r\n          Toast.fail('Failed to save your vote.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select any option to vote.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n      {\r\n        (isNNObject(this.props.polls) && this.props.polls.isUpToDate && !this.props.polls.isError && isNN(this.props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= this.state.currentDate))) ?\r\n        this.props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= this.state.currentDate).map((d: IPoll, i: number) => {\r\n          return(\r\n            <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.topic}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === this.props.user.homes[this.props.appUser.homeIndex]._id))) &&\r\n                d.options.map((o: string, oi: number) => {\r\n                  return(\r\n                    <View key={\"popt\" + oi} style={styles.ele}>\r\n                      <Checkbox isActive={(this.state.votePollId === d._id && isNN(this.state.votes.filter(v => v.option === oi)))} text={o} onPress={() => this.onSelectOption(d, oi)} />\r\n                    </View>\r\n                  )\r\n                })\r\n              }\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === this.props.user.homes[this.props.appUser.homeIndex]._id))) &&\r\n                <View style={{marginTop: 5, width: '100%'}}>\r\n                  <Button title=\"Vote\" onPress={() => this.onVote(d._id)} style={{width: '100%'}} />\r\n                </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>Your Votes:</Text>\r\n              </View>\r\n              {isNN(d.options) &&\r\n                this.loadVotes(d)\r\n              }\r\n            </View>\r\n          )\r\n      })\r\n      :\r\n      <Text style={{padding: 20}}>{(this.props.polls.isUpToDate ? (this.props.polls.isError ? this.props.polls.errorMessage : \"No active poll found.\") : \"Loading...\")}</Text>\r\n    }\r\n    <Spinner visible={this.state.isLoading} />\r\n    </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Button from '../common/button';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateTimeString } from '../../util/convert';\r\nimport { ROLE, COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  outings: IOutings,\r\n  onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Outing extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false\r\n    }\r\n    this.onReturnBack = this.onReturnBack.bind(this);\r\n  };\r\n\r\n  componentDidMount(){};\r\n  \r\n  componentWillUnmount(){};\r\n  \r\n  onReturnBack = (outingId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to return back from outing',\r\n      message: 'Are you sure? You return back from this outing?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReturnBack(outingId, this.props.user, this.props.outings, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result){\r\n                Toast.success('Successfully returned back.');\r\n              }else{\r\n                Toast.fail('Failed to Return back.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n      {(this.props.appUser.role === ROLE.USER && (!isNNObject(this.props.outings) || !isNN(this.props.outings.data.filter(o => o.isReturned !== true)))) &&\r\n        <View style={styles.row}>\r\n          <Button\r\n          title=\"Go Outing\"\r\n          onPress={() => {\r\n            this.props.history.push('new-outing')\r\n          }}\r\n          />\r\n        </View>\r\n      }\r\n      {\r\n        (isNNObject(this.props.outings) && this.props.outings.isUpToDate && !this.props.outings.isError && isNN(this.props.outings.data)) ?\r\n        this.props.outings.data.map((d: IOuting, i: number) => {\r\n          return(\r\n            <View key={\"o\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{toDateTimeString(d.fromDate) + \" to \" + toDateTimeString(d.toDate)}</Text>\r\n              </View>\r\n              {isNN(d.place) &&\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.place}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.address) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.address}</Text>\r\n              </View>\r\n              }\r\n              {d.isReturned &&\r\n              <View style={styles.ele}>\r\n                <Text>{'Returned on ' + toDateTimeString(d.returnedAt)}</Text>\r\n              </View>\r\n              }\r\n              {this.props.appUser.role !== ROLE.USER && \r\n                <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Text>No one in the home</Text>\r\n                </View>\r\n              }\r\n              {(this.props.appUser.role === ROLE.USER && d.isReturned !== true) &&\r\n                <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Button title=\"Return to Home\" onPress={() => {\r\n                    this.onReturnBack(d._id);\r\n                  }} />\r\n                </View>\r\n              }\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{(this.props.outings.isUpToDate ? (this.props.outings.isError ? this.props.outings.errorMessage : \"No outings found.\") : \"Loading...\")}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport {  View } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IComplaint, IRemainder } from '../../models/home/index';\r\nimport AMPoll from './manager/poll';\r\nimport UserPoll from './poll';\r\nimport Outing from './outing';\r\nimport CustomList from './custom-list';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  polls: IPolls,\r\n  outings: IOutings,\r\n  remainders: Array<IRemainder>,\r\n  complaints: Array<IComplaint>,\r\n  onLoadAds: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => void,\r\n  onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => void,\r\n  onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, sCallback: (result: boolean) => void) => void,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => void,\r\n  onLoadOuting: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  activeTab: number,\r\n  isShowPoll: boolean\r\n};\r\n\r\nexport default class Notification extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: (isNNObject(this.props.user) && (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER)) ? 1 : 2,\r\n      isShowPoll: isNNObject(this.props.user) && (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER || (this.props.appUser.role === ROLE.USER && this.props.appUser.homeIndex >= 0))\r\n    }\r\n  };\r\n  \r\n  componentDidMount(){\r\n    this.props.onLoadAds(this.props.user.client._id, (result: boolean) => {\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n    if(this.state.isShowPoll){\r\n      this.props.onLoadPoll(this.props.user.client._id, this.props.appUser.role, (result: boolean) => {\r\n        if(!result){\r\n          Toast.fail('Failed to load Poll.');\r\n        }\r\n      });\r\n    }\r\n    this.props.onLoadOuting(this.props.user.client._id, this.props.appUser.role === ROLE.USER ? this.props.user.homes[this.props.appUser.homeIndex]._id : '', (result: boolean) => {\r\n      if(!result){\r\n        Toast.fail('Failed to load Outing.');\r\n      }\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  render() {\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Notice', link: 'notice'}]} />\r\n        <View className='bgc-white p-20'>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n          {this.state.isShowPoll &&\r\n            <span className={'tab' + (this.state.activeTab === 1 ? ' active': '')} onClick={() => this.setState({activeTab: 1})}>\r\n              POLL\r\n            </span>\r\n          }\r\n            <span className={'tab' + (this.state.activeTab === 2 ? ' active': '')} onClick={() => this.setState({activeTab: 2})}>\r\n              ADS\r\n            </span>\r\n            <span className={'tab' + (this.state.activeTab === 3 ? ' active': '')} onClick={() => this.setState({activeTab: 3})}>\r\n              OUTING\r\n            </span>\r\n            {/* <span className={'tab' + (this.state.activeTab === 4 ? ' active': '')} onClick={() => this.setState({activeTab: 4})}>\r\n              REMINDERS\r\n            </span>\r\n            <span className={'tab' + (this.state.activeTab === 5 ? ' active': '')} onClick={() => this.setState({activeTab: 5})}>\r\n            COMPLAINTS\r\n            </span> */}\r\n          </View>\r\n          <View className='p-15'>\r\n            {\r\n              this.state.activeTab === 1 ? \r\n                (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) ? \r\n                  <AMPoll appUser={this.props.appUser} user={this.props.user} polls={this.props.polls} onSave={this.props.onSavePoll} onRemove={this.props.onRemovePoll} />\r\n                :\r\n                  <UserPoll appUser={this.props.appUser} user={this.props.user} polls={this.props.polls} onVote={this.props.onVote} />\r\n              :\r\n                this.state.activeTab === 2 ?\r\n                  <CustomList data={(this.props.ads.isUpToDate ? this.props.ads.data : [])} message={(this.props.ads.isUpToDate ? (this.props.ads.isError ? this.props.ads.errorMessage : \"No data found.\") : \"Loading...\")} />\r\n                :\r\n                this.state.activeTab === 3 ?\r\n                  <Outing history={this.props.history} appUser={this.props.appUser} user={this.props.user} outings={this.props.outings} onReturnBack={this.props.onReturnBack} />\r\n                :\r\n                  <CustomList data={this.state.activeTab === 4 ? this.props.remainders : this.props.complaints} message=\"No data found.\" />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { IPolls } from '../models/store/polls';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { IPoll, IVote } from '../models/poll/index';\r\nimport { loadAll as loadAllAds } from '../store/actions/ad';\r\nimport { loadAll as loadAllPools, save, remove, vote } from '../store/actions/poll';\r\nimport { loadAll as loadAllOutings, retunBack } from '../store/actions/outing';\r\nimport Page from '../components/home/notification';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    polls: state.Polls,\r\n    outings: state.Outings,\r\n    remainders: [],\r\n    complaints: []\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoadAds: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAllAds(appClientId, callback)),\r\n    onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => dispatch(loadAllPools(appClientId, userRole, callback)),\r\n    onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => dispatch(save(appClientId, data, polls, user, sCallback)),\r\n    onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, sCallback: (result: boolean) => void) => dispatch(remove(id, polls, userId, sCallback)),\r\n    onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => dispatch(vote(pollId, votes, polls, user, appUser, sCallback)),\r\n    onLoadOuting: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAllOutings(appClientId, homeId, callback)),\r\n    onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(retunBack(id, user, outings, callback))\r\n});\r\n\r\nexport const Notice = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { COLOR } from '../../constants';\r\nimport { IUser } from '../../models/user';\r\n\r\ninterface IProps {\r\n  user: IUser\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Info', link: 'info'}]} />\r\n          <View className='bgc-white p-20'>\r\n          \r\n          {/* <Image source={Images.workInProgress} style={{width: 50, height: 45, marginTop: 35}} />\r\n              <Text>Work in progress.</Text> */}\r\n          <View className='center' style={modelStyles.row}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'center'}}>{props.user.client.name}</Text>\r\n          </View>\r\n          <View className='center' style={modelStyles.row}>\r\n              <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'center'}}>{props.user.client.description}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>\r\n              {\"Apartment Residents & Apartment Owners need a common platform through which they can connect with association, get to know & discuss common issues of the neighborhood\"}\r\n            </Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>Home users</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={styles.listItem}>Maintenance Admin Payment</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={styles.listItem}>Receive real-time notifications</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={styles.listItem}>Visitor management</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={styles.listItem}>Lodge any complaint related to your apartment and track</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>Admin Users</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={styles.listItem}>Create polls and gather the opinion of all Apartment residents</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={styles.listItem}>All details of your flat, staff who work in your flat, visitors coming to your flat</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={styles.listItem}>Accounts  and much more...</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  listItem: {\r\n    marginLeft: 15\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport Page from '../components/home/help';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n});\r\n\r\nexport const Help = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\n\r\nexport default () => {\r\n    return (\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <View className='bgc-white p-20'>\r\n                <Text>Page not found.</Text>\r\n            </View>\r\n        </View>\r\n        </View>\r\n        </View>\r\n    );\r\n};","import * as $ from 'jquery';\r\n\r\nconst initSideBar = () => {\r\n  // Sidebar links\r\n  $('.sidebar .sidebar-menu li a').on('click', function () {\r\n    const $this = $(this);\r\n\r\n    if ($this.parent().hasClass('open')) {\r\n      $this\r\n        .parent()\r\n        .children('.dropdown-menu')\r\n        .slideUp(200, () => {\r\n          $this.parent().removeClass('open');\r\n        });\r\n    } else {\r\n      $this\r\n        .parent()\r\n        .parent()\r\n        .children('li.open')\r\n        .children('.dropdown-menu')\r\n        .slideUp(200);\r\n\r\n      $this\r\n        .parent()\r\n        .parent()\r\n        .children('li.open')\r\n        .children('a')\r\n        .removeClass('open');\r\n\r\n      $this\r\n        .parent()\r\n        .parent()\r\n        .children('li.open')\r\n        .removeClass('open');\r\n\r\n      $this\r\n        .parent()\r\n        .children('.dropdown-menu')\r\n        .slideDown(200, () => {\r\n          $this.parent().addClass('open');\r\n        });\r\n    }\r\n  });\r\n\r\n  // Sidebar Activity Class\r\n  const sidebarLinks = $('.sidebar').find('.sidebar-link');\r\n\r\n  sidebarLinks\r\n    .each((index, el) => {\r\n      $(el).removeClass('active');\r\n    })\r\n    .filter(function () {\r\n      const href = $(this).attr('href');\r\n      const pattern = href[0] === '/' ? href.substr(1) : href;\r\n      return pattern === (window.location.pathname).substr(1);\r\n    })\r\n    .addClass('active');\r\n\r\n  // ٍSidebar Toggle\r\n  $('.sidebar-toggle').on('click', e => {\r\n    $('.app').toggleClass('is-collapsed');\r\n    e.preventDefault();\r\n  });\r\n\r\n  /**\r\n   * Wait untill sidebar fully toggled (animated in/out)\r\n   * then trigger window resize event in order to recalculate\r\n   * masonry layout widths and gutters.\r\n   */\r\n  $('#sidebar-toggle').click(e => {\r\n    e.preventDefault();\r\n    setTimeout(() => {\r\n      window.dispatchEvent(window.EVENT);\r\n    }, 300);\r\n  });\r\n};\r\n\r\nexport default initSideBar;","import * as $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\nconst initPopover = () => {\r\n  // ------------------------------------------------------\r\n  // @Popover\r\n  // ------------------------------------------------------\r\n\r\n  $('[data-toggle=\"popover\"]').popover();\r\n\r\n  // ------------------------------------------------------\r\n  // @Tooltips\r\n  // ------------------------------------------------------\r\n\r\n  $('[data-toggle=\"tooltip\"]').tooltip();\r\n};\r\n\r\nexport default initPopover;\r\n","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport TitleBar from './title-bar';\r\nimport NavBar from './nav-bar';\r\nimport TabBar from './tab-bar';\r\nimport { ROLE } from '../../constants';\r\nimport { isNNObject, isNN } from '../../util';\r\nimport Toast from  '../../util/toast';\r\n\r\nimport { Dashboard as CDashboard} from '../../containers/dashboard';\r\nimport { Members as CMembers } from '../../containers/members';\r\nimport { NewMember as CNewMember } from '../../containers/new-member';\r\nimport { Vehicles as CVehicles } from '../../containers/vehicles';\r\nimport { NewVehicle as CNewVehicle } from '../../containers/new-vehicle';\r\nimport { Servants as CServants } from '../../containers/servants';\r\nimport { AllTakeaways as CAllTakeaways } from '../../containers/all-takeaways';\r\nimport { NewServant as CNewServant } from '../../containers/new-servant';\r\nimport { Tickets as CTickets } from '../../containers/tickets';\r\nimport { NewTicket as CNewTicket } from '../../containers/new-ticket';\r\nimport { Visitors as CVisitors } from '../../containers/visitors';\r\n// import { NewVisitor as CNewVisitor } from '../../containers/new-visitor';\r\nimport { ChangePassword as CChangePassword } from '../../containers/change-password';\r\nimport { MyProfile as CMyProfile } from '../../containers/my-profile';\r\nimport { MyRole as CMyRole } from '../../containers/my-role';\r\nimport { Ads as CAds } from '../../containers/ads';\r\nimport { NewAd as CNewAd } from '../../containers/new-ad';\r\nimport { Users as CUsers } from '../../containers/users';\r\nimport { Homes as CHomes } from '../../containers/homes';\r\nimport { EditUser as CEditUser } from '../../containers/edit-user';\r\nimport { ApproveUsers as CApproveUsers } from '../../containers/approve-users';\r\n\r\nimport { EditHome as CEditHome } from '../../containers/edit-home';\r\nimport { AllVisitors as CAllVisitors } from '../../containers/all-visitors';\r\nimport { Notification as CNotification } from '../../containers/notification';\r\nimport { NewOuting as CNewOuting } from '../../containers/new-outing';\r\nimport { MyDocuments as CMyDocuments } from '../../containers/my-documents';\r\nimport { Blocks as CBlocks } from '../../containers/blocks';\r\nimport { EditBlock as CEditBlock } from '../../containers/edit-block';\r\nimport { Payment as CPayment } from '../../containers/payment';\r\nimport { ViewHome as CViewHome } from '../../containers/view-home';\r\nimport { Notice as CNotice } from '../../containers/notice';\r\nimport { Help as CHelp } from '../../containers/help';\r\nimport NotFound from '../../components/not-found';\r\n\r\nimport initSideBar from '../../theme/scripts/sidebar/index';\r\nimport initScrollBar from '../../theme/scripts/scrollbar/index';\r\nimport initPopover from '../../theme/scripts/popover/index';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  getProfile: (callback: (result: boolean, message: string) => void) => void,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false\r\n    }\r\n    this.isUser = this.isUser.bind(this);\r\n    this.isAdmin = this.isAdmin.bind(this);\r\n    this.isManager = this.isManager.bind(this);\r\n    this.isGateKeeper = this.isGateKeeper.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(!isNNObject(this.props.user) || !isNN(this.props.user._id)){\r\n      this.setState({\r\n          isLoading: true\r\n      });\r\n      this.props.getProfile( (result: boolean, message: string) => {\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n        if(result !== true){\r\n          Toast.fail('Failed to load Profile: ' + message);\r\n        }\r\n      });\r\n    }\r\n    setTimeout(() => {\r\n      initSideBar();\r\n      initScrollBar();\r\n      initPopover();\r\n    }, 1000);\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  isUser = () => {\r\n    return this.props.appUser.role === ROLE.USER;\r\n  };\r\n\r\n  isAdmin = () => {\r\n    return this.props.appUser.role === ROLE.ADMIN;\r\n  };\r\n  \r\n  isManager = () => {\r\n    return this.props.appUser.role === ROLE.MANAGER;\r\n  };\r\n\r\n  isGateKeeper = () => {\r\n    return this.props.appUser.role === ROLE.GATEKEEPER;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      !this.state.isLoading ?\r\n        <View>\r\n          <NavBar appUser={this.props.appUser} user={this.props.user} />\r\n          <View className=\"page-container\">\r\n            <TitleBar appUser={this.props.appUser} user={this.props.user} onHomeChange={this.props.onHomeChange} onLogout={this.props.onLogout}/>\r\n            <main className='main-content bgc-grey-100'>\r\n              {((isNN(this.props.appUser.role) && !this.isUser()) || isNN(this.props.user.homes)) ?\r\n              <Switch>\r\n                <Route path={'/'} exact component={CDashboard} />\r\n                {/* <Route path={'/login'} exact component={CLogin} /> */}\r\n                {this.isUser() && <Route path={'/members'} exact component={CMembers} />}\r\n                {this.isUser() && <Route path={'/new-member'} exact component={CNewMember} />}\r\n                {this.isUser() && <Route path={'/vehicles'} exact component={CVehicles} />}\r\n                {this.isUser() && <Route path={'/new-vehicle'} exact component={CNewVehicle} />}\r\n                {this.isUser() && <Route path={'/servants'} exact component={CServants} />}\r\n                {this.isUser() && <Route path={'/new-servant'} exact component={CNewServant} />}\r\n                {(this.isUser() || this.isAdmin() || this.isManager()) && <Route path={'/tickets'} exact component={CTickets} />}\r\n                {this.isUser() && <Route path={'/new-ticket'} exact component={CNewTicket} />}\r\n                {this.isUser() && <Route path={'/visitors'} exact component={CVisitors} />}\r\n                {this.isUser() && <Route path={'/new-outing'} exact component={CNewOuting} />}\r\n                {/* {this.isUser() && <Route path={'/new-visitor'} exact component={CNewVisitor} />} */}\r\n                {(this.isAdmin() || this.isManager()) && <Route path={'/ads'} exact component={CAds} />}\r\n                {(this.isAdmin() || this.isManager()) && <Route path={'/new-ad'} exact component={CNewAd} />}\r\n                {(this.isAdmin() || this.isManager()) && <Route path={'/notification'} exact component={CNotification} />}\r\n                {this.isAdmin() && <Route path={'/users'} exact component={CUsers} />}\r\n                {this.isAdmin() && <Route path={'/edit-user/:id/:isApprove'} exact component={CEditUser} />}\r\n                {this.isAdmin() && <Route path={'/approve-users'} exact component={CApproveUsers} />}\r\n                {this.isAdmin() && <Route path={'/homes'} exact component={CHomes} />}\r\n                {this.isAdmin() && <Route path={'/view-home/:id'} exact component={CViewHome} />}\r\n                {this.isAdmin() && <Route path={'/edit-home/:id'} exact component={CEditHome} />}\r\n                {this.isAdmin() && <Route path={'/blocks'} exact component={CBlocks} />}\r\n                {this.isAdmin() && <Route path={'/edit-block/:id'} exact component={CEditBlock} />}\r\n                {(this.isAdmin() || this.isManager()) && <Route path={'/payment'} exact component={CPayment} />}\r\n                {(this.isAdmin() || this.isManager() || this.isGateKeeper()) && <Route path={'/all-visitors'} exact component={CAllVisitors} />}\r\n                {(this.isAdmin() || this.isManager() || this.isGateKeeper()) && <Route path={'/all-takeways'} exact component={CAllTakeaways} />}\r\n                <Route path={'/notice'} exact component={CNotice} />\r\n                <Route path={'/my-profile'} exact component={CMyProfile} />\r\n                {this.props.user.role.indexOf(',') > 0 && <Route path={'/my-role'} exact component={CMyRole} />}\r\n                <Route path={'/my-documents'} exact component={CMyDocuments} />\r\n                <Route path={'/change-password'} exact component={CChangePassword} />\r\n                <Route path={'/info'} exact component={CHelp} />              \r\n                <Route component={NotFound} />\r\n              </Switch>\r\n              :\r\n              <View id='mainContent'>\r\n                <Text style={{margin: 20}}>You are not authorized to view this content. Please contact administrator/manager.</Text>\r\n              </View>\r\n              }\r\n            </main>\r\n            <TabBar />\r\n          </View>\r\n        </View>\r\n        :\r\n        <Spinner visible={this.state.isLoading} text={\"Loading...\"} />\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { getProfile, homeChange, logout } from '../store/actions/account';\r\nimport Page from '../components/home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    getProfile: (callback: (result: boolean, message: string) => void) => dispatch(getProfile(callback)),\r\n    onHomeChange: (index: number, callback: (result: boolean) => void) => dispatch(homeChange(index, callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Login } from '../containers/login';\r\nimport { Home } from '../containers/home';\r\nimport { IAppUser } from '../models/app-user/app-user';\r\nimport { isNN } from '../util';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  setLogin: (isLoggedIn: boolean) => void\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class AppContainer extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // };\r\n\r\n  componentDidMount() {\r\n    let token: string | null = sessionStorage.getItem('auth_token');\r\n    if(isNN(token)){\r\n      this.props.setLogin(true);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n        this.props.appUser.isLoggedIn ? \r\n          <HashRouter>\r\n            <Home />\r\n          </HashRouter>\r\n        :\r\n          <Login />\r\n    )\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { setLogin } from '../store/actions/account';\r\nimport Page from '../components/app-container';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n   appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n   setLogin: (isLoggedIn: boolean) => dispatch(setLogin(isLoggedIn))\r\n});\r\n\r\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(Page);","\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\r\nimport { store } from './store/app-store';\r\nimport { AppContainer } from './containers/app-container';\r\nimport { init as fcmInit } from './services/init-fcm';\r\n// import 'react-confirm-alert/src/react-confirm-alert.css';\r\n// import './css/common.scss';\r\n\r\nimport './theme/scripts/index'\r\n\r\nexport default class App extends React.Component {\r\n    componentDidMount() {\r\n      fcmInit();\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        // FCM.notificationDisplayedListener();\r\n        // FCM.notificationListener();\r\n        // FCM.notificationOpenedListener();\r\n    };\r\n  \r\n    render() {\r\n        return(\r\n          <Provider store={store}>\r\n            <AppContainer />\r\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_RIGHT} />\r\n          </Provider>      \r\n        )\r\n    }\r\n};","import * as $ from 'jquery';\r\n\r\nexport default (function () {\r\n  // ------------------------------------------------------\r\n  // @Window Resize\r\n  // ------------------------------------------------------\r\n\r\n  /**\r\n   * NOTE: Register resize event for Masonry layout\r\n   */\r\n  const EVENT = document.createEvent('UIEvents');\r\n  window.EVENT = EVENT;\r\n  EVENT.initUIEvent('resize', true, false, window, 0);\r\n\r\n\r\n  window.addEventListener('load', () => {\r\n    /**\r\n     * Trigger window resize event after page load\r\n     * for recalculation of masonry layout.\r\n     */\r\n    window.dispatchEvent(EVENT);\r\n  });\r\n\r\n  // ------------------------------------------------------\r\n  // @External Links\r\n  // ------------------------------------------------------\r\n\r\n  // Open external links in new window\r\n  $('a')\r\n    .filter('[href^=\"http\"], [href^=\"//\"]')\r\n    .not(`[href*=\"${window.location.host}\"]`)\r\n    .attr('rel', 'noopener noreferrer')\r\n    .attr('target', '_blank');\r\n\r\n  // ------------------------------------------------------\r\n  // @Resize Trigger\r\n  // ------------------------------------------------------\r\n\r\n  // Trigger resize on any element click\r\n  document.addEventListener('click', () => {\r\n    window.dispatchEvent(window.EVENT);\r\n  });\r\n}());\r\n","import * as firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n\r\nexport const init = () => {\r\n  try{\r\n  const initializedFirebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCrGumtbn2McvNXzZdhShhLaW0QsIFZxOk\",\r\n    authDomain: \"nest-df0a7.firebaseapp.com\",\r\n    databaseURL: \"https://nest-df0a7.firebaseio.com\",\r\n    projectId: \"nest-df0a7\",\r\n    storageBucket: \"nest-df0a7.appspot.com\",\r\n    messagingSenderId: \"422026408390\",\r\n    appId: \"1:422026408390:web:cf0e6a945e7f1ec0d602c7\"\r\n  });\r\n  \r\n  const messaging = initializedFirebaseApp.messaging();\r\n  \r\n  messaging.usePublicVapidKey(\r\n    \"BExnmgKfYLBd44lIqI5xRAD55I5Qhsaa7sI_wJ19zcIuq05y2Z1AtuaNBChU--UhjFxpA2XLR2lI02otUje4Rkk\"\r\n  );\r\n  \r\n  messaging\r\n  .requestPermission()\r\n  .then(async function() {\r\n    const token = await messaging.getToken();\r\n    localStorage.setItem('fcm_token', token);\r\n  })\r\n  .catch(function(err) {\r\n    console.log(\"Unable to get permission to notify.\", err);\r\n  });\r\n}catch(ex){\r\n  console.log('FCM ERROR: ', ex);\r\n}\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const registerServiceWorker = () => {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker\r\n      .register(\"./firebase-messaging-sw.js\")\r\n      .then(function(registration) {\r\n        console.log(\"Registration successful, scope is:\", registration.scope);\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Service worker registration failed, error:\", err);\r\n      });\r\n  }\r\n};\r\n\r\nexport { registerServiceWorker };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { registerServiceWorker } from './services/register-sw';\r\n\r\nregisterServiceWorker();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}