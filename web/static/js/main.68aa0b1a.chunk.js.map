{"version":3,"sources":["store/action-types.ts","store/reducers/app-user.ts","store/reducers/user.ts","store/reducers/ads.ts","store/reducers/polls.ts","store/reducers/outings.ts","store/reducers/documents.ts","store/reducers/users.ts","store/reducers/homes.ts","store/reducers/user-homes.ts","store/reducers/tickets.ts","store/reducers/blocks.ts","store/reducers/gate-no.ts","store/reducers/state.ts","store/app-store.ts","constants/index.ts","util/index.ts","store/api/api.ts","store/actions/account.ts","components/common/elements.tsx","components/common/button.tsx","components/images.ts","components/common/spinner.tsx","styles/common.ts","util/toast.ts","components/common/radio-button.tsx","styles/model.ts","components/login/sign-up.tsx","components/login/index.tsx","containers/login.tsx","styles/popup.ts","components/home/title-bar.tsx","constants/nav.ts","components/home/nav-bar.tsx","components/home/tab-bar.tsx","store/actions/payment.ts","store/actions/visitor.ts","store/actions/file.ts","components/home/my-dues.tsx","util/convert.ts","components/home/history.tsx","components/home/custom-list.tsx","styles/card.ts","components/home/home.tsx","components/home/manager/home.tsx","components/home/gatekeeper/new-visitor.tsx","components/home/gatekeeper/home.tsx","components/home/dashboard.tsx","containers/dashboard.tsx","store/actions/member.ts","components/common/breadcrum.tsx","styles/page.ts","styles/icon.ts","components/home/members.tsx","containers/members.tsx","components/home/new-member.tsx","containers/new-member.tsx","store/actions/vehicle.ts","components/home/vehicles.tsx","containers/vehicles.tsx","components/home/new-vehicle.tsx","containers/new-vehicle.tsx","store/actions/servent.ts","components/home/servents.tsx","containers/servents.tsx","components/home/new-servent.tsx","containers/new-servent.tsx","store/actions/ticket.ts","components/home/tickets.tsx","containers/tickets.tsx","components/home/new-ticket.tsx","containers/new-ticket.tsx","components/common/checkbox.tsx","components/home/gatekeeper/visitors-view.tsx","components/home/visitors.tsx","containers/visitors.tsx","components/home/change-password.tsx","containers/change-password.tsx","components/home/my-profile.tsx","containers/my-profile.tsx","components/home/my-role.tsx","containers/my-role.tsx","store/actions/ad.ts","components/home/manager/ads.tsx","containers/ads.tsx","components/home/manager/new-ad.tsx","containers/new-ad.tsx","components/home/manager/users.tsx","containers/users.tsx","store/actions/home.ts","components/home/manager/homes.tsx","containers/homes.tsx","styles/mlist.ts","components/home/manager/edit-user.tsx","containers/edit-user.tsx","components/home/manager/approve-users.tsx","containers/approve-users.tsx","components/home/manager/edit-home.tsx","containers/edit-home.tsx","components/home/gatekeeper/visitors.tsx","containers/all-visitors.tsx","components/home/manager/notification.tsx","containers/notification.tsx","store/actions/notification.ts","store/actions/outing.ts","components/home/new-outing.tsx","containers/new-outing.tsx","store/actions/documents.ts","components/home/my-documents.tsx","containers/my-documents.tsx","store/actions/block.ts","components/home/manager/blocks.tsx","containers/blocks.tsx","components/home/manager/edit-block.tsx","containers/edit-block.tsx","components/home/manager/payment-form.tsx","components/home/manager/payment-history.tsx","components/home/manager/payment.tsx","containers/payment.tsx","components/home/manager/view-home/info.tsx","components/home/manager/view-home/members.tsx","components/home/manager/view-home/vehicles.tsx","components/home/manager/view-home/servents.tsx","components/home/manager/view-home/tickets.tsx","components/home/manager/view-home/visitors.tsx","components/home/manager/view-home/payments.tsx","components/home/manager/view-home/documents.tsx","components/home/manager/view-home/index.tsx","containers/view-home.tsx","store/actions/poll.ts","util/calc.ts","components/home/manager/poll.tsx","components/home/poll.tsx","components/home/outing.tsx","components/home/notification.tsx","containers/notice.tsx","components/home/help.tsx","containers/help.tsx","components/not-found/index.tsx","components/home/index.tsx","containers/home.tsx","components/app-container.tsx","containers/app-container.tsx","App.tsx","services/init-fcm.js","serviceWorker.js","services/register-sw.js","index.tsx"],"names":["actionTypes","handleLoginResult","state","payload","Object","objectSpread","isLoggedIn","handleRoleResult","role","handleHomeIndexResult","homeIndex","handleResult","_id","number","name","age","gender","mobileNo","emailId","type","image","createdBy","updatedBy","homes","client","data","isUpToDate","isError","errorMessage","State","combineReducers","AppUser","arguments","length","undefined","action","SET_LOGIN_STATUS","SET_ROLE","SET_HOME_INDEX","RESET","User","description","address","upi","id","rep","repType","LOAD_USER","Ads","LOAD_ADS","Polls","LOAD_POLLS","Outings","LOAD_OUTINGS","Documents","LOAD_DOCUMENTS","Users","LOAD_USERS","Homes","LOAD_HOMES","UserHomes","LOAD_USERHOMES","Tickets","LOAD_TICKETS","Blocks","LOAD_BLOCKS","GateNo","SET_GATE_NO","store","createStore","compose","applyMiddleware","reduxThunk","API_BASE_PATH","DEFAULT_DATE_FORMAT","DEFAULT_DATE_TIME_FORMAT","IMAGE_BASE_PATH","FILE_BASE_PATH","COLOR","ROLE","USER","ADMIN","GATEKEEPER","MANAGER","MONTH","title","value","isNN","_input","isNNObject","json2Str","JSON","stringify","ex","jsError","generateUUID","d","Date","getTime","performance","now","replace","c","r","Math","random","floor","toString","_ex","_funName","console","log","onEnter","_e","_callback","keyCode","which","Api","url","get","callback","_this","fetch","post","delete","patch","put","upload","_callee","token","clientId","userId","formData","regenerator_default","a","wrap","_context","prev","next","getAS","sent","FormData","append","file","method","headers","Accept","x-access-token","client-id","user-id","body","then","response","json","message","catch","error","stop","_callee2","key","_context2","sessionStorage","getItem","abrupt","t0","_callee3","_context3","Content-Type","logout","dispatch","removeItem","setLoginResult","setHomeIndexResult","resetState","setGateNoResult","gateNo","setRoleResult","getUserResult","getUsersResult","getHomesResult","getBlockResult","View","styled","div","_templateObject","ScrollView","_templateObject2","Image","img","_templateObject3","TextInput","input","_templateObject4","TextArea","textarea","_templateObject5","Picker","select","_templateObject6","Text","label","_templateObject7","TouchableHighlight","span","_templateObject8","Button","this","react","className","props","onClick","onPress","style","styles","btn","React","defaultProps","backgroundColor","borderColor","color","cursor","Images","logo","logoInv","icon","homeIcon","homeIconInv","notification","notificationInv","setting","settingInv","info","infoInv","workInProgress","members","membersInv","vehicle","vehicleInv","username","password","support","supportInv","visitors","visitorsInv","servent","serventInv","add","edit","close","tick","cancel","mobile","email","addvertise","reminder","users","blocks","search","datePicker","money","moneyInv","view","document","documentInv","menu","loading","Spinner","visible","src","width","height","fontWeight","marginTop","text","Toast","success","msg","toast","fail","warn","warning","show","bgColor","textColor","RadioButton","container","checked","isActive","marginRight","circle","borderRadius","borderWidth","alignItems","justifyContent","dot","marginLeft","head","flexDirection","alignContent","paddingLeft","paddingRight","paddingTop","paddingBottom","flex","alignSelf","font-weight","fontSize","marginBottom","row","ele","radio","display","radioText","radioActive","radioActiveText","saveBtn","SignUp","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSave","clientCode","member","toLowerCase","onSignUp","result","setState","bind","assertThisInitialized","_this2","modelStyles","placeholder","CommonStyles","onChange","event","target","radio_button_RadioButton","button_Button","Index","onLogin","userName","isLoading","onForgetPassword","isForgetPass","isSignUp","mobileNumber","onForgetPassSubmit","onCreateAccount","maxWidth","txtIcon","txt","onKeyPress","e","textAlign","sign_up_SignUp","float","borderStyle","margin","spinner_Spinner","resizeMode","top","Login","connect","ownProps","fcm_token","localStorage","controller","setItem","rememberMe","fcmToken","os","osVersion","login","forgetPassword","assign","signup","Page","content","TitleBar","onToggleHomeModel","isShow","isShowHomeModel","onHomeChange","index","confirmAlert","buttons","onLogout","titleBar","react_router_dom","to","isMenuExpand","onToggleMenu","appUser","titleText","user","index_es","open","onClose","popupStyles","map","i","homeList","activeHome","inActiveHome","padding","borderBottomWidth","borderBottomColor","border-bottom-style","NAV","path","roles","child","isMRole","NavBar","loadNav","nav","pTitle","isTopLevel","that","activeTopMenu","inner","indexOf","split","activeMenu","isExpand","TabBar","tabBar","borderTopColor","borderTopWidth","border-top-style","tab","tabImage","activeTab","loadAll","appClientId","homeId","sCallback","fCallback","MyDues","getTotalDue","totalDue","home","payments","amountPaid","transactions","filter","t","j","isSuccess","amount","payNow","paymentId","transactionRef","payment","successCallback","Status","responseCode","transaction","txnRef","txnId","status","reason","onPaymentUpdate","updateResult","clearTxn","txnFailure","failureCallback","p","myDueFirst","myDue","m","forMonth","forYear","borderLeftColor","borderLeftWidth","toDateString","_format","moment","format","toDateTimeString","History","slice","paidDate","createdAt","CustomList","borderBottomStyle","card","maxHeight","Home","cardStyles","history","push","vehicles","servents","my_dues_MyDues","onPaymentUpload","custom_list_CustomList","history_History","NewVisitor","onImageSelect","files","arrFileName","fileName","onUpload","showHomes","visitor","passCode","homeSearchText","onClear","viewAll","overflow","maxLength","onBlur","onGateNoChanged","new_visitor_NewVisitor","onToggleLoading","onSaveVisitor","Dashboard","home_Home","manager_home_Home","ads","tickets","gatekeeper_home_Home","outings","setGateNo","approvalid","paymentIndex","findIndex","update","scallback","saveVisitor","fileUpload","save","foundIndex","Breadcrum","cnr","link","sep","MarginTop","addIcon","editIcon","deleteIcon","closeIcon","Members","isEdit","onRemove","breadcrum_Breadcrum","iconStyles","remove","NewMember","Vehicles","NewVehicle","Servents","NewServent","arrTickets","getTicketsResult","unshift","_homeId","comments","ticket","viewId","comment","onResolve","onStart","onView","onAddComment","onLoad","_this3","myStyles","cmntsCnr","cmntsHdr","cmntsHdrTxt","cmntsCnt","cmntCnrFst","cmntCnr","cmntHdr","cmntCnt","addCmntCnt","newCmnt","resolve","start","ticketId","ticketIndex","commentIndex","addComment","NewTicket","Checkbox","VisitorsView","onToggleZoomImage","isZoom","isZoomImage","zoomImage","pageStyles","checkbox_Checkbox","onActiveChange","cardContainer","homeNumber","isEntered","isExit","isApproved","isRejected","approvedBy","approvedAt","enteredBy","enteredAt","exitBy","exitGateNo","exitAt","onExit","onApprove","onReject","border-style","Visitors","loadData","v","visitors_view_VisitorsView","approve","reject","ChangePassword","passwordPolicyCheck","anUpperCase","aLowerCase","aNumber","aSpecial","numUpper","numLower","numNums","numSpecials","test","onUpdate","newPassword","confirmNewPassword","policyResult","changePassword","MyProfile","updateProfile","MyRole","updateRole","getAdResult","ad","NewAd","getHomes","userHomes","homeIds","uh","h","onSearch","searchText","toLocaleLowerCase","searchResult","memberIds","searchResultIndex","removeByAM","load","getUsers","userIds","u","mListCnr","mListActiveRow","mListRow","EditUser","isAdmin","isManager","isGatekeeper","isUser","match","params","isApprove","isShowHomes","commonStyles","mlistStyles","isAM","saveByAM","ApproveUsers","accountController","loadWFAUsers","EditHome","blockId","_blockId","bedRoom","parking","onToggleUserModel","isShowUsers","onCheckNumberAvail","checkNumberAvail","AllVisitors","enter","exit","Notification","onPush","getOutingResult","NewOuting","fromDate","toDate","place","outing","isReturned","datePickerType","datePickerDate","entry_default","date","getDocumentResult","MyDocuments","onFileSelect","documents","ho","rel","href","EditBlock","block","PaymentForm","isAllHome","month","year","getMonth","getFullYear","PaymentHistory","isShowSearch","uPaymentId","uAmount","uDescription","pData","isShowUpdateModel","mode","Payment","payment_form_PaymentForm","payment_history_PaymentHistory","updatePay","Info","_this$props","blockName","Payments","getAmountPaid","ViewHome","toggleLoading","info_Info","view_home_members_Members","onLoadMembers","view_home_vehicles_Vehicles","onLoadVehicles","view_home_servents_Servents","onLoadServents","view_home_tickets_Tickets","onLoadTickets","view_home_visitors_Visitors","onLoadVisitors","payments_Payments","onLoadPayments","view_home_documents_Documents","onLoadDocuments","loadMembers","loadVehicles","loadServents","loadTickets","loadVisitors","loadPayments","loadDocuments","getPollResult","percentage","_partialValue","_totalValue","Poll","topic","pollOption","po","poll","isAllowMultiple","isOneVotePerFlat","isAnonymous","options","polls","showVotePoll","loadVotes","votes","poi","option","sort","b","vo","voi","newOptions","onSelectOption","optionId","votePollId","_memberId","onVote","pollId","currentDate","getDate","o","oi","Outing","onReturnBack","outingId","returnedAt","isShowPoll","onLoadAds","onLoadPoll","onLoadOuting","poll_Poll","onSavePoll","onRemovePoll","home_poll_Poll","outing_Outing","remainders","complaints","Notice","loadAllAds","userRole","loadAllPools","Id","UserId","lstPoll","pollIndex","vote","loadAllOutings","retunBack","Help","listItem","isGateKeeper","getProfile","title_bar_TitleBar","nav_bar_NavBar","react_router","exact","component","CDashboard","CMembers","CNewMember","CVehicles","CNewVehicle","CServents","CNewServent","CTickets","CNewTicket","CVisitors","CAds","CNewAd","CNotification","CUsers","CEditUser","CApproveUsers","CHomes","CViewHome","CEditHome","CBlocks","CEditBlock","CPayment","CAllVisitors","CNotice","CNewOuting","CMyProfile","CMyRole","CMyDocuments","CChangePassword","CHelp","NotFound","tab_bar_TabBar","mresult","bresult","hresult","forEach","homeChange","AppContainer","setLogin","containers_home_Home","App","messaging","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","usePublicVapidKey","requestPermission","asyncToGenerator","mark","getToken","err","fcmInit","react_default","createElement","es","containers_app_container_AppContainer","lib","ToastsStore","position","ToastsContainerPosition","TOP_RIGHT","Component","Boolean","window","location","hostname","navigator","serviceWorker","register","registration","scope","ReactDOM","render","App_App","getElementById","ready","unregister"],"mappings":"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","file":"static/js/main.68aa0b1a.chunk.js","sourcesContent":["export enum actionTypes{\r\n    SET_LOGIN_STATUS,\r\n    SET_ROLE,\r\n    SET_HOME_INDEX,\r\n    LOAD_USER,\r\n    LOAD_ADS,\r\n    LOAD_POLLS,\r\n    LOAD_OUTINGS,\r\n    LOAD_DOCUMENTS,\r\n    LOAD_USERS,\r\n    LOAD_HOMES,\r\n    LOAD_USERHOMES,\r\n    LOAD_TICKETS,\r\n    SAVE_MEMBER,\r\n    LOAD_BLOCKS,\r\n    SET_GATE_NO,\r\n    RESET\r\n};","import { actionTypes } from '../action-types';\r\nimport { IAppUser } from '../../models/app-user/app-user';\r\n\r\nconst createEmptyResult = (): IAppUser => ({\r\n    isLoggedIn: false,\r\n    role: '',\r\n    homeIndex: -1\r\n});\r\n\r\nexport const AppUser = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_LOGIN_STATUS:\r\n            return handleLoginResult(state, action.payload);\r\n        case actionTypes.SET_ROLE:\r\n            return handleRoleResult(state, action.payload);\r\n        case actionTypes.SET_HOME_INDEX:\r\n            return handleHomeIndexResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleLoginResult = (state: IAppUser, payload: boolean): IAppUser => {\r\n    return {\r\n        ...state,\r\n        isLoggedIn: payload\r\n    };\r\n};\r\n\r\nconst handleRoleResult = (state: IAppUser, payload: string): IAppUser => {\r\n    return {\r\n        ...state,\r\n        role: payload\r\n    };\r\n};\r\n\r\nconst handleHomeIndexResult = (state: IAppUser, payload: number): IAppUser => {\r\n    return {\r\n        ...state,\r\n        homeIndex: payload\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\n\r\nconst createEmptyResult = (): IUser => ({\r\n    _id: '',\r\n    number: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    type: '',\r\n    role: '',\r\n    image: '',\r\n    createdBy: '',\r\n    updatedBy: '',\r\n    homes: [],\r\n    client: {\r\n        _id: '',\r\n        name: '',\r\n        description: '',\r\n        address: '',\r\n        upi: {\r\n            id: '',\r\n            name: ''\r\n        },\r\n        rep: {\r\n            name: '',\r\n            mobileNo: '',\r\n            emailId: '',\r\n            repType: ''\r\n        }\r\n    }\r\n});\r\n\r\nexport const User = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USER:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUser, payload: IUser): IUser => {\r\n    return {\r\n        ...state,\r\n        _id: payload._id,\r\n        number: payload.number,\r\n        name: payload.name,\r\n        age: payload.age,\r\n        gender: payload.gender,\r\n        mobileNo: payload.mobileNo,\r\n        emailId: payload.emailId,\r\n        type: payload.type,\r\n        role: payload.role,\r\n        image: payload.image,\r\n        createdBy: payload.createdBy,\r\n        updatedBy: payload.updatedBy,\r\n        homes: payload.homes,\r\n        client: payload.client\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IAds } from '../../models/store/ads';\r\n\r\nconst createEmptyResult = (): IAds => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Ads = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_ADS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IAds, payload: IAds): IAds => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IPolls } from '../../models/store/polls';\r\n\r\nconst createEmptyResult = (): IPolls => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Polls = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_POLLS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IPolls, payload: IPolls): IPolls => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IOutings } from '../../models/store/outings';\r\n\r\nconst createEmptyResult = (): IOutings => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Outings = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_OUTINGS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IOutings, payload: IOutings): IOutings => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IDocuments } from '../../models/store/documents';\r\n\r\nconst createEmptyResult = (): IDocuments => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Documents = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_DOCUMENTS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IDocuments, payload: IDocuments): IDocuments => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUsers } from '../../models/store/users';\r\n\r\nconst createEmptyResult = (): IUsers => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Users = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUsers, payload: IUsers): IUsers => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IHomes } from '../../models/store/homes';\r\n\r\nconst createEmptyResult = (): IHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Homes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_HOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IHomes, payload: IHomes): IHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUserHomes } from '../../models/store/user-homes';\r\n\r\nconst createEmptyResult = (): IUserHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const UserHomes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERHOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUserHomes, payload: IUserHomes): IUserHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\n\r\nconst createEmptyResult = (): ITickets => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Tickets = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_TICKETS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: ITickets, payload: ITickets): ITickets => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IBlocks } from '../../models/store/blocks';\r\n\r\nconst createEmptyResult = (): IBlocks => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Blocks = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_BLOCKS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IBlocks, payload: IBlocks): IBlocks => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\n\r\nexport const GateNo = (state = '', action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_GATE_NO:\r\n            return handleResult(state, action.payload);\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: string, payload: string): string => {\r\n    return payload;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { IAppState } from '../../models/app-state';\r\nimport { AppUser } from './app-user';\r\nimport { User } from './user';\r\nimport { Ads } from './ads';\r\nimport { Polls } from './polls';\r\nimport { Outings } from './outings';\r\nimport { Documents } from './documents';\r\nimport { Users } from './users';\r\nimport { Homes } from './homes';\r\nimport { UserHomes } from './user-homes';\r\nimport { Tickets } from './tickets';\r\nimport { Blocks } from './blocks';\r\nimport { GateNo } from './gate-no';\r\n\r\nexport const State = combineReducers<IAppState>({\r\n    AppUser: AppUser,\r\n    User: User,\r\n    Ads: Ads,\r\n    Polls: Polls,\r\n    Outings: Outings,\r\n    Documents: Documents,\r\n    Users: Users,\r\n    Homes: Homes,\r\n    UserHomes: UserHomes,\r\n    Tickets: Tickets,\r\n    Blocks: Blocks,\r\n    GateNo: GateNo\r\n});\r\n","import { Store, createStore, compose, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport { State } from './reducers/state';\r\nimport { IAppState } from '../models/app-state';\r\n\r\nexport const store: Store<IAppState> = createStore(\r\n  State,\r\n  compose(\r\n    applyMiddleware(reduxThunk),\r\n  )\r\n);","// const API_BASE_PATH = 'http://localhost:3001/';\r\nconst API_BASE_PATH = 'https://nestadmin.herokuapp.com/';\r\n\r\nexport const DEFAULT_DATE_FORMAT = 'DD/MMM/YYYY';\r\nexport const DEFAULT_DATE_TIME_FORMAT = 'DD/MMM/YYYY hh:mm A';\r\n// export const API_PATH = API_BASE_PATH + 'api/';\r\nexport const API_PATH = API_BASE_PATH;\r\nexport const IMAGE_BASE_PATH = API_BASE_PATH + 'image/';\r\nexport const FILE_BASE_PATH = API_BASE_PATH + 'file/';\r\nexport const COLOR = {\r\n    PRIMARY: '#0078d7',\r\n    SECONDARY: '#0067b9',\r\n    INVERSE: '#FFFFFF',\r\n    ERROR: '#FF0000',\r\n    SUCCESS: '#008000',\r\n    ICON_BTN_UNDERLAY: '#cce1f1',\r\n    CARD_UNDERLAY: '#cce1f1',\r\n    TAB_UNDERLAY: '#cce1f1',\r\n    SETTING_UNDERLAY: '#cce1f1',\r\n    HR_COLOR: '#e1e1e1',\r\n    FONT_COLOR1: '#8e8e93',\r\n    FONT_COLOR2: '#000000',\r\n    FONT_COLOR3: '#FFFFFF',\r\n    MODAL_BG: '#cce1f1'\r\n};\r\nexport const ROLE = {\r\n    USER: 'USER',\r\n    ADMIN: 'ADMIN',\r\n    GATEKEEPER: 'GATEKEEPER',\r\n    MANAGER: 'MANAGER'\r\n};\r\nexport const MONTH = [\r\n    {title: 'JAN', value: 0},\r\n    {title: 'FEB', value: 1},\r\n    {title: 'MAR', value: 2},\r\n    {title: 'APR', value: 3},\r\n    {title: 'MAY', value: 4},\r\n    {title: 'JUN', value: 5},\r\n    {title: 'JUL', value: 6},\r\n    {title: 'AUG', value: 7},\r\n    {title: 'SEP', value: 8},\r\n    {title: 'OCT', value: 9},\r\n    {title: 'NOV', value: 10},\r\n    {title: 'DEC', value: 11}\r\n]","//import { config as apiConfig } from '../store/api/config';\r\n\r\nexport function parseJSON(response: any) {\r\n     return response.json()\r\n};\r\n\r\nexport function isNN(_input: any) { \r\n  return (isNNObject(_input) && _input.length > 0) \r\n};\r\n\r\nexport function isNNObject(_input: any) { \r\n  return (_input !== null && _input !== undefined) \r\n};\r\n\r\nexport function str2Json(_input: string) { \r\n  try {\r\n    return JSON.parse(isNN(_input) ? _input : \"{}\"); \r\n  } catch (ex) { \r\n    jsError(ex, \"String2JSON\"); \r\n    return {}; \r\n  } \r\n};\r\n\r\nexport function json2Str(_input: any) { \r\n  try {\r\n    return (isNNObject(_input) ? JSON.stringify(_input) : \"\");\r\n  } catch (ex) { \r\n    jsError(ex, \"JSON2String\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function getBaseURL(_isApi: boolean) { \r\n  try {\r\n    let baseURL: string = \"\";\r\n    let arrURL = window.location.href.split(\"/\");\r\n    if(isNNObject(arrURL) && arrURL.length > 2){\r\n      if(_isApi){\r\n        //baseURL = arrURL[0] + \"//\" + arrURL[2] + apiConfig.baseURL;\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2];\r\n      }else{\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2] + \"/\";\r\n      }\r\n    }else{\r\n      baseURL = window.location.href;\r\n    }\r\n    return baseURL;\r\n  } catch (ex) { \r\n    jsError(ex, \"getBaseURL\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function generateUUID() { // Public Domain/MIT\r\n  var d = new Date().getTime();\r\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n      d += performance.now(); //use high-precision timer if available\r\n  }\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      var r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n}\r\n\r\nexport function jsError(_ex: any, _funName: string) {\r\n   //alert(\"Javascript Error\\n------------------\\nName: \" + _ex.name + \"\\nMessage: \" + _ex.message + \"\\nFunction: \" + _funName + \"\\nFile: \" + _ex.fileName + \"\\nLine Number: \" + _ex.lineNumber + \"\\nColumn Number: \" + _ex.columnNumber); \r\n   console.log(\"Error:\" + _funName + \":\" + _ex);\r\n};\r\n\r\nexport function onEnter(_e: any, _callback: Function) {\r\n  let code = (_e.keyCode ? _e.keyCode : _e.which);\r\n  if(code == 13 && typeof _callback === 'function') {\r\n    _callback();\r\n  }\r\n};","// import { AsyncStorage } from 'react-native';\r\nimport { API_PATH } from \"../../constants\";\r\nimport { isNNObject, json2Str, isNN } from \"../../util/index\";\r\n\r\nexport default class Api {\r\n    private url: string = API_PATH;\r\n     \r\n    // private url: string =  \"https://192.168.43.80:45456/api/\";\r\n    // private url: string =  \"http://192.168.43.80:45455/api/\";\r\n\r\n    /**\r\n    * HTTP GET operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public get = (url: string, callback: Function) => {\r\n        this.fetch(url, 'GET', callback);\r\n    };\r\n\r\n    /**\r\n    * HTTP POST operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public post = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'POST', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP DELETE operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public delete = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'DELETE', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PATCH operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public patch = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PATCH', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PUT operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public put = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PUT', callback, data);\r\n    };\r\n\r\n    public upload = async(url: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        \r\n        var formData = new FormData();\r\n        formData.append('file', data.file, data.name);\r\n        formData.append('name', data.name);\r\n\r\n        fetch(this.url + url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    // 'Content-Type': 'multipart/form-data',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: formData,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n\r\n/*\r\n    private fetch = (url: string, method: string, callback: Function, data?: any) => {\r\n        AsyncStorage.getItem('auth_token').then((token) => {\r\n            AsyncStorage.getItem('user_id').then((userId) => {\r\n                this.next(url, 'PUT', token, userId, callback, data);\r\n            }).catch(ex => {\r\n                this.next(url, 'PUT', token, '', callback, data);\r\n            }); \r\n        }).catch(ex => {\r\n            this.next(url, 'PUT', '', '', callback, data);\r\n        });\r\n    };\r\n    */\r\n\r\n    private getAS = async (key: string) => {\r\n        try {\r\n            // return await AsyncStorage.getItem(key);\r\n            return await sessionStorage.getItem(key);\r\n        } catch (error) {\r\n            return '';\r\n        }\r\n    };\r\n    \r\n    private fetch = async(url: string, method: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        fetch(this.url + url, \r\n            {\r\n                method: method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: isNNObject(data) ? json2Str(data) : null,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n    private callback = (callback: Function, data: any, message: any) => {\r\n        // console.log('message: '+ message);\r\n        if(isNNObject(callback) && typeof callback == \"function\"){\r\n            callback(data, message);\r\n        }\r\n    };\r\n\r\n    /*\r\n        private handleResult = (data: any) => {\r\n        if (data) {\r\n            if (data.message) {\r\n                return null;\r\n            } else {\r\n                return data;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private onBadRequest = () => {\r\n       \r\n    };\r\n    \r\n    private onError = () => {\r\n        \r\n        // alert('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n        // console.error('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n         \r\n    };\r\n    \r\n    private onUnAuthorized = () => {\r\n        // alert('UnAuthorized Request');\r\n                 \r\n    };\r\n    */\r\n};","// import { AsyncStorage, Platform } from 'react-native';\r\nimport { actionTypes } from '../action-types';\r\nimport Api from '../api/api';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IUsers } from '../../models/store/users';\r\n// import { IAd } from '../../models/ad/ad';\r\n// import { IAds } from '../../models/store/ads';\r\n// import { IPoll } from '../../models/poll/poll';\r\n// import { IPolls } from '../../models/store/polls';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IHomes } from '../../models/store/homes';\r\n// import { IUserHome } from '../../models/user-home/user-home';\r\n// import { IUserHomes } from '../../models/store/user-homes';\r\nimport { IMember } from '../../models/home';\r\n// import { ITicket } from '../../models/home/ticket';\r\n// import { ITickets } from '../../models/store/tickets';\r\nimport { IBlock } from '../../models/block';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'account/';\r\n\r\nexport const login = (userName: string, password: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  let fcm_token: string | null = localStorage.getItem('fcm_token');\r\n    new Api().post(controller + 'login', (result: any, message: string) => {\r\n      // console.log('OUT: ', result);\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.token) && isNN(result.data.userId))\r\n      {\r\n        // console.log('IN: ', result);\r\n        try {\r\n          // console.log(result.token);\r\n          sessionStorage.setItem('auth_token', result.data.token);\r\n          sessionStorage.setItem('client_id', result.data.clientId);\r\n          sessionStorage.setItem('user_id', result.data.userId);\r\n        } catch (error) {\r\n          // console.error('AsyncStorage error: ' + error.message);\r\n        }\r\n        dispatch(setLoginResult(true));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, {\r\n      userName: userName,\r\n      password: password,\r\n      rememberMe: false,\r\n      fcmToken: fcm_token,\r\n      os: 'web', // Platform.OS, ////TODO\r\n      osVersion: 'web' // Platform.Version ////TODO\r\n    });\r\n};\r\n\r\nexport const getProfile = (callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 'profile', (result: any, message: string) => {\r\n    // console.log('OUT: ', result);\r\n    if(isNNObject(result) && isNNObject(result.data) && isNN(result.data._id))\r\n    {\r\n      dispatch(getUserResult(result.data as IUser));\r\n      dispatch(setHomeIndexResult(isNN(result.data.homes) ? 0 : -1));\r\n      let roles = result.data.role.split(',');\r\n      if(isNN(roles)){\r\n        dispatch(setRoleResult(roles[0]));\r\n      }\r\n      // dispatch(getAdResult(((isNNObject(result.data.ad) && result.data.ad instanceof Array) ? result.data.ad as Array<IAd> : []), true, false, ''));\r\n      // dispatch(getPollResult(((isNNObject(result.data.poll) && result.data.poll instanceof Array) ? result.data.poll as Array<IPoll> : []), true, false, ''));\r\n    \r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0){\r\n        new Api().get('members', (mresult: any, message: string) => {\r\n          if (isNNObject(mresult) && isNN(mresult.data)) {\r\n            dispatch(getUsersResult(mresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(mresult.message) ? mresult.message : 'Failed to load Members.');\r\n          }\r\n        });\r\n        /*\r\n        loadAllMember(result.data.client._id, (members: Array<IMember>) => {\r\n          console.log('members: ', members)\r\n          dispatch(getUsersResult(members, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n        new Api().get('blocks/' + result.data.client._id, (bresult: any, message: string) => {\r\n          if (isNNObject(bresult) && isNN(bresult.data)) {\r\n            dispatch(getBlockResult(bresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n      }\r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0 || roles.indexOf(ROLE.GATEKEEPER) >= 0){\r\n        new Api().get('homes/' + result.data.client._id, (hresult: any, message: string) => {\r\n          if (isNNObject(hresult) && isNN(hresult.data)) {\r\n            hresult.data.forEach((h: any) => {\r\n              h.memberIds = h.members;\r\n              delete h.members;\r\n            });\r\n            dispatch(getHomesResult(hresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n        \r\n        /*\r\n        loadAllHome(result.data.client._id, (homes: Array<IHome>) => {\r\n          console.log('homes: ', homes)\r\n          dispatch(getHomesResult(homes, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n      }\r\n      \r\n      // dispatch(getUsersResult(((isNNObject(result.data.users) && result.data.users instanceof Array) ? result.data.users as Array<IUser> : []), true, false, ''));\r\n      // dispatch(getHomesResult(((isNNObject(result.data.homes) && result.data.homes instanceof Array) ? result.data.homes as Array<IHome> : []), true, false, ''));\r\n      // dispatch(getUserHomesResult(((isNNObject(result.data.userHomes) && result.data.userHomes instanceof Array) ? result.data.userHomes as Array<IUserHome> : []), true, false, ''));\r\n      \r\n      // dispatch(getHomesResult([], true, false, ''));\r\n      // dispatch(getUserHomesResult([], true, false, ''));\r\n      // dispatch(getTicketsResult(((isNNObject(result.data.tickets) && result.data.tickets instanceof Array) ? result.data.tickets as Array<ITicket> : []), true, false, ''));\r\n      //dispatch(setLoginResult(true));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const homeChange = (index: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(setHomeIndexResult(index));\r\n  callback(true);\r\n};\r\n\r\nexport const changePassword = (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'changepassword/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    password: password,\r\n    newPassword: newPassword\r\n  });\r\n};\r\n\r\nexport const forgetPassword = (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'resetpassword', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.data))\r\n    {\r\n      if(result.data.data === true){\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, result.data.message);\r\n      }\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    mobileNo: mobileNumber,\r\n    emailId: email\r\n  });\r\n};\r\n\r\nexport const updateProfile = (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  new Api().put(controller + 'profile/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.name = name;\r\n      user.mobileNo = mobileNo;\r\n      user.emailId = emailId;\r\n\r\n      dispatch(getUserResult(user));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    name: name,\r\n    mobileNo: mobileNo,\r\n    emailId: emailId\r\n  });\r\n};\r\n\r\nexport const updateRole = (role: string, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  dispatch(setRoleResult(role));\r\n  callback(true, '');\r\n};\r\n\r\nexport const logout = (callback: (result: boolean) => void) => (dispatch: any) => {\r\n  try {\r\n    sessionStorage.removeItem('auth_token');\r\n    sessionStorage.removeItem('user_id');\r\n    sessionStorage.removeItem('client_id');\r\n    dispatch(setLoginResult(false));\r\n    dispatch(setHomeIndexResult(-1));\r\n    dispatch(resetState());\r\n    callback(true);\r\n  } catch (error) {\r\n    // console.error('AsyncStorage error: ' + error.message);\r\n    callback(false);\r\n  }\r\n};\r\n\r\nexport const setLogin = (isLoggedIn: boolean) => (dispatch: any) => {\r\n  dispatch(setLoginResult(isLoggedIn));\r\n};\r\n\r\nexport const signup = (data: IMember, clientCode: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    clientCode: clientCode,\r\n    password: data.mobileNo\r\n  });\r\n  new Api().post(controller + 'signup', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const setGateNo = (gateNo: string) => (dispatch: any) => {\r\n  dispatch(setGateNoResult(gateNo));\r\n};\r\n\r\nconst setGateNoResult = (gateNo: string) => ({\r\n  type: actionTypes.SET_GATE_NO,\r\n  payload: gateNo\r\n});\r\nconst setLoginResult = (data: boolean) => ({\r\n  type: actionTypes.SET_LOGIN_STATUS,\r\n  payload: data\r\n});\r\nconst setRoleResult = (data: string) => ({\r\n  type: actionTypes.SET_ROLE,\r\n  payload: data\r\n});\r\nconst setHomeIndexResult = (data: number) => ({\r\n  type: actionTypes.SET_HOME_INDEX,\r\n  payload: data\r\n});\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n/*\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});\r\n*/\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});\r\n/*\r\nconst getUserHomesResult = (data: Array<IUserHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERHOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUserHomes\r\n});\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});\r\n*/\r\nconst resetState = () => ({\r\n  type: actionTypes.RESET\r\n});","import styled from 'styled-components';\r\n\r\nexport const View = styled.div`\r\n`;\r\n\r\nexport const ScrollView = styled.div`\r\noverflow: auto;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n`;\r\n\r\nexport const Picker = styled.select`\r\n`;\r\n\r\nexport const Text = styled.label`\r\n`;\r\n\r\nexport const TouchableHighlight = styled.span`\r\n`;\r\n\r\n// export const Button = styled.button`\r\n//   cursor: pointer;\r\n//   background: transparent;\r\n//   font-size: 16px;\r\n//   border-radius: 3px;\r\n//   color: ${props => (props.primary ? 'violet' : 'palevioletred')};\r\n//   border: ${props =>\r\n//     props.primary ? '2px solid violet' : '2px solid palevioletred'};\r\n//   margin: 0 1em;\r\n//   padding: 0.25em 1em;\r\n//   transition: 0.5s all ease-out;\r\n\r\n//   &:hover {\r\n//     color: white;\r\n//     background-color: ${props =>\r\n//       props.primary ? 'violet' : 'palevioletred'};\r\n//   }\r\n// `;","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  title: string,\r\n  onPress: () => void,\r\n  style? : {}\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Button extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    title: '',\r\n    onPress: () => {},\r\n    style: {}\r\n  }\r\n  render() {\r\n    return (\r\n      <input type='button' className='btn' value={this.props.title} onClick={() => this.props.onPress()} style={{...styles.btn, ...this.props.style}} />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  btn: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    borderColor: COLOR.PRIMARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    cursor: 'pointer',\r\n    // alignItems: 'center',\r\n    // paddingTop: 7,\r\n    // paddingBottom: 7,\r\n    // paddingLeft: 5,\r\n    // paddingRight: 5\r\n  }\r\n};","import { IMAGE_BASE_PATH } from '../constants/index';\r\n\r\nexport default class Images {\r\n    static readonly logo = IMAGE_BASE_PATH + 'logo.png';\r\n    static readonly logoInv = IMAGE_BASE_PATH + 'logo-inv.png';\r\n    static readonly icon = IMAGE_BASE_PATH + 'icon.png';\r\n    static readonly logout = IMAGE_BASE_PATH + 'logout.png';\r\n    static readonly homeIcon = IMAGE_BASE_PATH + 'home-icon.png';\r\n    static readonly homeIconInv = IMAGE_BASE_PATH + 'home-icon-inv.png';\r\n    static readonly notification = IMAGE_BASE_PATH + 'notification.png';\r\n    static readonly notificationInv = IMAGE_BASE_PATH + 'notification-inv.png';\r\n    static readonly setting = IMAGE_BASE_PATH + 'setting.png';\r\n    static readonly settingInv = IMAGE_BASE_PATH + 'setting-inv.png';\r\n    static readonly info = IMAGE_BASE_PATH + 'info.png';\r\n    static readonly infoInv = IMAGE_BASE_PATH + 'info-inv.png';\r\n    static readonly workInProgress = IMAGE_BASE_PATH + 'work-in-progress.png';\r\n    static readonly members = IMAGE_BASE_PATH + 'members.png';\r\n    static readonly membersInv = IMAGE_BASE_PATH + 'members-inv.png';\r\n    static readonly vehicle = IMAGE_BASE_PATH + 'vehicle.png';\r\n    static readonly vehicleInv = IMAGE_BASE_PATH + 'vehicle-inv.png';\r\n    static readonly username = IMAGE_BASE_PATH + 'username.png';\r\n    static readonly password = IMAGE_BASE_PATH + 'password.png';\r\n    static readonly support = IMAGE_BASE_PATH + 'support.png';\r\n    static readonly supportInv = IMAGE_BASE_PATH + 'support-inv.png';\r\n    static readonly visitors = IMAGE_BASE_PATH + 'visitors.png';\r\n    static readonly visitorsInv = IMAGE_BASE_PATH + 'visitors-inv.png';\r\n    static readonly servent = IMAGE_BASE_PATH + 'servent.png';\r\n    static readonly serventInv = IMAGE_BASE_PATH + 'servent-inv.png';\r\n    static readonly add = IMAGE_BASE_PATH + 'add.png';\r\n    static readonly edit = IMAGE_BASE_PATH + 'edit.png';\r\n    static readonly delete = IMAGE_BASE_PATH + 'delete.png';\r\n    static readonly close = IMAGE_BASE_PATH + 'close.png';\r\n    static readonly tick = IMAGE_BASE_PATH + 'tick.png';    \r\n    static readonly cancel = IMAGE_BASE_PATH + 'cancel.png';\r\n    static readonly mobile = IMAGE_BASE_PATH + 'mobile.png';\r\n    static readonly email = IMAGE_BASE_PATH + 'email.png';\r\n    static readonly addvertise = IMAGE_BASE_PATH + 'addvertise.png';\r\n    static readonly reminder = IMAGE_BASE_PATH + 'reminder.png';\r\n    static readonly users = IMAGE_BASE_PATH + 'users.png';\r\n    static readonly homes = IMAGE_BASE_PATH + 'homes.png';\r\n    static readonly blocks = IMAGE_BASE_PATH + 'blocks.png';\r\n    static readonly search = IMAGE_BASE_PATH + 'search.png';\r\n    static readonly datePicker = IMAGE_BASE_PATH + 'date-picker.png';\r\n    static readonly money = IMAGE_BASE_PATH + 'money.png';\r\n    static readonly moneyInv = IMAGE_BASE_PATH + 'money-inv.png';\r\n    static readonly view = IMAGE_BASE_PATH + 'view.png';\r\n    static readonly document = IMAGE_BASE_PATH + 'document.png';\r\n    static readonly documentInv = IMAGE_BASE_PATH + 'document-inv.png';\r\n    static readonly menu = IMAGE_BASE_PATH + 'menu.png';\r\n    static readonly loading = IMAGE_BASE_PATH + 'loading.gif';\r\n};","import * as React from 'react';\r\nimport { View, Image } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\nimport Images from '../images';\r\n\r\ninterface IProps {\r\n  visible: boolean,\r\n  text?: string\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Spinner extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    visible: false,\r\n    text: 'Loading...'\r\n  }\r\n  render() {\r\n    return (\r\n      this.props.visible &&\r\n      <View>\r\n        <View className='loader-overlay'></View>\r\n        <View className='loader'>\r\n          <Image className='' src={Images.loading} style={{width: '50px', height: '50px'}} />\r\n          <View style={{color: COLOR.SECONDARY, fontWeight: 'bold', marginTop: 5}}>{this.props.text}</View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n// <AppSpinner visible={this.props.visible} textContent={this.props.text} textStyle={{color: COLOR.SECONDARY}} />\r\n","export const styles = {\r\n  textInput: {\r\n    // borderBottomWidth: 1,\r\n    // borderBottomColor: COLOR.FONT_COLOR2,\r\n    // paddingBottom: 5\r\n    }\r\n  };\r\n  ","import {ToastsStore as toast} from 'react-toasts';\r\n\r\n class Toast {\r\n   static success = (msg: string) => {\r\n       // Toast.show(msg, '#003300', '#FFFFFF');\r\n       toast.success(msg);\r\n    }\r\n    static fail = (msg: string) => {\r\n        // Toast.show(msg, '#b30000', '#FFFFFF');\r\n        toast.error(msg);\r\n    }\r\n    static warn = (msg: string) => {\r\n        // Toast.show(msg, '#e68a00', '#FFFFFF');\r\n        toast.warning(msg);\r\n    }\r\n    static info = (msg: string) => {\r\n        // Toast.show(msg, '#000080', '#FFFFFF');\r\n        toast.info(msg);\r\n    }\r\n    static show = (msg: string, bgColor: string, textColor: string) => {\r\n\r\n        toast.info(msg);\r\n        \r\n        /*\r\n        // Add a Toast on screen.\r\n        RNToast.show(msg, {\r\n            duration: RNToast.durations.SHORT,\r\n            position: RNToast.positions.TOP,\r\n            shadow: true,\r\n            animation: true,\r\n            hideOnPress: true,\r\n            delay: 0,\r\n            backgroundColor: bgColor,\r\n            textColor: textColor,\r\n            onShow: () => {\r\n                // calls on toast\\`s appear animation start\r\n            },\r\n            onShown: () => {\r\n                // calls on toast\\`s appear animation end.\r\n            },\r\n            onHide: () => {\r\n                // calls on toast\\`s hide animation start.\r\n            },\r\n            onHidden: () => {\r\n                // calls on toast\\`s hide animation end.\r\n            }\r\n        });\r\n        */\r\n    }\r\n};\r\n\r\nexport default Toast;","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  key: string,\r\n  onPress: () => void\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class RadioButton extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    isActive: false,\r\n    text: '',\r\n    key: '',\r\n    onPress: () => {}\r\n  }\r\n  render() {\r\n    return (\r\n      <span style={styles.container}>\r\n        <input type='radio' key={this.props.key} checked={this.props.isActive} onClick={this.props.onPress} />\r\n        {\r\n          isNN(this.props.text) &&\r\n          <label style={styles.text}>{this.props.text}</label>\r\n        }\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    // flexDirection: 'row',\r\n    marginRight: 10\r\n  },\r\n  circle: {\r\n    height: 24,\r\n    width: 24,\r\n    borderRadius: 12,\r\n    borderWidth: 2,\r\n    borderColor: COLOR.PRIMARY,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  dot: {\r\n    height: 12,\r\n    width: 12,\r\n    borderRadius: 6,\r\n    backgroundColor: COLOR.PRIMARY\r\n  },\r\n  text: {\r\n    marginLeft: 5\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    container: {\r\n    },\r\n    head: {\r\n      flexDirection: 'row',\r\n      alignContent: 'flex-start',\r\n      backgroundColor: COLOR.PRIMARY,\r\n      paddingLeft: 10,\r\n      paddingRight: 10,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    title: {\r\n      flex: 15,\r\n      alignSelf: 'flex-start',\r\n      width: 'auto',\r\n      'font-weight': 'bold',\r\n      fontSize: 20,\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    close: {\r\n      flex: 1,\r\n      alignSelf: 'flex-end',\r\n      marginBottom: 5\r\n    },\r\n    row: {\r\n      // flexDirection: 'row',\r\n      marginTop: 3,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    ele: {\r\n      flex: 1,\r\n      width: '100%'\r\n    },\r\n    radio: {\r\n      borderColor: COLOR.HR_COLOR,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioText: {\r\n      // 'font-weight': 'bold',\r\n      // color: COLOR.HR_COLOR\r\n    },\r\n    radioActive: {\r\n      backgroundColor: COLOR.PRIMARY,\r\n      borderColor: COLOR.PRIMARY,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioActiveText: {\r\n      // 'font-weight': 'bold',\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    saveBtn: {\r\n      marginTop: 5,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    }\r\n  };","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport { IMember } from '../../models/home';\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  onSignUp: (data: IMember, clientCode: string, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  id: string,\r\n  clientCode: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class SignUp extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      clientCode: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.clientCode) && isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.mobileNo) && isNN(this.state.emailId)){\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSignUp(member, this.state.clientCode, (result: boolean) => {\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              clientCode: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Submit.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View  style={{flex: 1}}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"App Code\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.clientCode} onChange={(event: any) => this.setState({clientCode: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Name\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' className='form-control' placeholder=\"Age\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Mobile Number\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Email ID\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TextInput, Image } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Images from '../images';\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, onEnter } from '../../util';\r\nimport Toast from  '../../util/toast';\r\nimport { IMember } from '../../models/home';\r\nimport SignUp from './sign-up'\r\n\r\ninterface IProps {\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => void,\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => void,\r\n    onSignUp: (data: IMember, clientCode: string, scallback: (result: boolean, message: string) => void) => void\r\n}\r\n\r\ninterface IState{\r\n    userName: string,\r\n    password: string,\r\n    message: string,\r\n    isLoading: boolean,\r\n    isForgetPass: boolean,\r\n    isSignUp: boolean,\r\n    mobileNumber: string,\r\n    email: string\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            message: '',\r\n            isLoading: false,\r\n            isForgetPass: false,\r\n            isSignUp: false,\r\n            mobileNumber: '',\r\n            email: ''\r\n        };\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onForgetPassword = this.onForgetPassword.bind(this);\r\n        this.onForgetPassSubmit = this.onForgetPassSubmit.bind(this);\r\n        this.onCreateAccount = this.onCreateAccount.bind(this);\r\n        this.onSignUp = this.onSignUp.bind(this);\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    onLogin = () =>{\r\n        if(isNN(this.state.userName) && isNN(this.state.password)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            this.props.onLogin(this.state.userName, this.state.password, (result: boolean, message: string) => {\r\n                if(result === true){                        \r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            // Toast.warn('Enter Mobile Number and Password to continue.');\r\n            Toast.warn('Enter Mobile Number and Password to continue.');\r\n        }\r\n    };\r\n    \r\n    onForgetPassword = () =>{\r\n        this.setState({\r\n            isForgetPass: true,\r\n            isSignUp: false,\r\n            mobileNumber: '',\r\n            email: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    onForgetPassSubmit = () => {\r\n        if(isNN(this.state.mobileNumber) && isNN(this.state.email)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            this.props.onForgetPassword(this.state.mobileNumber, this.state.email.toLowerCase(), (result: boolean, message: string) => {\r\n                if(result === true){\r\n                    Toast.success('Password reset success. Login with New password sent to your Email. Change password after login.');\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: '',\r\n                        isForgetPass: false,\r\n                        isSignUp: false,\r\n                        userName: '',\r\n                        password: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            Toast.warn('Enter Mobile Number and Email to continue.');\r\n        }\r\n    };\r\n\r\n    onCreateAccount = () =>{\r\n        this.setState({\r\n            isForgetPass: false,\r\n            isSignUp: true,\r\n            mobileNumber: '',\r\n            email: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    onSignUp = (data: IMember, clientCode: string, callback: (result: boolean) => void) => {\r\n        this.setState({\r\n            message: '',\r\n            isLoading: true\r\n        });\r\n        this.props.onSignUp(data, clientCode, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                  isForgetPass: false,\r\n                  isSignUp: false,\r\n                  message: ''\r\n              });\r\n              Toast.success('Sign Up success. Please wait till Manager approves then you can access your account.');\r\n              callback(true);\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to Sign Up.');\r\n              callback(false);\r\n            }\r\n          });\r\n    };\r\n\r\n  render() {\r\n    return (\r\n            <View className='container' style={{backgroundColor: COLOR.INVERSE, maxWidth: '270px'}}>\r\n                <View className='row' style={{flexDirection: 'row', alignItems: 'center', justifyContent:'center', marginBottom: 30, marginTop: 5}}>\r\n                    <Image src={Images.logo} style={{width: 150, height: 150}}/>\r\n                </View>\r\n                {this.state.isForgetPass &&\r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <Image className='absolute' src={Images.mobile} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control' placeholder='Registered Mobile Number' value={this.state.mobileNumber} style={{...CommonStyles.textInput, ...styles.txt}}\r\n                        onChange={(event: any) => this.setState({mobileNumber: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onForgetPassSubmit);\r\n                        }} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 40}}>\r\n                        <Image className='absolute' src={Images.email} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control' placeholder='Registered Email' value={this.state.email} style={{...CommonStyles.textInput, ...styles.txt}}\r\n                        onChange={(event: any) => this.setState({email: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onForgetPassSubmit);\r\n                        }} />\r\n                    </View>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"Reset my password\" : \"Loading...\"}\r\n                    onPress={this.onForgetPassSubmit}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View style={{marginTop: 15}}>\r\n                        <Text className='pointer' onClick={() => { \r\n                            this.setState({\r\n                                isForgetPass: false,\r\n                                isSignUp: false,\r\n                                mobileNumber: \"\",\r\n                                email: \"\",\r\n                                message: \"\"\r\n                            });\r\n                         }} style={{marginBottom: 5, textAlign: 'center', color: COLOR.SECONDARY}}>Go back to Login.</Text>\r\n                    </View>\r\n                </View>\r\n                }\r\n                {this.state.isSignUp && <>\r\n                    <SignUp onSignUp={this.onSignUp} />\r\n                    <View style={{marginTop: 15, textAlign: 'center'}}>\r\n                        <Text className='pointer' onClick={() => { \r\n                            this.setState({\r\n                                isForgetPass: false,\r\n                                isSignUp: false,\r\n                                mobileNumber: \"\",\r\n                                email: \"\",\r\n                                message: \"\"\r\n                            });\r\n                         }} style={{marginBottom: 5, textAlign: 'center', color: COLOR.SECONDARY}}>Go back to Login.</Text>\r\n                    </View>\r\n                    </>\r\n                }\r\n                {(!this.state.isForgetPass && !this.state.isSignUp) && \r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <Image className='absolute' src={Images.username} style={styles.txtIcon} />\r\n                        <TextInput type='text' className='form-control' placeholder='Mobile Number' style={{...CommonStyles.textInput, ...styles.txt}} value={this.state.userName} \r\n                        onChange={(event: any) => this.setState({userName: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onLogin);\r\n                        }} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 15}}>\r\n                        <Image className='absolute' src={Images.password} style={styles.txtIcon} />\r\n                        <TextInput type='password'  className='form-control' placeholder='Password' value={this.state.password} style={{...CommonStyles.textInput, ...styles.txt}}\r\n                        onChange={(event: any) => this.setState({password: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onLogin);\r\n                        }} />\r\n                    </View>\r\n                    <Text className='col-12 pointer' onClick={this.onForgetPassword} style={{marginBottom: 15, textAlign: 'right', color: COLOR.SECONDARY}}>Forgot Password?</Text>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"LOGIN\" : \"Loading...\"}\r\n                    onPress={this.onLogin}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View className='col-12' style={{marginTop: 15, alignItems: 'center', justifyContent:'center'}}>\r\n                        <Text className='col-12' style={{marginBottom: 5, textAlign: 'center'}}>Dont have an account?</Text>\r\n                        <View className='col' style={{float: 'left', alignItems: 'center', justifyContent:'center', borderWidth: 1, borderColor: '#000000', borderStyle: 'solid', borderRadius: 10}}>\r\n                            <Text style={{textAlign: 'center', margin: '7px', cursor: 'pointer'}} onClick={this.onCreateAccount}>CREATE / JOIN YOUR FLAT</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                }\r\n                <Spinner visible={this.state.isLoading} text={\"\"} />\r\n            </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n    row: {\r\n        // flexDirection: 'row',\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        marginBottom: 25\r\n    },     \r\n    txtIcon: {\r\n        marginLeft: 6,\r\n        // marginRight: -15,\r\n        height: 15,\r\n        width: 15,\r\n        resizeMode : 'stretch',\r\n        alignItems: 'center',\r\n        top: 11\r\n\r\n    },\r\n    txt: {\r\n        flex: 1,\r\n        paddingLeft: 25\r\n    }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IMember } from '../models/home';\r\nimport { login, forgetPassword, signup } from '../store/actions/account';\r\n\r\nimport Page from '../components/login/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => dispatch(login(userName, password, callback)),\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => dispatch(forgetPassword(mobileNumber, email, callback)),\r\n    onSignUp: (data: IMember, clientCode: string, callback: (result: boolean, message: string) => void) => dispatch(signup(data, clientCode, callback))\r\n});\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(Page);","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    container: {\r\n      // backgroundColor: COLOR.MODAL_BG,\r\n      height: '80%',\r\n      marginTop: 30,\r\n      marginBottom: 25,\r\n      marginLeft: 15,\r\n      marginRight: 15\r\n    },\r\n    head: {\r\n      // padding: 7,\r\n      // flexDirection: 'row'\r\n      alignContent: 'center'\r\n    },\r\n    title: {\r\n      flex: 1,\r\n      // flexDirection: 'row',\r\n      alignContent: 'center',\r\n      color: COLOR.FONT_COLOR2\r\n    },\r\n    close: {\r\n      width: 20,\r\n      flex: 1,\r\n      // flexDirection: 'row',\r\n      justifyContent: 'flex-end',\r\n      alignContent: 'flex-end',\r\n      alignSelf: 'flex-end'\r\n    },\r\n    content: {\r\n      // padding: 15\r\n    }\r\n  };","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { Link } from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text, Image } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Images from '../images';\r\nimport {styles as popupStyles} from '../../styles/popup';\r\nimport { ROLE } from '../../constants/index';\r\nimport { IHome } from '../../models/home';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  isMenuExpand: boolean,\r\n  onToggleMenu: () => void,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{ \r\n  isShowHomeModel: boolean\r\n};\r\n\r\nexport default class TitleBar extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isShowHomeModel: false\r\n    };\r\n    this.onToggleHomeModel = this.onToggleHomeModel.bind(this);\r\n    this.onHomeChange = this.onHomeChange.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  onToggleHomeModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowHomeModel: isShow\r\n    });\r\n  }\r\n\r\n  onHomeChange = (index: number) => {\r\n    this.props.onHomeChange(index, (result: boolean) => {\r\n      if(result === true){\r\n        this.onToggleHomeModel(false);\r\n      }else{\r\n      }\r\n    });\r\n  }\r\n  \r\n  logout = () => {\r\n    confirmAlert({\r\n      title: 'Confirm to logout',\r\n      message: 'Are you sure you wish to logout?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.props.onLogout((result: boolean) => {\r\n              if(result === true){\r\n                Toast.success('Logout Success!');\r\n              }else{\r\n                Toast.fail('Failed to logout!');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className='center' style={styles.titleBar}>\r\n        <Link className='fl' to=''>\r\n          <Image src={Images.logoInv} className='' style={{ width: 22, height: 22}} onClick={() => { if(this.props.isMenuExpand){ this.props.onToggleMenu(); }}} />\r\n        </Link>\r\n          <Image src={this.props.isMenuExpand ? Images.close : Images.menu} className='fl pointer' style={(this.props.isMenuExpand ? { width: 17, height: 17, marginLeft: 15, marginTop: 6} : { width: 22, height: 22, marginLeft: 15, marginTop: 4})} onClick={this.props.onToggleMenu} />\r\n          {(this.props.appUser.role === ROLE.USER) ?\r\n          <Text className='pointer' style={styles.titleText} onClick={() => this.onToggleHomeModel(true)}>{((isNN(this.props.user.homes) && this.props.appUser.homeIndex >= 0) ? this.props.user.homes[this.props.appUser.homeIndex].number : \"\")}</Text>\r\n          :\r\n          <Text style={styles.titleText}>{(this.props.appUser.role === ROLE.ADMIN ? 'Admin' : (this.props.appUser.role === ROLE.MANAGER ? 'Manager' : (this.props.appUser.role === ROLE.GATEKEEPER ? 'Gate Keeper' : this.props.appUser.role)))}</Text>\r\n          }\r\n          <span className='fr pointer' onClick={this.logout} style={{flex: 1,}}>\r\n            <Image src={Images.logout} style={{ width: 20, height: 20}}  />\r\n          </span>\r\n        {isNN(this.props.user.homes) &&\r\n        <Modal\r\n          open={this.state.isShowHomeModel}\r\n          onClose={() => this.onToggleHomeModel(false)}>\r\n          <View style={popupStyles.container}>\r\n            {\r\n            this.props.user.homes.map((d: IHome, i: number) => {\r\n              return(\r\n                <Text className='col-12 pointer' key={'h' + i} onClick={() => this.onHomeChange(i)} style={(this.props.appUser.homeIndex === i ? {...styles.homeList, ...styles.activeHome} : {...styles.homeList, ...styles.inActiveHome})}>\r\n                {'' + d.number}\r\n                </Text>\r\n              )\r\n            })\r\n            }\r\n          </View>\r\n        </Modal>\r\n        }\r\n      </header>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  titleBar: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    // alignItems: 'flex-start',\r\n    // justifyContent: 'flex-start',\r\n    width: '100%',\r\n    // flexDirection: 'row',\r\n    padding: 7\r\n  },\r\n  titleText: {\r\n    flex: 15, \r\n    // textAlign: 'center', \r\n    color: COLOR.FONT_COLOR3, \r\n    // fontWeight: 'bold', \r\n    fontSize: 15\r\n  },\r\n  homeList: {\r\n    padding: 15, \r\n    borderBottomWidth: 1, \r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid'\r\n    // textAlign: 'center'\r\n  },\r\n  inActiveHome: {\r\n    color: COLOR.FONT_COLOR2\r\n  },\r\n  activeHome: {\r\n    color: COLOR.PRIMARY,\r\n    // fontWeight: 'bold',\r\n    fontSize: 20\r\n  }\r\n};","import { ROLE } from \".\";\r\n\r\nexport const NAV = [\r\n    {title: 'Home', path: '/'},\r\n    {title: 'Manage', roles: [ROLE.USER, ROLE.ADMIN, ROLE.MANAGER], child: [\r\n        {title: 'Members', path: 'members', roles: [ROLE.USER]},\r\n        {title: 'Vehicles', path: 'vehicles', roles: [ROLE.USER]},\r\n        {title: 'Servents', path: 'servents', roles: [ROLE.USER]},\r\n        {title: 'Tickets', path: 'tickets', roles: [ROLE.USER, ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Visitors', path: 'visitors', roles: [ROLE.USER]},\r\n        {title: 'Ads', path: 'ads', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Notification', path: 'notification', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Users', path: 'users', roles: [ROLE.ADMIN]},\r\n        {title: 'Homes', path: 'homes', roles: [ROLE.ADMIN]},\r\n        {title: 'Blocks', path: 'blocks', roles: [ROLE.ADMIN]},\r\n        {title: 'Visitors', path: 'all-visitors', roles: [ROLE.ADMIN, ROLE.MANAGER, ROLE.GATEKEEPER]},\r\n        {title: 'Payment', path: 'payment', roles: [ROLE.ADMIN, ROLE.MANAGER]}\r\n    ]},\r\n    {title: 'Notice', path: 'notice'},\r\n    {title: 'Settings', child: [\r\n        {title: 'My Profile', path: 'my-profile'},\r\n        {title: 'My Role', path: 'my-role', isMRole: true},\r\n        {title: 'My Documents', path: 'my-documents'},\r\n        {title: 'Change Password', path: 'change-password'}\r\n    ]},\r\n    {title: 'Info', path: 'info'}\r\n];","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport { NAV } from '../../constants/nav';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  isExpand: boolean,\r\n  onToggleMenu: () => void,\r\n};\r\n\r\ninterface IState{\r\n  activeMenu: string,\r\n  activeTopMenu: string\r\n};\r\n\r\nexport default class NavBar extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeMenu: '',\r\n      activeTopMenu: ''\r\n    };\r\n    this.loadNav = this.loadNav.bind(this);\r\n  }\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  loadNav = (nav: any, pTitle: string, isTopLevel: boolean = false) => {\r\n    let that = this;\r\n    return(\r\n      <ul className={'navbar-nav' + ((!isTopLevel && this.state.activeTopMenu !== pTitle) ? ' hide' : '')} style={!isTopLevel ? styles.inner : {}}>\r\n      {\r\n        nav.map((d: any, i: number) => {\r\n          if((isNN(d.path) || isNN(d.child)) && (!isNN(d.roles) || d.roles.indexOf(this.props.appUser.role) >= 0) && (!d.isMRole || this.props.user.role.split(',').length > 0)){\r\n          return(\r\n            <li className='nav-item'>\r\n              <Link className='nav-link' to={isNN(d.path) ? d.path : '#' } onClick={() => {\r\n                if(this.state.activeTopMenu === d.title){\r\n                  this.setState({\r\n                    activeTopMenu: ''\r\n                  });\r\n                }else if(isTopLevel){\r\n                  this.setState({\r\n                    activeTopMenu: d.title\r\n                  });\r\n                }\r\n                this.setState({\r\n                  activeMenu: d.title\r\n                });\r\n                if(isNN(d.path)){\r\n                  this.props.onToggleMenu();\r\n                }\r\n              }}>{d.title}</Link>\r\n              {\r\n                isNN(d.child) && \r\n                that.loadNav(d.child, d.title)\r\n              }\r\n            </li>\r\n          )\r\n          }else{\r\n            return null;\r\n          }\r\n        })\r\n      }\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className={this.props.isExpand ? '' : 'collapse'} style={styles.nav}>\r\n        {\r\n          this.loadNav(NAV, '', true)\r\n        }\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  nav: {\r\n    backgroundColor: COLOR.SECONDARY,\r\n    color: COLOR.INVERSE\r\n  },\r\n  inner:{\r\n    backgroundColor: COLOR.PRIMARY,\r\n    paddingLeft: 10\r\n  }\r\n};","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class TabBar extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // }\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <footer style={styles.tabBar}>\r\n        <View className='center'>© Nest</View>\r\n      </footer>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {  \r\n  tabBar: {\r\n    flex: 1,\r\n    // backgroundColor: COLOR.HR_COLOR,\r\n    borderTopColor: COLOR.HR_COLOR,\r\n    borderTopWidth: 1,\r\n    'border-top-style': 'solid',\r\n    // alignItems: 'flex-start',\r\n    // justifyContent: 'flex-start',\r\n    width: '100%',\r\n    // flexDirection: 'row',\r\n    // position: 'absolute',\r\n    marginTop: 25,\r\n    paddingTop: 15,\r\n    paddingBottom: 15\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    alignItems: 'center'\r\n  },\r\n  tabImage: {\r\n    width: 20,\r\n    height: 20\r\n  },\r\n  activeTab: {\r\n    backgroundColor: COLOR.INVERSE\r\n  }\r\n};","import Api from '../api/api';\r\nimport { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'payment';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const search = (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const save = (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to save Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const updatePay = (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().put(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to update Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const upload = (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'upload', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.approvalid > 0)\r\n    {\r\n      /*\r\n      var homeIndex = user.homes.findIndex(d => d._id === homeId);\r\n      if(file.approvalid > 0)\r\n      {        \r\n        var paymentIndex = user.home[homeIndex].paymentApproval.findIndex(d => d.approvalid === file.approvalid);\r\n        user.home[homeIndex].paymentApproval[paymentIndex] = result.data;\r\n      }else{\r\n        user.home[homeIndex].paymentApproval.push(result.data);\r\n      }\r\n      */\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, file);\r\n};\r\n\r\nexport const update = (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/transaction/' + paymentId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      transaction._id = result.data;\r\n      // var homeIndex = user.homes.findIndex(d => d._id === params.homeid);\r\n      // if(paymentId.length > 0)\r\n      // {        \r\n        var paymentIndex = user.homes[homeIndex].payments.findIndex(d => d._id === paymentId);\r\n        if(!user.homes[homeIndex].payments[paymentIndex].transactions){\r\n          user.homes[homeIndex].payments[paymentIndex].transactions = [];\r\n        }\r\n        user.homes[homeIndex].payments[paymentIndex].transactions.push(transaction);\r\n      // }else{\r\n      //   user.homes[homeIndex].payments.push(result.data);\r\n      // }\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, transaction);\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","// import { actionTypes } from '../action-types';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants/index';\r\n// import { IHome } from '../../models/home';\r\n\r\nlet controller: string = 'visitor';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : '') + '/' + isActive, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // data.image = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          var foundIndex = visitors.findIndex(d => d._id === result.data);\r\n          visitors[foundIndex]._id = result.data;\r\n          visitors[foundIndex].name = name;\r\n          visitors[foundIndex].age = data.age;\r\n          visitors[foundIndex].gender = data.gender;\r\n          visitors[foundIndex].mobileNo = data.mobileNo;\r\n          visitors[foundIndex].emailId = data.emailId;\r\n          visitors[foundIndex].image = result.image;\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      } else {\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          data._id = result.data;\r\n          data.createdBy = user.name;\r\n          visitors.unshift(data);\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      } else {\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      /*\r\n      user.homes[homeIndex].visitors = user.homes[homeIndex].visitors.filter((d, i) => d._id != id);\r\n      dispatch(getUserResult(user as IUser));\r\n      */\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const enter = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/enter/' + id + '/' + gateNo, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const exit = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/exit/' + id + '/' + gateNo, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const approve = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/approve/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const reject = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/reject/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};","import Api from '../api/api';\r\nimport { isNNObject } from '../../util/index';\r\n\r\nlet controller: string = 'upload';\r\n\r\nexport const upload = (data: any, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().upload(controller, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};","import * as React from 'react';\r\nimport { ScrollView, View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNN, generateUUID } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\nimport { MONTH, COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome,\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  payment: {\r\n    paymentId: string,\r\n    amount: number,\r\n    transactionRef: string\r\n  }\r\n};\r\n\r\nexport default class MyDues extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      payment: {\r\n        paymentId: '',\r\n        amount: 0,\r\n        transactionRef: ''\r\n      }\r\n    }\r\n    this.getTotalDue = this.getTotalDue.bind(this);\r\n    this.payNow = this.payNow.bind(this);\r\n    this.clearTxn = this.clearTxn.bind(this);\r\n    this.txnFailure = this.txnFailure.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getTotalDue = () => {\r\n    let totalDue = 0;\r\n    this.props.home.payments.map((d: IPayment, i: number) => {\r\n      let amountPaid = 0;\r\n        d.transactions.filter((t, j) => t.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n      totalDue += d.amount - amountPaid;\r\n      return 1;\r\n    });\r\n    return totalDue;\r\n  };\r\n\r\n  payNow = (paymentId: string, amount: number) => {\r\n    if(paymentId && paymentId.length > 0 && amount && amount > 0){\r\n      if(isNN(this.props.user.client.upi.id) && isNN(this.props.user.client.upi.name)){\r\n        let transactionRef = generateUUID();\r\n        this.setState({\r\n          payment: {\r\n            paymentId: paymentId,\r\n            amount: amount,\r\n            transactionRef: transactionRef\r\n          }\r\n        });\r\n        \r\n        Toast.warn('Payment is in progress. Please contact administrator.');\r\n        // RNUpiPayment.initializePayment({\r\n        //   vpa: this.props.user.client.upi.id, // or can be john@ybl or mobileNo@upi\r\n        //   payeeName: this.props.user.client.upi.name,\r\n        //   amount: amount + '',\r\n        //   transactionRef: transactionRef,\r\n        //   transactionNote: ''\r\n        // }, this.successCallback, this.failureCallback);\r\n      }else{\r\n        Toast.warn('Please update UPI ID and UPI Name to app administrator to proceed further.');\r\n      }\r\n    }else{\r\n      Toast.warn('Amount should be more then 0 to proceed payment.');\r\n    }\r\n  };\r\n  \r\n  successCallback = (result: any) => {\r\n    console.log('Payment Success...', result);\r\n    if(result && result.Status)\r\n    {\r\n      if(result.Status === 'SUCCESS' && result.responseCode && result.responseCode === '00'){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let transaction = {\r\n          txnRef: result.txnRef,\r\n          txnId: result.txnId,\r\n          amount: this.state.payment.amount,\r\n          status: 'PAID',\r\n          isSuccess: true,\r\n          reason: ''\r\n        } as ITransaction;\r\n        this.props.onPaymentUpdate(this.state.payment.paymentId, transaction, (updateResult: boolean) => {\r\n          this.setState({\r\n            isLoading: false\r\n          });\r\n          this.clearTxn();\r\n          if(updateResult === true){\r\n            Toast.success('Payment success.');\r\n          }else{\r\n            Toast.fail('Payment failed.');\r\n          }\r\n        });\r\n      }else{\r\n        this.txnFailure(result);\r\n      }\r\n    }else{\r\n      this.txnFailure(result);\r\n    }\r\n  };\r\n   \r\n  failureCallback = (result: any) => {\r\n    this.txnFailure(result);\r\n  };\r\n\r\n  txnFailure = (result: any) => {\r\n    console.log('Payment Failure...', result);\r\n    let msg: string = '';\r\n    if(result && result.Status)\r\n    {\r\n      if(result.Status === 'FAILURE' && result.responseCode && result.responseCode === 'ZM'){\r\n        msg = 'Payment failed because of wrong pin.';\r\n      }\r\n      else if(result.Status === 'FAILURE' && result.message && result.message.length > 0){\r\n        msg = 'Payment failed because ' + result.message;\r\n      }else{\r\n        msg = 'Payment failed.';\r\n      }\r\n    }\r\n    else{\r\n      msg = 'Payment failed.';\r\n    }\r\n    Toast.fail(msg);\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    let transaction = {\r\n      txnRef: this.state.payment.transactionRef,\r\n      txnId: '',\r\n      amount: this.state.payment.amount,\r\n      status: 'FAIL',\r\n      isSuccess: false,\r\n      reason: msg\r\n    } as ITransaction;\r\n    this.props.onPaymentUpdate(this.state.payment.paymentId, transaction, (updateResult: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      this.clearTxn();\r\n      // if(updateResult === true){\r\n      //   Toast.success('Payment success.');\r\n      // }else{\r\n      //   Toast.fail('Payment failed.');\r\n      // }\r\n    });\r\n  };\r\n\r\n  clearTxn = () => {\r\n    this.setState({\r\n      payment: {\r\n        paymentId: '',\r\n        amount: 0,\r\n        transactionRef: ''\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <View style={{ margin: 5 }}>\r\n          <Text style={{ marginTop: 2, fontWeight: 'bold', fontSize: 17 }}>{'Total Due Amount: Rs ' + this.getTotalDue()}</Text>\r\n        </View>\r\n        <ScrollView>\r\n        {isNN(this.props.home.payments) ?\r\n        this.props.home.payments.filter((p: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          if (isNN(p.transactions)) {\r\n            p.transactions.filter(t => t.isSuccess === true).map((p, j) => amountPaid += p.amount);\r\n          }\r\n          return(amountPaid < p.amount);\r\n        }).map((d: IPayment, i: number) => {\r\n            let amountPaid = 0;\r\n            if (isNN(d.transactions)) {\r\n              d.transactions.filter(p => p.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n            }\r\n            if (amountPaid < d.amount) {\r\n              return (\r\n                <View key={'my-due' + i} style={(i === 0) ? styles.myDueFirst : styles.myDue }>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Text>{'Due for: ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + '/' + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%', marginTop: 4, marginBottom: 3 }}>\r\n                    <Text style={{ fontSize: 17 }}>{'Rs ' + (d.amount - amountPaid)}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%'}}>\r\n                    <Text>{'Due Date: 15/' + MONTH.filter(m => m.value === d.forMonth)[0].title + '/' + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Button \r\n                    title='PAY NOW'\r\n                    onPress={() => this.payNow(d._id, (d.amount - amountPaid))} \r\n                    />\r\n                  </View>\r\n                </View>\r\n              )\r\n            } else {\r\n              return null;\r\n            }\r\n          })\r\n          :<Text style={{ padding: 20 }}>No Dues found!!!</Text>\r\n        }\r\n        </ScrollView>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  myDue: {\r\n    margin: 7, \r\n    paddingLeft: 15,\r\n    borderLeftColor: COLOR.HR_COLOR, \r\n    borderLeftWidth: 1 \r\n  },\r\n  myDueFirst: {\r\n    margin: 7\r\n  }\r\n};","import moment from 'moment';\r\nimport { isNN, jsError, isNNObject } from './index';\r\nimport { DEFAULT_DATE_FORMAT, DEFAULT_DATE_TIME_FORMAT } from '../constants/index';\r\n\r\nexport function toDateString(_input: any, _format?: string) {\r\n  try {\r\n    if(isNNObject(_input)) {\r\n      if (typeof _input != 'string') {\r\n        _input.toString();\r\n      }\r\n      if (!isNN(_format)) {\r\n       _format = DEFAULT_DATE_FORMAT;\r\n      }\r\n      return moment(_input).format(_format);\r\n    } else {\r\n      return '';\r\n    }\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateString'); \r\n    return ''; \r\n  }\r\n};\r\n\r\nexport function toDateTimeString(_input: any, _format?: string) {\r\n  try {\r\n    return toDateString(_input, DEFAULT_DATE_TIME_FORMAT);\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateTimeString'); \r\n    return ''; \r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, ScrollView } from '../common/elements';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNN } from '../../util';\r\nimport { toDateString } from '../../util/convert';\r\nimport { MONTH, COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  home: IHome,\r\n};\r\n\r\ninterface IState {\r\n  activeTab: number\r\n};\r\n\r\nexport default class History extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <ScrollView style={{}}>\r\n        {isNN(this.props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true)))) ?\r\n        this.props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true))).slice(0, 3).map((d: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          let paidDate = null;\r\n          d.transactions.filter(t => t.isSuccess === true).map((t: ITransaction, j: number) => {\r\n            amountPaid += t.amount;\r\n            if(j === 0){\r\n              paidDate = t.createdAt;\r\n            }\r\n            return 1;\r\n          });\r\n              return (\r\n                <View key={'my-his' + i} style={(i === 0) ? styles.myDueFirst : styles.myDue }>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Text style={{}}>{\"Paid for: \" + MONTH.filter(m => m.value === d.forMonth)[0].title + \"/\" + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%', marginTop: 4, marginBottom: 3 }}>\r\n                    <Text style={{ fontSize: 17 }}>{\"Rs \" + amountPaid}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%'}}>\r\n                    <Text>{\"Paid On: \" + toDateString(paidDate)}</Text>\r\n                  </View>\r\n                </View>\r\n              )\r\n          })\r\n          :<Text style={{ padding: 20 }}>No History found</Text>\r\n        }\r\n        </ScrollView>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  myDue: {\r\n    margin: 7, \r\n    paddingLeft: 15,\r\n    borderLeftColor: COLOR.HR_COLOR, \r\n    borderLeftWidth: 1 \r\n  },\r\n  myDueFirst: {\r\n    margin: 7\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { Text, View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\n\r\ninterface IProps {\r\n  data: Array<object>,\r\n  message: string\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class CustomList extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n      return(\r\n        isNN(this.props.data) ?\r\n        this.props.data.map((d: any, i: number) => {\r\n          return(\r\n            <View style={{flex: 1, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid', paddingBottom: 3}}>\r\n              <View>\r\n                <Text key={i} style={{flex: 1, fontWeight: 'bold'}}>\r\n                  {d.title}\r\n                </Text>\r\n              </View>\r\n              <View>\r\n                <Text key={i} style={{flex: 1}}>\r\n                  {d.description}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text>{this.props.message}</Text>          \r\n      );\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  container: {\r\n    flex: 1, \r\n    // flexDirection: 'column',\r\n    width: '100%',\r\n    // backgroundColor: \"#CCCCCC\",\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    borderBottomWidth: 1,\r\n    'border-bottom-style': 'solid'\r\n  }, \r\n  row: {\r\n    flex: 1,\r\n    // flexDirection: 'row'\r\n  }, \r\n  card: {\r\n    flex: 1, \r\n    // flexDirection: 'column', \r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    // backgroundColor: '#DDDDDD', \r\n    borderRadius: 10,\r\n    padding: 5,\r\n    margin: 7\r\n  },\r\n  inner: {\r\n    // flex: 1, \r\n    // flexDirection: 'column', \r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    // textAlign: 'center',\r\n    // width: '150px',\r\n    margin: 5,\r\n    padding: '0px 10px'\r\n    // float: 'left'\r\n  },\r\n  txt:{\r\n    flex: 1, \r\n    // justifyContent: 'center', \r\n    // textAlign: 'center', \r\n    paddingTop: 7,\r\n    paddingBottom: 5,\r\n    fontSize: 14\r\n  },\r\n  img:{\r\n    width: '10vw',\r\n    height: '10vw',\r\n    maxWidth: '75px',\r\n    maxHeight: '75px',\r\n    margin: 5\r\n  }\r\n};\r\n  ","import * as React from 'react';\r\nimport { View, TouchableHighlight, Image } from '../common/elements';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport MyDues from './my-dues';\r\nimport History from './history';\r\nimport Images from '../images';\r\nimport CustomList from './custom-list';\r\nimport { styles as cardStyles } from '../../styles/card';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  activeTab: number\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        {/*<View style={{flex: 1, flexDirection: 'row', marginTop: 1, marginBottom: 2}}>\r\n          <Text style={{flex: 1, justifyContent: 'flex-start', padding: 5}}>{new Date().toLocaleDateString()}</Text>\r\n          <Text style={{flex: 1, justifyContent: 'flex-end', alignItems:'flex-end', textAlign: \"right\", padding: 5}}>{new Date().toLocaleTimeString()}</Text>\r\n        </View>*/}\r\n        <View className='fl' style={cardStyles.container}>\r\n            <View style={cardStyles.row}>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('members')}>\r\n                  <Image src={Images.members} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  {(this.props.home.members ? this.props.home.members.length + '' : '') + ' MEMBER' + ((this.props.home.members.length === 0 || this.props.home.members.length > 1) ? 'S' : '')}\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('vehicles')}>\r\n                  <Image src={Images.vehicle} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  {(this.props.home.vehicles ?  this.props.home.vehicles.length + '' : '') + ' VEHICLE' + ((this.props.home.vehicles.length === 0 || this.props.home.vehicles.length > 1) ? 'S' : '')}\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('servents')}>\r\n                  <Image src={Images.servent} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  {(this.props.home.servents ? this.props.home.servents.length + '' : '') + ' SERVANT' + ((this.props.home.servents.length === 0 || this.props.home.servents.length > 1) ? 'S' : '')}\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('tickets')}>\r\n                  <Image src={Images.support} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.tickets ? this.props.home.tickets.length + '' : '') + ' TICKET' + ((this.props.home.tickets.length === 0 || this.props.home.tickets.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>TICKET(S)</View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('visitors')}>\r\n                  <Image src={Images.visitors} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.visitors ? this.props.home.visitors.length + '' : '') + ' VISITOR' + ((this.props.home.visitors.length === 0 || this.props.home.visitors.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>VISITOR(S)</View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab}: styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              MY DUES\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>\r\n              ADVANCE\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              HISTORY\r\n            </TouchableHighlight>\r\n            {/* <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.activeTab)} onClick={() => this.setState({activeTab: 4})}>\r\n              DEPOSITS\r\n            </TouchableHighlight> */}\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n          {this.state.activeTab === 1 ?\r\n              <MyDues history={this.props.history} user={this.props.user} home={this.props.home} onPaymentUpload={this.props.onPaymentUpload} onPaymentUpdate={this.props.onPaymentUpdate} />\r\n            :\r\n            this.state.activeTab === 2 ?\r\n              <CustomList data={[]} message=\"No advance found!\" />\r\n              :\r\n              this.state.activeTab === 3 ?\r\n              <History history={this.props.history} home={this.props.home} />\r\n              :\r\n              this.state.activeTab === 4 ?\r\n              <CustomList data={[]} message=\"Work in progress\" />\r\n              :\r\n              []\r\n            }\r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%',\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Image } from '../../common/elements';\r\nimport Images from '../../images';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles as cardStyles } from '../../../styles/card';\r\nimport { ROLE } from '../../../constants';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { ITickets } from '../../../models/store/tickets';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  tickets: ITickets\r\n  blocks: IBlocks\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View className='fl' style={cardStyles.container}>\r\n            <View style={cardStyles.row}>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('tickets')}>\r\n                  <Image src={Images.support} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {/* {this.props.tickets.isUpToDate ?\r\n                    ((!this.props.tickets.isError) ? this.props.tickets.data.length : 0) + \" TICKET\" + ((this.props.tickets.isError || this.props.tickets.data.length === 0 || this.props.tickets.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    } */}\r\n                    TICKET\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('ads')}>\r\n                  <Image src={Images.addvertise} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {/* {this.props.ads.isUpToDate ?\r\n                    ((!this.props.ads.isError) ? this.props.ads.data.length : 0) + \" AD\" + ((this.props.ads.isError || this.props.ads.data.length === 0 || this.props.ads.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    } */}\r\n                    ADS\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('notification')}>\r\n                  <Image src={Images.reminder} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>NOTIFICATION</View>\r\n                </View>\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('users')}>\r\n                  <Image src={Images.users} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.users.isUpToDate ?\r\n                    ((!this.props.users.isError) ? this.props.users.data.length : 0) + \" USER\" + ((this.props.users.isError || this.props.users.data.length === 0 || this.props.users.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('homes')}>\r\n                  <Image src={Images.homes} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.homes.isUpToDate ?\r\n                    ((!this.props.homes.isError) ? this.props.homes.data.length : 0) + \" HOME\" + ((this.props.homes.isError || this.props.homes.data.length === 0 || this.props.homes.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('blocks')}>\r\n                  <Image src={Images.blocks} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.blocks.isUpToDate ?\r\n                    ((!this.props.blocks.isError) ? this.props.blocks.data.length : 0) + \" BLOCK\" + ((this.props.blocks.isError || this.props.blocks.data.length === 0 || this.props.blocks.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('all-visitors')}>\r\n                  <Image src={Images.visitors} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.visitors ? this.props.home.visitors.length + '' : '') + ' VISITOR' + ((this.props.home.visitors.length === 0 || this.props.home.visitors.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>VISITOR(S)</View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('payment')}>\r\n                  <Image src={Images.money} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>PAYMENT</View>\r\n                </View>\r\n            </View>\r\n        </View>     \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%',\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, ScrollView, TextInput, Text } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN, generateUUID } from '../../../util/index';\r\nimport { COLOR } from '../../../constants';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHome, IVisitor } from '../../../models/home';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  homeId: string,\r\n  id: string,\r\n  type: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  fileName: string,\r\n  showHomes: boolean,\r\n  homeSearchText: string\r\n};\r\n\r\nexport default class NewVisitor extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      homeId: '',\r\n      id: '',\r\n      type: 'VISITOR',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      fileName: '',\r\n      showHomes: false,\r\n      homeSearchText: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onImageSelect = this.onImageSelect.bind(this);\r\n    this.viewAll = this.viewAll.bind(this);\r\n  };\r\n  \r\n  onImageSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        this.setState({\r\n          fileName: fileName\r\n        });\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        this.props.onUpload(data, (result: boolean, message: string) => {\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.props.gateNo) && this.state.showHomes === false && this.state.homeId.length > 0 && isNN(this.state.name) && isNN(this.state.fileName)){\r\n      // this.props.onToggleLoading(true);\r\n      let visitor = {\r\n        _id: '',\r\n        type: this.state.type,\r\n        name: this.state.name,\r\n        age: this.state.age,\r\n        gender: this.state.gender,\r\n        mobileNo: this.state.mobileNo,\r\n        emailId: '',\r\n        image: this.state.fileName,\r\n        passCode: '',\r\n        gateNo: this.props.gateNo\r\n      } as IVisitor;\r\n      this.props.onSave(this.state.homeId, visitor, this.props.user, this.props.appUser, (result: boolean) => {          \r\n        // this.props.onToggleLoading(false);\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          // Toast.success('Visitor ' + name + ' saved successfully.');\r\n        }else{\r\n          Toast.fail('Failed to save visitor ' + this.state.name + '.');\r\n        }\r\n      });\r\n      this.setState({\r\n        homeId: '',\r\n        id: '',\r\n        type: 'VISITOR',\r\n        name: '',\r\n        age: 0,\r\n        gender: '',\r\n        mobileNo: '',\r\n        fileName: '',\r\n        showHomes: false,\r\n        homeSearchText: ''\r\n      });\r\n      Toast.info('Visitor will be saved and notified to the home.');\r\n    }else{\r\n      Toast.warn('Please fill Gate Number, Home and Image before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({ \r\n      homeId: '',\r\n      id: '',\r\n      type: 'VISITOR',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      fileName: '',\r\n      showHomes: false,\r\n      homeSearchText: ''\r\n    });\r\n  };\r\n\r\n  viewAll = () => {\r\n    if(isNN(this.props.gateNo)) {\r\n      this.props.history.push('all-visitors')\r\n    } else {\r\n      Toast.warn('Please enter Gate Number to view this page.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          <View style={modelStyles.row}>\r\n            <Text className='fr pointer' onClick={this.viewAll} style={{...styles.ele, color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right'}}>View all Active Visitors</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder='Enter Home Number' className='form-control'\r\n          style={{...modelStyles.ele, ...styles.ele,\r\n            flexDirection: 'row',\r\n            padding: 12,\r\n            borderWidth: 1,\r\n            borderColor: COLOR.HR_COLOR,\r\n            borderRadius: 5\r\n          }} \r\n          value={this.state.homeSearchText} \r\n          onChange={(event: any) => this.setState({showHomes: true, homeSearchText: event.target.value})} />\r\n          </View>\r\n          {\r\n            (this.state.showHomes && isNN(this.state.homeSearchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n              {\r\n                this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.homeSearchText.toLowerCase()) >= 0).map((d: IHome, i: number) => {\r\n                  return(\r\n                    <Text \r\n                    className='pointer'\r\n                    key={'ho' + i}\r\n                    style={{...styles.ele, flexDirection: 'column', margin: 3, padding: 6, backgroundColor: COLOR.CARD_UNDERLAY}}\r\n                    onClick={() => {\r\n                      this.setState({homeSearchText: d.number, homeId: d._id, showHomes: false});\r\n                    }}>{d.number}</Text>\r\n                  )\r\n                })\r\n              }\r\n            </ScrollView>\r\n          }\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'VISITOR'} text='Visitor' onPress={() => this.setState({type: 'VISITOR'})} />\r\n            <RadioButton isActive={this.state.type === 'DELIVERY'} text='Delivery' onPress={() => this.setState({type: 'DELIVERY'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder='Age' className='form-control' maxLength={3} style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder='Mobile Number' className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>    \r\n          <View style={modelStyles.row}>\r\n              <input type='file' name='image' placeholder='SELECT IMAGE' onChange={this.onImageSelect}/>\r\n              {isNN(this.state.fileName) &&\r\n              <Text style={{...styles.ele, marginLeft: 15}}>{this.state.fileName}</Text>\r\n              }\r\n          </View>\r\n          <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              style={{...styles.ele, marginRight: 10}}\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={this.onClear}\r\n              style={styles.ele}\r\n              />\r\n          </View>\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  },\r\n  ele: {\r\n    fontSize: 17\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, TextInput } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home';\r\nimport NewVisitor from './new-visitor';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onGateNoChanged: (gateNo: string) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  gateNo: string,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      gateNo: '',\r\n      isLoading: false\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      gateNo: this.props.gateNo\r\n    })\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder='Gate Number' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, width: 'auto'}} value={this.state.gateNo} onChange={(event: any) => this.setState({gateNo: event.target.value})} onBlur={() => this.props.onGateNoChanged(this.state.gateNo)} />\r\n        </View>\r\n        <NewVisitor history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} gateNo={this.state.gateNo} onToggleLoading={(isLoading) => this.setState({ isLoading: isLoading })} onSave={this.props.onSaveVisitor} onUpload={this.props.onUpload} />\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { Text } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { IVisitor } from '../../models/home';\r\nimport Home from './home';\r\nimport AMHome from './manager/home';\r\nimport GKHome from './gatekeeper/home';\r\nimport { ROLE } from '../../constants/index';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  outings: IOutings,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  tickets: ITickets,\r\n  blocks: IBlocks,\r\n  gateNo: string,\r\n  onGateNoChanged: (gateNo: string) => void,\r\n  onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n};\r\n\r\nexport default class Dashboard extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    if(this.props.appUser.role === ROLE.USER) {\r\n      if(this.props.appUser.homeIndex >= 0 && isNN(this.props.user.homes)) {\r\n        return(<Home history={this.props.history} user={this.props.user} home={this.props.user.homes[this.props.appUser.homeIndex]} onPaymentUpload={(file: any, homeId: string, callback: (result: boolean) => void) => this.props.onPaymentUpload(file, homeId, this.props.user, callback)} onPaymentUpdate={(paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => this.props.onPaymentUpdate(paymentId, transaction, this.props.appUser.homeIndex, this.props.user, callback)} />);\r\n      }else{\r\n        return(<Text style={{margin: 20}}>No home assigned to you. Please contact administrator/manager.</Text>);\r\n      }\r\n    }\r\n    else if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      return(<AMHome history={this.props.history} appUser={this.props.appUser} user={this.props.user} ads={this.props.ads} users={this.props.users} homes={this.props.homes} tickets={this.props.tickets} blocks={this.props.blocks} />);\r\n    }\r\n    else if(this.props.appUser.role === ROLE.GATEKEEPER) {\r\n      return(<GKHome history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} gateNo={this.props.gateNo} onGateNoChanged={this.props.onGateNoChanged} onSaveVisitor={this.props.onSaveVisitor} onUpload={this.props.onUpload} />);\r\n    }else{\r\n      return(<Text style={{margin: 20}}>No role assigned to you. Please contact administrator/manager.</Text>);\r\n    }\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { ITransaction } from '../models/home/transaction';\r\nimport { IVisitor } from '../models/home';\r\nimport { setGateNo } from '../store/actions/account';\r\nimport { upload, update } from '../store/actions/payment';\r\nimport { save as saveVisitor } from '../store/actions/visitor';\r\nimport { upload as fileUpload } from '../store/actions/file';\r\nimport Page from '../components/home/dashboard';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    outings: state.Outings,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    tickets: state.Tickets,\r\n    blocks: state.Blocks,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onGateNoChanged: (gateNo: string) => dispatch(setGateNo(gateNo)),\r\n    onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => dispatch(upload(file, homeId, user, callback)),\r\n    onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => dispatch(update(paymentId, transaction, homeIndex, user, callback)),\r\n    onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => dispatch(saveVisitor(homeId, data, user, appUser, scallback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(fileUpload(data, callback))\r\n});\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IMember } from '../../models/home/member';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n////import { number } from 'prop-types';\r\n////import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'member';\r\nlet accountController: string = 'account';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.member) && isNN(result.data.member._id)) {\r\n      sCallback(result.data.member, result.data.homeIds ? result.data.homeIds : []);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Member.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IMember, user: IUser, homeIndex: number, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        let members = user.homes[homeIndex].members;\r\n        var foundIndex = members.findIndex(d => d._id === result.data);\r\n        members[foundIndex]._id = result.data;\r\n        members[foundIndex].number = data.number;\r\n        members[foundIndex].name = data.name;\r\n        members[foundIndex].age = data.age;\r\n        members[foundIndex].gender = data.gender;\r\n        members[foundIndex].mobileNo = data.mobileNo;\r\n        members[foundIndex].emailId = data.emailId;\r\n        members[foundIndex].type = data.type;\r\n        \r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    data = Object.assign(data, {\r\n      password: data.mobileNo\r\n    });\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        let members = user.homes[homeIndex].members;\r\n        members.push(data);\r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const saveByAM = (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    isAM: true,\r\n    homeIds: homeIds,\r\n    isApprove: isApprove\r\n  });\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          var foundIndex = users.data.findIndex(d => d._id === result.data);\r\n          if(foundIndex >= 0){\r\n            users.data[foundIndex]._id = result.data;\r\n            users.data[foundIndex].name = data.name;\r\n          } else {\r\n            users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          }\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const removeByAM = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadWFAUsers = (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(accountController + '/wfausers', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNNObject(result) && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const reject = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(accountController + '/rejectuser/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  data: Array<{title: string, link: string}>\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Breadcrum extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    data: []\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={styles.cnr}>\r\n        <Link to='' style={styles.link}>Home</Link>\r\n        {this.props.data.map((d, i) => {\r\n          return(<>\r\n          <span key={'bd' + i} style={styles.sep}>/</span>\r\n          {(i === this.props.data.length - 1) ?\r\n          <span key={'bc' + i} style={styles.link}>{d.title}</span>\r\n          :\r\n          <Link key={'bc' + i} to={'/' + d.link}>{d.title}</Link>\r\n          }\r\n          </>);\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  cnr: {\r\n    width: '100%',\r\n    MarginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n  sep:{\r\n    marginRight: 10,\r\n    marginLeft: 10\r\n  },\r\n  link: {\r\n\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    content: {\r\n      backgroundColor: COLOR.INVERSE\r\n    },\r\n    row: {\r\n      // flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n      // backgroundColor: COLOR.INVERSE,\r\n      borderBottomColor: COLOR.HR_COLOR,\r\n      borderBottomWidth: 1,\r\n      'border-bottom-style': 'solid',\r\n      marginTop: 5,\r\n      // marginBottom: 10,\r\n      // paddingLeft: 10,\r\n      // paddingRight: 10,\r\n      // borderRadius: 10\r\n    },\r\n    ele: {\r\n      // flexDirection: 'row',\r\n      alignItems: 'flex-start',\r\n      marginTop: 1,\r\n      marginBottom: 3,\r\n      padding: 2\r\n    }\r\n  };","export const styles = {   \r\n  addIcon: {\r\n    width: 20,\r\n    height: 20,\r\n    cursor: 'pointer'\r\n  },  \r\n  editIcon: {\r\n      width: 20,\r\n      height: 20,\r\n      cursor: 'pointer'\r\n    }, \r\n    deleteIcon: {\r\n      width: 18,\r\n      height: 20,\r\n      cursor: 'pointer'\r\n    },\r\n    closeIcon: {\r\n      width: 17,\r\n      height: 17,\r\n      cursor: 'pointer'\r\n    },\r\n    datePicker: {\r\n      width: 20,\r\n      height: 23,\r\n      cursor: 'pointer'\r\n    }\r\n  };\r\n  ","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport RadioButton from '../common/radio-button';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IMember } from '../../models/home/member';\r\nimport { styles } from '../../styles/page';\r\nimport { styles as iconStyles } from '../../styles/icon';\r\nimport { styles as modelStyles } from '../../styles/model';\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => void,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class Members extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSave(member, this.props.user, this.props.homeIndex, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n            Toast.success('Member saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n          }\r\n        });\r\n    }else{\r\n      // Toast.warn('Please fill all the required fields before '+ (this.state.id > 0 ? 'Update' : 'Save') + '.');\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.homeIndex, this.props.user, this.props.users, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Member removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove member.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Members', link: 'members'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-member')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n      {isNN(this.props.user.homes[this.props.homeIndex].members) ?\r\n        this.props.user.homes[this.props.homeIndex].members.map((d: IMember, i: number) => {\r\n          return(\r\n            (this.state.isEdit === true && this.state.id === d._id) ?\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n                <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n                <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                  <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: false,\r\n                    id: '',\r\n                    number: '',\r\n                    name: '',\r\n                    age: 0,\r\n                    gender: '',\r\n                    mobileNo: '',\r\n                    emailId: '',\r\n                    type: 'OWNER',\r\n                    role: 'USER'\r\n                  });\r\n                }}>\r\n                  <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n            :\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                <Text>{d.name}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n              </View>\r\n              {isNN(d.mobileNo) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.emailId) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.emailId}</Text>\r\n              </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                <Text>{d.type}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d._id,\r\n                    number: d.number,\r\n                    name: d.name,\r\n                    age: d.age,\r\n                    gender: d.gender,\r\n                    mobileNo: d.mobileNo,\r\n                    emailId: d.emailId,\r\n                    type: d.type,\r\n                    role: d.role\r\n                  });\r\n                }}>\r\n                  <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Member found!!!</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUsers } from '../models/store/users';\r\nimport { IUser } from '../models/user/user';\r\nimport { IMember } from '../models/home';\r\nimport { save, remove } from '../store/actions/member';\r\nimport Page from '../components/home/members';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    users: state.Users,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, scallback)),\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, scallback: (result: boolean) => void) => dispatch(remove(id, homeIndex, user, users, scallback))\r\n});\r\n\r\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\n// import { CheckBox  } from 'react-native-elements';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IMember } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class NewMember extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSave(member, this.props.user, this.props.homeIndex, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Member saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Members', link: 'members'}, {title: 'New Member', link: 'new-member'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IMember } from '../models/home';\r\nimport { save } from '../store/actions/member';\r\nimport Page from '../components/home/new-member';\r\n////import { number } from 'prop-types';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, scallback))\r\n});\r\n\r\nexport const NewMember = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'vehicle';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IVehicle, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let vehicles = user.homes[homeIndex].vehicles;\r\n        var foundIndex = vehicles.findIndex(d => d._id === result.data);\r\n        vehicles[foundIndex]._id = result.data;\r\n        vehicles[foundIndex].number = data.number;\r\n        vehicles[foundIndex].type = data.type;\r\n        user.homes[homeIndex].vehicles = vehicles;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n  new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      data._id = result.data;\r\n      data.createdBy = user.name;\r\n      let vehicles = user.homes[homeIndex].vehicles;\r\n      vehicles.push(data);\r\n      user.homes[homeIndex].vehicles = vehicles;\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].vehicles = user.homes[homeIndex].vehicles.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Text, Image, TextInput, } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN } from '../../util/index';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string, \r\n  number: string, \r\n  type: string\r\n};\r\n\r\nexport default class Vehicles extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '', \r\n      number: '', \r\n      type: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.number) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let vehicle = {\r\n          _id: this.state.id,\r\n          number: this.state.number,\r\n          type: this.state.type\r\n        } as IVehicle;\r\n        this.props.onSave(vehicle, this.props.user, this.props.homeIndex, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              number: '',\r\n              type: ''\r\n            });\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Vehicle removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove vehicle.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Vehicles', link: 'vehicles'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-vehicle')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n        {isNN(this.props.user.homes[this.props.homeIndex].vehicles) ?\r\n          this.props.user.homes[this.props.homeIndex].vehicles.map((d: IVehicle, i: number) => {\r\n            return(\r\n              (this.state.isEdit === true && this.state.id === d._id) ?\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <RadioButton isActive={this.state.type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => this.setState({type: 'TWO WHEELER'})} />\r\n                  <RadioButton isActive={this.state.type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => this.setState({type: 'FOUR WHEELER'})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      number: '', \r\n                      type: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>                  \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.number}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      number: d.number,\r\n                      type: d.type\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No Vehicle found!!!</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVehicle } from '../models/home';\r\nimport { save, remove } from '../store/actions/vehicle';\r\nimport Page from '../components/home/vehicles';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, scallback))\r\n});\r\n\r\nexport const Vehicles = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string, \r\n  number: string, \r\n  type: string\r\n};\r\n\r\nexport default class NewVehicle extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '', \r\n      number: '', \r\n      type: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.number) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let vehicle = {\r\n          _id: this.state.id,\r\n          number: this.state.number,\r\n          type: this.state.type\r\n        } as IVehicle;\r\n        this.props.onSave(vehicle, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              type: ''\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Vehicles', link: 'vehicles'}, {title: 'New Vehicle', link: 'new-vehicle' }]} />  \r\n        <View style={modelStyles.container}>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => this.setState({type: 'TWO WHEELER'})} />\r\n            <RadioButton isActive={this.state.type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => this.setState({type: 'FOUR WHEELER'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVehicle } from '../models/home';\r\nimport { save } from '../store/actions/vehicle';\r\nimport Page from '../components/home/new-vehicle';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback))\r\n});\r\n\r\nexport const NewVehicle = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IServent } from '../../models/home/servent';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'servent';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IServent, user: IUser, homeIndex:number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let servents = user.homes[homeIndex].servents;\r\n        var foundIndex = servents.findIndex(d => d._id === result.data);\r\n        servents[foundIndex]._id = result.data;\r\n        servents[foundIndex].name = data.name;\r\n        servents[foundIndex].age = data.age;\r\n        servents[foundIndex].gender = data.gender;\r\n        servents[foundIndex].mobileNo = data.mobileNo;\r\n        servents[foundIndex].emailId = data.emailId;\r\n           \r\n        user.homes[homeIndex].servents = servents;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        let servents = user.homes[homeIndex].servents;\r\n        servents.push(data);\r\n        user.homes[homeIndex].servents = servents;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].servents = user.homes[homeIndex].servents.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Text, Image, TextInput } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServent } from '../../models/home/servent';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN } from '../../util/index';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class Servents extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let servent = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : ''\r\n        } as IServent;\r\n        this.props.onSave(servent, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: ''\r\n            });\r\n            Toast.success('Servent saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servent.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Servent removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove servent.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Servents', link: 'servents'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-servent')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n        {isNN(this.props.user.homes[this.props.homeIndex].servents) ?\r\n          this.props.user.homes[this.props.homeIndex].servents.map((d: IServent, i: number) => {\r\n            return(\r\n              (this.state.isEdit === true && this.state.id === d._id) ?\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n                  <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      name: '',\r\n                      age: 0,\r\n                      gender: '',\r\n                      mobileNo: '',\r\n                      emailId: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>          \r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      name: d.name,\r\n                      age: d.age,\r\n                      gender: d.gender,\r\n                      mobileNo: d.mobileNo,\r\n                      emailId: d.emailId\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No Servent found!!!</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IServent } from '../models/home';\r\nimport { save, remove } from '../store/actions/servent';\r\nimport Page from '../components/home/servents';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, scallback))\r\n});\r\n\r\nexport const Servents = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServent } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class NewServent extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let servent = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : ''\r\n        } as IServent;\r\n        this.props.onSave(servent, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: ''\r\n            });\r\n            // this.props..navigation.goBack(null)\r\n            Toast.success('Servent saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servent.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Servents', link: 'servents'}, {title: 'New Servent', link: 'new-servent' }]} />  \r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={3} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IServent } from '../models/home';\r\nimport { save } from '../store/actions/servent';\r\nimport Page from '../components/home/new-servent';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback))\r\n});\r\n\r\nexport const NewServent = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\n\r\nlet controller: string = 'ticket';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getTicketsResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      dispatch(getTicketsResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Tickets.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n            arrTickets[foundIndex]._id = result.data;\r\n            arrTickets[foundIndex].title = data.title;\r\n            arrTickets[foundIndex].description = data.description;\r\n            arrTickets[foundIndex].status = data.status;\r\n            arrTickets[foundIndex].updatedBy = user.name;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n          arrTickets[foundIndex]._id = result.data;\r\n          arrTickets[foundIndex].title = data.title;\r\n          arrTickets[foundIndex].description = data.description;\r\n          arrTickets[foundIndex].status = data.status;\r\n          arrTickets[foundIndex].updatedBy = user.name;\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              _homeId: user.homes[homeIndex].number,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      // }\r\n      // if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n      //   user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n      //   dispatch(getUserResult(user as IUser));\r\n      // }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const resolve = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/resolve/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const start = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  let newStatus = 'IN-PROGRESS';\r\n  new Api().put(controller + '/start/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          arrTickets = tickets.data;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n          arrTickets[foundIndex].status = newStatus;\r\n          dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        let arrTickets = user.homes[homeIndex].tickets;\r\n        var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n        arrTickets[foundIndex].status = newStatus;\r\n        user.homes[homeIndex].tickets = arrTickets;\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  },{\r\n    status: newStatus\r\n  });\r\n};\r\n\r\nexport const addComment = (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(isNN(comment._id)){\r\n    new Api().put(controller + '/comment/' + comment._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n            var commentIndex = arrTickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n            // arrTickets[ticketIndex].comments[commentIndex] = result.data;\r\n            arrTickets[ticketIndex].comments[commentIndex] = comment;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n          var commentIndex = user.homes[appUser.homeIndex].tickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n          user.homes[appUser.homeIndex].tickets[ticketIndex].comments[commentIndex] = comment;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }else{\r\n    new Api().post(controller + '/comment/' + ticketId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment._id = result.data;\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n              // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n              //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n              // }\r\n              arrTickets[ticketIndex].comments.unshift(comment);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n            // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n            //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n            // }\r\n            user.homes[appUser.homeIndex].tickets[ticketIndex].comments.unshift(comment);\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }\r\n};\r\n\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateString } from '../../util/convert';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  data: Array<ITicket>,\r\n  isEdit: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string,\r\n  status: string,\r\n  viewId: string,\r\n  comments: Array<ITicketComment>,\r\n  comment: string\r\n};\r\n\r\nexport default class Tickets extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      data: [],\r\n      isEdit: false,\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      status: 'INIT',\r\n      viewId: '',\r\n      comments: [],\r\n      comment: ''\r\n    }\r\n    // this.getTickets = this.getTickets.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onResolve = this.onResolve.bind(this);\r\n    this.onStart = this.onStart.bind(this);\r\n    this.onView = this.onView.bind(this);\r\n    this.onAddComment = this.onAddComment.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) ? '' : this.props.user.homes[this.props.appUser.homeIndex]._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        // data: this.getTickets()\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Tickets.');\r\n      }\r\n    });\r\n    /*\r\n    if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoadAll(this.props.user.client._id, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          data: this.getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoadAllByHome(this.props.user, this.props.appUser.homeIndex, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          data: this.getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }\r\n    */\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  /*\r\n  getTickets = () => {\r\n    if(this.props.appUser.role === ROLE.USER) {\r\n      return isNN(this.props.user.homes[this.props.appUser.homeIndex].tickets) ? this.props.user.homes[this.props.appUser.homeIndex].tickets : [];\r\n    }else if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      return (this.props.tickets.isUpToDate && !this.props.tickets.isError && isNN(this.props.tickets.data)) ? this.props.tickets.data : [];\r\n    }else{\r\n      return [];\r\n    }\r\n  };\r\n  */\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ticket = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          status: this.state.status\r\n        } as ITicket;\r\n        this.props.onSave(ticket, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              title: '',\r\n              description: '',\r\n              status: 'INIT',\r\n              viewId: '',\r\n              comments: [],\r\n              comment: ''\r\n            });\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onResolve = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to resolve ticket',\r\n      message: 'Are you sure you wish to resolve this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onResolve(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket resolved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to resolve ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onStart = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to start ticket',\r\n      message: 'Are you sure you wish to start this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onStart(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket started successfully.');\r\n              }else{\r\n                Toast.fail('Failed to start ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        comments: [],\r\n        comment: ''\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        comments: comments,\r\n        comment: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  onAddComment = (id: string) => {\r\n    if(isNN(this.state.comment)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onAddComment(id, {\r\n        _id: '',\r\n        // ticketId: id, \r\n        comment: this.state.comment,\r\n        createdBy: this.props.user.name,\r\n        createdAt: new Date()\r\n      } as ITicketComment, this.props.appUser, this.props.user, this.props.tickets, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          this.setState({\r\n            comment: ''\r\n          });\r\n          Toast.success('Comment added successfully.');\r\n        }else{\r\n          Toast.fail('Failed to add comment.');\r\n        }\r\n      });\r\n  }else{\r\n    Toast.warn('Please fill comment before Add.');\r\n  }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Tickets', link: 'tickets'}]} />\r\n        {\r\n          this.props.appUser.role === ROLE.USER &&\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('new-ticket')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n        }\r\n        {(isNNObject(this.props.tickets) && this.props.tickets.isUpToDate && !this.props.tickets.isError && isNN(this.props.tickets.data)) ?\r\n        this.props.tickets.data.map((d: ITicket, i: number) => {\r\n            return(\r\n              <View key={'tkt' + i} style={styles.row}>\r\n               <View style={styles.ele}>\r\n                  <Text>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  {(this.state.isEdit && this.state.id === d._id) ?\r\n                    <TextInput type='text' placeholder='Title' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n                    :\r\n                    <Text>{d.title}</Text>\r\n                  }\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  {(this.state.isEdit && this.state.id === d._id) ?\r\n                    <TextArea placeholder='Description' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n                    :\r\n                    <Text>{d.description}</Text>\r\n                  }\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.status}</Text>\r\n                </View>\r\n                {(this.state.isEdit && this.state.id === d._id) ?\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      title: '',\r\n                      description: '',\r\n                      status: 'INIT',\r\n                      viewId: '',\r\n                      comments: [],\r\n                      comment: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n                :\r\n                <View style={styles.ele}>\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      title: d.title,\r\n                      description: d.description,\r\n                      status: 'INIT',\r\n                      viewId: '',\r\n                      comments: [],\r\n                      comment: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                }\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                }\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.onResolve(d._id);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>RESOLVE</Text>\r\n                  </TouchableHighlight>\r\n                }\r\n                {((this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) && d.status === 'INIT') &&\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.onStart(d._id);\r\n                }}>\r\n                  <Text className='pointer' style={{color: COLOR.SECONDARY}}>START</Text>\r\n                </TouchableHighlight>\r\n                }\r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onView(d._id, d.comments);\r\n                }}>\r\n                  <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n                </TouchableHighlight>\r\n                </View>\r\n                }\r\n                {this.state.viewId === d._id &&\r\n                <View style={myStyles.cmntsCnr}>\r\n                  <View style={myStyles.cmntsHdr}>\r\n                    <Text style={myStyles.cmntsHdrTxt}>Comments</Text>\r\n                  </View>\r\n                  <View style={myStyles.cmntsCnt}>\r\n                    {isNN(this.state.comments) ?\r\n                      this.state.comments.map((e, j) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? myStyles.cmntCnrFst : myStyles.cmntCnr}>\r\n                          <View style={myStyles.cmntHdr}>\r\n                            <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{e.comment}</Text>\r\n                          </View>\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No Comments found!!!</Text>\r\n                    }\r\n                    <View style={myStyles.addCmntCnt}>\r\n                      <TextArea placeholder='Comment Text' className='form-control' style={{...CommonStyles.textInput, ...myStyles.newCmnt}} value={this.state.comment} onChange={(event: any) => this.setState({comment: event.target.value})} />\r\n                      <View style={myStyles.saveBtn}>\r\n                        <Button\r\n                          title='ADD COMMENT'\r\n                          onPress={() => this.onAddComment(d._id)}\r\n                          />\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>{(this.props.tickets.isUpToDate ? (this.props.tickets.isError ? this.props.tickets.errorMessage : \"No Ticket found!!!\") : \"Loading...\")}</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst myStyles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    marginTop: 3,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  },\r\n  addCmntCnt: {\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  newCmnt:{\r\n    width: '100%',\r\n    borderWidth: 1,\r\n    borderColor: COLOR.HR_COLOR\r\n  },\r\n  saveBtn:{\r\n    marginTop: 5\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { ITicketComment } from '../models/home/ticket-comment';\r\nimport { loadAll, save, remove, resolve, start, addComment } from '../store/actions/ticket';\r\nimport Page from '../components/home/tickets';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, homeId, callback)),\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, scallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, tickets, scallback)),\r\n    onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(resolve(id, user, homeIndex, tickets, scallback)),\r\n    onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(start(id, user, homeIndex, tickets, scallback)),\r\n    onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) =>  dispatch(addComment(ticketId, comment, appUser, user, tickets, callback))\r\n});\r\n\r\nexport const Tickets = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, Text, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string,\r\n  status: string\r\n};\r\n\r\nexport default class NewTicket extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      status: 'INIT'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ticket = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          status: this.state.status\r\n        } as ITicket;\r\n        this.props.onSave(ticket, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              title: '',\r\n              description: '',\r\n              status: 'INIT'\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Tickets', link: 'tickets'}, {title: 'New Ticket', link: 'new-ticket' }]} />  \r\n        {this.props.appUser.role === ROLE.USER ?\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, this.onSave);\r\n              }} />\r\n            </View>\r\n            {/* <View style={modelStyles.row}>\r\n              <Text>{this.state.status}</Text>\r\n            </View> */}\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <Text>Only User can Add New Ticket. If you have USER role and you want to add new ticket change your role to User from settings->My Role and try again.</Text>\r\n            </View>\r\n          </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { save } from '../store/actions/ticket';\r\nimport Page from '../components/home/new-ticket';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, scallback))\r\n});\r\n\r\nexport const NewTicket = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  key: string,\r\n  className: string,\r\n  onPress: () => void\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Checkbox extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    isActive: false,\r\n    text: '',\r\n    key: '',\r\n    className: '',\r\n    onPress: () => {}\r\n  }\r\n  render() {\r\n    return (\r\n      <span className={this.props.className} style={styles.container}>\r\n        <input type='checkbox' key={this.props.key} checked={this.props.isActive} onClick={this.props.onPress} />\r\n        <label style={styles.text}>{this.props.text}</label>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    // flexDirection: 'row',\r\n    marginRight: 10\r\n  },\r\n  circle: {\r\n    height: 24,\r\n    width: 24,\r\n    // borderRadius: 12,\r\n    borderWidth: 2,\r\n    borderColor: COLOR.PRIMARY,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  dot: {\r\n    height: 12,\r\n    width: 12,\r\n    // borderRadius: 6,\r\n    backgroundColor: COLOR.PRIMARY\r\n  },\r\n  text: {\r\n    marginLeft: 5\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Image, Text } from '../../common/elements';\r\nimport Checkbox from '../../common/checkbox';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport { isNN } from '../../../util/index';\r\nimport { FILE_BASE_PATH, ROLE } from '../../../constants';\r\nimport Button from '../../common/button';\r\nimport { toDateTimeString } from '../../../util/convert';\r\nimport { COLOR } from '../../../constants';\r\n\r\ninterface IProps {\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onActiveChange: () => void,\r\n  onEnter: (id: string) => void,\r\n  onExit: (id: string) => void,\r\n  onApprove: (id: string) => void,\r\n  onReject: (id: string) => void\r\n};\r\n\r\ninterface IState{\r\n  isZoomImage: boolean,\r\n  zoomImage: string\r\n};\r\n\r\nexport default class VisitorsView extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isZoomImage: false,\r\n      zoomImage: '',\r\n    }\r\n    this.onToggleZoomImage = this.onToggleZoomImage.bind(this);\r\n  };\r\n  static defaultProps = {\r\n    onEnter: () => {},\r\n    onExit: () => {},\r\n    onApprove: () => {},\r\n    onReject: () => {}\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onToggleZoomImage = (isZoom: boolean) => {\r\n    this.setState({\r\n      isZoomImage: isZoom\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(<>\r\n      <View style={pageStyles.row}>\r\n        <Text>{'No of ' + (this.props.isActive ? 'Active' : '') + ' Visitors: ' + this.props.data.length}</Text>\r\n        {this.props.appUser.role !== ROLE.GATEKEEPER &&\r\n        <Checkbox isActive={this.props.isActive} text='Only Active Visitors' onPress={this.props.onActiveChange} className='fr' />\r\n        }\r\n      </View>\r\n      <View className='fl' style={styles.cardContainer}>\r\n        {isNN(this.props.data) ?\r\n        this.props.data.map((d: IVisitor, i: number) => {\r\n          return(\r\n            <View key={i} className='fl' style={styles.card}>\r\n              {isNN(d.image) &&\r\n              <View className='center'>\r\n                <Image src={FILE_BASE_PATH + d.image} className='pointer' style={styles.img} onClick={() => this.setState({isZoomImage: true, zoomImage: d.image})} />\r\n              </View>  \r\n              }\r\n              <View style={styles.content}>\r\n                <View style={pageStyles.ele}>\r\n                  <Text className='bold'>{d.name + ' [' + d.type + ']'}</Text>\r\n                </View>\r\n                {(d.age > 0 || isNN(d.gender)) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : 'Female') : '')}</Text>\r\n                </View>\r\n                }\r\n                <View style={pageStyles.ele}>\r\n                  To <Text className='bold'>{d.homeNumber}</Text> on <Text className='bold'>{toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                {(!d.isEntered && !d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <Text>{((d.gateNo) ? 'In gate ' + d.gateNo + ' by ': 'By ') + d.createdBy}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.mobileNo) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                {(!d.isApproved && !d.isRejected && !d.isEntered) && \r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.PRIMARY}}>WAITING FOR APPROVAL</View>\r\n                </View>\r\n                }\r\n                {(d.isApproved || d.isRejected ) && \r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: (d.isApproved ? COLOR.SUCCESS : COLOR.ERROR)}}>{d.isApproved ? 'APPROVED' : 'REJECTED'}</View>\r\n                  <View>{'By ' + d.approvedBy}</View>\r\n                  <View>{'On ' + toDateTimeString(d.approvedAt)}</View>\r\n                </View>\r\n                }\r\n                {d.isEntered &&\r\n                <View style={pageStyles.ele}>\r\n                  <View>{'Entry By ' + d.enteredBy + ' in gate ' + d.gateNo}</View>\r\n                  <View>{'On ' + toDateTimeString(d.enteredAt)}</View>\r\n                </View>\r\n                }\r\n                {(d.isApproved && !d.isEntered) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.ERROR}}>NOT ENTERED</View>\r\n                </View>\r\n                }\r\n                {(!d.isRejected && d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View>{'Exit By ' + d.exitBy + ' in gate ' +  d.exitGateNo}</View>\r\n                  <View>{'On ' + toDateTimeString(d.exitAt)}</View>\r\n                </View>\r\n                }\r\n                {(d.isEntered && !d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.ERROR}}>STAYING IN</View>\r\n                </View>\r\n                }\r\n                {this.props.appUser.role === ROLE.GATEKEEPER &&\r\n                <View style={pageStyles.ele} className='center'>\r\n                  {(!d.isEntered && !d.isRejected) && <Button title='Enter' onPress={() => { this.props.onEnter(d._id) }} />}\r\n                  {((d.isEntered || d.isRejected) && !d.isExit) && <Button title={d.isRejected ? 'Remove' : 'Exit'} onPress={() => { this.props.onExit(d._id) }} />}\r\n                </View>\r\n                }\r\n                {(this.props.appUser.role === ROLE.USER && !d.isApproved && !d.isRejected && !d.isEntered) &&\r\n                <View style={pageStyles.ele} className='center'>\r\n                  <Button title='Approve' style={{marginRight: '10px'}} onPress={() => { this.props.onApprove(d._id) }} />\r\n                  <Button title='Reject' onPress={() => { this.props.onReject(d._id) }} />\r\n                </View>\r\n                }\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Visitor found!!!</Text>\r\n      }\r\n      </View>\r\n      <Modal\r\n          open={this.state.isZoomImage}\r\n          onClose={() => this.onToggleZoomImage(false)}>\r\n          <View className='center'>\r\n            <Image src={FILE_BASE_PATH + this.state.zoomImage} style={{ height: '50%', width: '50%' }} />\r\n          </View>\r\n        </Modal>\r\n    </>\r\n    );\r\n  }\r\n};\r\n\r\nexport const styles = {\r\n  cardContainer: {\r\n    flex: 1, \r\n    width: '100%',\r\n    padding: 10,\r\n    marginBottom: 10\r\n  },\r\n  card: {\r\n    flex: 1, \r\n    margin: 15\r\n  },\r\n  img:{\r\n    // width: 25,\r\n    height: '25vh',\r\n    margin: 0,\r\n    borderRadius: '50%',\r\n    marginBottom: '-25px'\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 10,\r\n    paddingTop: '25px',\r\n    borderColor: COLOR.HR_COLOR,\r\n    borderWidth: 1,\r\n    'border-style': 'solid',\r\n    borderRadius: 10,\r\n  }\r\n};","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../styles/page\";\r\nimport Toast from  '../../util/toast';\r\nimport VisitorsView from './gatekeeper/visitors-view'\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  void,\r\n  onApprove: (id: string, callback: (result: boolean) => void) => void,\r\n  onReject: (id: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true,\r\n      isLoading: false\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n    this.onApprove = this.onApprove.bind(this);\r\n    this.onReject = this.onReject.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, this.props.user.homes[this.props.appUser.homeIndex]._id, this.state.isActive, (result: Array<IVisitor>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n  \r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n  \r\n  onApprove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Approve Visitor Entry',\r\n      message: 'Are you sure you wish to Approve the visitor to Enter?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onApprove(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isApproved = true;\r\n                this.state.data[foundIndex].approvedBy = this.props.user.name;\r\n                this.state.data[foundIndex].approvedAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor approved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to approve the entry of visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onReject = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Reject Visitor Entry',\r\n      message: 'Are you sure you wish to reject visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReject(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isRejected = true;\r\n                this.state.data[foundIndex].approvedBy = this.props.user.name;\r\n                this.state.data[foundIndex].approvedAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor rejected successfully.');\r\n              }else{\r\n                Toast.fail('Failed to reject visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={pageStyles.content}>\r\n        <Breadcrum data={[{title: 'Visitors', link: 'visitors'}]} />\r\n        <VisitorsView data={this.state.data} isActive={this.state.isActive} user={this.props.user} appUser={this.props.appUser} onActiveChange={this.onActiveChange} onApprove={this.onApprove} onReject={this.onReject} />\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { loadAll, approve, reject } from '../store/actions/visitor';\r\n\r\nimport { IVisitor } from '../models/home';\r\nimport Page from '../components/home/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, isActive, sCallback, fCallback)),\r\n    onApprove: (id: string, callback: (result: boolean) => void) => dispatch(approve(id, callback)),\r\n    onReject: (id: string, callback: (result: boolean) => void) => dispatch(reject(id, callback))\r\n});\r\n\r\nexport const Visitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, password: string, newPassword: string, scallback: (result: boolean, message: string) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  password: string,\r\n  newPassword: string,\r\n  confirmNewPassword: string\r\n};\r\n\r\nexport default class ChangePassword extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      password: '',\r\n      newPassword: '',\r\n      confirmNewPassword: ''\r\n    }\r\n    this.passwordPolicyCheck = this.passwordPolicyCheck.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  passwordPolicyCheck = (p: string) => {\r\n    let anUpperCase = /[A-Z]/;\r\n    let aLowerCase = /[a-z]/; \r\n    let aNumber = /[0-9]/;\r\n    let aSpecial = /[!|@|#|$|%|^|&|*|(|)|-|_]/;\r\n    let result = \"\";\r\n\r\n    if(p.length < 6){\r\n      result=\"New Password not long enough!\"\r\n        return result;\r\n    }\r\n\r\n    var numUpper = 0;\r\n    var numLower = 0;\r\n    var numNums = 0;\r\n    var numSpecials = 0;\r\n    for(var i=0; i<p.length; i++){\r\n        if(anUpperCase.test(p[i]))\r\n            numUpper++;\r\n        else if(aLowerCase.test(p[i]))\r\n            numLower++;\r\n        else if(aNumber.test(p[i]))\r\n            numNums++;\r\n        else if(aSpecial.test(p[i]))\r\n            numSpecials++;\r\n    }\r\n\r\n    if(numUpper < 1 || numLower < 1 || numNums < 1 || numSpecials < 1){\r\n      result=\"New Password dose not match with password policy!\";\r\n        return result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onUpdate = () => {\r\n    if(isNN(this.state.password) && isNN(this.state.newPassword) && isNN(this.state.confirmNewPassword)){\r\n      if(this.state.newPassword === this.state.confirmNewPassword){\r\n        let policyResult = this.passwordPolicyCheck(this.state.newPassword);\r\n        if(policyResult.length < 1){\r\n          this.setState({\r\n            isLoading: true\r\n          });\r\n          this.props.onUpdate(this.props.user._id, this.state.password, this.state.newPassword, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              Toast.success('Password updated successfully. Please login with your new password.');\r\n              this.props.onLogout((result: boolean) => {\r\n              });\r\n            }else{\r\n              Toast.fail(message);\r\n            }\r\n          });\r\n        }else{\r\n          Toast.warn(policyResult);\r\n        }\r\n      }else{\r\n        Toast.warn('New Password and Confirm New Password not matchs.');\r\n      }\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n          <Breadcrum data={[{title: 'Change Password', link: 'change-password'}]} />\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.password} onChange={(event: any) => this.setState({password: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='New Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.newPassword} onChange={(event: any) => this.setState({newPassword: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='Confirm New Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.confirmNewPassword} onChange={(event: any) => this.setState({confirmNewPassword: event.target.value})}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, this.onUpdate);\r\n              }} />\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={this.onUpdate}\r\n              />\r\n            </View>\r\n            <View style={{ marginTop: 7 }}>\r\n              <Text>Note: Password should contain adleast one uppercase, one lowercase, one number and one special character.</Text>\r\n            </View>\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { changePassword, logout } from '../store/actions/account';\r\n\r\nimport Page from '../components/home/change-password';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => dispatch(changePassword(userId, password, newPassword, callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const ChangePassword = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  name: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class MyProfile extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      name: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.user.name,\r\n      mobileNo: this.props.user.mobileNo,\r\n      emailId: this.props.user.emailId\r\n    });\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onUpdate = () => {\r\n    if(isNN(this.state.name) && isNN(this.state.mobileNo) && isNN(this.state.emailId)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.props.user._id, this.state.name, this.state.mobileNo, (this.state.emailId ? this.state.emailId.toLowerCase() : ''), this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          Toast.success('Profile updated successfully.');\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n          <Breadcrum data={[{title: 'My Profile', link: 'my-profile'}]} />\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, this.onUpdate);\r\n              }} />\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={this.onUpdate}\r\n              />\r\n            </View>\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { updateProfile } from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-profile';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updateProfile(userId, name, mobileNo, emailId, user, callback))\r\n});\r\n\r\nexport const MyProfile = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Picker } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onUpdate: (role: string, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  role: string\r\n};\r\n\r\nexport default class MyRole extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      role: ''\r\n    }\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      role: this.props.appUser.role,\r\n    });\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onUpdate = () => {\r\n    if(isNN(this.state.role)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.state.role, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          Toast.success('Role updated successfully.');\r\n          this.props.history.push('my-role')\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select role before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n          <Breadcrum data={[{title: 'My Role', link: 'my-role'}]} />\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <Picker\r\n                className='form-control'\r\n                value={this.state.role}\r\n                style={modelStyles.ele}\r\n                onChange={(event: any) => this.setState({role: event.target.value})}>\r\n                  {\r\n                  this.props.user.role.split(',').map((d: string, i: number) => {\r\n                    return(<option key={'role' + i} value={d}>{d}</option>);\r\n                  })\r\n                  }\r\n              </Picker>\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={this.onUpdate}\r\n              />\r\n            </View>\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { updateRole} from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-role';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (role: string, callback: (result: boolean, message: string) => void) => dispatch(updateRole(role, callback))\r\n});\r\n\r\nexport const MyRole = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IUser } from '../../models/user';\r\nimport { IAd } from '../../models/ad';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'ad';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getAdResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getAdResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let foundIndex = ads.findIndex(d => d._id === result.data);\r\n        ads[foundIndex]._id = result.data;\r\n        ads[foundIndex].title = data.title;\r\n        ads[foundIndex].description = data.description;\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          ads.unshift({\r\n            _id: result.data,\r\n            title: data.title,\r\n            description: data.description,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IAd);\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      ads = ads.filter((d, i) => d._id !== id);\r\n      dispatch(getAdResult(ads, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onLoad: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string\r\n};\r\n\r\nexport default class Ads extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      title: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ad = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description\r\n        } as IAd;\r\n        this.props.onSave(this.props.user.client._id, ad, this.props.user, this.props.ads.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              title: '',\r\n              description: ''\r\n            });\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.ads.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ad removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ad.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Ads', link: 'ads'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-ad')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n      {(this.props.ads.isUpToDate && !this.props.ads.isError && isNN(this.props.ads.data)) ?\r\n        this.props.ads.data.map((d: IAd, i: number) => {\r\n          return(\r\n            (this.state.isEdit === true && this.state.id === d._id) ?\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                  <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: false,\r\n                    id: '',\r\n                    title: '',\r\n                    description: ''\r\n                  });\r\n                }}>\r\n                  <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n            :\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.title}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d._id,\r\n                    title: d.title,\r\n                    description: d.description\r\n                  });\r\n                }}>\r\n                  <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{(this.props.ads.isUpToDate ? (this.props.ads.isError ? this.props.ads.errorMessage : \"No Ad found!!!\") : \"Loading...\")}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { loadAll, save, remove } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/ads';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, callback)),\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback)),\r\n    onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(remove(id, ads, callback))\r\n});\r\n\r\nexport const Ads = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string\r\n};\r\n\r\nexport default class NewAd extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      title: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ad = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description\r\n        } as IAd;\r\n        this.props.onSave(this.props.user.client._id, ad, this.props.user, this.props.ads.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              title: '',\r\n              description: ''\r\n            });\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Ads', link: 'ads'}, {title: 'New Ad', link: 'new-ad'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { save } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/new-ad';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback))\r\n});\r\n\r\nexport const NewAd = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IUserHome } from '../../../models/user-home';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IMember>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Users extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.getHomes = this.getHomes.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getHomes = (userId: string) => {\r\n    let homes = '';\r\n    if((this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)) && (this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data))){\r\n      let homeIds = [] as Array<string>;\r\n      this.props.userHomes.data.filter(uh => uh.userId === userId).map((uh: IUserHome, i: number) => homeIds.push(uh.homeId));\r\n      this.props.homes.data.filter(d => homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n    }\r\n    return homes;\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      let homes = this.props.homes.data.filter(h => h.number.toLocaleLowerCase() === searchText);\r\n      this.setState({\r\n        searchResult: this.props.users.data.filter(d => (d.name + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.mobileNo + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.emailId + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.number + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (isNN(homes.filter(h => h.memberIds.indexOf(d._id) >= 0)))),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.appUser.homeIndex, this.props.user, this.props.users, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('User removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove user.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Users', link: 'users'}]} />\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-user/0/false')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('approve-users')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right', marginRight: 15}}>View Users Waiting for Approval</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search User\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSearch);\r\n            }} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IMember, i: number) => {\r\n            return(\r\n              <View key={'usr' + i} style={styles.row}>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'User Id: ' + (isNN(d.number) ? d.number : '')}</Text>                  \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Mobile No: ' + (isNN(d.mobileNo) ? d.mobileNo : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Email: ' + (isNN(d.emailId) ? d.emailId : '')}</Text>         \r\n                </View> */}\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Owner Name: ' + (isNN(d.ownername) ? d.ownername : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Owner Mobile No: ' + (d.ownermobile > 0 ? d.ownermobile : '')}</Text>         \r\n                </View> */}\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Role: ' + (isNN(d.type) ? d.type.replace(/,/g, ', ') : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Home(s): ' + this.getHomes(d._id)}</Text>         \r\n                </View> */}\r\n                {(d._id !== this.props.user._id) &&\r\n                  <View style={styles.ele}>\r\n                    <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                      this.props.history.push('edit-user/' + d._id + '/false');////TODO\r\n                      // this.props.navigation.navigate('EditUser', {id: d._id});\r\n                      // this.setState({\r\n                      //   isEdit: true,\r\n                      //   id: d.id\r\n                      // });\r\n                    }}>\r\n                      <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                    </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                  </View>\r\n                }\r\n              </View>\r\n              \r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No user match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IUsers } from '../models/store/users';\r\nimport { removeByAM } from '../store/actions/member';\r\n\r\nimport Page from '../components/home/manager/users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => dispatch(removeByAM(id, homeIndex, user, users, callback))\r\n});\r\n\r\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'home';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IHome>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      result.data.forEach((h: any) => {\r\n        h.memberIds = h.members;\r\n        delete h.members;\r\n      });\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Homes.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNN(result.data._id)) {\r\n      result.data.memberIds = result.data.members;\r\n      delete result.data.members;\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Home.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n          var foundIndex = homes.data.findIndex(d => d._id === result.data);\r\n          homes.data[foundIndex]._id = result.data;\r\n          homes.data[foundIndex].number = data.number;\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n            homes.data.push({\r\n              _id: result.data,\r\n              // name: name,\r\n              number: data.number\r\n            } as IHome);\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const checkNumberAvail = (id: string, number: string, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().get(controller + '/checkno/' + number, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes = user.homes.filter((d, i) => d._id !== id);\r\n      homes.data = homes.data.filter((d, i) => d._id !== id);\r\n      ////userHomes.data = userHomes.data.filter((d, i) => d.homeId !== id);\r\n      dispatch(getUserResult(user));\r\n      dispatch(getHomesResult(homes.data, true, false, \"\"));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IUserHome } from '../../../models/user-home';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IHome>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Users extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.getUsers = this.getUsers.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getUsers = (homeId: string) => {\r\n    let users = '';\r\n    if((this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)) && (this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data))){\r\n      let userIds = [] as Array<string>;\r\n      this.props.userHomes.data.filter(uh => uh.homeId === homeId).map((uh: IUserHome, i: number) => userIds.push(uh.userId));\r\n      this.props.users.data.filter(d => userIds.indexOf(d._id) >= 0).map((u: IMember, i: number) => users += (users.length > 0 ? ', ' : '') + u.name);\r\n    }\r\n    return users;\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      this.setState({\r\n        searchResult: this.props.homes.data.filter(d => (d.number + '').toLocaleLowerCase().indexOf(searchText) >= 0),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homes, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('Home removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove home.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Homes', link: 'homes'}]} />\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-home/0')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search Home\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSearch);\r\n            }} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IHome, i: number) => {\r\n            return(\r\n              <View key={'home' + i} style={styles.row}>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <Text>{'Number: ' + d.number}</Text>         \r\n                </View>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Address: ' + (isNN(d.address) ? d.address : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'User(s): ' + this.getUsers(d._id)}</Text>         \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('view-home/' + d._id);\r\n                    // this.props.navigation.navigate('ViewHome', {id: d._id});\r\n                  }}>\r\n                    <Image src={Images.view} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('edit-home/' + d._id);\r\n                    // this.props.navigation.navigate('EditHome', {id: d._id});\r\n                    // this.setState({\r\n                    //   isEdit: true,\r\n                    //   id: d.id\r\n                    // });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No home match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { remove } from '../store/actions/home';\r\n\r\nimport Page from '../components/home/manager/homes';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => dispatch(remove(id, user, homes, callback))\r\n});\r\n\r\nexport const Homes = connect(mapStateToProps, mapDispatchToProps)(Page);","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  mListCnr: {\r\n    borderColor: COLOR.SECONDARY, \r\n    borderWidth: 1,\r\n    height: '50%'\r\n  },\r\n  mListActiveRow: {\r\n    padding: 3,\r\n    backgroundColor: COLOR.SECONDARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid',\r\n    width: '100%',\r\n    marginBottom: '1px'\r\n  },\r\n  mListRow: {\r\n    padding: 3,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid',\r\n    width: '100%',\r\n    marginBottom: '1px'\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { ScrollView, TouchableHighlight, View, TextInput, Text, Image } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport { styles as commonStyles} from '../../../styles/common';\r\nimport { styles as mlistStyles} from '../../../styles/mlist';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR, ROLE } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Images from '../../images';\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  homeIds: Array<string>,\r\n  role: {\r\n    isAdmin: boolean,\r\n    isManager: boolean,\r\n    isGatekeeper: boolean,\r\n    isUser: boolean\r\n  },\r\n  isShowHomes: boolean\r\n};\r\n\r\nexport default class EditUser extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      homeIds: [],\r\n      role: {\r\n        isAdmin: false,\r\n        isManager: false,\r\n        isGatekeeper: false,\r\n        isUser: false\r\n      },\r\n      isShowHomes: false\r\n    }\r\n    this.getHomes = this.getHomes.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onToggleHomeModel = this.onToggleHomeModel.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let userId = this.props.match.params.id;\r\n    if(userId.length > 0 && userId !== '0'){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(userId, (result: IMember, homeIds: Array<string>) => {\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            isLoading: false,\r\n            id: result._id,\r\n            number: result.number,\r\n            name: result.name,\r\n            age: result.age,\r\n            gender: result.gender,\r\n            mobileNo: result.mobileNo,\r\n            emailId: result.emailId,\r\n            type: result.type,\r\n            homeIds: homeIds,\r\n            role: {\r\n              isAdmin: (',' + result.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n              isManager: (',' + result.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n              isGatekeeper: (',' + result.role + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n              isUser: (',' + result.role + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n            }\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load User.');\r\n        }\r\n      }, (message: string) => {\r\n        Toast.fail(isNN(message) ? message : 'Failed to load User.');\r\n      });\r\n    }\r\n\r\n    /*\r\n    if(userId > 0 && (this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data))){\r\n      let users = this.props.users.data.filter((u: IUser, i: number) => u._id === userId);\r\n      if(isNNObject(users) && users.length > 0){\r\n        let homeIds = [] as Array<string>;\r\n        if(this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data)){\r\n          this.props.userHomes.data.filter((uh: IUserHome, i: number) => uh.userId === userId).map(uh => {\r\n            homeIds.push(uh.homeId);\r\n          });\r\n        }\r\n        this.setState({\r\n          id: users[0]._id,\r\n          name: users[0].name,\r\n          mobileNo: users[0].mobileNo,\r\n          emailId: users[0].emailId,\r\n          ////ownername: users[0].ownername,\r\n          ////ownermobile: users[0].ownermobile,\r\n          homeIds: homeIds,\r\n          role: {\r\n            isAdmin: (',' + users[0].type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n            isManager: (',' + users[0].type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n            isGatekeeper: (',' + users[0].type + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n            isUser: (',' + users[0].type + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n          }\r\n        });\r\n      }\r\n    }\r\n    */\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getHomes = () => {\r\n    let homes = '';\r\n    if(isNN(this.state.homeIds) && (this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data))){\r\n      this.props.homes.data.filter(d => this.state.homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n    }\r\n    return homes;\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n      let role = '';\r\n      if(this.state.role.isAdmin){\r\n        role = ROLE.ADMIN\r\n      }\r\n      if(this.state.role.isManager){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.MANAGER\r\n      }\r\n      if(this.state.role.isGatekeeper){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.GATEKEEPER\r\n      }\r\n      if(this.state.role.isUser){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.USER\r\n      }\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: role\r\n        } as IMember;\r\n        this.props.onSave(member, this.state.homeIds, this.props.user, this.props.users, this.props.match.params.isApprove === 'true', (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              homeIds: [],\r\n              role: {\r\n                isAdmin: false,\r\n                isManager: false,\r\n                isGatekeeper: false,\r\n                isUser: false\r\n              }\r\n            });\r\n            Toast.success('User saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save user.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onToggleHomeModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowHomes: isShow\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Users', link: 'users'}, {title: 'Edit User', link: 'edit-user/0'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>Role: </Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Checkbox isActive={this.state.role.isAdmin} text={ROLE.ADMIN} onPress={() => {\r\n              this.state.role.isAdmin = !this.state.role.isAdmin;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isManager} text={ROLE.MANAGER} onPress={() => {\r\n              this.state.role.isManager = !this.state.role.isManager;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isGatekeeper} text={ROLE.GATEKEEPER} onPress={() => {\r\n              this.state.role.isGatekeeper = !this.state.role.isGatekeeper;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isUser} text={ROLE.USER} onPress={() => {\r\n              this.state.role.isUser = !this.state.role.isUser;\r\n              this.setState({});\r\n            }} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Home(s): ' + this.getHomes()}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isShowHomes: true\r\n              });\r\n             }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          {(this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)) &&\r\n          <Modal\r\n          open={this.state.isShowHomes}\r\n          onClose={() => this.onToggleHomeModel(false)}>\r\n            <View style={popupStyles.container}>\r\n              <ScrollView style={{...mlistStyles.mListCnr, maxHeight: '50%'}}>\r\n                {\r\n                  this.props.homes.data.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text key={'home' + i} style={(this.state.homeIds.indexOf(d._id) >= 0 ? mlistStyles.mListActiveRow : mlistStyles.mListRow)} onClick={() => {\r\n                        if(this.state.homeIds.indexOf(d._id) >= 0){\r\n                          this.setState({\r\n                            homeIds: this.state.homeIds.filter(e => e !== d._id)\r\n                          });\r\n                        }else{\r\n                          this.state.homeIds.push(d._id);\r\n                          this.setState({});\r\n                        }\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n                </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title={this.props.match.params.isApprove === 'true' ? 'Approve' : 'SAVE'}\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IMember } from '../models/home';\r\nimport { IUsers } from '../models/store/users';\r\nimport { load, saveByAM } from '../store/actions/member';\r\nimport Page from '../components/home/manager/edit-user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => dispatch(saveByAM(data, homeIds, user, users, isApprove, callback))\r\n});\r\n\r\nexport const EditUser = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport Spinner from '../../common/spinner';\r\nimport { IMember } from '../../../models/home/member';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport Toast from  '../../../util/toast';\r\nimport { isNN } from '../../../util';\r\nimport { toDateTimeString } from '../../../util/convert';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  onLoad: (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onReject: (id: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IMember>,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class ApproveUsers extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoading: false\r\n    }\r\n    this.onApprove = this.onApprove.bind(this);\r\n    this.onReject = this.onReject.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad((result: Array<IMember>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  onApprove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Approve',\r\n      message: 'You want to Approve the user?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.props.history.push('edit-user/' + id + '/true');\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onReject = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Reject',\r\n      message: 'You want to Reject the user?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReject(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                this.setState({\r\n                  data: this.state.data.filter(v => v._id !== id)\r\n                });\r\n                Toast.success('User rejected successfully.');\r\n              }else{\r\n                Toast.fail('Failed to reject the user.');\r\n              }\r\n            }); \r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Users', link: 'users'}, {title: 'Users Waiting for Approval', link: 'approve-users'}]} />\r\n        {isNN(this.state.data) ?\r\n        this.state.data.map((d: IMember, i: number) => {\r\n          return(\r\n            <View key={i} style={pageStyles.row}>\r\n              <View style={pageStyles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.name}</Text>\r\n              </View>\r\n              {(d.age > 0 || isNN(d.gender)) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : 'Female') : '')}</Text>\r\n              </View>\r\n              }\r\n              <View style={pageStyles.ele}>\r\n                On <Text style={{fontWeight: 'bold'}}>{toDateTimeString(d.createdAt)}</Text>\r\n              </View>\r\n              {isNN(d.mobileNo) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.emailId) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n              }\r\n              <View style={pageStyles.ele}>\r\n                <Button title='Approve' style={{marginRight: '10px'}} onPress={() => { this.onApprove(d._id); }} />\r\n                <Button title='Reject' onPress={() => { this.onReject(d._id); }} />\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No users found!!!</Text>\r\n      }\r\n      <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { loadWFAUsers, reject } from '../store/actions/member';\r\nimport { IMember } from '../models/home';\r\n\r\nimport Page from '../components/home/manager/approve-users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadWFAUsers(sCallback, fCallback)),\r\n    onReject: (id: string, callback: (result: boolean) => void) => dispatch(reject(id, callback))\r\n});\r\n\r\nexport const ApproveUsers = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { TouchableHighlight, ScrollView, View, TextInput, Text, Image, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from '../../../styles/page';\r\nimport { styles as modelStyles } from '../../../styles/model';\r\nimport {styles as commonStyles} from '../../../styles/common';\r\nimport { styles as mlistStyles} from '../../../styles/mlist';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Images from '../../images';\r\nimport { styles as iconStyles } from '../../../styles/icon';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => void,\r\n  onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n\tblockId: string,\r\n\tnumber: string,\r\n\taddress: string,\r\n  bedRoom: number,\r\n  parking: string,\r\n  description: string,\r\n  members: Array<string>,\r\n  isShowUsers: boolean\r\n};\r\n\r\nexport default class EditHome extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      blockId: '',\r\n      number: '',\r\n      address: '',\r\n      bedRoom: 1,\r\n      parking: '',\r\n      description: '',\r\n      members: [],\r\n      isShowUsers: false\r\n    }\r\n    this.getUsers = this.getUsers.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onToggleUserModel = this.onToggleUserModel.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let homeId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    if(homeId.length > 0 && homeId !== '0'){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(homeId, (result: IHome) => {\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            isLoading: false,\r\n            id: result._id,\r\n            blockId: result._blockId,\r\n            number: result.number,\r\n            address: result.address,\r\n            bedRoom: result.bedRoom,\r\n            parking: result.parking,\r\n            description: result.description,\r\n            members: result.memberIds\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load Home.');\r\n        }\r\n      }, (message: string) => {\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Home.');\r\n      });\r\n    }\r\n    \r\n    /*\r\n    if(homeId > 0 && (this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data))){\r\n      let homes = this.props.homes.data.filter((u: IHome, i: number) => u._id === homeId);\r\n      if(isNNObject(homes) && homes.length > 0){\r\n        let members = [] as Array<string>;\r\n        if(this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data)){\r\n          this.props.userHomes.data.filter((uh: IUserHome, i: number) => uh.homeId === homeId).map(uh => {\r\n            members.push(uh.userId);\r\n          });\r\n        }\r\n        this.setState({\r\n          id: homes[0]._id,\r\n          blockId: homes[0]._blockId,\r\n          number: homes[0].number,\r\n          address: homes[0].address,\r\n          bedRoom: homes[0].bedRoom,\r\n          parking: homes[0].parking,\r\n          description: homes[0].description,\r\n          members: members\r\n        });\r\n      }\r\n    }\r\n    */\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getUsers = () => {\r\n    let users = '';\r\n    if(isNN(this.state.members) && (this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data))){\r\n      this.props.users.data.filter(d => this.state.members.indexOf(d._id) >= 0).map((u: IMember, i: number) => \r\n        users += (users.length > 0 ? ', ' : '') + u.name + (isNN(u.number) ? '(' + u.number + ')' : '')\r\n      );\r\n    }\r\n    return users;\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.blockId) && isNN(this.state.number)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      /*\r\n      this.props.onCheckNumberAvail(this.state.id, this.state.number, (result: boolean) => {\r\n        if(result === true){\r\n          */\r\n         let home = {\r\n           _id: this.state.id,\r\n           _blockId: this.state.blockId,\r\n           number: this.state.number,\r\n           address: this.state.address,\r\n           bedRoom: this.state.bedRoom,\r\n           parking: this.state.parking,\r\n           description: this.state.description,\r\n           memberIds: this.state.members\r\n         } as IHome;\r\n          this.props.onSave(home, this.props.user, this.props.homes, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                id: '',\r\n                blockId: '',\r\n                number: '',\r\n                address: '',\r\n                bedRoom: 1,\r\n                parking: '',\r\n                description: '',\r\n                members: []\r\n              });\r\n              Toast.success('Home saved successfully.');\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to save home.');\r\n            }\r\n          });\r\n          /*\r\n        }else{\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          Toast.warn('Home with same Number already available. Please change the home number.');\r\n        }\r\n      });\r\n      */\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onToggleUserModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowUsers: isShow\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Homes', link: 'homes'}, {title: 'Edit Home', link: 'edit-home/0'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <Picker\r\n            className='form-control'\r\n            value={this.state.blockId}\r\n            style={modelStyles.ele}\r\n            onChange={(event: any) => this.setState({blockId: event.target.value})}>\r\n              <option key={'block0'} value=''>Select Block</option>\r\n              {(this.props.blocks && this.props.blocks.isUpToDate && !this.props.blocks.isError && isNN(this.props.blocks.data)) &&\r\n                this.props.blocks.data.map((d: IBlock, i: number) => {\r\n                  return(<option key={'block' + i} value={d._id}>{d.name}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Address\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.address} onChange={(event: any) => this.setState({address: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>No of bed rooms: </Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.bedRoom === 1} text='1' onPress={() => this.setState({bedRoom: 1})} />\r\n            <RadioButton isActive={this.state.bedRoom === 2} text='2' onPress={() => this.setState({bedRoom: 2})} />\r\n            <RadioButton isActive={this.state.bedRoom === 3} text='3' onPress={() => this.setState({bedRoom: 3})} />\r\n            <RadioButton isActive={this.state.bedRoom === 4} text='4' onPress={() => this.setState({bedRoom: 4})} />\r\n            <RadioButton isActive={this.state.bedRoom === 5} text='5' onPress={() => this.setState({bedRoom: 5})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Parking\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.parking} onChange={(event: any) => this.setState({parking: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Description\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'User(s): ' + this.getUsers()}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isShowUsers: true\r\n              });\r\n             }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          {(this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)) &&\r\n          <Modal\r\n          open={this.state.isShowUsers}\r\n          onClose={() => this.onToggleUserModel(false)}>\r\n            <View style={popupStyles.container}>\r\n              <ScrollView style={{...mlistStyles.mListCnr, maxHeight: '50%'}}>\r\n              {\r\n                this.props.users.data.map((d: IMember, i: number) => {\r\n                  return(\r\n                    <Text key={'user' + i} style={(this.state.members.indexOf(d._id) >= 0 ? mlistStyles.mListActiveRow : mlistStyles.mListRow)} onClick={() => {\r\n                      if(this.state.members.indexOf(d._id) >= 0){\r\n                        this.setState({\r\n                          members: this.state.members.filter(e => e !== d._id)\r\n                        });\r\n                      }else{\r\n                        this.state.members.push(d._id);\r\n                        this.setState({});\r\n                      }\r\n                    }}>{d.name + (d.number ? '(' + d.number + ')' : '')}</Text>\r\n                  )\r\n                })\r\n              }\r\n              </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { IHome } from '../models/home';\r\nimport { IUser } from '../models/user';\r\nimport { load, save, checkNumberAvail } from '../store/actions/home';\r\nimport Page from '../components/home/manager/edit-home';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => dispatch(save(data, user, homes, callback)),\r\n    onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => dispatch(checkNumberAvail(id, number, callback))\r\n});\r\n\r\nexport const EditHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport Toast from  '../../../util/toast';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport VisitorsView from './visitors-view'\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onEnter: (id: string, gateNo: string, callback: (result: boolean) => void) => void,\r\n  onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true,\r\n      isLoading: false\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n    this.onEnter = this.onEnter.bind(this);\r\n    this.onExit = this.onExit.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, '', this.state.isActive, (result: Array<IVisitor>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n\r\n  onEnter = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Allow Visitor Entry',\r\n      message: 'Are you sure you wish to Allow the visitor to Enter?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onEnter(id, this.props.gateNo, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isEntered = true;\r\n                this.state.data[foundIndex].enteredBy = this.props.user.name;\r\n                this.state.data[foundIndex].enteredAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor entered successfully.');\r\n              }else{\r\n                Toast.fail('Failed to allow the entry of visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onExit = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Exit Visitor',\r\n      message: 'Are you sure you wish to exit visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onExit(id, this.props.gateNo, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                this.setState({\r\n                  data: this.state.data.filter(v => v._id !== id)\r\n                });\r\n                Toast.success('Visitor exit successfully.');\r\n              }else{\r\n                Toast.fail('Failed to exit visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={pageStyles.content}>\r\n        <Breadcrum data={[{title: 'Visitors', link: 'all-visitors'}]} />\r\n        <VisitorsView data={this.state.data} isActive={this.state.isActive} user={this.props.user} appUser={this.props.appUser} onActiveChange={this.onActiveChange} onEnter={this.onEnter} onExit={this.onExit} />\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IVisitor } from '../models/home';\r\nimport { loadAll, enter, exit } from '../store/actions/visitor';\r\n\r\nimport Page from '../components/home/gatekeeper/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    homes: state.Homes,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, isActive, sCallback, fCallback)),\r\n    onEnter: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(enter(id, gateNo, callback)),\r\n    onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(exit(id, gateNo, callback))\r\n});\r\n\r\nexport const AllVisitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { INotification } from '../../../models/notification';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN, isNNObject, onEnter } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => void,\r\n  onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  data: Array<INotification>,\r\n  title: string,\r\n  body: string\r\n};\r\n\r\nexport default class Notification extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      data: [],\r\n      title: '',\r\n      body: ''\r\n    }\r\n    this.onPush = this.onPush.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (result: Array<INotification>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onPush = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.body)){\r\n      confirmAlert({\r\n        title: 'Confirm to send push notification',\r\n        message: 'Are you sure? This notification will send to all users using this app in your Appartment. Are you sure you want to Push?',\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n              this.setState({\r\n                isLoading: true\r\n              });\r\n              let notification = {\r\n                title: this.state.title,\r\n                body: this.state.body\r\n              } as INotification;\r\n              this.props.onPush(this.props.user.client._id, notification, this.props.user, (result: INotification | null) => {\r\n                this.setState({\r\n                  isLoading: false,\r\n                });\r\n                if(isNNObject(result)){\r\n                  let data = this.state.data;\r\n                  data.unshift(result as INotification);\r\n                  this.setState({\r\n                    data: data,\r\n                    title: '',\r\n                    body: ''\r\n                  });\r\n                  Toast.success('Notification pushed successfully.');\r\n                }else{\r\n                  Toast.fail('Failed to push Notification.');\r\n                }\r\n              });\r\n            }\r\n          },\r\n          {\r\n            label: 'No',\r\n            onClick: () => {}\r\n          }\r\n        ]\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Push.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Notification', link: 'notification'}]} />\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n        </View>\r\n        <View style={modelStyles.row}>\r\n          <TextArea placeholder=\"Body\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.body} onChange={(event: any) => this.setState({body: event.target.value})}\r\n          onKeyPress={(e) => {\r\n            onEnter(e, this.onPush);\r\n          }} />\r\n        </View>\r\n        <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n            <Button\r\n            style={{marginRight: 10}}\r\n            title=\"PUSH\"\r\n            onPress={this.onPush}\r\n            />\r\n            <Button\r\n            title=\"CLEAR\"\r\n            onPress={() => {\r\n              this.setState({\r\n                title: '',\r\n                body: ''\r\n              });\r\n            }}\r\n            />\r\n        </View>\r\n      {(isNN(this.state.data)) ?\r\n        this.state.data.map((d: INotification, i: number) => {\r\n          return(\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.body}</Text>\r\n              </View>\r\n              <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                <Button title=\"Duplicate\" onPress={() => {\r\n                  this.setState({\r\n                    title: d.title,\r\n                    body: d.body\r\n                  });\r\n                }} />\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Nofification found!!!</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { INotification } from '../models/notification';\r\nimport { loadAll, push } from '../store/actions/notification';\r\nimport Page from '../components/home/manager/notification';\r\nimport { IUser } from '../models/user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, sCallback, fCallback)),\r\n    onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => dispatch(push(appClientId, data, user, callback))\r\n});\r\n\r\nexport const Notification = connect(mapStateToProps, mapDispatchToProps)(Page);","import { INotification } from '../../models/notification';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { IUser } from '../../models/user';\r\n\r\nlet controller: string = 'notification';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Notification.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const push = (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => (dispatch: any) => {  \r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback({\r\n        _id: result.data,\r\n        title: data.title,\r\n        body: data.body,\r\n        createdBy: user.name,\r\n        createdAt: new Date()\r\n      } as INotification);\r\n    }else{\r\n      callback(null);\r\n    }\r\n  }, data);\r\n};","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'outing';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getOutingResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getOutingResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    // Not Implemented\r\n        callback(false);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      console.log('result:', result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        outings.data.unshift(data);\r\n        dispatch(getOutingResult(outings.data, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    },data);\r\n  }\r\n};\r\n\r\nexport const retunBack = (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().delete(controller + '/return/' + id, (result: any, message: string) => {\r\n    debugger;\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      var foundIndex = outings.data.findIndex(d => d._id === id);\r\n      outings.data[foundIndex].isReturned = true;\r\n      outings.data[foundIndex].returnedAt = new Date();\r\n      dispatch(getOutingResult(outings.data, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getOutingResult = (data: Array<IOuting>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_OUTINGS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IOutings\r\n});","import * as React from 'react';\r\nimport { View, TextInput, TextArea } from '../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, isNNObject, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  outings: IOutings,\r\n  onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  place: string,\r\n  address: string,\r\n  datePickerType: string,\r\n  datePickerDate: Date\r\n};\r\n\r\nexport default class NewOuting extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      fromDate: '',\r\n      toDate: '',\r\n      place: '',\r\n      address: '',\r\n      datePickerType: '',\r\n      datePickerDate: new Date()\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNNObject(this.state.fromDate) && isNNObject(this.state.toDate) && isNN(this.state.place) && isNN(this.state.address)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let outing = {\r\n          ////homeId: this.props.user.home[this.props.appUser.homeIndex].id,\r\n          _homeId: this.props.user.homes[this.props.appUser.homeIndex].number,\r\n          fromDate: this.state.fromDate,\r\n          toDate : this.state.toDate,\r\n          place: this.state.place,\r\n          address: this.state.address,\r\n          isReturned: false,\r\n          createdBy: this.props.user.name,\r\n          createdAt: new Date()\r\n        } as IOuting;\r\n        this.props.onSave(outing, this.props.user.homes[this.props.appUser.homeIndex]._id, this.props.user, this.props.outings, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              fromDate: '',\r\n              toDate: '',\r\n              place: '',\r\n              address: '',\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Outing submitted successfully.');\r\n          }else{\r\n            Toast.fail('Failed to submit Outing.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before submit Outing.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Notice', link: 'notice'}, {title: 'New Outing', link: 'new-outing' }]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Place\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.place} onChange={(event: any) => this.setState({place: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Address\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.address} onChange={(event: any) => this.setState({address: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { IOuting } from '../models/outing';\r\nimport { save } from '../store/actions/outing';\r\nimport Page from '../components/home/new-outing';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    outings: state.Outings\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(save(data, homeId, user, outings, callback))\r\n});\r\n\r\nexport const NewOuting = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user';\r\nimport { IDocument } from '../../models/document';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants';\r\n\r\nlet controller: string = 'document';\r\n\r\nexport const loadAll = (homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getDocumentResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getDocumentResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Documents.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // document.file = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          var foundIndex = documents.findIndex(d => d._id === result.data._id);\r\n          documents[foundIndex]._id = result.data._id;\r\n          ////documents[foundIndex].userId = data.userId;\r\n          ////documents[foundIndex].homeId = data.homeId;\r\n          documents[foundIndex].title = data.title;\r\n          documents[foundIndex].description = data.description;\r\n          documents[foundIndex].file = data.file;\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          documents.unshift({\r\n            _id: result.data._id,\r\n            ////userId: data.userId,\r\n            ////homeId: data.homeId,\r\n            title: data.title,\r\n            description: data.description,\r\n            file: data.file,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IDocument);\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      documents = documents.filter((d, i) => d._id !== id);\r\n      dispatch(getDocumentResult(documents, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getDocumentResult = (data: Array<IDocument>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_DOCUMENTS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IDocuments\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IDocument } from '../../models/document';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { FILE_BASE_PATH } from '../../constants';\r\nimport { isNN, generateUUID } from '../../util/index';\r\nimport { toDateString } from '../../util/convert';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  homeIndex: number,\r\n  user: IUser,\r\n  documents: IDocuments,\r\n  onLoad: (homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  homeId: string,\r\n  title: string,\r\n  description: string,\r\n  fileName: string\r\n};\r\n\r\nexport default class MyDocuments extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onFileSelect = this.onFileSelect.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.homes[this.props.homeIndex]._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Documents.');\r\n      }\r\n    });\r\n  };\r\n\r\n  onFileSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        // upload file to api.\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        this.props.onUpload(data, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false\r\n          });\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }else{\r\n            this.setState({\r\n              fileName: fileName\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.fileName)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        /*\r\n        let data = this.state.data;\r\n        data.id = this.state.id,\r\n        data.userId = this.props.user._id,\r\n        data.homeId = this.state.homeId;\r\n        data.title = this.state.title;\r\n        data.description = this.state.description;\r\n        data.createdBy = this.props.user._id;\r\n        data.createdOn = new Date();\r\n        */\r\n        \r\n        let document = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          file: this.state.fileName,\r\n          createdBy: this.props.user.name,\r\n          createdAt: new Date()\r\n        } as IDocument;\r\n        this.props.onSave(this.state.homeId, document, this.props.homeIndex, this.props.user, this.props.documents.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n              title: '',\r\n              description: '',\r\n              fileName: ''\r\n            });\r\n            Toast.success('Document saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save document.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      id: '',\r\n      homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n    });\r\n  };\r\n  \r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.documents.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Document removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove document.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'My Documents', link: 'my-documents'}]} />\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n        </View>\r\n        <View style={modelStyles.row}>\r\n          <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n        </View>\r\n        {isNN(this.props.user.homes) &&\r\n        <View style={modelStyles.row}>\r\n        <Text style={{marginRight: 10}}>Home:</Text>\r\n        {this.props.user.homes.map((h: IHome, i: number) => {\r\n          return(\r\n            <RadioButton isActive={h._id === this.state.homeId} text={h.number} key={'home' + i} onPress={() => this.setState({homeId: h._id})} />\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n        }\r\n        <View style={modelStyles.row}>\r\n          {/* <Button\r\n              title='Select Document'\r\n              onPress={this.onImageSelect}\r\n              /> */}\r\n              <input type='file' name='file' placeholder='Select Document' onChange={this.onFileSelect}/>\r\n              {isNN(this.state.fileName) &&\r\n              <Text style={{marginLeft: 15}}>{this.state.fileName}</Text>\r\n              }\r\n        </View>\r\n        <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n            <Button\r\n            style={{marginRight: 10}}\r\n            title='SAVE'\r\n            onPress={this.onSave}\r\n            />\r\n            <Button\r\n            title='CLEAR'\r\n            onPress={this.onClear}\r\n            />\r\n        </View>\r\n      {(this.props.documents.isUpToDate && !this.props.documents.isError && isNN(this.props.documents.data)) ?\r\n        this.props.documents.data.map((d: IDocument, i: number) => {\r\n          return(\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n              </View>\r\n              {isNN(d.description) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              }\r\n              {isNN(this.props.user.homes.filter(ho => ho._id === d._id)) &&\r\n              <View style={styles.ele}>\r\n                <Text>{'Home: ' + this.props.user.homes.filter(ho => ho._id === d._id)[0].number}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.file) &&\r\n              <View style={styles.ele}>\r\n                <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n              </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                {/* <TouchableHighlight underlayColor={COLOR.ICON_BTN_UNDERLAY} style={{marginRight: 25}} onPress={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d.id,\r\n                    homeId: d.homeId,\r\n                    title: d.title,\r\n                    description: d.description,\r\n                  });\r\n                }}>\r\n                  <Image source={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight> */}\r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{this.props.documents.isUpToDate ? 'No Documents found!!!' : (this.props.documents.isError ?  this.props.documents.errorMessage : 'No Documents found!!!')}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IDocument } from '../models/document';\r\nimport { loadAll, save, remove } from '../store/actions/documents';\r\nimport { upload } from '../store/actions/file';\r\nimport Page from '../components/home/my-documents';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    homeIndex: state.AppUser.homeIndex,\r\n    user: state.User,\r\n    documents: state.Documents\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(homeId, callback)),\r\n    onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(save(homeId, data, homeIndex, user, documents, callback)),\r\n    onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(remove(id, documents, callback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(upload(data, callback))\r\n});\r\n\r\nexport const MyDocuments = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { IBlock } from '../../models/block/block';\r\nimport { IUser } from '../../models/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util';\r\n\r\nlet controller: string = 'block';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getBlockResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getBlockResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = blocks.findIndex(d => d._id === result.data);\r\n        blocks[foundIndex]._id = result.data;\r\n        blocks[foundIndex].name = data.name;\r\n        blocks[foundIndex].description = data.description;\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        blocks.unshift({\r\n            _id: result.data,\r\n            name: data.name,\r\n            description: data.description,\r\n            createdBy: user.name\r\n          } as IBlock);\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      blocks = blocks.filter((d, i) => d._id !== id);\r\n      dispatch(getBlockResult(blocks, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IBlock>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Blocks extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.blocks.isUpToDate && !this.props.blocks.isError && isNN(this.props.blocks.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      this.setState({\r\n        searchResult: this.props.blocks.data.filter(d => (d.name + '').toLocaleLowerCase().indexOf(searchText) >= 0),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.blocks.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('Home removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove home.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Blocks', link: 'blocks'}]} />\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-block/0')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search Block\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSearch);\r\n            }} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IBlock, i: number) => {\r\n            return(\r\n              <View key={'block' + i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Name: ' + d.name}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Description: ' + (isNN(d.description) ? d.description : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('edit-block/' + d._id);////TODO\r\n                    // this.props.navigation.navigate('EditBlock', {id: d._id});\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No block match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { remove } from '../store/actions/block';\r\nimport Page from '../components/home/manager/blocks';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => dispatch(remove(id, blocks, callback))\r\n});\r\n\r\nexport const Blocks = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as commonStyles} from '../../../styles/common';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n\tname: string,\r\n\tdescription: string\r\n};\r\n\r\nexport default class EditBlock extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      name: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let blockId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    if(blockId.length > 0 && blockId !== '0' && this.props.blocks && isNN(this.props.blocks.data)){\r\n      let block = this.props.blocks.data.filter((d, i) => {\r\n        return d._id === blockId\r\n      });\r\n      if(isNN(block)){\r\n        this.setState({\r\n          id: block[0]._id,\r\n          name: block[0].name,\r\n          description: block[0].description\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n         let block = {\r\n           _id: this.state.id,\r\n           name: this.state.name,\r\n           description: this.state.description\r\n         } as IBlock;\r\n          this.props.onSave(this.props.user.client._id, block, this.props.user, (this.props.blocks && this.props.blocks.data) ? this.props.blocks.data : [], (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                id: '',\r\n                name: '',\r\n                description: ''\r\n              });\r\n              Toast.success('Block saved successfully.');\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to save block.');\r\n            }\r\n          });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Blocks', link: 'blocks'}, {title: 'Edit Block', link: 'edit-block/0'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Description\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View>\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { IUser } from '../models/user';\r\nimport { save } from '../store/actions/block';\r\nimport Page from '../components/home/manager/edit-block';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, blocks, callback))\r\n});\r\n\r\nexport const EditBlock = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, ScrollView, TextInput, Text, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome } from '../../../models/home';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\nimport { COLOR, MONTH } from '../../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  amount: number,\r\n  description: string,\r\n  month: number,\r\n  year: number,\r\n  searchText: string,\r\n  showHomes: boolean,\r\n  isAllHome: boolean,\r\n  homes: Array<IHome>\r\n};\r\n\r\nexport default class PaymentForm extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      amount: 0,\r\n      description: '',\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n      searchText: '',\r\n      showHomes: false,\r\n      isAllHome: false,\r\n      homes: []\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n  };\r\n\r\n  onSave = () => {\r\n    if(this.state.amount > 0 && (this.state.isAllHome || this.state.homes.length > 0)){\r\n      let homeIds = [] as any;\r\n      this.state.homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        amount: this.state.amount,\r\n        description: this.state.description,\r\n        month: this.state.month,\r\n        year: this.state.year,\r\n        isAllHome: this.state.isAllHome,\r\n        homes: homeIds\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onSave(this.props.user.client._id, data, this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          this.setState({\r\n            amount: 0,\r\n            description: '',\r\n            month: new Date().getMonth(),\r\n            year: new Date().getFullYear(),\r\n            searchText: '',\r\n            showHomes: false,\r\n            isAllHome: false,\r\n            homes: []\r\n          });\r\n          Toast.success('Payment saved successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to save payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Save.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({ \r\n      amount: 0,\r\n      description: '',\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n      searchText: '',\r\n      showHomes: false,\r\n      isAllHome: false,\r\n      homes: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Amount\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.amount > 0 ? this.state.amount + '' : ''} onChange={(event: any) => this.setState({amount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={{marginTop: 15}}>{'Payment for ' + this.state.year + ' '}</Text>\r\n            <Picker\r\n              className='form-control'\r\n              value={this.state.month}\r\n              style={ modelStyles.ele}\r\n              onChange={(event: any) => this.setState({month: event.target.value})}>\r\n              {\r\n                MONTH.filter((m, i) => m.value <= new Date().getMonth()).map((m: any, i: number) => {\r\n                  return(<option key={'month' + i} value={m.value}>{m.title}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={{marginRight: 15}}>{'Apply to Home(s): ' + (this.state.isAllHome ? '' : this.state.homes.length)}</Text>\r\n            <Checkbox isActive={this.state.isAllHome} text='All Homes' onPress={() => this.setState({isAllHome: !this.state.isAllHome})} />\r\n          </View>\r\n          {!this.state.isAllHome &&\r\n          <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.state.homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6, color: COLOR.SECONDARY }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          homes: this.state.homes.filter((h, i) => h._id !== d._id)\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n          }\r\n          {!this.state.isAllHome &&\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Enter Home Number\" className='form-control'\r\n            style={{...modelStyles.ele,\r\n              flexDirection: 'row',\r\n              padding: 6,\r\n              borderWidth: 1,\r\n              borderColor: COLOR.HR_COLOR,\r\n              borderRadius: 5\r\n            }}\r\n            value={this.state.searchText} \r\n            onChange={(event: any) => this.setState({showHomes: true, searchText: event.target.value})} />\r\n          </View>\r\n          }\r\n            {(!this.state.isAllHome && this.state.showHomes && isNN(this.state.searchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n              <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.searchText.toLowerCase()) >= 0 && (this.state.homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6}}\r\n                      onClick={() => {\r\n                        let homes = this.state.homes;\r\n                        homes.push(d);\r\n                        this.setState({\r\n                          homes: homes\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n              </ScrollView>\r\n            }\r\n          <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n              <Button\r\n              style={{marginRight: 10}}\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={this.onClear}\r\n              />\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Text, TextInput, ScrollView, TextArea } from '../../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IPayment } from '../../../models/home';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR, MONTH } from '../../../constants';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN } from '../../../util';\r\nimport Toast from '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  isShowSearch: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  datePickerType: string,\r\n  datePickerDate: Date,\r\n  homes: Array<IHome>,\r\n  searchText: string,\r\n  showHomes: boolean,\r\n  data: Array<IPayment>,\r\n  isShowUpdateModel: boolean,\r\n  uPaymentId: string,\r\n  uAmount: number,\r\n  uDescription: string\r\n};\r\n\r\nexport default class PaymentHistory extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isShowSearch: true,\r\n      fromDate: '',\r\n      toDate: '',\r\n      datePickerType: '',\r\n      datePickerDate: new Date(),\r\n      homes: [],\r\n      searchText: '',\r\n      showHomes: false,\r\n      data: [],\r\n      isShowUpdateModel: false,\r\n      uPaymentId: '',\r\n      uAmount: 0,\r\n      uDescription: ''\r\n    };\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(this.state.fromDate && this.state.toDate){\r\n      let homeIds = [] as any;\r\n      this.state.homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        fromDate: this.state.fromDate,\r\n        toDate: this.state.toDate,\r\n        homes: homeIds\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onSearch(this.props.user.client._id, data, this.props.user, (result: Array<IPayment>) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          isShowSearch: false,\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        Toast.fail(message ? message : 'Failed to load payment.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Search.');\r\n    }\r\n  };\r\n\r\n  onUpdate = () => {\r\n    if(isNN(this.state.uPaymentId) && this.state.uAmount > 0){\r\n      let data = {\r\n        amount: this.state.uAmount,\r\n        description: this.state.uDescription,\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.state.uPaymentId, data, this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          let pData = this.state.data;\r\n          var foundIndex = pData.findIndex(d => d._id === this.state.uPaymentId);\r\n          pData[foundIndex].amount = this.state.uAmount;\r\n          pData[foundIndex].description = this.state.uDescription;\r\n          this.setState({\r\n            isShowUpdateModel: false,\r\n            uPaymentId: '',\r\n            uAmount: 0,\r\n            uDescription: '',\r\n            data: pData\r\n          });\r\n          Toast.success('Payment updated successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to update payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          {this.state.isShowSearch ?\r\n          <View>\r\n            <View style={modelStyles.row}>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                this.setState({\r\n                  fromDate: date\r\n                });\r\n              }}\r\n              value={this.state.fromDate}\r\n              />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                this.setState({\r\n                  toDate: date\r\n                });\r\n              }}\r\n              value={this.state.toDate}\r\n              />\r\n          </View>\r\n            <View style={modelStyles.row}>\r\n            <Text style={{marginRight: 15}}>{'Home(s): ' + (this.state.homes.length > 0 ? this.state.homes.length : 'All')}</Text>\r\n          </View>\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.state.homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6, color: COLOR.SECONDARY }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          homes: this.state.homes.filter((h, i) => h._id !== d._id)\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Enter Home Number\" className='form-control'\r\n            style={{...modelStyles.ele,\r\n              flexDirection: 'row',\r\n              padding: 6,\r\n              borderWidth: 1,\r\n              borderColor: COLOR.HR_COLOR,\r\n              borderRadius: 5\r\n            }}\r\n            value={this.state.searchText} \r\n            onChange={(event: any) => this.setState({showHomes: true, searchText: event.target.value})} />\r\n          </View>\r\n            {(this.state.showHomes && isNN(this.state.searchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.searchText.toLowerCase()) >= 0 && (this.state.homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6}}\r\n                      onClick={() => {\r\n                        let homes = this.state.homes;\r\n                        homes.push(d);\r\n                        this.setState({\r\n                          homes: homes\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            }\r\n            <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                <Button\r\n                title=\"SEARCH\"\r\n                onPress={this.onSearch}\r\n                />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View>\r\n             <Text \r\n             className='fr pointer'\r\n             style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right'}}\r\n             onClick={() => {\r\n               this.setState({\r\n                 isShowSearch: true\r\n               });\r\n             }}>Show Search</Text>\r\n          </View>\r\n          }\r\n          <View>\r\n            {(isNN(this.state.data)) ?\r\n              this.state.data.map((d: IPayment, i: number) => {\r\n                return(\r\n                  <View key={i} style={pageStyles.row}>\r\n                    <View style={pageStyles.ele}>\r\n                        <Text style={{fontWeight: 'bold'}}>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text style={{fontWeight: 'bold'}}>{'Rs.' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                    </View>\r\n                    {isNN(d.description) &&\r\n                      <View style={pageStyles.ele}>\r\n                        <Text>{d.description}</Text>\r\n                      </View>\r\n                    }\r\n                    <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                      <Button title=\"Update\" onPress={() => {\r\n                        this.setState({\r\n                          isShowUpdateModel: true,\r\n                          uPaymentId: d._id,\r\n                          uAmount: d.amount,\r\n                          uDescription: d.description\r\n                        });\r\n                      }} />\r\n                    </View>\r\n                  </View>\r\n                )\r\n              })\r\n              :\r\n              <Text style={{padding: 20}}>No Payment found!!!</Text>\r\n            }\r\n          </View>\r\n          <Modal\r\n          open={this.state.isShowUpdateModel}\r\n          onClose={() => {\r\n            this.setState({\r\n              isShowUpdateModel: false,\r\n              uPaymentId: '',\r\n              uAmount: 0,\r\n              uDescription: ''\r\n            });\r\n          }}>\r\n          <View style={popupStyles.container}>\r\n            <View style={popupStyles.content}>\r\n              <View style={modelStyles.row}>\r\n                <TextInput type='text' placeholder=\"Amount\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.uAmount > 0 ? this.state.uAmount + '' : ''} onChange={(event: any) => this.setState({uAmount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View style={modelStyles.row}>\r\n                <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.uDescription} onChange={(event: any) => this.setState({uDescription: event.target.value})} />\r\n              </View>\r\n              <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Button\r\n                  style={{marginRight: 10}}\r\n                  title=\"SAVE\"\r\n                  onPress={this.onUpdate}\r\n                  />\r\n                  <Button\r\n                  title=\"CLEAR\"\r\n                  onPress={() => {\r\n                    this.setState({\r\n                      uAmount: 0,\r\n                      uDescription: ''\r\n                    });\r\n                  }}\r\n                  />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  }\r\n};","import * as React from 'react';\r\nimport { TouchableHighlight, View } from '../../common/elements';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IPayment } from '../../../models/home';\r\nimport { COLOR } from '../../../constants';\r\nimport PaymentForm from './payment-form';\r\nimport PaymentHistory from './payment-history';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  activeTab: number,\r\n  history: Array<IPayment>\r\n};\r\n\r\nexport default class Payment extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1,\r\n      history: []\r\n    }\r\n  };\r\n  \r\n  componentDidMount(){\r\n    /*\r\n    this.props.onLoad(this.props.user.client._id, '', (result: Array<IPayment>) => {\r\n      if(isNN(result)){\r\n        this.setState({\r\n          history: result\r\n        });\r\n      }\r\n    }, (message: string) => {\r\n      Toast.fail(message ? message : 'Failed to load Payments.');\r\n    });\r\n    */\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Payment', link: 'payment'}]} />\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              NEW\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>          \r\n              HISTORY\r\n            </TouchableHighlight>\r\n          </View>\r\n          <View className='tab-content' style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              this.state.activeTab === 1 ? \r\n                <PaymentForm history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} onSave={this.props.onSave} />\r\n              :\r\n                <PaymentHistory history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} onSearch={this.props.onSearch} onUpdate={this.props.onUpdate} />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IPayment } from '../models/home';\r\nimport { loadAll, save, search, updatePay } from '../store/actions/payment';\r\nimport Page from '../components/home/manager/payment';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, homeId, sCallback, fCallback)),\r\n    onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, callback)),\r\n    onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(search(appClientId, data, user, sCallback, fCallback)),\r\n    onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updatePay(id, data, user, callback))\r\n});\r\n\r\nexport const Payment = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { styles as modelStyles } from '../../../../styles/model';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IBlock } from '../../../../models/block';\r\nimport { IHome } from '../../../../models/home';\r\n\r\ninterface IProps {\r\n  blocks: IBlocks,\r\n  data: IHome\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Info extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      homeId: '',\r\n      data: {} as IHome\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { blocks, data } = this.props;\r\n    let blockName = '';\r\n    if(data && isNN(data._id) && blocks && blocks.isUpToDate && !blocks.isError && blocks.data){\r\n      let block = blocks.data.filter((d: IBlock, i: number) => d._id === data._blockId);\r\n      if(block && block.length > 0){\r\n        blockName = block[0].name;\r\n      }\r\n    }\r\n    if(data && isNN(data._id)){\r\n    return(\r\n        <View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Block: ' + blockName}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Number: ' + data.number}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Address: ' + data.address}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'No of bed room(s): ' + data.bedRoom}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Parking: ' + data.parking}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Description: ' + data.description}</Text>\r\n          </View>\r\n        </View>\r\n    );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IMember } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IMember>\r\n};\r\n\r\nexport default class Members extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IMember>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Members.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Members</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IMember, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{(isNN(d.createdBy) ? d.createdBy : '') + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>\r\n                </View>\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IVehicle } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVehicle>\r\n};\r\n\r\nexport default class Vehicles extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IVehicle>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Vehicles</Text>\r\n        </View>\r\n          {isNN(data) ? \r\n            data.map((d: IVehicle, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>                  \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.number}</Text>\r\n                </View>\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IServent } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IServent>\r\n};\r\n\r\nexport default class Servents extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IServent>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Servents.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Servents</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IServent, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TouchableHighlight } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { ITicket } from '../../../../models/home';\r\nimport { ITicketComment } from '../../../../models/home/ticket-comment';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<ITicket>,\r\n  viewId: string,\r\n  comments: Array<ITicketComment>\r\n};\r\n\r\nexport default class Tickets extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      viewId: '',\r\n      comments: []\r\n    }\r\n    this.onView = this.onView.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<ITicket>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        comments: []\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        comments: comments\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Tickets</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: ITicket, i: number) => {\r\n            return(\r\n              <View key={'tkt' + i} style={styles.row}>\r\n               <View style={styles.ele}>\r\n                  <Text>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                    <Text>{d.title}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                    <Text>{d.description}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.status}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onView(d._id, d.comments);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n                  </TouchableHighlight>\r\n                </View>\r\n                {this.state.viewId === d._id &&\r\n                <View style={myStyles.cmntsCnr}>\r\n                  <View style={myStyles.cmntsHdr}>\r\n                    <Text style={myStyles.cmntsHdrTxt}>Comments</Text>\r\n                  </View>\r\n                  <View style={myStyles.cmntsCnt}>\r\n                    {isNN(this.state.comments) ?\r\n                      this.state.comments.map((e: ITicketComment, j: number) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? myStyles.cmntCnrFst : myStyles.cmntCnr}>\r\n                          <View style={myStyles.cmntHdr}>\r\n                            <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{e.comment}</Text>\r\n                          </View>\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No Comments found!!!</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};\r\n\r\n\r\nconst myStyles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    marginTop: 3,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  }\r\n};","import * as React from 'react';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IVisitor } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUser } from '../../../../models/user';\r\nimport VisitorsView from '../../gatekeeper/visitors-view';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { COLOR } from '../../../../constants';\r\nimport { styles } from '../../../../styles/page';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, this.state.isActive, (result: Array<IVisitor>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Visitors.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Visitors</Text>\r\n        </View>\r\n        <VisitorsView data={this.state.data} isActive={this.state.isActive} user={this.props.user} appUser={this.props.appUser} onActiveChange={this.onActiveChange} />\r\n      </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TouchableHighlight } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles as pageStyles } from '../../../../styles/page';\r\nimport { IPayment } from '../../../../models/home';\r\nimport { ITransaction } from '../../../../models/home/transaction';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { MONTH, COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IPayment>,\r\n  viewId: string,\r\n  transactions: Array<ITransaction>\r\n};\r\n\r\nexport default class Payments extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      viewId: '',\r\n      transactions: []\r\n    }\r\n    this.onView = this.onView.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IPayment>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Payments.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onView = (id: string, transactions: Array<ITransaction>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        transactions: []\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        transactions: transactions\r\n      });\r\n    }\r\n  };\r\n\r\n  getAmountPaid = (transactions: Array<ITransaction>) => {\r\n    let amount = 0;\r\n    if(isNN(transactions)){\r\n      transactions.filter((d: ITransaction, i: number) => d.isSuccess === true).map((d:ITransaction, i: number) => amount += d.amount);\r\n    }\r\n    return amount;\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={pageStyles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Payments</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IPayment, i: number) => {\r\n            return(\r\n              <View key={i} style={pageStyles.row}>\r\n                    <View style={pageStyles.ele}>\r\n                        <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text>{'Rs. ' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text>{'Amount Paid Rs. ' + this.getAmountPaid(d.transactions)}</Text>\r\n                    </View>\r\n                    {isNN(d.description) &&\r\n                      <View style={pageStyles.ele}>\r\n                        <Text>{d.description}</Text>\r\n                      </View>\r\n                    }\r\n                    <View style={pageStyles.ele}>\r\n                      <TouchableHighlight style={{}} onClick={() => {\r\n                        this.onView(d._id, d.transactions);\r\n                      }}>\r\n                        <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Transactions'}</Text>\r\n                      </TouchableHighlight>\r\n                    </View>\r\n                    {this.state.viewId === d._id &&\r\n                    <View style={myStyles.cmntsCnr}>\r\n                  <View style={myStyles.cmntsHdr}>\r\n                    <Text style={myStyles.cmntsHdrTxt}>Transactions</Text>\r\n                  </View>\r\n                  <View style={myStyles.cmntsCnt}>\r\n                    {isNN(this.state.transactions) ?\r\n                      this.state.transactions.map((e: ITransaction, j: number) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? myStyles.cmntCnrFst : myStyles.cmntCnr}>\r\n                          <View style={myStyles.cmntHdr}>\r\n                            <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Ref Id: ' + e.txnRef}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Txn Id: ' + e.txnId}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Amount: ' + e.amount}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Status: ' + (e.isSuccess ? 'SUCCESS' : 'FAILED')}</Text>\r\n                          </View>\r\n                          {\r\n                            isNN(e.reason) &&\r\n                            <View style={myStyles.cmntCnt}>\r\n                              <Text>{'Reason: ' + e.reason}</Text>\r\n                            </View>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No transactions found!!!</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                  </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};\r\n\r\nconst myStyles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR, \r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    marginTop: 3,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { FILE_BASE_PATH, COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IDocument>\r\n};\r\n\r\nexport default class Documents extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IDocument>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Documents</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IDocument, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n                </View>\r\n                {isNN(d.description) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.description}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.file) &&\r\n                <View style={styles.ele}>\r\n                <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, TouchableHighlight, Image } from '../../../common/elements';\r\nimport Spinner from '../../../common/spinner';\r\nimport Breadcrum from '../../../common/breadcrum';\r\nimport { IUser } from '../../../../models/user/user';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUsers } from '../../../../models/store/users';\r\nimport { IHomes } from '../../../../models/store/homes';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IHome, IMember, IVehicle, IServent, ITicket, IVisitor, IPayment } from '../../../../models/home';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from  '../../../../util/toast';\r\nimport Images from '../../../images';\r\nimport { COLOR } from '../../../../constants';\r\nimport { isNN } from '../../../../util/index';\r\nimport Info from './info';\r\nimport Members from './members';\r\nimport Vehicles from './vehicles';\r\nimport Servents from './servents';\r\nimport Tickets from './tickets';\r\nimport Visitors from './visitors';\r\nimport Payments from './payments';\r\nimport Documents from './documents';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadServents: (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVisitors: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  homeId: string,\r\n  activeTab: number,\r\n  data: IHome\r\n};\r\n\r\nexport default class ViewHome extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      homeId: '',\r\n      activeTab: 1,\r\n      data: {} as IHome\r\n    }\r\n    this.toggleLoading = this.toggleLoading.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let homeId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    this.setState({\r\n      homeId: homeId\r\n    });\r\n    if(homeId.length > 0){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(homeId, (result: IHome) => {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            data: result\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load Home.');\r\n        }\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Home.');\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleLoading = (isLoading: boolean) => {\r\n    this.setState({\r\n      isLoading: isLoading\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { activeTab } = this.state;\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Homes', link: 'homes'}, {title: 'View Home', link: 'view-home'}]} />\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              <Image src={activeTab === 1 ? Images.infoInv : Images.info} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>          \r\n              <Image src={activeTab === 2 ? Images.membersInv : Images.members} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              <Image src={activeTab === 3 ? Images.vehicleInv : Images.vehicle} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 4})}>\r\n              <Image src={activeTab === 4 ? Images.serventInv : Images.servent} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 5 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 5})}>\r\n              <Image src={activeTab === 5 ? Images.supportInv : Images.support} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 6 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 6})}>\r\n              <Image src={activeTab === 6 ? Images.visitorsInv : Images.visitors} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 7 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 7})}>\r\n              <Image src={activeTab === 7 ? Images.moneyInv : Images.money} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 8 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 8})}>\r\n              <Image src={activeTab === 8 ? Images.documentInv : Images.document} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              activeTab === 1 ?\r\n                  <Info blocks={this.props.blocks} data={this.state.data} />\r\n              :\r\n                activeTab === 2 ?\r\n                  <Members homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadMembers} />\r\n                :\r\n                  activeTab === 3 ?\r\n                    <Vehicles homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadVehicles} />\r\n                  :\r\n                    activeTab === 4 ?\r\n                      <Servents homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadServents} />\r\n                    :\r\n                      activeTab === 5 ?\r\n                        <Tickets homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadTickets} />\r\n                      :\r\n                        activeTab === 6 ?\r\n                          <Visitors appUser={this.props.appUser} user={this.props.user} homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadVisitors} />\r\n                        :\r\n                          activeTab === 7 ?\r\n                            <Payments homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadPayments} />\r\n                          :\r\n                            <Documents homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadDocuments} />\r\n            }            \r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  },\r\n  tabImage: {\r\n    width: 20,\r\n    height: 20\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHome, IMember, IVehicle, IServent, ITicket, IPayment } from '../models/home';\r\nimport { IDocument } from '../models/document';\r\nimport { load } from '../store/actions/home';\r\nimport { loadAllByHome as loadMembers} from '../store/actions/member';\r\nimport { loadAllByHome as loadVehicles } from '../store/actions/vehicle';\r\nimport { loadAllByHome as loadServents } from '../store/actions/servent';\r\nimport { loadAllByHome as loadTickets } from '../store/actions/ticket';\r\nimport { loadAll as loadVisitors } from '../store/actions/visitor';\r\nimport { loadAll as loadPayments } from '../store/actions/payment';\r\nimport { loadAllByHome as loadDocuments } from '../store/actions/documents';\r\nimport Page from '../components/home/manager/view-home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadMembers(homeId, sCallback, fCallback)),\r\n    onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => dispatch(loadVehicles(homeId, sCallback, fCallback)),\r\n    onLoadServents: (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => dispatch(loadServents(homeId, sCallback, fCallback)),\r\n    onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => dispatch(loadTickets(homeId, sCallback, fCallback)),\r\n    onLoadVisitors: (homeId: string, isActive: boolean, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => dispatch(loadVisitors('', homeId, isActive, sCallback, fCallback)),\r\n    onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadPayments('', homeId, sCallback, fCallback)),\r\n    onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => dispatch(loadDocuments(homeId, sCallback, fCallback))\r\n});\r\n\r\nexport const ViewHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IUser } from '../../models/user';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n//import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'poll';\r\n\r\nexport const loadAll = (appClientId: string, userRole: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getPollResult([], false, false, ''));\r\n  // new Api().get(controller + 'loadall/?appClientId=' + appClientId + '&userRole=' + userRole, (result: any, message: string) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getPollResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = polls.findIndex(d => d._id === result.data);\r\n        polls[foundIndex]._id = result.data;\r\n        polls[foundIndex].topic = data.topic;\r\n        polls[foundIndex].description = data.description;\r\n        polls[foundIndex].isAllowMultiple = data.isAllowMultiple;\r\n        polls[foundIndex].isOneVotePerFlat = data.isOneVotePerFlat;\r\n        polls[foundIndex].isAnonymous = data.isAnonymous;\r\n        polls[foundIndex].fromDate = data.fromDate;\r\n        polls[foundIndex].toDate = data.toDate;\r\n        polls[foundIndex].options = data.options;\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        scallback(true);\r\n      }else{\r\n        scallback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      // console.log(\"OUT: \" + result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        polls.unshift(data);\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        scallback(true);\r\n      }else{\r\n        scallback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, polls: Array<IPoll>, userId: string, scallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      polls = polls.filter((d, i) => d._id !== id);\r\n      dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n      scallback(true);\r\n    }else{\r\n      scallback(false);\r\n    }\r\n  }, {\r\n    Id: id,\r\n    UserId: userId\r\n  });\r\n};\r\n\r\nexport const vote = (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/vote/' + pollId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      var foundIndex = polls.data.findIndex(d => d._id === pollId);\r\n      polls.data[foundIndex].votes = result.data;\r\n      dispatch(getPollResult(polls.data, true, false, ''));\r\n\r\n      /*\r\n      // Update home\r\n      if(!isNN(user.homes[appUser.homeIndex].votes)){\r\n        user.home[appUser.homeIndex].vote = [];\r\n      }\r\n      result.data.map((v: IVote, vi: number) => {\r\n        user.home[appUser.homeIndex].vote.push(v);\r\n      });\r\n      dispatch(getUserResult(user));\r\n      */\r\n      // Update polls\r\n      // if(polls.isUpToDate && !polls.isError && isNN(polls.data) && ((',' + user.type + ',').indexOf(ROLE.ADMIN) >= 0 || (',' + user.type + ',').indexOf(ROLE.MANAGER) >= 0)){\r\n        if(polls.isUpToDate && !polls.isError && isNN(polls.data)){\r\n        let lstPoll = polls.data;\r\n        let pollIndex = lstPoll.findIndex(p => p._id === pollId);\r\n        lstPoll[pollIndex].votes = result.data;\r\n        /*\r\n        if(!isNN(lstPoll[pollIndex].votes)){\r\n          lstPoll[pollIndex].vote = [];\r\n        }\r\n        result.data.map((v: IVote, vi: number) => {\r\n          lstPoll[pollIndex].vote.unshift(v);\r\n        });\r\n        */\r\n        dispatch(getPollResult(lstPoll, true, false, \"\"));\r\n      }\r\n     // dispatch(getUserResult(user));\r\n      \r\n      scallback(true);\r\n    }else{\r\n      scallback(false);\r\n    }\r\n  }, {\r\n    votes: votes\r\n  });\r\n};\r\n\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});","import { jsError } from \"./index\";\r\n\r\nexport function percentage(_partialValue: number, _totalValue: number) {\r\n    try{\r\n        if(_totalValue > 0){\r\n            return (100 * _partialValue) / _totalValue;\r\n        }else{\r\n            return 0;\r\n        }\r\n    } catch (ex) {\r\n    jsError(ex, 'calc.percentage'); \r\n    return 0; \r\n  }\r\n };","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Text, Image, TextInput, TextArea } from '../../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IPolls } from '../../../models/store/polls';\r\nimport { IPoll } from '../../../models/poll/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN, isNNObject } from '../../../util/index';\r\nimport { percentage } from '../../../util/calc';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onSave: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, polls: Array<IPoll>, userID: string, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isEdit: boolean,\r\n  isLoading: boolean,\r\n  id: string,\r\n  topic: string,\r\n  description: string,\r\n  isAllowMultiple: boolean,\r\n  isOneVotePerFlat: boolean,\r\n  isAnonymous: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  pollOption: Array<string>,\r\n  showVotePoll: IPoll,\r\n  datePickerType: string,\r\n  datePickerDate: Date\r\n};\r\n\r\nexport default class Poll extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      isLoading: false,\r\n      id: '',\r\n      topic: '',\r\n      description: '',\r\n      isAllowMultiple: false,\r\n      isOneVotePerFlat: false,\r\n      isAnonymous: false,\r\n      fromDate: new Date(),\r\n      toDate: new Date(),\r\n      pollOption: [],\r\n      showVotePoll: { _id: '' } as IPoll,\r\n      datePickerType: '',\r\n      datePickerDate: new Date()\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n   onSave = () => {\r\n    if(isNN(this.state.topic) && isNN(this.state.description) && isNNObject(this.state.fromDate) && isNNObject(this.state.toDate) && isNN(this.state.pollOption.filter(po => isNN(po)))){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let poll = {\r\n          _id: this.state.id,\r\n          topic: this.state.topic,\r\n          description: this.state.description,\r\n          isAllowMultiple: this.state.isAllowMultiple,\r\n          isOneVotePerFlat: this.state.isOneVotePerFlat,\r\n          isAnonymous: this.state.isAnonymous,\r\n          fromDate: this.state.fromDate,\r\n          toDate: this.state.toDate,\r\n          options: this.state.pollOption.filter(po => isNN(po))\r\n        } as IPoll;\r\n        this.props.onSave(this.props.user.client._id, poll, this.props.polls.data, this.props.user, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              topic: '',\r\n              description: '',\r\n              isAllowMultiple: false,\r\n              isOneVotePerFlat: false,\r\n              isAnonymous: false,\r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              pollOption: [],\r\n              showVotePoll: { _id: '' } as IPoll,\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Poll saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save pol.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.polls.data, this.props.user._id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Poll removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove poll.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  loadVotes = () => {\r\n    if(isNNObject(this.state.showVotePoll) && this.state.showVotePoll._id.length > 0){\r\n      let votes = [] as any;\r\n      this.state.showVotePoll.options.map((po: string, poi: number) => \r\n        votes.push({\r\n          option: po,\r\n          votes: this.state.showVotePoll.votes.filter(v => v.option === poi).length\r\n        })\r\n      );\r\n      return(\r\n        <View style={{padding: 15}}>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{this.state.showVotePoll.topic}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{this.state.showVotePoll.description}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{'Votes: ' + this.state.showVotePoll.votes.length}</Text>\r\n          </View>\r\n        {\r\n        votes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n          return(\r\n            <View key={'pvo' + voi} style={styles.ele}>\r\n              <Text>\r\n                {vo.votes + ' (' + percentage(vo.votes, this.state.showVotePoll.votes.length) +  '%) - ' + vo.option}\r\n              </Text>\r\n            </View>\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n      )\r\n    }else{\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n        {this.state.isEdit === false &&\r\n        <View style={styles.row}>\r\n          <Button\r\n          title=\"ADD NEW\"\r\n          onPress={() => {\r\n            this.setState({\r\n              isEdit: true,\r\n              id: '',\r\n              topic: '',\r\n              description: '',\r\n              isAllowMultiple: false,\r\n              isOneVotePerFlat: false,\r\n              isAnonymous: false,\r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              pollOption: [],\r\n              showVotePoll: { _id: '' } as IPoll,\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n             });\r\n          }}\r\n          />\r\n        </View>\r\n        }\r\n        {\r\n         (this.state.isEdit === true && this.state.id.length === 0)  ?\r\n         <View key={\"p0\"} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.topic} onChange={(event: any) => this.setState({topic: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => this.setState({isAllowMultiple: !this.state.isAllowMultiple})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => this.setState({isOneVotePerFlat: !this.state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAnonymous} text='Anonymous Voting' onPress={() => this.setState({isAnonymous: !this.state.isAnonymous})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(this.state.pollOption) ?\r\n            this.state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} style={styles.ele}>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={e} onChange={(event: any) => {\r\n                    let newOptions = this.state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    this.setState({pollOption: newOptions});\r\n                  }} />\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    let newOptions = this.state.pollOption;\r\n                    delete newOptions[j];\r\n                    this.setState({pollOption: newOptions});\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text>No Option found!!!</Text>\r\n            </View>\r\n          }\r\n            <View style={styles.ele}>\r\n              <TouchableHighlight\r\n              onClick={() => {\r\n                if(!isNN(this.state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = this.state.pollOption;\r\n                  newOptions.push('');\r\n                  this.setState({pollOption: newOptions});\r\n                }\r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          <View style={styles.ele}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n              <Image src={Images.tick} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight style={{}} onClick={() => {\r\n              this.setState({\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n        :\r\n        []\r\n        }\r\n      {\r\n      (isNNObject(this.props.polls) && this.props.polls.isUpToDate && !this.props.polls.isError && isNN(this.props.polls.data)) ?      \r\n      this.props.polls.data.map((d: IPoll, i: number) => {\r\n      return(\r\n        (this.state.isEdit === true && this.state.id === d._id) ?\r\n        <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.topic} onChange={(event: any) => this.setState({topic: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => this.setState({isAllowMultiple: !this.state.isAllowMultiple})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => this.setState({isOneVotePerFlat: !this.state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAnonymous} text='Anonymous Voting' onPress={() => this.setState({isAnonymous: !this.state.isAnonymous})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(this.state.pollOption) ?\r\n            this.state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} style={styles.ele}>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={e} onChange={(event: any) => {\r\n                    let newOptions = this.state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    this.setState({pollOption: newOptions});\r\n                  }} />\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    let newOptions = this.state.pollOption;\r\n                    delete newOptions[j];\r\n                    this.setState({pollOption: newOptions});\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text>No Option found!!!</Text>\r\n            </View>\r\n          }\r\n            <View style={styles.ele}>\r\n              <TouchableHighlight\r\n              onClick={() => {\r\n                if(!isNN(this.state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = this.state.pollOption;\r\n                  newOptions.push('');\r\n                  this.setState({pollOption: newOptions});\r\n                }            \r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          <View style={styles.ele}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n              <Image src={Images.tick} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>                \r\n            <TouchableHighlight style={{}} onClick={() => {\r\n              this.setState({\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>        \r\n          </View>\r\n        </View>\r\n        :\r\n        <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{d.topic}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{d.description}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{toDateString(d.fromDate) + \" to \" + toDateString(d.toDate)}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isAllowMultiple === true ? modelStyles.radioActive : {...modelStyles.radio, marginLeft: 5})}\r\n            >\r\n              <Text style={(d.isAllowMultiple === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>Allow Multiple Votes</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isOneVotePerFlat === true ? {...modelStyles.radioActive} : {...modelStyles.radio, marginLeft: 5})}\r\n             >\r\n              <Text style={(d.isOneVotePerFlat === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>One Vote per Flat</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isAnonymous === true ? {...modelStyles.radioActive} : {...modelStyles.radio, marginLeft: 5})}\r\n             >\r\n              <Text style={(d.isAnonymous === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>Anonymous Voting</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(d.options) ?\r\n            d.options.map((e: string, j: number) => {\r\n              return(\r\n                <View key={\"po\" + j} style={styles.ele}>\r\n                  <Text key={\"pot\" + j} style={{width: '100%'}}>{e}</Text>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text style={{padding: 10}}>No Option found!!!</Text> \r\n            </View>           \r\n          }\r\n          <View style={styles.ele}>\r\n          {(d.fromDate > new Date()) &&\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isEdit: true,\r\n                id: d._id,\r\n                topic: d.topic,\r\n                description: d.description,\r\n                isAllowMultiple: d.isAllowMultiple,\r\n                isOneVotePerFlat: d.isOneVotePerFlat,\r\n                isAnonymous: d.isAnonymous,\r\n                fromDate: d.fromDate,\r\n                toDate: d.toDate,\r\n                pollOption: (isNN(d.options) ? d.options : [])\r\n              });\r\n            }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          }\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.onRemove(d._id);\r\n            }}>\r\n              <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>\r\n            <Text className='pointer' style={{color: COLOR.SECONDARY}} onClick={() => {\r\n              this.setState({showVotePoll: d})\r\n            }}>View Votes</Text>\r\n          </View>\r\n        </View>\r\n      )\r\n      })\r\n      :\r\n      <Text style={{padding: 20}}>{(this.props.polls.isUpToDate ? (this.props.polls.isError ? this.props.polls.errorMessage : \"No poll found!!!\") : \"Loading...\")}</Text>\r\n    }\r\n    <Modal\r\n      open={(isNNObject(this.state.showVotePoll) && this.state.showVotePoll._id.length > 0)}\r\n      onClose={() => this.setState({showVotePoll : { _id: '' } as IPoll})}>\r\n      <View style={popupStyles.container}>\r\n        <View style={popupStyles.content}>\r\n        {\r\n          this.loadVotes()\r\n        }\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n    <Spinner visible={this.state.isLoading} />\r\n    </View>  \r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Checkbox from '../common/checkbox';\r\nimport Spinner from '../common/spinner';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { styles } from \"../../styles/page\";\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { percentage } from '../../util/calc';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  votePollId: string,\r\n  votes: Array<IVote>,\r\n  currentDate: Date\r\n};\r\n\r\nexport default class Poll extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    let currentDate = new Date();\r\n    this.state = {\r\n      isLoading: false,\r\n      votePollId: '',\r\n      votes: [],\r\n      currentDate: new Date((currentDate.getMonth() + 1) + '/' + currentDate.getDate() + '/' + currentDate.getFullYear())\r\n    }\r\n    this.loadVotes = this.loadVotes.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  loadVotes = (poll: IPoll) => {\r\n    let votes = [] as any;\r\n    poll.options.map((po: string, poi: number) => \r\n      votes.push({\r\n        option: po,\r\n        votes: poll.votes.filter(v => v.option === poi).length\r\n      })\r\n    );\r\n    return(\r\n    votes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n      return(\r\n        <View key={'pvo' + voi} style={styles.ele}>\r\n          <Text>\r\n            {vo.votes + ' (' + percentage(vo.votes, poll.votes.length) +  '%) - ' + vo.option}\r\n          </Text>\r\n        </View>\r\n      )\r\n    })\r\n    )\r\n  };\r\n\r\n  onSelectOption = (poll: IPoll, optionId: number) => {\r\n    if(this.state.votePollId === poll._id){\r\n      if(isNN(this.state.votes.filter(v => v.option === optionId))){\r\n        this.setState({\r\n          votes: this.state.votes.filter(v => v.option !== optionId)\r\n        });\r\n      }else{\r\n        let votes = [] as Array<IVote>;\r\n        if(poll.isAllowMultiple){\r\n          votes = this.state.votes;\r\n        }\r\n          votes.push({\r\n            _homeId: this.props.user.homes[this.props.appUser.homeIndex]._id,\r\n            _memberId: this.props.user._id,\r\n            option: optionId,\r\n            isActive: true,\r\n            createdBy: this.props.user._id\r\n          } as IVote);\r\n          this.setState({\r\n            votes: votes\r\n          });\r\n        // if(poll.isAllowMultiple || !isNN(this.state.votes.filter(v => v.pollId === poll.id))){\r\n\r\n        // }\r\n      }\r\n    }else{\r\n      let votes = [] as Array<IVote>;\r\n      votes.push({\r\n        _homeId: this.props.user.homes[this.props.appUser.homeIndex]._id,\r\n        _memberId: this.props.user._id,\r\n        option: optionId,\r\n        isActive: true,\r\n        createdBy: this.props.user._id\r\n      } as IVote);\r\n      this.setState({\r\n        votePollId: poll._id,\r\n        votes: votes\r\n      });\r\n    }\r\n  };\r\n\r\n  onVote = (pollId: string) => {\r\n    if(this.state.votePollId === pollId &&  isNN(this.state.votes)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onVote(pollId, this.state.votes, this.props.polls, this.props.user, this.props.appUser, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          this.setState({\r\n            votePollId: '',\r\n            votes: []\r\n          });\r\n          Toast.success('Your vote saved successfully.');\r\n        }else{\r\n          Toast.fail('Failed to save your vote.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select any option to vote.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n      {\r\n        (isNNObject(this.props.polls) && this.props.polls.isUpToDate && !this.props.polls.isError && isNN(this.props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= this.state.currentDate))) ?\r\n        this.props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= this.state.currentDate).map((d: IPoll, i: number) => {\r\n          return(\r\n            <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.topic}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === this.props.user.homes[this.props.appUser.homeIndex]._id))) &&\r\n                d.options.map((o: string, oi: number) => {\r\n                  return(\r\n                    <View key={\"popt\" + oi} style={styles.ele}>\r\n                      <Checkbox isActive={(this.state.votePollId === d._id && isNN(this.state.votes.filter(v => v.option === oi)))} text={o} onPress={() => this.onSelectOption(d, oi)} />\r\n                    </View>\r\n                  )\r\n                })\r\n              }\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === this.props.user.homes[this.props.appUser.homeIndex]._id))) &&\r\n                <View style={{marginTop: 5, width: '100%'}}>\r\n                  <Button title=\"Vote\" onPress={() => this.onVote(d._id)} style={{width: '100%'}} />\r\n                </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>Your Votes:</Text>\r\n              </View>\r\n              {isNN(d.options) &&\r\n                this.loadVotes(d)\r\n              }\r\n            </View>\r\n          )\r\n      })\r\n      :\r\n      <Text style={{padding: 20}}>{(this.props.polls.isUpToDate ? (this.props.polls.isError ? this.props.polls.errorMessage : \"No active poll found!!!\") : \"Loading...\")}</Text>\r\n    }\r\n    <Spinner visible={this.state.isLoading} />\r\n    </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Button from '../common/button';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateTimeString } from '../../util/convert';\r\nimport { ROLE, COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  outings: IOutings,\r\n  onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Outing extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false\r\n    }\r\n    this.onReturnBack = this.onReturnBack.bind(this);\r\n  };\r\n\r\n  componentDidMount(){};\r\n  \r\n  componentWillUnmount(){};\r\n  \r\n  onReturnBack = (outingId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to return back from outing',\r\n      message: 'Are you sure? You return back from this outing?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReturnBack(outingId, this.props.user, this.props.outings, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result){\r\n                Toast.success('Successfully returned back.');\r\n              }else{\r\n                Toast.fail('Failed to Return back.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n      {(this.props.appUser.role === ROLE.USER && (!isNNObject(this.props.outings) || !isNN(this.props.outings.data.filter(o => o.isReturned !== true)))) &&\r\n        <View style={styles.row}>\r\n          <Button\r\n          title=\"Go Outing\"\r\n          onPress={() => {\r\n            this.props.history.push('new-outing')\r\n          }}\r\n          />\r\n        </View>\r\n      }\r\n      {\r\n        (isNNObject(this.props.outings) && this.props.outings.isUpToDate && !this.props.outings.isError && isNN(this.props.outings.data)) ?\r\n        this.props.outings.data.map((d: IOuting, i: number) => {\r\n          return(\r\n            <View key={\"o\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{toDateTimeString(d.fromDate) + \" to \" + toDateTimeString(d.toDate)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.place}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.address}</Text>\r\n              </View>\r\n              {d.isReturned &&\r\n              <View style={styles.ele}>\r\n                <Text>{'Returned on ' + toDateTimeString(d.returnedAt)}</Text>\r\n              </View>\r\n              }\r\n              {this.props.appUser.role !== ROLE.USER && \r\n                <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Text>No one in the home</Text>\r\n                </View>\r\n              }\r\n              {(this.props.appUser.role === ROLE.USER && d.isReturned !== true) &&\r\n                <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Button title=\"Return to Home\" onPress={() => {\r\n                    this.onReturnBack(d._id);\r\n                  }} />\r\n                </View>\r\n              }\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{(this.props.outings.isUpToDate ? (this.props.outings.isError ? this.props.outings.errorMessage : \"No Outings found!!!\") : \"Loading...\")}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { TouchableHighlight, View } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IComplaint, IRemainder } from '../../models/home/index';\r\nimport AMPoll from './manager/poll';\r\nimport UserPoll from './poll';\r\nimport Outing from './outing';\r\nimport CustomList from './custom-list';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  polls: IPolls,\r\n  outings: IOutings,\r\n  remainders: Array<IRemainder>,\r\n  complaints: Array<IComplaint>,\r\n  onLoadAds: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => void,\r\n  onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => void,\r\n  onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, scallback: (result: boolean) => void) => void,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onLoadOuting: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  activeTab: number,\r\n  isShowPoll: boolean\r\n};\r\n\r\nexport default class Notification extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: (isNNObject(this.props.user) && (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER)) ? 1 : 2,\r\n      isShowPoll: isNNObject(this.props.user) && (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER || (this.props.appUser.role === ROLE.USER && this.props.appUser.homeIndex >= 0))\r\n    }\r\n  };\r\n  \r\n  componentDidMount(){\r\n    this.props.onLoadAds(this.props.user.client._id, (result: boolean) => {\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n    if(this.state.isShowPoll){\r\n      this.props.onLoadPoll(this.props.user.client._id, this.props.appUser.role, (result: boolean) => {\r\n        if(!result){\r\n          Toast.fail('Failed to load Poll.');\r\n        }\r\n      });\r\n    }\r\n    this.props.onLoadOuting(this.props.user.client._id, this.props.appUser.role === ROLE.USER ? this.props.user.homes[this.props.appUser.homeIndex]._id : '', (result: boolean) => {\r\n      if(!result){\r\n        Toast.fail('Failed to load Outing.');\r\n      }\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Notice', link: 'notice'}]} />\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n          {this.state.isShowPoll &&\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>\r\n              POLL\r\n            </TouchableHighlight>\r\n          }\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>\r\n              ADS\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              OUTING\r\n            </TouchableHighlight>\r\n            {/* <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 4})}>\r\n              REMINDERS\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 5 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 5})}>\r\n            COMPLAINTS\r\n            </TouchableHighlight> */}\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              this.state.activeTab === 1 ? \r\n                (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) ? \r\n                  <AMPoll appUser={this.props.appUser} user={this.props.user} polls={this.props.polls} onSave={this.props.onSavePoll} onRemove={this.props.onRemovePoll} />\r\n                :\r\n                  <UserPoll appUser={this.props.appUser} user={this.props.user} polls={this.props.polls} onVote={this.props.onVote} />\r\n              :\r\n                this.state.activeTab === 2 ?\r\n                  <CustomList data={(this.props.ads.isUpToDate ? this.props.ads.data : [])} message={(this.props.ads.isUpToDate ? (this.props.ads.isError ? this.props.ads.errorMessage : \"No data found!!!\") : \"Loading...\")} />\r\n                :\r\n                this.state.activeTab === 3 ?\r\n                  <Outing history={this.props.history} appUser={this.props.appUser} user={this.props.user} outings={this.props.outings} onReturnBack={this.props.onReturnBack} />\r\n                :\r\n                  <CustomList data={this.state.activeTab === 4 ? this.props.remainders : this.props.complaints} message=\"No data found!!!\" />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { IPolls } from '../models/store/polls';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { IPoll, IVote } from '../models/poll/index';\r\nimport { loadAll as loadAllAds } from '../store/actions/ad';\r\nimport { loadAll as loadAllPools, save, remove, vote } from '../store/actions/poll';\r\nimport { loadAll as loadAllOutings, retunBack } from '../store/actions/outing';\r\nimport Page from '../components/home/notification';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    polls: state.Polls,\r\n    outings: state.Outings,\r\n    remainders: [],\r\n    complaints: []\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoadAds: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAllAds(appClientId, callback)),\r\n    onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => dispatch(loadAllPools(appClientId, userRole, callback)),\r\n    onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => dispatch(save(appClientId, data, polls, user, scallback)),\r\n    onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, scallback: (result: boolean) => void) => dispatch(remove(id, polls, userId, scallback)),\r\n    onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => dispatch(vote(pollId, votes, polls, user, appUser, scallback)),\r\n    onLoadOuting: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAllOutings(appClientId, homeId, callback)),\r\n    onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(retunBack(id, user, outings, callback))\r\n});\r\n\r\nexport const Notice = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user';\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Help extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Info', link: 'info'}]} />\r\n          {/* <Image source={Images.workInProgress} style={{width: 50, height: 45, marginTop: 35}} />\r\n          <Text>Work in progress!!!</Text> */}\r\n          <View style={{...modelStyles.container, paddingLeft: 10, paddingRight: 10}}>\r\n            <View className='center' style={modelStyles.row}>\r\n              <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'center'}}>{this.props.user.client.name}</Text>\r\n            </View>\r\n            <View className='center' style={modelStyles.row}>\r\n                <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'center'}}>{this.props.user.client.description}</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>\r\n                {\"Apartment Residents & Apartment Owners need a common platform through which they can connect with association, get to know & discuss common issues of the neighborhood\"}\r\n              </Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>Home users</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Maintenance Admin Payment</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Receive real-time notifications</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Visitor management</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Lodge any complaint related to your apartment and track</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>Admin Users</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Create polls and gather the opinion of all Apartment residents</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>All details of your flat, staff who work in your flat, visitors coming to your flat</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Accounts  and much more...</Text>\r\n            </View>\r\n          </View>\r\n        </main>\r\n      );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  listItem: {\r\n    marginLeft: 15\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport Page from '../components/home/help';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n});\r\n\r\nexport const Help = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    render() {\r\n    return (\r\n            <View style={{flex: 1, backgroundColor: COLOR.INVERSE, padding: 40}}>\r\n                <Text>Page not found!!!</Text>\r\n            </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport TitleBar from './title-bar';\r\nimport NavBar from './nav-bar';\r\nimport TabBar from './tab-bar';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNNObject, isNN } from '../../util';\r\nimport Toast from  '../../util/toast';\r\n\r\nimport { Dashboard as CDashboard} from '../../containers/dashboard';\r\nimport { Members as CMembers } from '../../containers/members';\r\nimport { NewMember as CNewMember } from '../../containers/new-member';\r\nimport { Vehicles as CVehicles } from '../../containers/vehicles';\r\nimport { NewVehicle as CNewVehicle } from '../../containers/new-vehicle';\r\nimport { Servents as CServents } from '../../containers/servents';\r\nimport { NewServent as CNewServent } from '../../containers/new-servent';\r\nimport { Tickets as CTickets } from '../../containers/tickets';\r\nimport { NewTicket as CNewTicket } from '../../containers/new-ticket';\r\nimport { Visitors as CVisitors } from '../../containers/visitors';\r\n// import { NewVisitor as CNewVisitor } from '../../containers/new-visitor';\r\nimport { ChangePassword as CChangePassword } from '../../containers/change-password';\r\nimport { MyProfile as CMyProfile } from '../../containers/my-profile';\r\nimport { MyRole as CMyRole } from '../../containers/my-role';\r\nimport { Ads as CAds } from '../../containers/ads';\r\nimport { NewAd as CNewAd } from '../../containers/new-ad';\r\nimport { Users as CUsers } from '../../containers/users';\r\nimport { Homes as CHomes } from '../../containers/homes';\r\nimport { EditUser as CEditUser } from '../../containers/edit-user';\r\nimport { ApproveUsers as CApproveUsers } from '../../containers/approve-users';\r\n\r\nimport { EditHome as CEditHome } from '../../containers/edit-home';\r\nimport { AllVisitors as CAllVisitors } from '../../containers/all-visitors';\r\nimport { Notification as CNotification } from '../../containers/notification';\r\nimport { NewOuting as CNewOuting } from '../../containers/new-outing';\r\nimport { MyDocuments as CMyDocuments } from '../../containers/my-documents';\r\nimport { Blocks as CBlocks } from '../../containers/blocks';\r\nimport { EditBlock as CEditBlock } from '../../containers/edit-block';\r\nimport { Payment as CPayment } from '../../containers/payment';\r\nimport { ViewHome as CViewHome } from '../../containers/view-home';\r\nimport { Notice as CNotice } from '../../containers/notice';\r\nimport { Help as CHelp } from '../../containers/help';\r\nimport NotFound from '../../components/not-found';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  getProfile: (callback: (result: boolean, message: string) => void) => void,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isMenuExpand: boolean\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isMenuExpand: false\r\n    }\r\n    this.onToggleMenu = this.onToggleMenu.bind(this);\r\n    this.isUser = this.isUser.bind(this);\r\n    this.isAdmin = this.isAdmin.bind(this);\r\n    this.isManager = this.isManager.bind(this);\r\n    this.isGateKeeper = this.isGateKeeper.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(!isNNObject(this.props.user) || !isNN(this.props.user._id)){\r\n      this.setState({\r\n          isLoading: true\r\n      });\r\n      this.props.getProfile( (result: boolean, message: string) => {\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n        if(result !== true){\r\n          Toast.fail('Failed to load Profile: ' + message);\r\n        }\r\n      });\r\n    }\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onToggleMenu = () => {\r\n    this.setState({\r\n      isMenuExpand: !this.state.isMenuExpand\r\n    });\r\n  };\r\n\r\n  isUser = () => {\r\n    return this.props.appUser.role === ROLE.USER;\r\n  };\r\n\r\n  isAdmin = () => {\r\n    return this.props.appUser.role === ROLE.ADMIN;\r\n  };\r\n  \r\n  isManager = () => {\r\n    return this.props.appUser.role === ROLE.MANAGER;\r\n  };\r\n\r\n  isGateKeeper = () => {\r\n    return this.props.appUser.role === ROLE.GATEKEEPER;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      !this.state.isLoading &&\r\n        <View style={styles.container}>\r\n          <TitleBar appUser={this.props.appUser} user={this.props.user} isMenuExpand={this.state.isMenuExpand} onToggleMenu={this.onToggleMenu} onHomeChange={this.props.onHomeChange} onLogout={this.props.onLogout}/>\r\n          <NavBar appUser={this.props.appUser} user={this.props.user} isExpand={this.state.isMenuExpand} onToggleMenu={this.onToggleMenu} />\r\n            {((isNN(this.props.appUser.role) && !this.isUser()) || isNN(this.props.user.homes)) ?\r\n            <Switch>\r\n              <Route path={'/'} exact component={CDashboard} />\r\n              {/* <Route path={'/login'} exact component={CLogin} /> */}\r\n              {this.isUser() && <Route path={'/members'} exact component={CMembers} />}\r\n              {this.isUser() && <Route path={'/new-member'} exact component={CNewMember} />}\r\n              {this.isUser() && <Route path={'/vehicles'} exact component={CVehicles} />}\r\n              {this.isUser() && <Route path={'/new-vehicle'} exact component={CNewVehicle} />}\r\n              {this.isUser() && <Route path={'/servents'} exact component={CServents} />}\r\n              {this.isUser() && <Route path={'/new-servent'} exact component={CNewServent} />}\r\n              {(this.isUser() || this.isAdmin() || this.isManager()) && <Route path={'/tickets'} exact component={CTickets} />}\r\n              {this.isUser() && <Route path={'/new-ticket'} exact component={CNewTicket} />}\r\n              {this.isUser() && <Route path={'/visitors'} exact component={CVisitors} />}\r\n              {/* {this.isUser() && <Route path={'/new-visitor'} exact component={CNewVisitor} />} */}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/ads'} exact component={CAds} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/new-ad'} exact component={CNewAd} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/notification'} exact component={CNotification} />}\r\n              {this.isAdmin() && <Route path={'/users'} exact component={CUsers} />}\r\n              {this.isAdmin() && <Route path={'/edit-user/:id/:isApprove'} exact component={CEditUser} />}\r\n              {this.isAdmin() && <Route path={'/approve-users'} exact component={CApproveUsers} />}\r\n              {this.isAdmin() && <Route path={'/homes'} exact component={CHomes} />}\r\n              {this.isAdmin() && <Route path={'/view-home/:id'} exact component={CViewHome} />}\r\n              {this.isAdmin() && <Route path={'/edit-home/:id'} exact component={CEditHome} />}\r\n              {this.isAdmin() && <Route path={'/blocks'} exact component={CBlocks} />}\r\n              {this.isAdmin() && <Route path={'/edit-block/:id'} exact component={CEditBlock} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/payment'} exact component={CPayment} />}\r\n              {(this.isAdmin() || this.isManager() || this.isGateKeeper()) && <Route path={'/all-visitors'} exact component={CAllVisitors} />}\r\n              <Route path={'/notice'} exact component={CNotice} />\r\n              {this.isUser() && <Route path={'/new-outing'} exact component={CNewOuting} />}\r\n              <Route path={'/my-profile'} exact component={CMyProfile} />\r\n              {this.props.user.role.split(',').length > 0 && <Route path={'/my-role'} exact component={CMyRole} />}\r\n              <Route path={'/my-documents'} exact component={CMyDocuments} />\r\n              <Route path={'/change-password'} exact component={CChangePassword} />\r\n              <Route path={'/info'} exact component={CHelp} />              \r\n              <Route component={NotFound} />\r\n            </Switch>\r\n            :\r\n            <Text style={{margin: 20}}>No home assigned to you. Please contact administrator/manager.</Text>\r\n            }\r\n          {(isNNObject(this.props.user) && isNN(this.props.user._id)) &&\r\n          <TabBar />\r\n          }\r\n          <Spinner visible={this.state.isLoading} text={\"Loading...\"} />\r\n        </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLOR.INVERSE,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start'\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { getProfile, homeChange, logout } from '../store/actions/account';\r\nimport Page from '../components/home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    getProfile: (callback: (result: boolean, message: string) => void) => dispatch(getProfile(callback)),\r\n    onHomeChange: (index: number, callback: (result: boolean) => void) => dispatch(homeChange(index, callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Login } from '../containers/login';\r\nimport { Home } from '../containers/home';\r\nimport { IAppUser } from '../models/app-user/app-user';\r\nimport { isNN } from '../util';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  setLogin: (isLoggedIn: boolean) => void\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class AppContainer extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // };\r\n\r\n  componentDidMount() {\r\n    let token: string | null = sessionStorage.getItem('auth_token');\r\n    if(isNN(token)){\r\n      this.props.setLogin(true);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n        this.props.appUser.isLoggedIn ? \r\n          <HashRouter>\r\n            <Home />\r\n          </HashRouter>\r\n        :\r\n          <Login />\r\n    )\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { setLogin } from '../store/actions/account';\r\nimport Page from '../components/app-container';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n   appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n   setLogin: (isLoggedIn: boolean) => dispatch(setLogin(isLoggedIn))\r\n});\r\n\r\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(Page);","\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\r\nimport { store } from './store/app-store';\r\nimport { AppContainer } from './containers/app-container';\r\nimport { init as fcmInit } from './services/init-fcm';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './css/bootstrap.min.css';\r\nimport './css/common.scss';\r\n\r\nexport default class App extends React.Component {\r\n    componentDidMount() {\r\n      fcmInit();\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        // FCM.notificationDisplayedListener();\r\n        // FCM.notificationListener();\r\n        // FCM.notificationOpenedListener();\r\n    };\r\n  \r\n    render() {\r\n        return(\r\n          <Provider store={store}>\r\n            <AppContainer />\r\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_RIGHT} />\r\n          </Provider>      \r\n        )\r\n    }\r\n};","import * as firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n\r\nexport const init = () => {\r\n  const initializedFirebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCrGumtbn2McvNXzZdhShhLaW0QsIFZxOk\",\r\n    authDomain: \"nest-df0a7.firebaseapp.com\",\r\n    databaseURL: \"https://nest-df0a7.firebaseio.com\",\r\n    projectId: \"nest-df0a7\",\r\n    storageBucket: \"nest-df0a7.appspot.com\",\r\n    messagingSenderId: \"422026408390\",\r\n    appId: \"1:422026408390:web:cf0e6a945e7f1ec0d602c7\"\r\n  });\r\n  \r\n  const messaging = initializedFirebaseApp.messaging();\r\n  \r\n  messaging.usePublicVapidKey(\r\n    \"BExnmgKfYLBd44lIqI5xRAD55I5Qhsaa7sI_wJ19zcIuq05y2Z1AtuaNBChU--UhjFxpA2XLR2lI02otUje4Rkk\"\r\n  );\r\n  \r\n  messaging\r\n  .requestPermission()\r\n  .then(async function() {\r\n    const token = await messaging.getToken();\r\n    localStorage.setItem('fcm_token', token);\r\n  })\r\n  .catch(function(err) {\r\n    console.log(\"Unable to get permission to notify.\", err);\r\n  });\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const registerServiceWorker = () => {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker\r\n      .register(\"./firebase-messaging-sw.js\")\r\n      .then(function(registration) {\r\n        console.log(\"Registration successful, scope is:\", registration.scope);\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Service worker registration failed, error:\", err);\r\n      });\r\n  }\r\n};\r\n\r\nexport { registerServiceWorker };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { registerServiceWorker } from './services/register-sw';\r\n\r\nregisterServiceWorker();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}