{"version":3,"sources":["store/action-types.ts","store/reducers/app-user.ts","store/reducers/user.ts","store/reducers/ads.ts","store/reducers/polls.ts","store/reducers/outings.ts","store/reducers/documents.ts","store/reducers/users.ts","store/reducers/homes.ts","store/reducers/user-homes.ts","store/reducers/tickets.ts","store/reducers/blocks.ts","store/reducers/gate-no.ts","store/reducers/state.ts","store/app-store.ts","constants/index.ts","util/index.ts","store/api/api.ts","store/actions/account.ts","components/common/elements.tsx","components/common/button.tsx","components/common/spinner.tsx","components/images.ts","util/toast.ts","components/common/radio-button.tsx","components/login/sign-up.tsx","components/login/index.tsx","containers/login.tsx","components/home/title-bar.tsx","constants/nav.ts","components/home/nav-bar.tsx","components/home/footer.tsx","store/actions/payment.ts","store/actions/visitor.ts","store/actions/file.ts","components/home/my-dues.tsx","util/convert.ts","components/home/history.tsx","components/home/custom-list.tsx","components/common/banner.tsx","components/home/home.tsx","components/home/manager/home.tsx","components/common/checkbox.tsx","components/home/gatekeeper/visitors-view.tsx","components/home/gatekeeper/new-visitor.tsx","components/home/gatekeeper/home.tsx","containers/dashboard.tsx","components/home/dashboard.tsx","store/actions/member.ts","components/common/breadcrum.tsx","containers/members.tsx","components/home/members.tsx","containers/new-member.tsx","components/home/new-member.tsx","store/actions/vehicle.ts","containers/vehicles.tsx","components/home/vehicles.tsx","containers/new-vehicle.tsx","components/home/new-vehicle.tsx","store/actions/servant.ts","containers/servants.tsx","components/home/servants.tsx","containers/all-takeaways.tsx","components/home/gatekeeper/takeaways.tsx","containers/new-servant.tsx","components/home/new-servant.tsx","store/actions/ticket.ts","containers/tickets.tsx","components/home/tickets.tsx","containers/new-ticket.tsx","components/home/new-ticket.tsx","containers/visitors.tsx","components/home/visitors.tsx","containers/change-password.tsx","components/home/change-password.tsx","containers/my-profile.tsx","components/home/my-profile.tsx","containers/my-role.tsx","components/home/my-role.tsx","store/actions/ad.ts","containers/ads.tsx","components/home/manager/ads.tsx","containers/new-ad.tsx","components/home/manager/new-ad.tsx","containers/users.tsx","components/home/manager/users.tsx","store/actions/home.ts","containers/homes.tsx","components/home/manager/homes.tsx","containers/edit-user.tsx","components/home/manager/edit-user.tsx","containers/approve-users.tsx","components/home/manager/approve-users.tsx","containers/edit-home.tsx","components/home/manager/edit-home.tsx","containers/all-visitors.tsx","components/home/gatekeeper/visitors.tsx","containers/notification.tsx","store/actions/notification.ts","components/home/manager/notification.tsx","store/actions/outing.ts","containers/outings.tsx","components/home/outings.tsx","containers/new-outing.tsx","components/home/new-outing.tsx","store/actions/documents.ts","containers/my-documents.tsx","components/home/my-documents.tsx","store/actions/block.ts","containers/blocks.tsx","components/home/manager/blocks.tsx","containers/edit-block.tsx","components/home/manager/edit-block.tsx","components/home/manager/payment-form.tsx","components/home/manager/payment-history.tsx","containers/payment.tsx","components/home/manager/payment.tsx","components/home/manager/view-home/info.tsx","components/home/manager/view-home/members.tsx","components/home/manager/view-home/vehicles.tsx","components/home/manager/view-home/servants.tsx","components/home/manager/view-home/tickets.tsx","components/home/manager/view-home/visitors.tsx","components/home/manager/view-home/payments.tsx","components/home/manager/view-home/documents.tsx","containers/view-home.tsx","components/home/manager/view-home/index.tsx","store/actions/poll.ts","util/calc.ts","components/home/manager/poll.tsx","components/home/poll.tsx","containers/notice.tsx","components/home/notification.tsx","containers/help.tsx","components/home/help.tsx","components/not-found/index.tsx","theme/scripts/sidebar/index.js","theme/scripts/scrollbar/index.js","theme/scripts/popover/index.js","containers/home.tsx","components/home/index.tsx","containers/app-container.tsx","components/app-container.tsx","theme/scripts/utils/index.js","serviceWorker.js","services/register-sw.js","index.tsx","App.tsx","services/init-fcm.js"],"names":["actionTypes","handleLoginResult","state","payload","Object","objectSpread2","isLoggedIn","handleRoleResult","role","handleHomeIndexResult","homeIndex","handleResult","_id","number","name","age","gender","mobileNo","emailId","type","image","createdBy","updatedBy","homes","client","data","isUpToDate","isError","errorMessage","State","combineReducers","AppUser","arguments","length","undefined","action","SET_LOGIN_STATUS","SET_ROLE","SET_HOME_INDEX","RESET","User","description","address","upi","id","rep","repType","config","appType","hasOtherGender","hasPayment","ticketCategories","notificationTypes","LOAD_USER","Ads","LOAD_ADS","Polls","LOAD_POLLS","Outings","LOAD_OUTINGS","Documents","LOAD_DOCUMENTS","Users","LOAD_USERS","Homes","LOAD_HOMES","UserHomes","LOAD_USERHOMES","Tickets","LOAD_TICKETS","Blocks","LOAD_BLOCKS","GateNo","SET_GATE_NO","store","createStore","compose","applyMiddleware","reduxThunk","API_BASE_PATH","IMAGE_BASE_PATH","FILE_BASE_PATH","DEFAULT_DATE_FORMAT","DEFAULT_DATE_TIME_FORMAT","ROLE","APPTYPE","MONTH","title","value","isNN","_input","isNNObject","json2Str","JSON","stringify","ex","jsError","generateUUID","d","Date","getTime","performance","now","replace","c","r","Math","random","floor","toString","_ex","_funName","console","log","onEnter","_e","_callback","keyCode","which","Api","url","get","callback","_this","fetch","post","delete","patch","put","upload","_callee","token","clientId","userId","formData","regenerator_default","a","wrap","_context","prev","next","getAS","sent","FormData","append","file","method","headers","Accept","x-access-token","client-id","user-id","body","then","response","status","sessionStorage","removeItem","window","location","reload","json","message","catch","error","stop","_callee2","key","_context2","getItem","abrupt","t0","_callee3","_context3","Content-Type","logout","dispatch","setLoginResult","setHomeIndexResult","resetState","setGateNoResult","gateNo","setRoleResult","getUserResult","getUsersResult","getHomesResult","getBlockResult","View","styled","div","_templateObject","ScrollView","_templateObject2","Image","img","_templateObject3","TextInput","input","_templateObject4","TextArea","textarea","_templateObject5","Picker","select","_templateObject6","Text","label","_templateObject7","common_button","props","onPress","className","style","react","onClick","spinner","visible","Images","logo","workInProgress","username","password","mobile","email","loading","avatarMale","avatarFemale","Toast","success","msg","toast","fail","warn","warning","info","show","bgColor","textColor","radio_button","isActive","text","checked","htmlFor","sign_up","_useState","useState","_useState2","slicedToArray","setId","_useState3","_useState4","clientCode","setClientCode","_useState5","_useState6","setNumber","_useState7","_useState8","setName","_useState9","_useState10","setAge","_useState11","_useState12","setGender","_useState13","_useState14","setMobileNo","_useState15","_useState16","setEmailId","_useState17","_useState18","setType","_useState19","_useState20","setRole","react_default","createElement","placeholder","onChange","event","target","member","toLowerCase","onSignUp","result","styles","txtIcon","marginLeft","height","width","resizeMode","alignItems","top","Login","connect","ownProps","onLogin","userName","fcm_token","localStorage","controller","setItem","rememberMe","fcmToken","os","osVersion","login","onForgetPassword","mobileNumber","forgetPassword","assign","signup","isLoading","setIsLoading","setUserName","setPassword","setMessage","isForgetPass","setIsForgetPass","isSignUp","setIsSignUp","setMobileNumber","setEmail","rMessage","onForgetPassSubmit","maxWidth","src","onKeyPress","e","Fragment","borderRadius","title_bar","href","appUser","user","data-toggle","map","i","index","onHomeChange","indexOf","split","react_router_dom","to","toLocaleUpperCase","alt","confirmAlert","buttons","onLogout","NAV","icon","path","roles","child","hasMRole","nav_bar","padding","footer","loadAll","appClientId","homeId","sCallback","fCallback","save","search","my_dues","paymentId","amount","transactionRef","setPayment","totalDue","home","payments","amountPaid","transactions","filter","t","j","isSuccess","getTotalDue","p","m","forMonth","forYear","payNow","toDateString","_format","moment","format","toDateTimeString","home_history","slice","paidDate","createdAt","custom_list","banner","color","hasCount","count","home_home","activeTab","setActiveTab","members","history","push","vehicles","onPaymentUpload","onPaymentUpdate","manager_home","blocks","users","common_checkbox","visitors_view","isZoomImage","setIsZoomImage","zoomImage","setZoomImage","searchText","setSearchText","tSearchText","homeNumber","passCode","isSearch","onActiveChange","isEntered","isExit","personCount","vehicleType","vehicleNo","isApproved","isRejected","approvedBy","approvedAt","enteredBy","enteredAt","exitBy","exitGateNo","exitAt","arriveAt","getDate","toDate","onExit","onApprove","onReject","onRemove","onSelect","index_es","open","onClose","new_visitor","setHomeId","arriveAtTime","fileName","setFormData","showHomes","setShowHomes","homeSearchText","setHomeSearchText","searchResult","setSearchResult","isShowSearch","setIsShowSearch","useEffect","onClear","onSearch","onToggleLoading","entry_default","minDate","maxDate","add","date","dist_entry_default","time","maxLength","files","arrFileName","onUpload","setHours","parseInt","visitor","isUser","onSave","gatekeeper_home","setGateNo","onBlur","onGateNoChanged","onSaveVisitor","onSearchVisitor","Dashboard","ads","outings","tickets","approvalid","transaction","paymentIndex","findIndex","update","saveVisitor","fileUpload","searchVisitor","foundIndex","breadcrum","link","Members","remove","isEdit","setIsEdit","setState","NewMember","Vehicles","vehicle","NewVehicle","loadAllByHome","Servants","onLoad","onCreateTakeaway","createTakeaway","onRemoveTakeaway","removeTakeaway","viewId","takeaways","takeawayTitle","takeawayDesc","editTakeawayId","editTakeawayTitle","editTakeawayDesc","servant","tData","updatedAt","unshift","takeawayIndex","servantId","AllTakeaways","loadActiveTakeaways","exitTakeaway","setData","NewServant","arrTickets","category","getTicketsResult","_homeId","comments","onResolve","resolve","onStart","start","onAddComment","ticketId","comment","ticketIndex","commentIndex","addComment","onRemoveComment","removeComment","editCommentId","editComment","ticket","createdByName","NewTicket","setCategory","setTitle","setDescription","setStatus","Visitors","approve","reject","setIsActive","isRequestNew","setIsRequestNew","setPassCode","loadData","v","vData","concat","toConsumableArray","fontSize","ChangePassword","onUpdate","newPassword","changePassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","policyResult","anUpperCase","aLowerCase","aNumber","aSpecial","numUpper","numLower","numNums","numSpecials","test","passwordPolicyCheck","MyProfile","updateProfile","MyRole","updateRole","getAdResult","ad","NewAd","userHomes","removeByAM","searchResultIndex","setSearchResultIndex","tempSearchText","h","memberIds","load","toLocaleLowerCase","EditUser","homeIds","isApprove","isAM","saveByAM","isShowHomes","setIsShowHomes","isAdmin","isManager","isGatekeeper","match","params","tRole","getHomes","maxHeight","tHomeIds","ApproveUsers","accountController","loadWFAUsers","EditHome","onCheckNumberAvail","checkNumberAvail","isShowUsers","setIsShowUsers","blockId","bedRoom","parking","_blockId","u","getUsers","tMembers","AllVisitors","enter","exit","Notification","onPush","setBody","notification","disabled","getOutingResult","onReturnBack","isReturned","returnedAt","retunBack","o","fromDate","place","outingId","NewOuting","datePickerType","datePickerDate","minHeight","outing","getDocumentResult","MyDocuments","documents","document","ho","rel","EditBlock","forEach","homeCount","setHomeCount","block","b","payment_form","setAmount","getMonth","month","setMonth","getFullYear","year","setYear","isAllHome","setIsAllHome","setHomes","tHomes","payment_history","isShowUpdateModel","uPaymentId","uAmount","uDescription","mode","pData","Payment","updatePay","blockName","view_home_members","view_home_vehicles","view_home_servants","setViewId","setTakeaways","view_home_tickets","setComments","view_home_visitors","setTransactions","getAmountPaid","txnRef","txnId","reason","view_home_documents","ViewHome","onLoadMembers","loadMembers","onLoadVehicles","loadVehicles","onLoadServants","loadServants","onLoadTickets","loadTickets","onLoadVisitors","loadVisitors","onLoadPayments","loadPayments","onLoadDocuments","loadDocuments","toggleLoading","getPollResult","percentage","_partialValue","_totalValue","manager_poll","topic","isAllowMultiple","isOneVotePerFlat","isAnonymous","pollOption","showVotePoll","po","poll","options","polls","newOptions","votes","poi","option","sort","vo","voi","loadVotes","home_poll","curDate","votePollId","setVotePollId","setVotes","currentDate","oi","optionId","tVotes","_memberId","onSelectOption","pollId","onVote","Notice","remainders","complaints","onLoadAds","loadAllAds","onLoadPoll","userRole","loadAllPools","onSavePoll","onRemovePoll","Id","UserId","lstPoll","pollIndex","vote","isShowPoll","Help","not_found","initSideBar","$","on","$this","this","parent","hasClass","children","slideUp","removeClass","slideDown","addClass","find","each","el","attr","substr","pathname","toggleClass","preventDefault","click","setTimeout","dispatchEvent","EVENT","initScrollBar","scrollables","PerfectScrollbar","initPopover","popover","tooltip","Home","getProfile","mresult","bresult","hresult","homeChange","isGateKeeper","react_router","exact","component","CDashboard","CMembers","CNewMember","CVehicles","CNewVehicle","CServants","CNewServant","CTickets","CNewTicket","CVisitors","COutings","CNewOuting","CAds","CNewAd","CNotification","CUsers","CEditUser","CApproveUsers","CHomes","CViewHome","CEditHome","CBlocks","CEditBlock","CPayment","CAllVisitors","CAllTakeaways","CNotice","CMyProfile","CMyRole","CMyDocuments","CChangePassword","CHelp","NotFound","AppContainer","setLogin","createEvent","initUIEvent","addEventListener","not","host","Boolean","hostname","navigator","serviceWorker","register","registration","scope","err","ReactDOM","render","messaging","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","usePublicVapidKey","requestPermission","asyncToGenerator","mark","getToken","fcmInit","es","lib","ToastsStore","position","ToastsContainerPosition","TOP_RIGHT","getElementById","ready","unregister"],"mappings":"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","file":"static/js/main.239d770c.chunk.js","sourcesContent":["export enum actionTypes{\r\n    SET_LOGIN_STATUS,\r\n    SET_ROLE,\r\n    SET_HOME_INDEX,\r\n    LOAD_USER,\r\n    LOAD_ADS,\r\n    LOAD_POLLS,\r\n    LOAD_OUTINGS,\r\n    LOAD_DOCUMENTS,\r\n    LOAD_USERS,\r\n    LOAD_HOMES,\r\n    LOAD_USERHOMES,\r\n    LOAD_TICKETS,\r\n    SAVE_MEMBER,\r\n    LOAD_BLOCKS,\r\n    SET_GATE_NO,\r\n    RESET\r\n};","import { actionTypes } from '../action-types';\r\nimport { IAppUser } from '../../models/app-user/app-user';\r\n\r\nconst createEmptyResult = (): IAppUser => ({\r\n    isLoggedIn: false,\r\n    role: '',\r\n    homeIndex: -1\r\n});\r\n\r\nexport const AppUser = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_LOGIN_STATUS:\r\n            return handleLoginResult(state, action.payload);\r\n        case actionTypes.SET_ROLE:\r\n            return handleRoleResult(state, action.payload);\r\n        case actionTypes.SET_HOME_INDEX:\r\n            return handleHomeIndexResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleLoginResult = (state: IAppUser, payload: boolean): IAppUser => {\r\n    return {\r\n        ...state,\r\n        isLoggedIn: payload\r\n    };\r\n};\r\n\r\nconst handleRoleResult = (state: IAppUser, payload: string): IAppUser => {\r\n    return {\r\n        ...state,\r\n        role: payload\r\n    };\r\n};\r\n\r\nconst handleHomeIndexResult = (state: IAppUser, payload: number): IAppUser => {\r\n    return {\r\n        ...state,\r\n        homeIndex: payload\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\n\r\nconst createEmptyResult = (): IUser => ({\r\n    _id: '',\r\n    number: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    type: '',\r\n    role: '',\r\n    image: '',\r\n    createdBy: '',\r\n    updatedBy: '',\r\n    homes: [],\r\n    client: {\r\n        _id: '',\r\n        name: '',\r\n        description: '',\r\n        address: '',\r\n        upi: {\r\n            id: '',\r\n            name: ''\r\n        },\r\n        rep: {\r\n            name: '',\r\n            mobileNo: '',\r\n            emailId: '',\r\n            repType: ''\r\n        },\r\n        config: {\r\n            appType: '',\r\n            hasOtherGender: false,\r\n            hasPayment: false,\r\n            ticketCategories: [],\r\n            notificationTypes: []\r\n        }\r\n    }\r\n});\r\n\r\nexport const User = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USER:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUser, payload: IUser): IUser => {\r\n    return {\r\n        ...state,\r\n        _id: payload._id,\r\n        number: payload.number,\r\n        name: payload.name,\r\n        age: payload.age,\r\n        gender: payload.gender,\r\n        mobileNo: payload.mobileNo,\r\n        emailId: payload.emailId,\r\n        type: payload.type,\r\n        role: payload.role,\r\n        image: payload.image,\r\n        createdBy: payload.createdBy,\r\n        updatedBy: payload.updatedBy,\r\n        homes: payload.homes,\r\n        client: payload.client\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IAds } from '../../models/store/ads';\r\n\r\nconst createEmptyResult = (): IAds => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Ads = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_ADS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IAds, payload: IAds): IAds => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IPolls } from '../../models/store/polls';\r\n\r\nconst createEmptyResult = (): IPolls => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Polls = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_POLLS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IPolls, payload: IPolls): IPolls => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IOutings } from '../../models/store/outings';\r\n\r\nconst createEmptyResult = (): IOutings => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Outings = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_OUTINGS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IOutings, payload: IOutings): IOutings => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IDocuments } from '../../models/store/documents';\r\n\r\nconst createEmptyResult = (): IDocuments => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Documents = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_DOCUMENTS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IDocuments, payload: IDocuments): IDocuments => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUsers } from '../../models/store/users';\r\n\r\nconst createEmptyResult = (): IUsers => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Users = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUsers, payload: IUsers): IUsers => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IHomes } from '../../models/store/homes';\r\n\r\nconst createEmptyResult = (): IHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Homes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_HOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IHomes, payload: IHomes): IHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUserHomes } from '../../models/store/user-homes';\r\n\r\nconst createEmptyResult = (): IUserHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const UserHomes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERHOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUserHomes, payload: IUserHomes): IUserHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\n\r\nconst createEmptyResult = (): ITickets => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Tickets = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_TICKETS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: ITickets, payload: ITickets): ITickets => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IBlocks } from '../../models/store/blocks';\r\n\r\nconst createEmptyResult = (): IBlocks => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Blocks = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_BLOCKS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IBlocks, payload: IBlocks): IBlocks => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\n\r\nexport const GateNo = (state = '', action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_GATE_NO:\r\n            return handleResult(state, action.payload);\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: string, payload: string): string => {\r\n    return payload;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { IAppState } from '../../models/app-state';\r\nimport { AppUser } from './app-user';\r\nimport { User } from './user';\r\nimport { Ads } from './ads';\r\nimport { Polls } from './polls';\r\nimport { Outings } from './outings';\r\nimport { Documents } from './documents';\r\nimport { Users } from './users';\r\nimport { Homes } from './homes';\r\nimport { UserHomes } from './user-homes';\r\nimport { Tickets } from './tickets';\r\nimport { Blocks } from './blocks';\r\nimport { GateNo } from './gate-no';\r\n\r\nexport const State = combineReducers<IAppState>({\r\n    AppUser: AppUser,\r\n    User: User,\r\n    Ads: Ads,\r\n    Polls: Polls,\r\n    Outings: Outings,\r\n    Documents: Documents,\r\n    Users: Users,\r\n    Homes: Homes,\r\n    UserHomes: UserHomes,\r\n    Tickets: Tickets,\r\n    Blocks: Blocks,\r\n    GateNo: GateNo\r\n});\r\n","import { Store, createStore, compose, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport { State } from './reducers/state';\r\nimport { IAppState } from '../models/app-state';\r\n\r\nexport const store: Store<IAppState> = createStore(\r\n  State,\r\n  compose(\r\n    applyMiddleware(reduxThunk),\r\n  )\r\n);","// const API_BASE_PATH = 'http://localhost:3001/';\r\nconst API_BASE_PATH = 'https://nestadmin.herokuapp.com/';\r\n\r\nexport const API_PATH = API_BASE_PATH + 'api/';\r\nexport const IMAGE_BASE_PATH = API_BASE_PATH + 'image/';\r\nexport const FILE_BASE_PATH = API_BASE_PATH + 'file/';\r\nexport const DEFAULT_DATE_FORMAT = 'DD/MMM/YYYY';\r\nexport const DEFAULT_DATE_TIME_FORMAT = 'DD/MMM/YYYY hh:mm A';\r\nexport const ROLE = {\r\n    USER: 'USER',\r\n    ADMIN: 'ADMIN',\r\n    GATEKEEPER: 'GATEKEEPER',\r\n    MANAGER: 'MANAGER'\r\n};\r\nexport const APPTYPE = {\r\n    APARTMENT: 'A',\r\n    QUARTERS: 'Q'\r\n};\r\nexport const MONTH = [\r\n    {title: 'JAN', value: 0},\r\n    {title: 'FEB', value: 1},\r\n    {title: 'MAR', value: 2},\r\n    {title: 'APR', value: 3},\r\n    {title: 'MAY', value: 4},\r\n    {title: 'JUN', value: 5},\r\n    {title: 'JUL', value: 6},\r\n    {title: 'AUG', value: 7},\r\n    {title: 'SEP', value: 8},\r\n    {title: 'OCT', value: 9},\r\n    {title: 'NOV', value: 10},\r\n    {title: 'DEC', value: 11}\r\n];","//import { config as apiConfig } from '../store/api/config';\r\n\r\nexport function parseJSON(response: any) {\r\n     return response.json()\r\n};\r\n\r\nexport function isNN(_input: any) { \r\n  return (isNNObject(_input) && _input.length > 0) \r\n};\r\n\r\nexport function isNNObject(_input: any) { \r\n  return (_input !== null && _input !== undefined) \r\n};\r\n\r\nexport function str2Json(_input: string) { \r\n  try {\r\n    return JSON.parse(isNN(_input) ? _input : \"{}\"); \r\n  } catch (ex) { \r\n    jsError(ex, \"String2JSON\"); \r\n    return {}; \r\n  } \r\n};\r\n\r\nexport function json2Str(_input: any) { \r\n  try {\r\n    return (isNNObject(_input) ? JSON.stringify(_input) : \"\");\r\n  } catch (ex) { \r\n    jsError(ex, \"JSON2String\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function getBaseURL(_isApi: boolean) { \r\n  try {\r\n    let baseURL: string = \"\";\r\n    let arrURL = window.location.href.split(\"/\");\r\n    if(isNNObject(arrURL) && arrURL.length > 2){\r\n      if(_isApi){\r\n        //baseURL = arrURL[0] + \"//\" + arrURL[2] + apiConfig.baseURL;\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2];\r\n      }else{\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2] + \"/\";\r\n      }\r\n    }else{\r\n      baseURL = window.location.href;\r\n    }\r\n    return baseURL;\r\n  } catch (ex) { \r\n    jsError(ex, \"getBaseURL\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function generateUUID() { // Public Domain/MIT\r\n  var d = new Date().getTime();\r\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n      d += performance.now(); //use high-precision timer if available\r\n  }\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      var r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n}\r\n\r\nexport function jsError(_ex: any, _funName: string) {\r\n   //alert(\"Javascript Error\\n------------------\\nName: \" + _ex.name + \"\\nMessage: \" + _ex.message + \"\\nFunction: \" + _funName + \"\\nFile: \" + _ex.fileName + \"\\nLine Number: \" + _ex.lineNumber + \"\\nColumn Number: \" + _ex.columnNumber); \r\n   console.log(\"Error:\" + _funName + \":\" + _ex);\r\n};\r\n\r\nexport function onEnter(_e: any, _callback: Function) {\r\n  let code = (_e.keyCode ? _e.keyCode : _e.which);\r\n  if(code === 13 && typeof _callback === 'function') {\r\n    _callback();\r\n  }\r\n};","// import { AsyncStorage } from 'react-native';\r\nimport { API_PATH } from \"../../constants\";\r\nimport { isNNObject, json2Str, isNN } from \"../../util/index\";\r\n\r\nexport default class Api {\r\n    private url: string = API_PATH;\r\n     \r\n    // private url: string =  \"https://192.168.43.80:45456/api/\";\r\n    // private url: string =  \"http://192.168.43.80:45455/api/\";\r\n\r\n    /**\r\n    * HTTP GET operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public get = (url: string, callback: Function) => {\r\n        this.fetch(url, 'GET', callback);\r\n    };\r\n\r\n    /**\r\n    * HTTP POST operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public post = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'POST', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP DELETE operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public delete = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'DELETE', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PATCH operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public patch = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PATCH', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PUT operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public put = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PUT', callback, data);\r\n    };\r\n\r\n    public upload = async(url: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        \r\n        var formData = new FormData();\r\n        formData.append('file', data.file, data.name);\r\n        formData.append('name', data.name);\r\n\r\n        fetch(this.url + url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    // 'Content-Type': 'multipart/form-data',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: formData,\r\n            }).then(response => {\r\n                if(response && response.status && response.status === 401){\r\n                    sessionStorage.removeItem('auth_token');\r\n                    sessionStorage.removeItem('user_id');\r\n                    sessionStorage.removeItem('client_id');\r\n                    window.location.reload();\r\n                }\r\n                return response.json();\r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n\r\n/*\r\n    private fetch = (url: string, method: string, callback: Function, data?: any) => {\r\n        AsyncStorage.getItem('auth_token').then((token) => {\r\n            AsyncStorage.getItem('user_id').then((userId) => {\r\n                this.next(url, 'PUT', token, userId, callback, data);\r\n            }).catch(ex => {\r\n                this.next(url, 'PUT', token, '', callback, data);\r\n            }); \r\n        }).catch(ex => {\r\n            this.next(url, 'PUT', '', '', callback, data);\r\n        });\r\n    };\r\n    */\r\n\r\n    private getAS = async (key: string) => {\r\n        try {\r\n            // return await AsyncStorage.getItem(key);\r\n            return await sessionStorage.getItem(key);\r\n        } catch (error) {\r\n            return '';\r\n        }\r\n    };\r\n    \r\n    private fetch = async(url: string, method: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        fetch(this.url + url, \r\n            {\r\n                method: method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: isNNObject(data) ? json2Str(data) : null,\r\n            }).then(response => {\r\n                if(response && response.status && response.status === 401){\r\n                    sessionStorage.removeItem('auth_token');\r\n                    sessionStorage.removeItem('user_id');\r\n                    sessionStorage.removeItem('client_id');\r\n                    window.location.reload();\r\n                }\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n    private callback = (callback: Function, data: any, message: any) => {\r\n        // console.log('message: '+ message);\r\n        if(isNNObject(callback) && typeof callback == \"function\"){\r\n            callback(data, message);\r\n        }\r\n    };\r\n\r\n    /*\r\n        private handleResult = (data: any) => {\r\n        if (data) {\r\n            if (data.message) {\r\n                return null;\r\n            } else {\r\n                return data;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private onBadRequest = () => {\r\n       \r\n    };\r\n    \r\n    private onError = () => {\r\n        \r\n        // alert('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n        // console.error('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n         \r\n    };\r\n    \r\n    private onUnAuthorized = () => {\r\n        // alert('UnAuthorized Request');\r\n                 \r\n    };\r\n    */\r\n};","// import { AsyncStorage, Platform } from 'react-native';\r\nimport { actionTypes } from '../action-types';\r\nimport Api from '../api/api';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IUsers } from '../../models/store/users';\r\n// import { IAd } from '../../models/ad/ad';\r\n// import { IAds } from '../../models/store/ads';\r\n// import { IPoll } from '../../models/poll/poll';\r\n// import { IPolls } from '../../models/store/polls';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IHomes } from '../../models/store/homes';\r\n// import { IUserHome } from '../../models/user-home/user-home';\r\n// import { IUserHomes } from '../../models/store/user-homes';\r\nimport { IMember } from '../../models/home';\r\n// import { ITicket } from '../../models/home/ticket';\r\n// import { ITickets } from '../../models/store/tickets';\r\nimport { IBlock } from '../../models/block';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'account/';\r\n\r\nexport const login = (userName: string, password: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  let fcm_token: string | null = localStorage.getItem('fcm_token');\r\n    new Api().post(controller + 'login', (result: any, message: string) => {\r\n      // console.log('OUT: ', result);\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.token) && isNN(result.data.userId))\r\n      {\r\n        // console.log('IN: ', result);\r\n        try {\r\n          // console.log(result.token);\r\n          sessionStorage.setItem('auth_token', result.data.token);\r\n          sessionStorage.setItem('client_id', result.data.clientId);\r\n          sessionStorage.setItem('user_id', result.data.userId);\r\n        } catch (error) {\r\n          // console.error('AsyncStorage error: ' + error.message);\r\n        }\r\n        dispatch(setLoginResult(true));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, {\r\n      userName: userName,\r\n      password: password,\r\n      rememberMe: false,\r\n      fcmToken: fcm_token,\r\n      os: 'web', // Platform.OS, ////TODO\r\n      osVersion: 'web' // Platform.Version ////TODO\r\n    });\r\n};\r\n\r\nexport const getProfile = (callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 'profile', (result: any, message: string) => {\r\n    // console.log('OUT: ', result);\r\n    if(isNNObject(result) && isNNObject(result.data) && isNN(result.data._id))\r\n    {\r\n      dispatch(getUserResult(result.data as IUser));\r\n      dispatch(setHomeIndexResult(isNN(result.data.homes) ? 0 : -1));\r\n      let roles = result.data.role.split(',');\r\n      if(isNN(roles)){\r\n        dispatch(setRoleResult(roles[0]));\r\n      }\r\n      // dispatch(getAdResult(((isNNObject(result.data.ad) && result.data.ad instanceof Array) ? result.data.ad as Array<IAd> : []), true, false, ''));\r\n      // dispatch(getPollResult(((isNNObject(result.data.poll) && result.data.poll instanceof Array) ? result.data.poll as Array<IPoll> : []), true, false, ''));\r\n    \r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0){\r\n        new Api().get('members', (mresult: any, message: string) => {\r\n          if (isNNObject(mresult) && isNN(mresult.data)) {\r\n            dispatch(getUsersResult(mresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(mresult.message) ? mresult.message : 'Failed to load Members.');\r\n          }\r\n        });\r\n        /*\r\n        loadAllMember(result.data.client._id, (members: Array<IMember>) => {\r\n          console.log('members: ', members)\r\n          dispatch(getUsersResult(members, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n        new Api().get('blocks/' + result.data.client._id, (bresult: any, message: string) => {\r\n          if (isNNObject(bresult) && isNN(bresult.data)) {\r\n            dispatch(getBlockResult(bresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n      }\r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0 || roles.indexOf(ROLE.GATEKEEPER) >= 0){\r\n        new Api().get('homes/' + result.data.client._id, (hresult: any, message: string) => {\r\n          if (isNNObject(hresult) && isNN(hresult.data)) {\r\n            hresult.data.forEach((h: any) => {\r\n              h.memberIds = h.members;\r\n              delete h.members;\r\n            });\r\n            dispatch(getHomesResult(hresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n        \r\n        /*\r\n        loadAllHome(result.data.client._id, (homes: Array<IHome>) => {\r\n          console.log('homes: ', homes)\r\n          dispatch(getHomesResult(homes, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n      }\r\n      \r\n      // dispatch(getUsersResult(((isNNObject(result.data.users) && result.data.users instanceof Array) ? result.data.users as Array<IUser> : []), true, false, ''));\r\n      // dispatch(getHomesResult(((isNNObject(result.data.homes) && result.data.homes instanceof Array) ? result.data.homes as Array<IHome> : []), true, false, ''));\r\n      // dispatch(getUserHomesResult(((isNNObject(result.data.userHomes) && result.data.userHomes instanceof Array) ? result.data.userHomes as Array<IUserHome> : []), true, false, ''));\r\n      \r\n      // dispatch(getHomesResult([], true, false, ''));\r\n      // dispatch(getUserHomesResult([], true, false, ''));\r\n      // dispatch(getTicketsResult(((isNNObject(result.data.tickets) && result.data.tickets instanceof Array) ? result.data.tickets as Array<ITicket> : []), true, false, ''));\r\n      //dispatch(setLoginResult(true));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const homeChange = (index: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(setHomeIndexResult(index));\r\n  callback(true);\r\n};\r\n\r\nexport const changePassword = (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'changepassword/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, (result && result.message) ? result.message : message);\r\n    }\r\n  }, {\r\n    password: password,\r\n    newPassword: newPassword\r\n  });\r\n};\r\n\r\nexport const forgetPassword = (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'resetpassword', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.data))\r\n    {\r\n      if(result.data.data === true){\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, result.data.message);\r\n      }\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    mobileNo: mobileNumber,\r\n    emailId: email\r\n  });\r\n};\r\n\r\nexport const updateProfile = (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  new Api().put(controller + 'profile/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.name = name;\r\n      user.mobileNo = mobileNo;\r\n      user.emailId = emailId;\r\n\r\n      dispatch(getUserResult(user));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    name: name,\r\n    mobileNo: mobileNo,\r\n    emailId: emailId\r\n  });\r\n};\r\n\r\nexport const updateRole = (role: string, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  dispatch(setRoleResult(role));\r\n  callback(true, '');\r\n};\r\n\r\nexport const logout = (callback: (result: boolean) => void) => (dispatch: any) => {\r\n  try {\r\n    sessionStorage.removeItem('auth_token');\r\n    sessionStorage.removeItem('user_id');\r\n    sessionStorage.removeItem('client_id');\r\n    dispatch(setLoginResult(false));\r\n    dispatch(setHomeIndexResult(-1));\r\n    dispatch(resetState());\r\n    callback(true);\r\n  } catch (error) {\r\n    // console.error('AsyncStorage error: ' + error.message);\r\n    callback(false);\r\n  }\r\n};\r\n\r\nexport const setLogin = (isLoggedIn: boolean) => (dispatch: any) => {\r\n  dispatch(setLoginResult(isLoggedIn));\r\n};\r\n\r\nexport const signup = (data: IMember, clientCode: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    clientCode: clientCode,\r\n    password: data.mobileNo\r\n  });\r\n  new Api().post(controller + 'signup', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const setGateNo = (gateNo: string) => (dispatch: any) => {\r\n  dispatch(setGateNoResult(gateNo));\r\n};\r\n\r\nconst setGateNoResult = (gateNo: string) => ({\r\n  type: actionTypes.SET_GATE_NO,\r\n  payload: gateNo\r\n});\r\nconst setLoginResult = (data: boolean) => ({\r\n  type: actionTypes.SET_LOGIN_STATUS,\r\n  payload: data\r\n});\r\nconst setRoleResult = (data: string) => ({\r\n  type: actionTypes.SET_ROLE,\r\n  payload: data\r\n});\r\nconst setHomeIndexResult = (data: number) => ({\r\n  type: actionTypes.SET_HOME_INDEX,\r\n  payload: data\r\n});\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n/*\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});\r\n*/\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});\r\n/*\r\nconst getUserHomesResult = (data: Array<IUserHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERHOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUserHomes\r\n});\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});\r\n*/\r\nconst resetState = () => ({\r\n  type: actionTypes.RESET\r\n});","import styled from 'styled-components';\r\n\r\nexport const View = styled.div`\r\n`;\r\n\r\nexport const ScrollView = styled.div`\r\noverflow: auto;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n`;\r\n\r\nexport const Picker = styled.select`\r\n`;\r\n\r\nexport const Text = styled.label`\r\n`;","import * as React from 'react';\r\n\r\ninterface IProps {\r\n  title: string,\r\n  onPress: () => void,\r\n  type?: string,\r\n  className?: string,\r\n  style? : {}\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const {title, onPress, type, className, style} = props;\r\n  return (\r\n    <input type='button' className={'btn ' + (type ? type : 'btn-primary') + (className ? ' ' + className : '')} value={title} onClick={() => onPress()} style={{...style}} />\r\n  );\r\n}","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\n\r\ninterface IProps {\r\n  visible: boolean,\r\n  text?: string\r\n};\r\n\r\nexport default (props: IProps) => {\r\n    return (\r\n      props.visible ?\r\n      <View id='loader'>\r\n        <View className=\"bg\"></View>\r\n        <View className=\"spinner\"></View>\r\n      </View>\r\n      :\r\n      null\r\n    );\r\n};","import { IMAGE_BASE_PATH } from '../constants/index';\r\n\r\nexport default class Images {\r\n    static readonly logo = IMAGE_BASE_PATH + 'logo.png';\r\n    static readonly workInProgress = IMAGE_BASE_PATH + 'work-in-progress.png';\r\n    static readonly username = IMAGE_BASE_PATH + 'username.png';\r\n    static readonly password = IMAGE_BASE_PATH + 'password.png';\r\n    static readonly mobile = IMAGE_BASE_PATH + 'mobile.png';\r\n    static readonly email = IMAGE_BASE_PATH + 'email.png';\r\n    static readonly loading = IMAGE_BASE_PATH + 'loading.gif';\r\n    static readonly avatarMale = IMAGE_BASE_PATH + 'avatar-male.png';\r\n    static readonly avatarFemale = IMAGE_BASE_PATH + 'avatar-female.gif';\r\n};","import {ToastsStore as toast} from 'react-toasts';\r\n\r\n class Toast {\r\n   static success = (msg: string) => {\r\n       // Toast.show(msg, '#003300', '#FFFFFF');\r\n       toast.success(msg);\r\n    }\r\n    static fail = (msg: string) => {\r\n        // Toast.show(msg, '#b30000', '#FFFFFF');\r\n        toast.error(msg);\r\n    }\r\n    static warn = (msg: string) => {\r\n        // Toast.show(msg, '#e68a00', '#FFFFFF');\r\n        toast.warning(msg);\r\n    }\r\n    static info = (msg: string) => {\r\n        // Toast.show(msg, '#000080', '#FFFFFF');\r\n        toast.info(msg);\r\n    }\r\n    static show = (msg: string, bgColor: string, textColor: string) => {\r\n\r\n        toast.info(msg);\r\n        \r\n        /*\r\n        // Add a Toast on screen.\r\n        RNToast.show(msg, {\r\n            duration: RNToast.durations.SHORT,\r\n            position: RNToast.positions.TOP,\r\n            shadow: true,\r\n            animation: true,\r\n            hideOnPress: true,\r\n            delay: 0,\r\n            backgroundColor: bgColor,\r\n            textColor: textColor,\r\n            onShow: () => {\r\n                // calls on toast\\`s appear animation start\r\n            },\r\n            onShown: () => {\r\n                // calls on toast\\`s appear animation end.\r\n            },\r\n            onHide: () => {\r\n                // calls on toast\\`s hide animation start.\r\n            },\r\n            onHidden: () => {\r\n                // calls on toast\\`s hide animation end.\r\n            }\r\n        });\r\n        */\r\n    }\r\n};\r\n\r\nexport default Toast;","import * as React from 'react';\r\nimport { isNN, generateUUID } from '../../util';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  onPress?: () => void,\r\n  key?: string,\r\n  className?: string\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const {isActive, text, onPress, key, className} = props;\r\n  let id = generateUUID();\r\n  return (\r\n    <span className={'mR-10 ' + (className ? className : '')}>\r\n      <input type='radio' id={id} key={key} checked={isActive} onClick={onPress ? onPress : () => {}} />\r\n      {isNN(text) &&\r\n        <label htmlFor={id} className='mL-5 va-m'>{text}</label>\r\n      }\r\n    </span>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport { IMember } from '../../models/home';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  onSignUp: (data: IMember, clientCode: string, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [id, setId] = useState('');\r\n  const [clientCode, setClientCode] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [age, setAge] = useState(0);\r\n  const [gender, setGender] = useState('');\r\n  const [mobileNo, setMobileNo] = useState('');\r\n  const [emailId, setEmailId] = useState('');\r\n  const [type, setType] = useState('TENANT');\r\n  const [role, setRole] = useState('USER');\r\n  \r\n  const onSave = () => {\r\n    if(isNN(clientCode) && isNN(number) && isNN(name) && age > 0 && isNN(gender) && isNN(mobileNo) && isNN(emailId)){\r\n        let member = {\r\n          _id: id,\r\n          number: number,\r\n          name: name,\r\n          age: age,\r\n          gender: gender,\r\n          mobileNo: mobileNo,\r\n          emailId: emailId ? emailId.toLowerCase() : '',\r\n          type: type,\r\n          role: role\r\n        } as IMember;\r\n        props.onSignUp(member, clientCode, (result: boolean) => {\r\n          if(result === true){\r\n            setId('');\r\n            setClientCode('');\r\n            setNumber('');\r\n            setName('');\r\n            setAge(0);\r\n            setGender('');\r\n            setMobileNo('');\r\n            setEmailId('');\r\n            setType('TENANT');\r\n            setRole('USER');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Submit.');\r\n    }\r\n  };\r\n\r\n    return(\r\n        <View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' className='form-control' placeholder=\"App Code\" value={clientCode} onChange={(event: any) => setClientCode(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' className='form-control' placeholder=\"User Id / Number\" value={number} onChange={(event: any) => setNumber(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' className='form-control' placeholder=\"Name\" value={name} onChange={(event: any) => setName(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='number' className='form-control' placeholder=\"Age\" value={age > 0 ? age + '' : ''} onChange={(event: any) => setAge(+(event.target.value.replace(/[^0-9]/g, '')))} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={gender === 'M'} text='Male' onPress={() => setGender('M')} />\r\n            <RadioButton isActive={gender === 'F'} text='Female' onPress={() => setGender('F')} />\r\n            <RadioButton isActive={gender === 'O'} text='Other' onPress={() => setGender('O')} />\r\n          </View>            \r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' className='form-control' placeholder=\"Mobile Number\" value={mobileNo} onChange={(event: any) => setMobileNo(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' className='form-control' placeholder=\"Email ID\" value={emailId} onChange={(event: any) => setEmailId(event.target.value)} />\r\n          </View>\r\n          {/* <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={type === 'OWNER'} text='Owner' onPress={() => setType('OWNER')} />\r\n            <RadioButton isActive={type === 'TENANT'} text='Tenant' onPress={() => setType('TENANT')} />\r\n          </View> */}\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n    );\r\n};","import React, {useState} from 'react';\r\nimport { View, Text, TextInput, Image } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Images from '../images';\r\nimport { isNN, onEnter } from '../../util';\r\nimport Toast from  '../../util/toast';\r\nimport { IMember } from '../../models/home';\r\nimport SignUp from './sign-up';\r\n\r\ninterface IProps {\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => void,\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => void,\r\n    onSignUp: (data: IMember, clientCode: string, sCallback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [isForgetPass, setIsForgetPass] = useState(false);\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n    const [mobileNumber, setMobileNumber] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const onLogin = () =>{\r\n        if(isNN(userName) && isNN(password)){\r\n            setMessage('');\r\n            setIsLoading(true);\r\n            props.onLogin(userName, password, (result: boolean, rMessage: string) => {       \r\n                setIsLoading(false);\r\n                if(result === true){\r\n                    setMessage('');\r\n                }else{\r\n                    setMessage(rMessage);\r\n                }\r\n            });\r\n        }else{\r\n            // Toast.warn('Enter Mobile Number and Password to continue.');\r\n            Toast.warn('Enter Mobile Number and Password to continue.');\r\n        }\r\n    };\r\n    \r\n    const onForgetPassword = () =>{\r\n        setIsForgetPass(true);\r\n        setIsSignUp(false);\r\n        setMobileNumber('');\r\n        setEmail('');\r\n        setMessage('');\r\n    };\r\n\r\n    const onForgetPassSubmit = () => {\r\n        if(isNN(mobileNumber) && isNN(email)){\r\n            setMessage('');\r\n            setIsLoading(true);\r\n            props.onForgetPassword(mobileNumber, email.toLowerCase(), (result: boolean, rMessage: string) => {\r\n                setIsLoading(false);\r\n                if(result === true){\r\n                    Toast.success('Password reset success. Login with New password sent to your Email. Change password after login.');\r\n                    setMessage('');\r\n                    setIsForgetPass(false);\r\n                    setIsSignUp(false);\r\n                    setUserName('');\r\n                    setPassword('');\r\n                }else{\r\n                    setMessage(rMessage);\r\n                }\r\n            });\r\n        }else{\r\n            Toast.warn('Enter Mobile Number and Email to continue.');\r\n        }\r\n    };\r\n\r\n    const onCreateAccount = () =>{\r\n        setIsForgetPass(false);\r\n        setIsSignUp(true);\r\n        setMobileNumber('');\r\n        setEmail('');\r\n        setMessage('');\r\n    };\r\n\r\n    const onSignUp = (data: IMember, clientCode: string, callback: (result: boolean) => void) => {\r\n        setMessage('');\r\n        setIsLoading(true);\r\n        props.onSignUp(data, clientCode, (result: boolean, message: string) => {\r\n            setIsLoading(false);\r\n            if(result === true){\r\n              setIsForgetPass(false);\r\n              setIsSignUp(false);\r\n              setMessage('');\r\n              Toast.success('Sign Up success. Please wait till Manager approves then you can access your account.');\r\n              callback(true);\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to Sign Up.');\r\n              callback(false);\r\n            }\r\n          });\r\n    };\r\n\r\n    return (\r\n            <View className='container bgc-white' style={{maxWidth: '270px'}}>\r\n                <View className='ta-c ai-c jc-c mB-30 mT-5'>\r\n                    <Image src={Images.logo} style={{width: 150, height: 150}}/>\r\n                </View>\r\n                {isForgetPass &&\r\n                <View className='ai-c jc-c'>\r\n                    <View className='col-12 mB-25'>\r\n                        <Image className='pos-a' src={Images.mobile} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control pL-25' placeholder='Registered Mobile Number' value={mobileNumber}\r\n                        onChange={(event: any) => setMobileNumber(event.target.value)}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, onForgetPassSubmit);\r\n                        }} />\r\n                    </View>\r\n                    <View className='col-12 mB-25'>\r\n                        <Image className='pos-a' src={Images.email} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control pL-25' placeholder='Registered Email' value={email}\r\n                        onChange={(event: any) => setEmail(event.target.value)}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, onForgetPassSubmit);\r\n                        }} />\r\n                    </View>\r\n                    <View className='ta-c'>\r\n                    <Button\r\n                    title={isLoading === false ? \"Reset my password\" : \"Loading...\"}\r\n                    onPress={onForgetPassSubmit}\r\n                    />\r\n                    <Text className={'col-12 ta-c mT-5' + (isLoading ? '' : ' c-red-600')}>{message}</Text>\r\n                    </View>\r\n                    <View className='mT-5 ta-c'>\r\n                        <Text className='cur-p mB-5 ta-c c-blue-500' onClick={() => { \r\n                            setIsForgetPass(false);\r\n                            setIsSignUp(false);\r\n                            setMobileNumber('');\r\n                            setEmail('');\r\n                            setMessage('');\r\n                         }}>Go back to Login.</Text>\r\n                    </View>\r\n                </View>\r\n                }\r\n                {isSignUp && <>\r\n                    <SignUp onSignUp={onSignUp} />\r\n                    <View className='mT-15 ta-c'>\r\n                        <Text className='cur-p mB-5 ta-c c-blue-500' onClick={() => { \r\n                            setIsForgetPass(false);\r\n                            setIsSignUp(false);\r\n                            setMobileNumber('');\r\n                            setEmail('');\r\n                            setMessage('');\r\n                         }}>Go back to Login.</Text>\r\n                    </View>\r\n                    </>\r\n                }\r\n                {(!isForgetPass && !isSignUp) && \r\n                <View className='ai-c jc-c'>\r\n                    <View className='col-12 mB-25'>\r\n                        <Image className='pos-a' src={Images.username} style={styles.txtIcon} />\r\n                        <TextInput type='text' className='form-control pL-25' placeholder='Mobile Number' value={userName} \r\n                        onChange={(event: any) => setUserName(event.target.value)}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, onLogin);\r\n                        }} />\r\n                    </View>\r\n                    <View className='col-12 mB-15'>\r\n                        <Image className='pos-a' src={Images.password} style={styles.txtIcon} />\r\n                        <TextInput type='password'  className='form-control pL-25' placeholder='Password' value={password}\r\n                        onChange={(event: any) => setPassword(event.target.value)}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, onLogin);\r\n                        }} />\r\n                    </View>\r\n                    <View className='ta-c'>\r\n                    <Text className='col-12 cur-p mB-15 ta-r c-blue-500' onClick={onForgetPassword}>Forgot Password?</Text>\r\n                    <Button\r\n                    title={isLoading === false ? \"LOGIN\" : \"Loading...\"}\r\n                    onPress={onLogin}\r\n                    />\r\n                    <Text className={'col-12 ta-c mT-5' + (isLoading ? '' : ' c-red-600')}>{message}</Text>\r\n                    </View>\r\n                    <View className='col-12 mT-5 ai-c jc-c'>\r\n                        <Text className='col-12 mB-5 ta-c'>Dont have an account?</Text>\r\n                        <View className='col ai-c jc-c cur-p bd p-0' style={{borderRadius: '15px'}}>\r\n                            <Text className='ta-c m-0 p-15 cur-p' onClick={onCreateAccount}>CREATE / JOIN YOUR FLAT</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                }\r\n                <Spinner visible={isLoading} text={\"\"} />\r\n            </View>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    txtIcon: {\r\n        marginLeft: 6,\r\n        // marginRight: -15,\r\n        height: 15,\r\n        width: 15,\r\n        resizeMode : 'stretch',\r\n        alignItems: 'center',\r\n        top: 11\r\n    }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IMember } from '../models/home';\r\nimport { login, forgetPassword, signup } from '../store/actions/account';\r\n\r\nimport Page from '../components/login/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => dispatch(login(userName, password, callback)),\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => dispatch(forgetPassword(mobileNumber, email, callback)),\r\n    onSignUp: (data: IMember, clientCode: string, callback: (result: boolean, message: string) => void) => dispatch(signup(data, clientCode, callback))\r\n});\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { Image } from '../common/elements';\r\nimport { isNN } from '../../util/index';\r\nimport Images from '../images';\r\nimport { ROLE } from '../../constants/index';\r\nimport { IHome } from '../../models/home';\r\nimport Toast from  '../../util/toast';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const onHomeChange = (index: number) => {\r\n    props.onHomeChange(index, (result: boolean) => {\r\n      if(result === true){\r\n        \r\n      }else{\r\n      }\r\n    });\r\n  }\r\n  \r\n  const logout = () => {\r\n    confirmAlert({\r\n      title: 'Confirm to logout',\r\n      message: 'Are you sure you wish to logout?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            props.onLogout((result: boolean) => {\r\n              if(result === true){\r\n                Toast.success('Logout Success!');\r\n              }else{\r\n                Toast.fail('Failed to logout!');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return (\r\n  <div className=\"header navbar\">\r\n    <div className=\"header-container\">\r\n      <ul className=\"nav-left\">\r\n        <li>\r\n          <a id='sidebar-toggle' className=\"sidebar-toggle\" href=\"javascript:void(0);\">\r\n            <i className=\"ti-menu\"></i>\r\n          </a>\r\n        </li>\r\n        <li className=\"search-box\">\r\n          <a className=\"search-toggle no-pdd-right\" href=\"javascript:void(0);\">\r\n            <i className=\"search-icon ti-search pdd-right-10\"></i>\r\n            <i className=\"search-icon-close ti-close pdd-right-10\"></i>\r\n          </a>\r\n        </li>\r\n        <li className=\"search-input\">\r\n          <input className=\"form-control\" type=\"text\" placeholder=\"Search...\" />\r\n        </li>\r\n      </ul>\r\n      <ul className=\"nav-right\">\r\n        {(props.appUser.role === ROLE.USER) &&\r\n        <li className=\"notifications dropdown\">\r\n          <span className=\"counter bgc-red\">{props.user.homes.length}</span>\r\n          <a href=\"\" className=\"dropdown-toggle no-after\" data-toggle=\"dropdown\">\r\n            <i className=\"fa fa-home\"></i>\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n            <li className=\"pX-20 pY-15 bdB\">\r\n              <i className=\"fa fa-home pR-10\"></i>\r\n              <span className=\"fsz-sm fw-600 c-grey-900\">House(s)</span>\r\n            </li>\r\n            <li>\r\n              <ul className=\"ovY-a pos-r scrollable lis-n p-0 m-0 fsz-sm\">\r\n              {\r\n                props.user.homes.map((d: IHome, i: number) => {\r\n                  return(\r\n                    <li key={'h' + i}>\r\n                      <a href=\"javascript:void(0);\" className='peers fxw-nw td-n p-20 bdB c-grey-800 cH-blue bgcH-grey-100'>\r\n                        <div className=\"peer peer-greed\" onClick={() => onHomeChange(i)}>\r\n                          <span>\r\n                            <span className={(props.appUser.homeIndex === i ? 'fw-500' : 'c-grey-600')}>{'' + d.number}</span>\r\n                          </span>\r\n                        </div>\r\n                      </a>\r\n                    </li>\r\n                  )\r\n                })\r\n                }\r\n                </ul>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        }\r\n        {(props.user.role.indexOf(',') > 0) &&\r\n        <li className=\"notifications dropdown\">\r\n        <span className=\"counter bgc-red\">{props.user.role.split(',').length}</span>\r\n        <a href=\"\" className=\"dropdown-toggle no-after\" data-toggle=\"dropdown\">\r\n          <i className=\"ti-user\"></i>\r\n        </a>\r\n        <ul className=\"dropdown-menu\">\r\n          <li className=\"pX-20 pY-15 bdB\">\r\n            <i className=\"ti-user pR-10\"></i>\r\n            <span className=\"fsz-sm fw-600 c-grey-900\">Role(s)</span>\r\n          </li>\r\n          <li>\r\n            <ul className=\"ovY-a pos-r scrollable lis-n p-0 m-0 fsz-sm\">\r\n            {\r\n              props.user.role.split(',').map((d: string, i: number) => {\r\n                return(\r\n                  <li key={'r' + i}>\r\n                    <a href=\"javascript:void(0);\" className='peers fxw-nw td-n p-20 bdB c-grey-800 cH-blue bgcH-grey-100'>\r\n                      <div className=\"peer peer-greed\">\r\n                        <span>\r\n                          <span className={'tt-c ' + (props.appUser.role === d ? 'fw-500' : 'c-grey-600')}>{'' + d.toLowerCase()}</span>\r\n                        </span>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                )\r\n              })\r\n              }\r\n              </ul>\r\n          </li>\r\n          <li className=\"pX-20 pY-15 ta-c bdT\">\r\n            <span>\r\n              <Link className=\"c-grey-600 cH-blue fsz-sm td-n\" to='my-role'>Change Role <i className=\"ti-angle-right fsz-xs mL-10\"></i></Link>\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n        }\r\n\r\n        <li className=\"notifications dropdown\">\r\n          <span className=\"counter bgc-red\">0</span>\r\n          <a href=\"\" className=\"dropdown-toggle no-after\" data-toggle=\"dropdown\">\r\n            <i className=\"ti-bell\"></i>\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n            <li className=\"pX-20 pY-15 bdB\">\r\n              <i className=\"ti-bell pR-10\"></i>\r\n              <span className=\"fsz-sm fw-600 c-grey-900\">Notification(s)</span>\r\n            </li>\r\n            <li>\r\n              <ul className=\"ovY-a pos-r scrollable lis-n p-0 m-0 fsz-sm\">\r\n                <li>\r\n                  <a href=\"\" className='peers fxw-nw td-n p-20 bdB c-grey-800 cH-blue bgcH-grey-100'>\r\n                    <div className=\"peer peer-greed\">\r\n                      <span>\r\n                        <span className=\"c-grey-600\">No notification found.</span>\r\n                        </span>\r\n                    </div>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        \r\n        <li className=\"dropdown\">\r\n          <a href=\"\" className=\"dropdown-toggle no-after peers fxw-nw ai-c lh-1\" data-toggle=\"dropdown\">\r\n            <div className=\"peer mR-10\">\r\n              <Image className=\"w-2r bdrs-50p\" src={isNN(props.user.image) ? props.user.image : (props.user.gender.toLocaleUpperCase() === 'F' ? Images.avatarFemale : Images.avatarMale)} alt='' />\r\n            </div>\r\n            <div className=\"peer\">\r\n              <span className=\"fsz-sm c-grey-900\">{props.user.name}</span>\r\n            </div>\r\n          </a>\r\n          <ul className=\"dropdown-menu fsz-sm\">\r\n            <li>\r\n              <Link className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" to='my-profile'>\r\n                <i className=\"fa fa-user mR-10\"></i>\r\n                <span>Profile</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" to='my-documents'>\r\n                <i className=\"fa fa-file-text mR-10\"></i>\r\n                <span>Documents</span>\r\n              </Link>\r\n            </li>\r\n            {props.user.role.indexOf(',') > 0 &&\r\n            <li>\r\n              <Link className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" to='my-role'>\r\n                <i className=\"ti-user mR-10\"></i>\r\n                <span>Role</span>\r\n              </Link>\r\n            </li>\r\n            }\r\n            <li>\r\n              <Link className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" to='change-password'>\r\n                <i className=\"fa fa-key mR-10\"></i>\r\n                <span>Password</span>\r\n              </Link>\r\n            </li>\r\n            <li role=\"separator\" className=\"divider\"></li>\r\n            <li>\r\n              <a href=\"#\" className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" onClick={logout}>\r\n                <i className=\"ti-power-off mR-10\"></i>\r\n                <span>Logout</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  );\r\n};","import { ROLE } from \".\";\r\n\r\nexport const NAV = [\r\n    {title: 'Home', icon:'c-blue-500 ti-home', path: '/'},\r\n    {title: 'Blocks', icon:'c-brown-500 fa fa-building', path: '/blocks', roles: [ROLE.ADMIN]},\r\n    {title: 'Houses', icon:'c-blue-700 fa fa-home',path: '/homes', roles: [ROLE.ADMIN]},\r\n    {title: 'Users', icon:'c-deep-purple-500 fa fa-users', path: '/users', roles: [ROLE.ADMIN]},\r\n    {title: 'Members', icon:'c-brown-500 fa fa-users', path: '/members', roles: [ROLE.USER]},\r\n    {title: 'Vehicles', icon:'c-indigo-500 fa fa-car', path: '/vehicles', roles: [ROLE.USER]},\r\n    {title: 'Servants', icon:'c-deep-purple-500 fa fa-female', path: '/servants', roles: [ROLE.USER]},\r\n    {title: 'Tickets', icon:'c-orange-500 ti-headphone-alt', path: '/tickets', roles: [ROLE.USER, ROLE.ADMIN, ROLE.MANAGER]},\r\n    {title: 'Visitors', icon:'c-pink-500 fa fa-id-card-o', path: '/visitors', roles: [ROLE.USER]},\r\n    {title: 'Visitors', icon:'c-pink-500 fa fa-id-card-o', path: '/all-visitors', roles: [ROLE.ADMIN, ROLE.MANAGER, ROLE.GATEKEEPER]},\r\n    {title: 'Door Locks', icon:'c-indigo-800 ti-lock', path: '/outings'},\r\n    {title: 'Notification', icon:'c-red-500 ti-bell', path: '/notification', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n    {title: 'Ads', icon:'c-teal-500 fa fa-bullhorn', path: '/ads', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n    {title: 'Payment', icon:'c-indigo-500 fa fa-credit-card', path: '/payment', hasPayment: true, roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n    {title: 'Notice', icon:'c-blue-a400 ti-notepad', path: '/notice'},\r\n    {title: 'Settings', icon:'c-deep-orange-500 ti-settings', child: [\r\n        {title: 'My Profile', path: '/my-profile'},\r\n        {title: 'My Role', path: '/my-role', hasMRole: true},\r\n        {title: 'My Documents', path: '/my-documents'},\r\n        {title: 'Change Password', path: '/change-password'}\r\n    ]},\r\n    {title: 'Info', icon:'c-deep-purple-a700 ti-info-alt', path: '/info'}\r\n];","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image } from '../common/elements';\r\nimport { isNN } from '../../util/index';\r\nimport { NAV } from '../../constants/nav';\r\nimport Images from '../images';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar-inner\">\r\n        <div className=\"sidebar-logo\">\r\n          <div className=\"peers ai-c fxw-nw\">\r\n            <div className=\"peer peer-greed\">\r\n              <Link className=\"sidebar-link td-n\" to='/'>\r\n                <div className=\"peers ai-c fxw-nw\">\r\n                  <div className=\"peer\">\r\n                    <div className=\"logo\">\r\n                      <Image src={Images.logo} className='' style={{ width: 70, height: 65, padding: '13px 15px'}} alt='' />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"peer peer-greed\">\r\n                    <h5 className=\"lh-1 mB-0 logo-text\">Nest</h5>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"peer\">\r\n              <div className=\"mobile-toggle sidebar-toggle\">\r\n                <a href=\"\" className=\"td-n\">\r\n                  <i className=\"ti-arrow-circle-left\"></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {(NAV && NAV.length > 0) &&\r\n        <ul className=\"sidebar-menu scrollable pos-r\">\r\n          {\r\n            NAV.map((d: any, i: number) => {\r\n              if((isNN(d.path) || isNN(d.child)) && (!isNN(d.roles) || d.roles.indexOf(props.appUser.role) >= 0) && (!d.hasMRole || props.user.role.indexOf(',') > 0) && (!d.hasPayment || props.user.client.config.hasPayment)){\r\n                return(\r\n                  <li key={'nav-item-' + i} className={'nav-item' + (isNN(d.child) ? ' dropdown' : '') + (i === 0 ? ' mT-30' : '')}>\r\n                    <Link className={(isNN(d.child) ? 'dropdown-toggle' : 'sidebar-link')} to={isNN(d.path) ? d.path : '#' }>\r\n                    <span className=\"icon-holder\">\r\n                      <i className={d.icon}></i>\r\n                    </span>\r\n                    <span className=\"title\">{d.title}</span>\r\n                    {isNN(d.child) &&\r\n                    <span className=\"arrow\">\r\n                      <i className=\"ti-angle-right\"></i>\r\n                    </span>\r\n                    }\r\n                  </Link>\r\n                    {isNN(d.child) &&\r\n                    <ul className=\"dropdown-menu\">\r\n                      {\r\n                        d.child.map((d: any, i: number) => {\r\n                          return(\r\n                            <li key={'sub-nav-item-' + i}>\r\n                              <Link className='sidebar-link' to={isNN(d.path) ? d.path : '#'}>{d.title}</Link>\r\n                            </li>\r\n                          )\r\n                        })\r\n                      }\r\n                    </ul>\r\n                    }\r\n                  </li>\r\n                )\r\n              }\r\n            })\r\n          }\r\n        </ul>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n};","import * as React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <footer className=\"bdT ta-c p-30 lh-0 fsz-sm c-grey-600\">\r\n      <span>Copyright © Nest. All rights reserved.</span>\r\n    </footer>\r\n  );\r\n};","import Api from '../api/api';\r\nimport { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'payment';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const search = (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const save = (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to save Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const updatePay = (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().put(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to update Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const upload = (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'upload', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.approvalid > 0)\r\n    {\r\n      /*\r\n      var homeIndex = user.homes.findIndex(d => d._id === homeId);\r\n      if(file.approvalid > 0)\r\n      {        \r\n        var paymentIndex = user.home[homeIndex].paymentApproval.findIndex(d => d.approvalid === file.approvalid);\r\n        user.home[homeIndex].paymentApproval[paymentIndex] = result.data;\r\n      }else{\r\n        user.home[homeIndex].paymentApproval.push(result.data);\r\n      }\r\n      */\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, file);\r\n};\r\n\r\nexport const update = (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/transaction/' + paymentId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      transaction._id = result.data;\r\n      // var homeIndex = user.homes.findIndex(d => d._id === params.homeid);\r\n      // if(paymentId.length > 0)\r\n      // {        \r\n        var paymentIndex = user.homes[homeIndex].payments.findIndex(d => d._id === paymentId);\r\n        if(!user.homes[homeIndex].payments[paymentIndex].transactions){\r\n          user.homes[homeIndex].payments[paymentIndex].transactions = [];\r\n        }\r\n        user.homes[homeIndex].payments[paymentIndex].transactions.push(transaction);\r\n      // }else{\r\n      //   user.homes[homeIndex].payments.push(result.data);\r\n      // }\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, transaction);\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","// import { actionTypes } from '../action-types';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants/index';\r\n// import { IHome } from '../../models/home';\r\n\r\nlet controller: string = 'visitor';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : '') + '/' + isActive, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  // data.image = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data._id.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          var foundIndex = visitors.findIndex(d => d._id === result.data);\r\n          visitors[foundIndex]._id = result.data;\r\n          visitors[foundIndex].name = name;\r\n          visitors[foundIndex].age = data.age;\r\n          visitors[foundIndex].gender = data.gender;\r\n          visitors[foundIndex].mobileNo = data.mobileNo;\r\n          visitors[foundIndex].emailId = data.emailId;\r\n          visitors[foundIndex].image = result.image;\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        sCallback(result.data as IVisitor);\r\n      } else {\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data._id.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          data._id = result.data;\r\n          data.createdBy = user.name;\r\n          visitors.unshift(data);\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        sCallback(result.data as IVisitor);\r\n      } else {\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      /*\r\n      user.homes[homeIndex].visitors = user.homes[homeIndex].visitors.filter((d, i) => d._id != id);\r\n      dispatch(getUserResult(user as IUser));\r\n      */\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const enter = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/enter/' + id + '/' + gateNo, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const exit = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/exit/' + id + '/' + gateNo, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const approve = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/approve/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const reject = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/reject/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const search = (text: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/search/' + text, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n    }\r\n  });\r\n};","import Api from '../api/api';\r\nimport { isNNObject } from '../../util/index';\r\n\r\nlet controller: string = 'upload';\r\n\r\nexport const upload = (data: any, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().upload(controller, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};","import React, {useState} from 'react';\r\nimport {ScrollView, View, Text} from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport {IUser} from '../../models/user/user';\r\nimport {IHome} from '../../models/home/home';\r\nimport {IPayment} from '../../models/home';\r\nimport {ITransaction} from '../../models/home/transaction';\r\nimport {isNN, generateUUID} from '../../util/index';\r\nimport Toast from '../../util/toast';\r\nimport {MONTH} from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome,\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [payment, setPayment] = useState({\r\n    paymentId: '',\r\n    amount: 0,\r\n    transactionRef: '',\r\n  });\r\n\r\n  const getTotalDue = () => {\r\n    let totalDue = 0;\r\n    props.home.payments.map((d: IPayment, i: number) => {\r\n      let amountPaid = 0;\r\n      d.transactions.filter((t, j) => t.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n      totalDue += d.amount - amountPaid;\r\n      return 1;\r\n    });\r\n    return totalDue;\r\n  };\r\n\r\n  const payNow = (paymentId: string, amount: number) => {\r\n    if (paymentId && paymentId.length > 0 && amount && amount > 0) {\r\n      if (isNN(props.user.client.upi.id) && isNN(props.user.client.upi.name)) {\r\n        const transactionRef = generateUUID();\r\n        setPayment({\r\n            paymentId: paymentId,\r\n            amount: amount,\r\n            transactionRef: transactionRef\r\n          });\r\n        Toast.warn('Payment is in progress. Please contact administrator.');\r\n        // RNUpiPayment.initializePayment({\r\n        //   vpa: props.user.client.upi.id, // or can be john@ybl or mobileNo@upi\r\n        //   payeeName: props.user.client.upi.name,\r\n        //   amount: amount + '',\r\n        //   transactionRef: transactionRef,\r\n        //   transactionNote: ''\r\n        // }, successCallback, failureCallback);\r\n      } else {\r\n        Toast.warn('Please update UPI ID and UPI Name to app administrator to proceed further.');\r\n      }\r\n    } else {\r\n      Toast.warn('Amount should be more then 0 to proceed payment.');\r\n    }\r\n  };\r\n\r\n  const successCallback = (result: any) => {\r\n    console.log('Payment Success...', result);\r\n    if (result && result.Status) {\r\n      if (result.Status === 'SUCCESS' && result.responseCode && result.responseCode === '00') {\r\n        setIsLoading(true);\r\n        const transaction = {\r\n          txnRef: result.txnRef,\r\n          txnId: result.txnId,\r\n          amount: payment.amount,\r\n          status: 'PAID',\r\n          isSuccess: true,\r\n          reason: '',\r\n        } as ITransaction;\r\n        props.onPaymentUpdate(payment.paymentId, transaction, (updateResult: boolean) => {\r\n          setIsLoading(false);\r\n          clearTxn();\r\n          if (updateResult === true) {\r\n            Toast.success('Payment success.');\r\n          } else {\r\n            Toast.fail('Payment failed.');\r\n          }\r\n        });\r\n      } else {\r\n        txnFailure(result);\r\n      }\r\n    } else {\r\n      txnFailure(result);\r\n    }\r\n  };\r\n\r\n  const failureCallback = (result: any) => {\r\n    txnFailure(result);\r\n  };\r\n\r\n  const txnFailure = (result: any) => {\r\n    console.log('Payment Failure...', result);\r\n    let msg: string = '';\r\n    if (result && result.Status) {\r\n      if (result.Status === 'FAILURE' && result.responseCode && result.responseCode === 'ZM') {\r\n        msg = 'Payment failed because of wrong pin.';\r\n      } else if (result.Status === 'FAILURE' && result.message && result.message.length > 0) {\r\n        msg = 'Payment failed because ' + result.message;\r\n      } else {\r\n        msg = 'Payment failed.';\r\n      }\r\n    } else {\r\n      msg = 'Payment failed.';\r\n    }\r\n    Toast.fail(msg);\r\n    setIsLoading(true);\r\n    const transaction = {\r\n      txnRef: payment.transactionRef,\r\n      txnId: '',\r\n      amount: payment.amount,\r\n      status: 'FAIL',\r\n      isSuccess: false,\r\n      reason: msg,\r\n    } as ITransaction;\r\n    props.onPaymentUpdate(payment.paymentId, transaction, (updateResult: boolean) => {\r\n      setIsLoading(false);\r\n      clearTxn();\r\n      // if(updateResult === true){\r\n      //   Toast.success('Payment success.');\r\n      // }else{\r\n      //   Toast.fail('Payment failed.');\r\n      // }\r\n    });\r\n  };\r\n\r\n  const clearTxn = () => {\r\n    setPayment({\r\n        paymentId: '',\r\n        amount: 0,\r\n        transactionRef: ''\r\n      });\r\n  };\r\n\r\n    return (\r\n      <View>\r\n        <View className='m-5'>\r\n          <Text className='mT-2 fw-600'>{'Total Due Amount: Rs ' + getTotalDue()}</Text>\r\n        </View>\r\n        <ScrollView>\r\n          {isNN(props.home.payments) ?\r\n        props.home.payments.filter((p: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          if (isNN(p.transactions)) {\r\n            p.transactions.filter((t) => t.isSuccess === true).map((p, j) => amountPaid += p.amount);\r\n          }\r\n          return (amountPaid < p.amount);\r\n        }).map((d: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          if (isNN(d.transactions)) {\r\n            d.transactions.filter((p) => p.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n          }\r\n          if (amountPaid < d.amount) {\r\n            return (\r\n              <View key={'my-due' + i} className={'m-7' + (i === 0 ? '' : ' pL-15 bdL' )}>\r\n                <View className='mT-4'>\r\n                  <Text>{'Due for: ' + MONTH.filter((m) => m.value === d.forMonth)[0].title + '/' + d.forYear}</Text>\r\n                </View>\r\n                <View className='mT-4 mB-3'>\r\n                  <Text>{'Rs ' + (d.amount - amountPaid)}</Text>\r\n                </View>\r\n                <View>\r\n                  <Text>{'Due Date: 15/' + MONTH.filter((m) => m.value === d.forMonth)[0].title + '/' + d.forYear}</Text>\r\n                </View>\r\n                <View className='mT-4'>\r\n                  <Button\r\n                    title='PAY NOW'\r\n                    onPress={() => payNow(d._id, (d.amount - amountPaid))}\r\n                  />\r\n                </View>\r\n              </View>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        }):\r\n          <Text className='p-20'>No due found.</Text>\r\n          }\r\n        </ScrollView>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n    );\r\n};","import moment from 'moment';\r\nimport { isNN, jsError, isNNObject } from './index';\r\nimport { DEFAULT_DATE_FORMAT, DEFAULT_DATE_TIME_FORMAT } from '../constants/index';\r\n\r\nexport function toDateString(_input: any, _format?: string) {\r\n  try {\r\n    if(isNNObject(_input)) {\r\n      if (typeof _input != 'string') {\r\n        _input.toString();\r\n      }\r\n      if (!isNN(_format)) {\r\n       _format = DEFAULT_DATE_FORMAT;\r\n      }\r\n      return moment(_input).format(_format);\r\n    } else {\r\n      return '';\r\n    }\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateString'); \r\n    return ''; \r\n  }\r\n};\r\n\r\nexport function toDateTimeString(_input: any, _format?: string) {\r\n  try {\r\n    return toDateString(_input, DEFAULT_DATE_TIME_FORMAT);\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateTimeString'); \r\n    return ''; \r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, ScrollView } from '../common/elements';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNN } from '../../util';\r\nimport { toDateString } from '../../util/convert';\r\nimport { MONTH } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  home: IHome,\r\n};\r\n\r\nexport default (props: IProps) => {\r\n    return (\r\n      <ScrollView>\r\n        {isNN(props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true)))) ?\r\n        props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true))).slice(0, 3).map((d: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          let paidDate = null;\r\n          d.transactions.filter(t => t.isSuccess === true).map((t: ITransaction, j: number) => {\r\n            amountPaid += t.amount;\r\n            if(j === 0){\r\n              paidDate = t.createdAt;\r\n            }\r\n            return 1;\r\n          });\r\n              return (\r\n                <View key={'my-his' + i} className={'m-7' + (i === 0 ? '' : ' pL-15 bdL') }>\r\n                  <View className='mT-4'>\r\n                    <Text>{\"Paid for: \" + MONTH.filter(m => m.value === d.forMonth)[0].title + \"/\" + d.forYear}</Text>\r\n                  </View>\r\n                  <View className='mT-4 mB-3'>\r\n                    <Text>{\"Rs \" + amountPaid}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text>{\"Paid On: \" + toDateString(paidDate)}</Text>\r\n                  </View>\r\n                </View>\r\n              )\r\n          })\r\n          :<Text>No history found!</Text>\r\n        }\r\n        </ScrollView>\r\n    );\r\n};","import * as React from 'react';\r\nimport { Text, View } from '../common/elements';\r\nimport { isNN } from '../../util/index';\r\n\r\nexport default (props: any) => {\r\n  const {data, message} = props;\r\n  return(\r\n    isNN(data) ?\r\n    data.map((d: any, i: number) => {\r\n      return(\r\n        <View className='bdB pB-3'>\r\n          <View>\r\n            <Text key={i} className='fw-600'>\r\n              {d.title}\r\n            </Text>\r\n          </View>\r\n          <View>\r\n            <Text key={i}>\r\n              {d.description}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      )\r\n    })\r\n    :\r\n    isNN(message) ? <Text>{message}</Text> : null\r\n  );\r\n};","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\n\r\ninterface IProps {\r\n  title: string,\r\n  icon: string,\r\n  color: string,\r\n  onClick: () => void,\r\n  bgColor?: string,\r\n  hasCount?: boolean,\r\n  count?: string\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return (\r\n    <View className='col-md-3'>\r\n      <View className=\"layers bd bgc-white p-20 cur-p\" onClick={props.onClick}>\r\n        <View className=\"layer w-100 mB-10\">\r\n          <h6 className=\"lh-1\">{props.title}</h6>\r\n        </View>\r\n        <View className=\"layer w-100\">\r\n          <View className=\"peers ai-sb fxw-nw\">\r\n            <View className=\"peer peer-greed\">\r\n              <span className=\"icon-holder\">\r\n                <i className={props.icon + ' ' + props.color + ' fa-2x'}></i>\r\n              </span>\r\n            </View>\r\n            <View className=\"peer\">\r\n              {props.hasCount ?\r\n              <span className={'d-ib lh-0 va-m fw-600 bdrs-10em pX-15 pY-15 ' + props.color + ' ' + props.bgColor}>{props.count}</span>\r\n              :\r\n              <span className={'d-ib lh-0 va-m ' + props.color}>View all</span>\r\n              }\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport { View } from '../common/elements';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport MyDues from './my-dues';\r\nimport History from './history';\r\nimport CustomList from './custom-list';\r\nimport Banner from '../common/banner';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  \r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item w-100\">\r\n            <View className=\"row gap-20\">\r\n              <Banner title='Member(s)' icon='fa fa-users' color='c-brown-500' bgColor='bgc-brown-50' hasCount={true} count={props.home.members ? props.home.members.length + '' : '0'} onClick={() => props.history.push('members')} />\r\n              <Banner title='Vehicle(s)' icon='fa fa-car' color='c-indigo-500' bgColor='bgc-indigo-50' hasCount={true} count={props.home.vehicles ? props.home.vehicles.length + '' : '0'} onClick={() => props.history.push('vehicles')} />\r\n              <Banner title='Servant(s)' icon='fa fa-female' color='c-deep-purple-500' onClick={() => props.history.push('servants')} />\r\n              <Banner title='Ticket(s)' icon='ti-headphone-alt' color='c-orange-500' onClick={() => props.history.push('tickets')} />\r\n            </View>\r\n            <View className=\"row gap-20\">\r\n              <Banner title='Visitor(s)' icon='fa fa-id-card-o' color='c-pink-500' onClick={() => props.history.push('visitors')} />\r\n              <Banner title='Door Lock(s)' icon='ti-lock' color='c-indigo-800' onClick={() => props.history.push('outings')} />\r\n            </View>\r\n          </View>\r\n          {props.user.client.config.hasPayment &&\r\n          <View className=\"masonry-item col-12\">\r\n            <View className='tab-bar bgc-white p-20'>\r\n              <span className={'tab' + (activeTab === 1 ? ' active': '')} onClick={() => setActiveTab(1)}>\r\n                MY DUES\r\n                </span>\r\n              <span className={'tab' + (activeTab === 2 ? ' active': '')} onClick={() => setActiveTab(2)}>\r\n                ADVANCE\r\n              </span>\r\n              <span className={'tab' + (activeTab === 3 ? ' active' : '')} onClick={() => setActiveTab(3)}>\r\n                HISTORY\r\n              </span>\r\n              {/* <span className={'tab' + (activeTab === 4 ? ' active' : ')} onClick={() => setActiveTab(4)}>\r\n                DEPOSITS\r\n              </span> */}\r\n            </View>\r\n            <View className='bgc-white p-20'>\r\n            {activeTab === 1 ?\r\n                <MyDues history={props.history} user={props.user} home={props.home} onPaymentUpload={props.onPaymentUpload} onPaymentUpdate={props.onPaymentUpdate} />\r\n              :\r\n              activeTab === 2 ?\r\n                <CustomList data={[]} message='No advance found!' />\r\n                :\r\n                activeTab === 3 ?\r\n                <History history={props.history} home={props.home} />\r\n                :\r\n                activeTab === 4 ?\r\n                <CustomList data={[]} message=\"Work in progress\" />\r\n                :\r\n                []\r\n              }\r\n            </View>\r\n          </View>\r\n          }\r\n        </View>\r\n      </View>\r\n    );\r\n};","import * as React from 'react';\r\nimport { View } from '../../common/elements';\r\nimport { ROLE } from '../../../constants';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport Banner from '../../common/banner';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item w-100\">\r\n          <View className=\"row gap-20\">\r\n            <Banner title='Ticket(s)' icon='ti-headphone-alt' color='c-orange-500' onClick={() => props.history.push('tickets')} />\r\n            <Banner title='Visitor(s)' icon='fa fa-id-card-o' color='c-pink-500' onClick={() => props.history.push('all-visitors')} />\r\n            <Banner title='ads' icon='fa fa-bullhorn' color='c-teal-500' onClick={() => props.history.push('ads')} />\r\n            <Banner title='Notification' icon='ti-bell' color='c-red-500' onClick={() => props.history.push('notification')} />\r\n          </View>\r\n          <View className=\"row gap-20\">\r\n          <Banner title='Door Lock(s)' icon='ti-lock' color='c-indigo-800' onClick={() => props.history.push('outings')} />\r\n            {props.appUser.role === ROLE.ADMIN &&\r\n            <>\r\n              <Banner title='Block(s)' icon='fa fa-building' color='c-brown-500' bgColor='bgc-brown-50' hasCount={true} count={props.blocks.isUpToDate ? (!props.blocks.isError ? props.blocks.data.length + '' : '0') :'Loading'} onClick={() => props.history.push('blocks')} />\r\n              <Banner title='House(s)' icon='fa fa-home' color='c-blue-700' bgColor='bgc-blue-50' hasCount={true} count={props.homes.isUpToDate ? (!props.homes.isError ? props.homes.data.length + '' : '0') :'Loading'} onClick={() => props.history.push('homes')} />\r\n              <Banner title='User(s)' icon='fa fa-users' color='c-deep-purple-500' bgColor='bgc-deep-purple-50' hasCount={true} count={props.users.isUpToDate ? (!props.users.isError ? props.users.data.length + '' : '0') :'Loading'} onClick={() => props.history.push('users')} />\r\n            </>\r\n            }\r\n            {(props.appUser.role !== ROLE.ADMIN && props.user.client.config.hasPayment) &&\r\n            <Banner title='Payment' icon='fa fa-credit-card' color='c-indigo-500' onClick={() => props.history.push('payment')} />\r\n            }\r\n          </View>\r\n          {(props.appUser.role === ROLE.ADMIN && props.user.client.config.hasPayment) &&\r\n          <View className=\"row gap-20\">\r\n            <Banner title='Payment' icon='fa fa-credit-card' color='c-indigo-500' onClick={() => props.history.push('payment')} />\r\n          </View>\r\n          }\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import * as React from 'react';\r\nimport { generateUUID } from '../../util';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  onPress?: () => void,\r\n  key?: string,\r\n  className?: string\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const {isActive, text, onPress, key, className} = props;\r\n  let id = generateUUID();\r\n  return (\r\n    <span className={'mR-10 ' + (className ? className : '')}>\r\n      <input type='checkbox' id={id} key={key ? key : id} checked={isActive} className='va-m' onClick={onPress ? onPress : () =>{}} />\r\n      <label htmlFor={id} className='mL-5 va-m mB-0'>{text}</label>\r\n    </span>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport moment from 'moment';\r\nimport { View, Image, Text, TextInput } from '../../common/elements';\r\nimport Checkbox from '../../common/checkbox';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport { isNN } from '../../../util/index';\r\nimport { FILE_BASE_PATH, ROLE } from '../../../constants';\r\nimport Button from '../../common/button';\r\nimport { toDateTimeString } from '../../../util/convert';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  isSearch?: boolean,\r\n  onActiveChange?: () => void,\r\n  onEnter?: (id: string) => void,\r\n  onExit?: (id: string) => void,\r\n  onApprove?: (id: string) => void,\r\n  onReject?: (id: string) => void,\r\n  onSelect?: (data: IVisitor) => void,\r\n  onRemove?: (id: string) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isZoomImage, setIsZoomImage] = useState(false);\r\n  const [zoomImage, setZoomImage] = useState('');\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  const onToggleZoomImage = (isZoom: boolean) => {\r\n    setIsZoomImage(isZoom);\r\n  };\r\n  \r\n  let tSearchText = isNN(searchText) ? searchText.toLowerCase() : searchText;\r\n  let data = ((isNN(tSearchText) && isNN(props.data)) ? props.data.filter((d, i) => d.homeNumber.toLowerCase().indexOf(tSearchText) >= 0 || d.passCode.toLowerCase().indexOf(tSearchText) >= 0 || d.name.toLowerCase().indexOf(tSearchText) >= 0) : props.data);\r\n    return(<>\r\n      <View className='bdB mT-5'>\r\n        <Text>{'No of ' + (props.isActive ? 'Active' : '') + ' Visitors: ' + props.data.length}</Text>\r\n        {(!props.isSearch && props.appUser.role !== ROLE.GATEKEEPER) &&\r\n        <Checkbox isActive={props.isActive} text='Only Active Visitors' onPress={props.onActiveChange} className='fl-r' />\r\n        }\r\n      </View>\r\n      {isNN(props.data) &&\r\n      <View className='mT-10 mB-5'>\r\n        <TextInput type='text' placeholder=\"Enter passcode to search\" className='form-control' value={searchText} onChange={(event: any) => setSearchText(event.target.value)} />\r\n      </View>\r\n      }\r\n      <View className='p-10 mB-10'>\r\n        {isNN(data) ?\r\n        data.map((d: IVisitor, i: number) => {\r\n          return(\r\n            <View key={i} className='card m-1 d-ib'>\r\n              {isNN(d.image) &&\r\n              <View className='ta-c mB-5'>\r\n                <Image src={FILE_BASE_PATH + d.image} className='cur-p m-0' style={{height: '25vh', borderRadius: '50%'}} onClick={() => {\r\n                  setIsZoomImage(true);\r\n                  setZoomImage(d.image);\r\n                  }} />\r\n              </View>\r\n              }\r\n              <View className='container'>\r\n                {isNN(d.passCode) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text className='fw-600'>{d.passCode}</Text>\r\n                </View>\r\n                }\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text className='fw-600'>{d.name + ' [' + d.type + ']'}</Text>\r\n                </View>\r\n                {(d.age > 0 || isNN(d.gender)) && \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other')) : '')}</Text>\r\n                </View>\r\n                }\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  To <Text className='fw-600'>{d.homeNumber}</Text> on <Text className='fw-600'>{toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                {(!d.isEntered && !d.isExit) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{((d.gateNo) ? 'In gate ' + d.gateNo + ' by ': 'By ') + d.createdBy}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.mobileNo) && \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) && \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                {d.personCount > 0 && \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.personCount + ' Person' + (d.personCount > 1 ? 's' : '') + (d.vehicleType === 'WALK' ? ' by WALK' : ' in ' + d.vehicleType + (isNN(d.vehicleNo) ? ' ' + d.vehicleNo : ''))}</Text>\r\n                </View>\r\n                }\r\n                {(!d.isApproved && !d.isRejected && !d.isEntered) && \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <View className='c-blue-500'>WAITING FOR APPROVAL</View>\r\n                </View>\r\n                }\r\n                {(d.isApproved || d.isRejected ) && \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <View className={(d.isApproved ? 'c-green-600' : 'c-red-600')}>{d.isApproved ? 'APPROVED' : 'REJECTED'}</View>\r\n                  <View>{'By ' + d.approvedBy}</View>\r\n                  <View>{'On ' + toDateTimeString(d.approvedAt)}</View>\r\n                </View>\r\n                }\r\n                {d.isEntered &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <View>{'Entry By ' + d.enteredBy + ' in gate ' + d.gateNo}</View>\r\n                  <View>{'On ' + toDateTimeString(d.enteredAt)}</View>\r\n                </View>\r\n                }\r\n                {(d.isApproved && !d.isEntered) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <View className='c-red-600'>NOT ENTERED</View>\r\n                </View>\r\n                }\r\n                {(!d.isRejected && d.isExit) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <View>{'Exit By ' + d.exitBy + ' in gate ' +  d.exitGateNo}</View>\r\n                  <View>{'On ' + toDateTimeString(d.exitAt)}</View>\r\n                </View>\r\n                }\r\n                {(d.isEntered && !d.isExit) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <View className='c-red-600'>STAYING IN</View>\r\n                </View>\r\n                }\r\n                {(!d.isEntered && d.passCode && d.arriveAt) && \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text className='fw-600 c-red-600'>{'Expected Arrival ' + toDateTimeString(d.arriveAt)}</Text>\r\n                </View>\r\n                }\r\n                {(!props.isSearch && props.appUser.role === ROLE.GATEKEEPER) &&\r\n                <View className='mT-1 mB-3 p-2 ta-c'>\r\n                  {(!d.isEntered && !d.isRejected && (!d.arriveAt || new Date(d.arriveAt).getDate() === moment().toDate().getDate())) && <Button title='Enter' onPress={() => { props.onEnter && props.onEnter(d._id) }} />}\r\n                  {((d.isEntered || d.isRejected) && !d.isExit) && <Button title={d.isRejected ? 'Remove' : 'Exit'} onPress={() => { props.onExit && props.onExit(d._id) }} />}\r\n                </View>\r\n                }\r\n                {(!props.isSearch && props.appUser.role === ROLE.USER && !d.isApproved && !d.isRejected && !d.isEntered) &&\r\n                <View className='mT-1 mB-3 p-2 ta-c'>\r\n                  <Button title='Approve' className='mR-10' onPress={() => { props.onApprove && props.onApprove(d._id) }} />\r\n                  <Button title='Reject' onPress={() => { props.onReject && props.onReject(d._id) }} />\r\n                </View>\r\n                }\r\n                {(!props.isSearch && props.appUser.role === ROLE.USER && isNN(d.passCode) && !d.isEntered && !d.isRejected) &&\r\n                <View className='mT-1 mB-3 p-2 ta-c'>\r\n                  <Button title='Remove' onPress={() => { props.onRemove && props.onRemove(d._id) }} />\r\n                </View>\r\n                }\r\n                {props.isSearch &&\r\n                <View className='mT-1 mB-3 p-2 ta-c'>\r\n                  <Button title='Select' onPress={() => { props.onSelect && props.onSelect(d) }} />\r\n                </View>\r\n                }\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text className='p-20'>No visitor found.</Text>\r\n      }\r\n      </View>\r\n      <Modal\r\n          open={isZoomImage}\r\n          onClose={() => onToggleZoomImage(false)}>\r\n          <View className='ta-c'>\r\n            <Image src={FILE_BASE_PATH + zoomImage} style={{ height: '50%', width: '50%' }} />\r\n          </View>\r\n        </Modal>\r\n    </>\r\n    );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport DatePicker from 'react-date-picker';\r\nimport TimePicker from 'react-time-picker';\r\nimport moment from 'moment';\r\nimport { View, ScrollView, TextInput, Text, Picker } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { isNN, generateUUID, onEnter, isNNObject } from '../../../util/index';\r\nimport { ROLE } from '../../../constants';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHome, IVisitor } from '../../../models/home';\r\nimport VisitorsView from './visitors-view';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [homeId, setHomeId] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    id: '',\r\n    type: 'VISITOR',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    arriveAt: new Date(),\r\n    arriveAtTime: '',\r\n    personCount: 1,\r\n    vehicleType: 'BIKE',\r\n    vehicleNo: '',\r\n    fileName: '',\r\n  });\r\n  const [showHomes, setShowHomes] = useState(false);\r\n  const [homeSearchText, setHomeSearchText] = useState('');\r\n  const [searchResult, setSearchResult] = useState([] as Array<IVisitor>);\r\n  const [isShowSearch, setIsShowSearch] = useState(false);\r\n   \r\n  useEffect(() => {\r\n    if(props.appUser.role === ROLE.USER){\r\n      setHomeId(props.user.homes[props.appUser.homeIndex]._id)\r\n    } \r\n  }, []);\r\n\r\n  const onImageSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName: string = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        setFormData({\r\n          ...formData,\r\n          fileName: fileName\r\n        });\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        props.onUpload(data, (result: boolean, message: string) => {\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSave = () => {\r\n    if((props.appUser.role === ROLE.USER || isNN(props.gateNo)) && (props.appUser.role !== ROLE.USER || isNNObject(formData.arriveAt)) && showHomes === false && homeId.length > 0 && isNN(formData.name) && formData.personCount > 0 && isNN(formData.fileName)){\r\n      let arriveAt = formData.arriveAt;\r\n      if(isNNObject(arriveAt)){\r\n        let arriveAtTime: Array<string> = [];\r\n        if(isNNObject(formData.arriveAt) && isNN(formData.arriveAtTime)){\r\n          arriveAtTime = formData.arriveAtTime.split(':');\r\n        }\r\n        if(isNN(arriveAtTime) && arriveAtTime.length > 1){\r\n          arriveAt.setHours(parseInt(arriveAtTime[0]), parseInt(arriveAtTime[1]), 0,0);\r\n        }else{\r\n          arriveAt.setHours(0, 0, 0, 0);\r\n        }\r\n      }\r\n      let visitor = {\r\n        _id: '',\r\n        type: formData.type,\r\n        name: formData.name,\r\n        age: formData.age,\r\n        gender: formData.gender,\r\n        mobileNo: formData.mobileNo,\r\n        emailId: '',\r\n        arriveAt: arriveAt,\r\n        personCount: formData.personCount,\r\n        vehicleType: formData.vehicleType,\r\n        vehicleNo: formData.vehicleNo,\r\n        image: formData.fileName,\r\n        passCode: '',\r\n        gateNo: props.gateNo\r\n      } as IVisitor;\r\n      visitor = Object.assign(visitor, {\r\n        isUser: (props.appUser.role === ROLE.USER)\r\n      });\r\n      props.onToggleLoading(true);\r\n      props.onSave(homeId, visitor, props.user, props.appUser, (result: IVisitor) => {\r\n          // props.navigation.navigation.goBack(null);\r\n          onClear();\r\n          props.onToggleLoading(false);\r\n          if(props.appUser.role === ROLE.USER){\r\n            Toast.success('Visitor Request created successfully. Please share the passcode(' + result.passCode + ') to yor visitor and ask him/her to show it to the security in the gate while entering.');\r\n          }else{\r\n            Toast.success('Visitor created successfully. Notification sent to the house members for approval. If this visitor got approved from house member then allow him/her inside.')\r\n          }\r\n      }, (message: string) => {\r\n          props.onToggleLoading(false);\r\n          Toast.fail('Failed to save visitor ' + visitor.name + '.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill Gate Number, House, Name, People count and Image before '+ (formData.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onClear = () => {\r\n    setHomeId((props.appUser.role === ROLE.USER) ? homeId : '');\r\n    setFormData({\r\n      ...formData,\r\n      id: '',\r\n      type: 'VISITOR',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      arriveAt: new Date(),\r\n      arriveAtTime: '',\r\n      personCount: 1,\r\n      vehicleType: 'BIKE',\r\n      vehicleNo: '',\r\n      fileName: ''\r\n    });\r\n    setShowHomes(false);\r\n    setHomeSearchText('');\r\n    setSearchResult([]);\r\n    setIsShowSearch(false);\r\n  };\r\n  \r\n  const onSearch = () => {\r\n    if(formData.mobileNo.length > 2){\r\n      props.onToggleLoading(true);\r\n      props.onSearch(formData.mobileNo, (result: Array<IVisitor>) => {\r\n        props.onToggleLoading(false);\r\n        setIsShowSearch(true);\r\n        setSearchResult(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(message);\r\n        setIsShowSearch(false);\r\n        setSearchResult([]);\r\n      });\r\n    }\r\n  };\r\n\r\n    return(\r\n        <View>\r\n          {props.appUser.role === ROLE.GATEKEEPER &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder='Enter House Number' className='form-control'\r\n            value={homeSearchText} \r\n            onChange={(event: any) => {\r\n              setShowHomes(true);\r\n              setHomeSearchText(event.target.value)\r\n              }} />\r\n          </View>\r\n          }\r\n          {\r\n            (props.appUser.role === ROLE.GATEKEEPER && showHomes && isNN(homeSearchText) && props.homes && props.homes.data.length > 0 ) &&\r\n            <ScrollView className='mT-3 mB-3 pT-5 pB-5 ov-s'>\r\n              {\r\n                props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(homeSearchText.toLowerCase()) >= 0).map((d: IHome, i: number) => {\r\n                  return(\r\n                    <Text \r\n                    className='cur-p m-3 p-5 bgc-blue-50'\r\n                    key={'ho' + i}\r\n                    onClick={() => {\r\n                      setHomeSearchText(d.number);\r\n                      setHomeId(d._id);\r\n                      setShowHomes(false);\r\n                    }}>{d.number}</Text>\r\n                  )\r\n                })\r\n              }\r\n            </ScrollView>\r\n          }\r\n          {props.appUser.role === ROLE.GATEKEEPER &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={formData.type === 'VISITOR'} text='Visitor' onPress={() => setFormData({...formData, type: 'VISITOR'})} />\r\n            <RadioButton isActive={formData.type === 'DELIVERY'} text='Delivery' onPress={() => setFormData({...formData, type: 'DELIVERY'})} />\r\n            <RadioButton isActive={formData.type === 'SERVICE'} text='Service' onPress={() => setFormData({...formData, type: 'SERVICE'})} />\r\n          </View>\r\n          }\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder='Mobile Number' className='form-control mR-10 d-i' style={{width: 'calc(100% - 40px)'}} value={formData.mobileNo} onChange={(event: any) => setFormData({...formData, mobileNo: event.target.value})} \r\n            onKeyPress={(e) => {\r\n              onEnter(e, onSearch);\r\n            }} />\r\n            <span className='icon-holder cur-p' onClick={onSearch}>\r\n              <i className='ti-search pdd-right-10 fw-900'></i>\r\n            </span>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' value={formData.name} onChange={(event: any) => setFormData({...formData, name: event.target.value})} />\r\n          </View>\r\n          {props.appUser.role === ROLE.USER &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text>Arrival At &nbsp;</Text>\r\n            <DatePicker minDate={moment().toDate()} maxDate={moment().add(2,'d').toDate()}\r\n            onChange={(date : any) => {\r\n              setFormData({\r\n                ...formData,\r\n                arriveAt: date\r\n              });\r\n            }}\r\n            value={formData.arriveAt}\r\n            />\r\n            <Text>&nbsp;</Text>\r\n            <TimePicker\r\n            value={formData.arriveAtTime}\r\n            // minTime={(isNN(this.state.arriveAt) && this.state.arriveAt.getDate() === moment().toDate().getDate()) ? moment().toDate() : null}\r\n            onChange={(time: any) => {\r\n              setFormData({\r\n                ...formData,\r\n                arriveAtTime: time\r\n              });\r\n            }}\r\n            />\r\n          </View>\r\n          }\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='number' placeholder='Age' className='form-control w-a d-ib mR-10' maxLength={3} value={formData.age > 0 ? formData.age + '' : ''} onChange={(event: any) => setFormData({...formData, age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n            <View className='d-ib w-a'>\r\n              <RadioButton isActive={formData.gender === 'M'} text='Male' onPress={() => setFormData({...formData, gender: 'M'})} />\r\n              <RadioButton isActive={formData.gender === 'F'} text='Female' onPress={() => setFormData({...formData, gender: 'F'})} />\r\n              {props.user.client.config.hasOtherGender &&\r\n              <RadioButton isActive={formData.gender === 'O'} text='Other' onPress={() => setFormData({...formData, gender: 'O'})} />\r\n              }\r\n            </View>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='number' placeholder='People Count' className='form-control w-a d-ib mR-10' value={formData.personCount > 0 ? formData.personCount + '' : ''} onChange={(event: any) => setFormData({...formData, personCount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n            <Picker className='form-control w-a d-ib mR-10' value={formData.vehicleType}\r\n            onChange={(event: any) => setFormData({...formData, vehicleType: event.target.value})}>\r\n              <option value='WALK'>WALK</option>\r\n              <option value='CYCLE'>CYCLE</option>\r\n              <option value='BIKE'>BIKE</option>\r\n              <option value='CAR'>CAR</option>\r\n              <option value='VAN'>VAN</option>\r\n              <option value='JEEP'>JEEP</option>\r\n              <option value='TEMPO'>TEMPO</option>\r\n              <option value='BUS'>BUS</option>\r\n              <option value='TRUCK'>TRUCK</option>\r\n            </Picker>\r\n            <TextInput type='text' placeholder='Vehicle No' className='form-control w-a d-ib' value={formData.vehicleNo} onChange={(event: any) => setFormData({...formData, vehicleNo: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <input type='file' name='image' placeholder='SELECT IMAGE' onChange={onImageSelect}/>\r\n              {isNN(formData.fileName) &&\r\n              <Text className='mL-15'>{formData.fileName}</Text>\r\n              }\r\n          </View>\r\n          <View className='ta-c mT-5 mB-3 pT-5 pB-5'>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={onSave}\r\n              className='mR-10'\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={onClear}\r\n              />\r\n          </View>\r\n          {isShowSearch &&\r\n          <Modal\r\n          open={isShowSearch}\r\n          onClose={() => setIsShowSearch(false)}>\r\n            <View className='mT-30 mB-25 mL-15 mR-15' style={{height: '80%'}}>\r\n              <VisitorsView user={props.user} appUser={props.appUser} data={searchResult} isActive={false} isSearch={true} onSelect={(data: IVisitor) => {\r\n                setIsShowSearch(false);\r\n                setSearchResult([]);\r\n                setFormData({\r\n                  ...formData,\r\n                  name: data.name,\r\n                  age: data.age,\r\n                  gender: data.gender,\r\n                  mobileNo: data.mobileNo,\r\n                  vehicleType: data.vehicleType,\r\n                  vehicleNo: data.vehicleNo,\r\n                  fileName: data.image\r\n                });\r\n                }} />\r\n            </View>\r\n          </Modal>\r\n          }\r\n        </View>\r\n    );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { View, TextInput, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home';\r\nimport NewVisitor from './new-visitor';\r\nimport { isNN } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onGateNoChanged: (gateNo: string) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearchVisitor: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [gateNo, setGateNo] = useState('');\r\n\r\n  useEffect(() => {\r\n    setGateNo(props.gateNo);\r\n  }, [props.gateNo]);\r\n\r\n  const viewAllVisitors = () => {\r\n    if(isNN(gateNo)) {\r\n      props.history.push('all-visitors')\r\n    } else {\r\n      Toast.warn('Please enter Gate Number to view this page.');\r\n    }\r\n  };\r\n  \r\n  const viewAllTakeaways = () => {\r\n    if(isNN(gateNo)) {\r\n      props.history.push('all-takeways')\r\n    } else {\r\n      Toast.warn('Please enter Gate Number to view this page.');\r\n    }\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <View className='bgc-white p-20'>\r\n            <View className=\"\">\r\n              <TextInput type='text' placeholder='Gate Number' className='form-control w-a' value={gateNo} onChange={(event: any) => setGateNo(event.target.value)} onBlur={() => props.onGateNoChanged(gateNo)} />\r\n              <Text className='fl-r c-blue-700 fw-600 cur-p' onClick={viewAllTakeaways}>View all Active Takeaways</Text>\r\n              <Text className='fl-r c-blue-700 fw-600 cur-p mR-20' onClick={viewAllVisitors}>View all Active Visitors</Text>\r\n            </View>\r\n            <NewVisitor appUser={props.appUser} user={props.user} homes={props.homes} gateNo={gateNo} onToggleLoading={(isLoading) => setIsLoading(isLoading)} onSave={props.onSaveVisitor} onUpload={props.onUpload} onSearch={props.onSearchVisitor} />\r\n            <Spinner visible={isLoading} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { ITransaction } from '../models/home/transaction';\r\nimport { IVisitor } from '../models/home';\r\nimport { setGateNo } from '../store/actions/account';\r\nimport { upload, update } from '../store/actions/payment';\r\nimport { save as saveVisitor, search as searchVisitor } from '../store/actions/visitor';\r\nimport { upload as fileUpload } from '../store/actions/file';\r\nimport Page from '../components/home/dashboard';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    outings: state.Outings,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    tickets: state.Tickets,\r\n    blocks: state.Blocks,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onGateNoChanged: (gateNo: string) => dispatch(setGateNo(gateNo)),\r\n    onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => dispatch(upload(file, homeId, user, callback)),\r\n    onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => dispatch(update(paymentId, transaction, homeIndex, user, callback)),\r\n    onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => dispatch(saveVisitor(homeId, data, user, appUser, sCallback, fCallback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(fileUpload(data, callback)),\r\n    onSearchVisitor: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => dispatch(searchVisitor(searchText, sCallback, fCallback))\r\n});\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport {Text, View} from '../common/elements';\r\nimport {IAppUser} from '../../models/app-user';\r\nimport {IUser} from '../../models/user/user';\r\nimport {IAds} from '../../models/store/ads';\r\nimport {IUsers} from '../../models/store/users';\r\nimport {IHomes} from '../../models/store/homes';\r\nimport {IBlocks} from '../../models/store/blocks';\r\nimport {IOutings} from '../../models/store/outings';\r\nimport {ITransaction} from '../../models/home/transaction';\r\nimport {ITickets} from '../../models/store/tickets';\r\nimport {IVisitor} from '../../models/home';\r\nimport Home from './home';\r\nimport AMHome from './manager/home';\r\nimport GKHome from './gatekeeper/home';\r\nimport {ROLE} from '../../constants/index';\r\nimport {isNN} from '../../util';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  outings: IOutings,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  tickets: ITickets,\r\n  blocks: IBlocks,\r\n  gateNo: string,\r\n  onGateNoChanged: (gateNo: string) => void,\r\n  onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearchVisitor: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  if (props.appUser.role === ROLE.USER) {\r\n    if (props.appUser.homeIndex >= 0 && isNN(props.user.homes)) {\r\n      return (<Home history={props.history} user={props.user} home={props.user.homes[props.appUser.homeIndex]} onPaymentUpload={(file: any, homeId: string, callback: (result: boolean) => void) => props.onPaymentUpload(file, homeId, props.user, callback)} onPaymentUpdate={(paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => props.onPaymentUpdate(paymentId, transaction, props.appUser.homeIndex, props.user, callback)} />);\r\n    } else {\r\n      return (<View id='mainContent'><Text className='m-20'>No house assigned to you. Please contact administrator/manager.</Text></View>);\r\n    }\r\n  } else if (props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER) {\r\n    return (<AMHome history={props.history} appUser={props.appUser} user={props.user} users={props.users} homes={props.homes} blocks={props.blocks} />);\r\n  } else if (props.appUser.role === ROLE.GATEKEEPER) {\r\n    return (<GKHome history={props.history} appUser={props.appUser} user={props.user} homes={props.homes} gateNo={props.gateNo} onGateNoChanged={props.onGateNoChanged} onSaveVisitor={props.onSaveVisitor} onUpload={props.onUpload} onSearchVisitor={props.onSearchVisitor} />);\r\n  } else {\r\n    return (<View id='mainContent'><Text className='m-20'>No role assigned to you. Please contact administrator/manager.</Text></View>);\r\n  }\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IMember } from '../../models/home/member';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n////import { number } from 'prop-types';\r\n////import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'member';\r\nlet accountController: string = 'account';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.member) && isNN(result.data.member._id)) {\r\n      sCallback(result.data.member, result.data.homeIds ? result.data.homeIds : []);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Member.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IMember, user: IUser, homeIndex: number, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        let members = user.homes[homeIndex].members;\r\n        var foundIndex = members.findIndex(d => d._id === result.data);\r\n        members[foundIndex]._id = result.data;\r\n        members[foundIndex].number = data.number;\r\n        members[foundIndex].name = data.name;\r\n        members[foundIndex].age = data.age;\r\n        members[foundIndex].gender = data.gender;\r\n        members[foundIndex].mobileNo = data.mobileNo;\r\n        members[foundIndex].emailId = data.emailId;\r\n        members[foundIndex].type = data.type;\r\n        \r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    data = Object.assign(data, {\r\n      password: data.mobileNo\r\n    });\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        let members = user.homes[homeIndex].members;\r\n        members.push(data);\r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const saveByAM = (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    isAM: true,\r\n    homeIds: homeIds,\r\n    isApprove: isApprove\r\n  });\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          var foundIndex = users.data.findIndex(d => d._id === result.data);\r\n          if(foundIndex >= 0){\r\n            users.data[foundIndex]._id = result.data;\r\n            users.data[foundIndex].name = data.name;\r\n          } else {\r\n            users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          }\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const removeByAM = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadWFAUsers = (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(accountController + '/wfausers', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNNObject(result) && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const reject = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(accountController + '/rejectuser/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  data: Array<{title: string, link: string}>\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return (\r\n    <div className='mB-10'>\r\n      <Link to=''>Home</Link>\r\n      {props.data.map((d, i) => {\r\n        return(<>\r\n        <span key={'bd' + i} className='mL-10 mR-10'>/</span>\r\n        {(i === props.data.length - 1) ?\r\n        <span key={'bc' + i}>{d.title}</span>\r\n        :\r\n        <Link key={'bc' + i} to={'/' + d.link}>{d.title}</Link>\r\n        }\r\n        </>);\r\n      })}\r\n    </div>\r\n  );\r\n}","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUsers } from '../models/store/users';\r\nimport { IUser } from '../models/user/user';\r\nimport { IMember } from '../models/home';\r\nimport { save, remove } from '../store/actions/member';\r\nimport Page from '../components/home/members';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    users: state.Users,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, sCallback)),\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, sCallback: (result: boolean) => void) => dispatch(remove(id, homeIndex, user, users, sCallback))\r\n});\r\n\r\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport {confirmAlert} from 'react-confirm-alert';\r\nimport {View, Text, TextInput} from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport RadioButton from '../common/radio-button';\r\nimport {IUsers} from '../../models/store/users';\r\nimport {IUser} from '../../models/user/user';\r\nimport {IMember} from '../../models/home/member';\r\nimport {isNN} from '../../util/index';\r\nimport Toast from '../../util/toast';\r\nimport { APPTYPE } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => void,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [state, setState] = useState({\r\n    id: '',\r\n    number: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    type: 'TENANT',\r\n    role: 'USER'\r\n  });\r\n\r\n  const onSave = () => {\r\n    if (isNN(state.name) && state.age > 0 && isNN(state.gender) && isNN(state.type)) {\r\n      setIsLoading(true);\r\n      const member = {\r\n        _id: state.id,\r\n        number: state.number,\r\n        name: state.name,\r\n        age: state.age,\r\n        gender: state.gender,\r\n        mobileNo: state.mobileNo,\r\n        emailId: state.emailId ? state.emailId.toLowerCase() : '',\r\n        type: state.type,\r\n        role: state.role,\r\n      } as IMember;\r\n      props.onSave(member, props.user, props.homeIndex, (result: boolean, message: string) => {\r\n        setIsLoading(false);\r\n        if (result === true) {\r\n          setIsEdit(false);\r\n          setState({\r\n            id: '',\r\n            number: '',\r\n            name: '',\r\n            age: 0,\r\n            gender: '',\r\n            mobileNo: '',\r\n            emailId: '',\r\n            type: 'TENANT',\r\n            role: 'USER',\r\n          });\r\n          Toast.success('Member saved successfully.');\r\n        } else {\r\n          Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n        }\r\n      });\r\n    } else {\r\n      // Toast.warn('Please fill all the required fields before '+ (state.id > 0 ? 'Update' : 'Save') + '.');\r\n      Toast.warn('Please fill all the required fields before '+ (state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, props.homeIndex, props.user, props.users, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if (result === true) {\r\n                Toast.success('Member removed successfully.');\r\n              } else {\r\n                Toast.fail('Failed to remove member.');\r\n              }\r\n            });\r\n          },\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {},\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n    return (\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n            <Breadcrum data={[{title: 'Members', link: 'members'}]} />\r\n            <View className='bgc-white p-20'>\r\n              <View>\r\n                <Text className='fl-r cur-p c-blue-500' onClick={() => props.history.push('new-member')}>Add New</Text>\r\n              </View>\r\n              {isNN(props.user.homes[props.homeIndex].members) ?\r\n        props.user.homes[props.homeIndex].members.map((d: IMember, i: number) => {\r\n          return (\r\n            (isEdit === true && state.id === d._id) ?\r\n            <View key={i} className='bdB mT-5'>\r\n              {(props.user.client.config.appType == APPTYPE.QUARTERS && isNN(d.number)) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Number: ' + d.number}</Text>                  \r\n                </View>\r\n              }\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' value={state.name} onChange={(event: any) => setState({...state, name: event.target.value})} />\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} value={state.age > 0 ? state.age + '' : ''} onChange={(event: any) => setState({...state, age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <RadioButton isActive={state.gender === 'M'} text='Male' onPress={() => setState({...state, gender: 'M'})} />\r\n                <RadioButton isActive={state.gender === 'F'} text='Female' onPress={() => setState({...state, gender: 'F'})} />\r\n                {props.user.client.config.hasOtherGender &&\r\n                <RadioButton isActive={state.gender === 'O'} text='Other' onPress={() => setState({...state, gender: 'O'})} />\r\n                }\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' value={state.mobileNo} onChange={(event: any) => setState({...state, mobileNo: event.target.value})} />\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <TextInput type='text' placeholder=\"Email ID\" className='form-control' value={state.emailId} onChange={(event: any) => setState({...state, emailId: event.target.value})} />\r\n              </View>\r\n              {/* <View className='mT-1 mB-3 p-2'>\r\n                <RadioButton isActive={state.type === 'OWNER'} text='Owner' onPress={() => setState({...state, type: 'OWNER'})} />\r\n                <RadioButton isActive={state.type === 'TENANT'} text='Tenant' onPress={() => setState({...state, type: 'TENANT'})} />\r\n              </View> */}\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={onSave}>\r\n                  <i className=\"c-green-500 fa fa-check\"></i>\r\n                </span>\r\n\t\t\t\t      <span className=\"icon-holder cur-p\" onClick={() => {\r\n                setIsEdit(false);\r\n                  setState({\r\n                    ...state,\r\n                    id: '',\r\n                    number: '',\r\n                    name: '',\r\n                    age: 0,\r\n                    gender: '',\r\n                    mobileNo: '',\r\n                    emailId: '',\r\n                    type: 'TENANT',\r\n                    role: 'USER',\r\n                  });\r\n                }}>\r\n\t\t\t\t\t      <i className=\"c-red-500 fa fa-times\"></i>\r\n\t\t\t\t      </span>\r\n              </View>\r\n            </View> :\r\n            <View key={i} className='bdB mT-5'>\r\n              {(props.user.client.config.appType == APPTYPE.QUARTERS && isNN(d.number)) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Number: ' + d.number}</Text>                  \r\n                </View>\r\n              }\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.name}</Text>\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n              </View>\r\n              {isNN(d.mobileNo) &&\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.emailId) &&\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.emailId}</Text>\r\n              </View>\r\n              }\r\n              {/* <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.type}</Text>\r\n              </View> */}\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                  setIsEdit(true);\r\n                  setState({\r\n                    ...state,\r\n                    id: d._id,\r\n                    number: d.number,\r\n                    name: d.name,\r\n                    age: d.age,\r\n                    gender: d.gender,\r\n                    mobileNo: d.mobileNo,\r\n                    emailId: d.emailId,\r\n                    type: d.type,\r\n                    role: d.role,\r\n                  });\r\n                }}>\r\n                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                </span>\r\n                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                  onRemove(d._id);\r\n                }}>\r\n                  <i className=\"c-red-500 fa fa-trash\"></i>\r\n                </span>\r\n              </View>\r\n            </View>\r\n          );\r\n        }) :\r\n        <Text className='p-20'>No member found.</Text>\r\n              }\r\n              <Spinner visible={isLoading} />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n};\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IMember } from '../models/home';\r\nimport { save } from '../store/actions/member';\r\nimport Page from '../components/home/new-member';\r\n////import { number } from 'prop-types';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, sCallback))\r\n});\r\n\r\nexport const NewMember = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IMember } from '../../models/home';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [state, setState] = useState({\r\n    id: '',\r\n    number: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    type: 'TENANT',\r\n    role: 'USER'\r\n  });\r\n  \r\n  const onSave = () => {\r\n    if(isNN(state.name) && state.age > 0 && isNN(state.gender) && isNN(state.type)){\r\n        setIsLoading(true);\r\n        let member = {\r\n          _id: state.id,\r\n          number: '',\r\n          name: state.name,\r\n          age: state.age,\r\n          gender: state.gender,\r\n          mobileNo: state.mobileNo,\r\n          emailId: state.emailId ? state.emailId.toLowerCase() : '',\r\n          type: state.type,\r\n          role: state.role\r\n        } as IMember;\r\n        props.onSave(member, props.user, props.homeIndex, (result: boolean, message: string) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setState({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'TENANT',\r\n              role: 'USER'\r\n            });\r\n            // props.navigation.navigation.goBack(null)\r\n            Toast.success('Member saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n            <Breadcrum data={[{title: 'Members', link: 'members'}, {title: 'New Member', link: 'new-member'}]} />\r\n            <View className='bgc-white p-20'>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' value={state.name} onChange={(event: any) => setState({...state, name: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} value={state.age > 0 ? state.age + '' : ''} onChange={(event: any) => setState({...state, age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={state.gender === 'M'} text='Male' onPress={() => setState({...state, gender: 'M'})} />\r\n            <RadioButton isActive={state.gender === 'F'} text='Female' onPress={() => setState({...state, gender: 'F'})} />\r\n            {props.user.client.config.hasOtherGender &&\r\n            <RadioButton isActive={state.gender === 'O'} text='Other' onPress={() => setState({...state, gender: 'O'})} />\r\n            }\r\n          </View>            \r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' value={state.mobileNo} onChange={(event: any) => setState({...state, mobileNo: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' value={state.emailId} onChange={(event: any) => setState({...state, emailId: event.target.value})} />\r\n          </View>\r\n          {/* <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={state.type === 'OWNER'} text='Owner' onPress={() => setState({...state, type: 'OWNER'})} />\r\n            <RadioButton isActive={state.type === 'TENANT'} text='Tenant' onPress={() => setState({...state, type: 'TENANT'})} />\r\n          </View> */}\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { actionTypes } from '../action-types';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'vehicle';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IVehicle, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let vehicles = user.homes[homeIndex].vehicles;\r\n        var foundIndex = vehicles.findIndex(d => d._id === result.data);\r\n        vehicles[foundIndex]._id = result.data;\r\n        vehicles[foundIndex].number = data.number;\r\n        vehicles[foundIndex].type = data.type;\r\n        user.homes[homeIndex].vehicles = vehicles;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n  new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      data._id = result.data;\r\n      data.createdBy = user.name;\r\n      let vehicles = user.homes[homeIndex].vehicles;\r\n      vehicles.push(data);\r\n      user.homes[homeIndex].vehicles = vehicles;\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].vehicles = user.homes[homeIndex].vehicles.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVehicle } from '../models/home';\r\nimport { save, remove } from '../store/actions/vehicle';\r\nimport Page from '../components/home/vehicles';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, sCallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, sCallback))\r\n});\r\n\r\nexport const Vehicles = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Text, TextInput, } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [type, setType] = useState('');\r\n  \r\n  const onSave = () => {\r\n    if(isNN(number) && isNN(type)){\r\n      setIsLoading(true);\r\n        let vehicle = {\r\n          _id: id,\r\n          number: number,\r\n          type: type\r\n        } as IVehicle;\r\n        props.onSave(vehicle, props.user, props.homeIndex, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setIsEdit(false);\r\n            setId('');\r\n            setNumber('');\r\n            setType('');\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, props.user, props.homeIndex, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                Toast.success('Vehicle removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove vehicle.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Vehicles', link: 'vehicles'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View>\r\n          <Text className='fl-r cur-p c-blue-500' onClick={() => props.history.push('new-vehicle')}>Add New</Text>\r\n        </View>\r\n        {isNN(props.user.homes[props.homeIndex].vehicles) ?\r\n          props.user.homes[props.homeIndex].vehicles.map((d: IVehicle, i: number) => {\r\n            return(\r\n              (isEdit === true && id === d._id) ?\r\n              <View key={i} className='bdB mT-5'>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <RadioButton isActive={type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => setType('TWO WHEELER')} />\r\n                  <RadioButton isActive={type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => setType('FOUR WHEELER')} />\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                <TextInput type='text' placeholder=\"Number\" className='form-control' value={number} onChange={(event: any) => setNumber(event.target.value)} />\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={onSave}>\r\n                  <i className=\"c-green-500 fa fa-check\"></i>\r\n                </span>\r\n                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    setIsEdit(false);\r\n                    setId('');\r\n                    setNumber('');\r\n                    setType('');\r\n                  }}>\r\n                  <i className=\"c-red-500 fa fa-times\"></i>\r\n                </span>\r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} className='bdB mT-5'>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.type}</Text>                  \r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.number}</Text>\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                    setIsEdit(true);\r\n                    setId(d._id);\r\n                    setNumber(d.number);\r\n                    setType(d.type);\r\n                  }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    onRemove(d._id);\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text className='p-20'>No vehicle found.</Text>\r\n        }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVehicle } from '../models/home';\r\nimport { save } from '../store/actions/vehicle';\r\nimport Page from '../components/home/new-vehicle';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, sCallback))\r\n});\r\n\r\nexport const NewVehicle = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [type, setType] = useState('');\r\n\r\n  const onSave = () => {\r\n    if(isNN(number) && isNN(type)){\r\n      setIsLoading(true);\r\n        let vehicle = {\r\n          _id: id,\r\n          number: number,\r\n          type: type\r\n        } as IVehicle;\r\n        props.onSave(vehicle, props.user, props.homeIndex, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n              setId('');\r\n              setNumber('');\r\n              setType('');\r\n            // props.navigation.navigation.goBack(null)\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Vehicles', link: 'vehicles'}, {title: 'New Vehicle', link: 'new-vehicle' }]} />  \r\n        <View className='bgc-white p-20'>        \r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' value={number} onChange={(event: any) => setNumber(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => setType('TWO WHEELER')} />\r\n            <RadioButton isActive={type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => setType('FOUR WHEELER')} />\r\n          </View>\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { IServant, ITakeaway } from '../../models/home/servant';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'servant';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Servants.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IServant, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n      //   let servants = user.homes[homeIndex].servants;\r\n      //   var foundIndex = servants.findIndex(d => d._id === result.data);\r\n      //   servants[foundIndex]._id = result.data;\r\n      //   servants[foundIndex].name = data.name;\r\n      //   servants[foundIndex].age = data.age;\r\n      //   servants[foundIndex].gender = data.gender;\r\n      //   servants[foundIndex].mobileNo = data.mobileNo;\r\n      //   servants[foundIndex].emailId = data.emailId;\r\n           \r\n      //   user.homes[homeIndex].servants = servants;\r\n      //   dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // data._id = result.data;\r\n        // data.createdBy = user.name;\r\n        // let servants = user.homes[homeIndex].servants;\r\n        // servants.push(data);\r\n        // user.homes[homeIndex].servants = servants;\r\n        // dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // user.homes[homeIndex].servants = user.homes[homeIndex].servants.filter((d, i) => d._id !== id);\r\n      // dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const createTakeaway = (id: string, data: ITakeaway, sCallback:(result: string) => void, fCallback:(message: string) => void) => (dispatch: any) => {\r\n  if(isNN(data._id)){\r\n    new Api().put(controller + '/takeaway/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        sCallback(result.data);\r\n      }else{\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to update takeaway.');\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/takeaway/' + id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        sCallback(result.data);\r\n      }else{\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to create Takeaway.');\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const removeTakeaway = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/takeaway/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const exitTakeaway = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/exittakeaway/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, {\r\n    gateNo: gateNo\r\n  });\r\n};\r\n\r\nexport const loadActiveTakeaways = (appClientId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/takeaways/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Takeaways.');\r\n    }\r\n  });\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IServant, ITakeaway } from '../models/home';\r\nimport { loadAllByHome, save, remove, createTakeaway, removeTakeaway } from '../store/actions/servant';\r\nimport Page from '../components/home/servants';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => dispatch(loadAllByHome(homeId, sCallback, fCallback)),\r\n    onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => dispatch(save(homeId, data, sCallback)),\r\n    onRemove: (id: string, sCallback: (result: boolean) => void) => dispatch(remove(id, sCallback)),\r\n    onCreateTakeaway: (id: string, data: ITakeaway, sCallback:(result: string) => void, fCallback:(message: string) => void) => dispatch(createTakeaway(id, data, sCallback, fCallback)),\r\n    onRemoveTakeaway: (id: string, sCallback: (result: boolean) => void) => dispatch(removeTakeaway(id, sCallback))\r\n});\r\n\r\nexport const Servants = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Text, TextInput, TextArea } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServant, ITakeaway } from '../../models/home/servant';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\nimport Button from '../common/button';\r\nimport { toDateTimeString } from '../../util/convert';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, sCallback: (result: boolean) => void) => void,\r\n  onCreateTakeaway: (id: string, data: ITakeaway, sCallback:(result: string) => void, fCallback:(message: string) => void) => void,\r\n  onRemoveTakeaway: (id: string, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [state, setState] = useState({\r\n    data: [] as Array<IServant>,\r\n    id: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    viewId: '',\r\n    takeaways: [] as Array<ITakeaway>,\r\n    takeawayTitle: '',\r\n    takeawayDesc: '',\r\n    editTakeawayId: '',\r\n    editTakeawayTitle: '',\r\n    editTakeawayDesc: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.homes[props.homeIndex]._id, (result: Array<IServant>) => {\r\n      setIsLoading(false);\r\n      setState({\r\n        ...state,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      setIsLoading(false);\r\n      Toast.fail(message);\r\n    });\r\n  }, []);\r\n  \r\n  const onSave = () => {\r\n    if(isNN(state.name) && state.age > 0 && isNN(state.gender)){\r\n      setIsLoading(true);\r\n        let servant = {\r\n          _id: state.id,\r\n          name: state.name,\r\n          age: state.age,\r\n          gender: state.gender,\r\n          mobileNo: state.mobileNo,\r\n          emailId: state.emailId ? state.emailId.toLowerCase() : ''\r\n        } as IServant;\r\n        props.onSave(props.user.homes[props.homeIndex]._id, servant, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            let tData = state.data;\r\n            var foundIndex = tData.findIndex(d => d._id === state.id);\r\n            tData[foundIndex].name = state.name;\r\n            tData[foundIndex].age = state.age;\r\n            tData[foundIndex].gender = state.gender;\r\n            tData[foundIndex].mobileNo = state.mobileNo;\r\n            tData[foundIndex].emailId = state.emailId;\r\n            setIsEdit(false);\r\n            setState({\r\n              ...state,\r\n              data: tData,\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              viewId: '',\r\n              takeaways: [],\r\n              takeawayTitle: '',\r\n              takeawayDesc: '',\r\n              editTakeawayId: '',\r\n              editTakeawayTitle: '',\r\n              editTakeawayDesc: ''\r\n            });\r\n            Toast.success('Servant saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servant.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                setState({\r\n                  ...state,\r\n                  data: state.data.filter((d, i) => d._id !== id),\r\n                  viewId: '',\r\n                  takeaways: [],\r\n                  takeawayTitle: '',\r\n                  takeawayDesc: '',\r\n                  editTakeawayId: '',\r\n                  editTakeawayTitle: '',\r\n                  editTakeawayDesc: ''\r\n                });\r\n                Toast.success('Servant removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove servant.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n  \r\n  const onView = (id: string, takeaways: Array<ITakeaway>) => {\r\n    if(state.viewId === id){\r\n      setState({\r\n        ...state,\r\n        viewId: '',\r\n        takeaways: [],\r\n        takeawayTitle: '',\r\n        takeawayDesc: '',\r\n        editTakeawayId: '',\r\n        editTakeawayTitle: '',\r\n        editTakeawayDesc: ''\r\n      });\r\n    }else{\r\n      setState({\r\n        ...state,\r\n        viewId: id,\r\n        takeaways: takeaways,\r\n        takeawayTitle: '',\r\n        takeawayDesc: '',\r\n        editTakeawayId: '',\r\n        editTakeawayTitle: '',\r\n        editTakeawayDesc: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const onCreateTakeaway = (id: string) => {\r\n    if(isNN(state.takeawayTitle) && isNN(state.takeawayDesc)){\r\n      setIsLoading(true);\r\n      props.onCreateTakeaway(id, {\r\n        _id: '',\r\n        title: state.takeawayTitle,\r\n        description: state.takeawayDesc,\r\n        createdBy: props.user.name,\r\n        createdAt: new Date(),\r\n        updatedBy: props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITakeaway, (result: string) => {\r\n        setIsLoading(false);\r\n        let tData = state.data;\r\n        var foundIndex = tData.findIndex(d => d._id === id);\r\n        tData[foundIndex].takeaways.unshift({\r\n          _id: result,\r\n          title: state.takeawayTitle,\r\n          description: state.takeawayDesc,\r\n          createdAt: new Date(),\r\n          createdBy: props.user.name,\r\n          updatedBy: props.user._id,\r\n          updatedAt: new Date()\r\n        } as ITakeaway);\r\n        setState({\r\n          ...state,\r\n          data: tData,\r\n          takeawayTitle: '',\r\n          takeawayDesc: ''\r\n        });\r\n        Toast.success('Takeayway added successfully.');\r\n      }, (message: string) => {\r\n        setIsLoading(false);\r\n        Toast.fail('Failed to add takeaway.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill Takeaway title & description before Add.');\r\n    }\r\n  };\r\n\r\n  const onUpdateTakeaway = (id: string) => {\r\n    if(isNN(state.editTakeawayTitle) && isNN(state.editTakeawayDesc)){\r\n      setIsLoading(true);\r\n      props.onCreateTakeaway(id, {\r\n        _id: state.editTakeawayId,\r\n        title: state.editTakeawayTitle,\r\n        description: state.editTakeawayDesc,\r\n        createdBy: props.user.name,\r\n        createdAt: new Date(),\r\n        updatedBy: props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITakeaway, (result: string) => {\r\n        setIsLoading(false);\r\n        let tData = state.data;\r\n        var foundIndex = tData.findIndex(d => d._id === id);        \r\n        var takeawayIndex = tData[foundIndex].takeaways.findIndex(d => d._id === state.editTakeawayId);\r\n        tData[foundIndex].takeaways[takeawayIndex].title = state.editTakeawayTitle;\r\n        tData[foundIndex].takeaways[takeawayIndex].description = state.editTakeawayDesc;\r\n        tData[foundIndex].takeaways[takeawayIndex].updatedBy = props.user.name;\r\n        tData[foundIndex].takeaways[takeawayIndex].updatedAt = new Date();\r\n        setState({\r\n          ...state,\r\n          data: tData,\r\n          editTakeawayId: '',\r\n          editTakeawayTitle: '',\r\n          editTakeawayDesc: ''\r\n        });\r\n        Toast.success('Takeayway updated successfully.');\r\n      }, (message: string) => {\r\n        setIsLoading(false);\r\n        Toast.fail('Failed to update takeaway.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill Takeaway title & description before Add.');\r\n    }\r\n  };\r\n\r\n  const onRemoveTakeaway = (id: string, servantId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete this takeaway?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemoveTakeaway(id, (result: boolean) => {\r\n              setIsLoading(false);\r\n              let tData = state.data;\r\n              var foundIndex = tData.findIndex(d => d._id === servantId);        \r\n              tData[foundIndex].takeaways = tData[foundIndex].takeaways.filter((d, i) => d._id !== id);\r\n              if(result === true){\r\n                setState({\r\n                  ...state,\r\n                  data: tData,\r\n                  editTakeawayId: '',\r\n                  editTakeawayTitle: '',\r\n                  editTakeawayDesc: '',\r\n                  viewId: ''\r\n                });\r\n                Toast.success('Takeaway removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove takeaway.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Servants', link: 'servants'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View>\r\n          <Text className='fl-r cur-p c-blue-500' onClick={() => props.history.push('new-servant')}>Add New</Text>\r\n        </View>\r\n        {isNN(state.data) ?\r\n          state.data.map((d: IServant, i: number) => {\r\n            return(\r\n              (isEdit === true && state.id === d._id) ?\r\n              <View key={i} className='bdB mT-5'>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' value={state.name} onChange={(event: any) => setState({...state, name: event.target.value})} />\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} value={state.age > 0 ? state.age + '' : ''} onChange={(event: any) => setState({...state, age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <RadioButton isActive={state.gender === 'M'} text='Male' onPress={() => setState({...state, gender: 'M'})} />\r\n                  <RadioButton isActive={state.gender === 'F'} text='Female' onPress={() => setState({...state, gender: 'F'})} />\r\n                  {props.user.client.config.hasOtherGender &&\r\n                  <RadioButton isActive={state.gender === 'O'} text='Other' onPress={() => setState({...state, gender: 'O'})} />\r\n                  }\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' value={state.mobileNo} onChange={(event: any) => setState({...state, mobileNo: event.target.value})} />\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <TextInput type='text' placeholder=\"Email Id\" className='form-control' value={state.emailId} onChange={(event: any) => setState({...state, emailId: event.target.value})} />\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={onSave}>\r\n\t\t\t\t\t          <i className=\"c-green-500 fa fa-check\"></i>\r\n\t\t\t\t          </span>\r\n\t\t\t\t          <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    setIsEdit(false);\r\n                    setState({\r\n                      ...state,\r\n                      id: '',\r\n                      name: '',\r\n                      age: 0,\r\n                      gender: '',\r\n                      mobileNo: '',\r\n                      emailId: '',\r\n                      viewId: '',\r\n                      takeaways: [],\r\n                      takeawayTitle: '',\r\n                      takeawayDesc: '',\r\n                      editTakeawayId: '',\r\n                      editTakeawayTitle: '',\r\n                      editTakeawayDesc: ''\r\n                    });\r\n                  }}>\r\n\t\t\t\t\t          <i className=\"c-red-500 fa fa-times\"></i>\r\n\t\t\t\t          </span>\r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} className='bdB mT-5'>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                    setIsEdit(true);\r\n                    setState({\r\n                      ...state,\r\n                      id: d._id,\r\n                      name: d.name,\r\n                      age: d.age,\r\n                      gender: d.gender,\r\n                      mobileNo: d.mobileNo,\r\n                      emailId: d.emailId,\r\n                      viewId: '',\r\n                      takeaways: [],\r\n                      takeawayTitle: '',\r\n                      takeawayDesc: '',\r\n                      editTakeawayId: '',\r\n                      editTakeawayTitle: '',\r\n                      editTakeawayDesc: ''\r\n                    });\r\n                  }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n                    onRemove(d._id);\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n                  <span onClick={() => {\r\n                    onView(d._id, d.takeaways);\r\n                  }}>\r\n                    <Text className='cur-p c-blue-500'>{(state.viewId === d._id ? 'Hide' : 'View') + ' Takeaways'}</Text>\r\n                  </span>   \r\n                </View>\r\n                {state.viewId === d._id &&\r\n                <View className='mT-5 mB-5'>\r\n                  <View>\r\n                    <Text className='fw-600'>Takeaways</Text>\r\n                  </View>\r\n                  <View className='p-15'>\r\n                    <View className='mT-5 mB-5'>\r\n                      <TextInput type='text' placeholder='Takeaway Title' className='form-control mB-10' value={state.takeawayTitle} onChange={(event: any) => setState({...state, takeawayTitle: event.target.value})} />\r\n                      <TextArea placeholder='Takeaway Description' className='form-control bd' value={state.takeawayDesc} onChange={(event: any) => setState({...state, takeawayDesc: event.target.value})} />\r\n                      <View className='mT-5'>\r\n                        <Button\r\n                          title='ADD NEW TAKEAWAY'\r\n                          onPress={() => onCreateTakeaway(d._id)}\r\n                          />\r\n                      </View>\r\n                    </View>\r\n                    {isNN(state.takeaways) ?\r\n                      state.takeaways.map((e: ITakeaway, j: number) => {\r\n                        return(\r\n                        <View key={'tkycmt' + j} className={'pL-3 pR-3 pT-5 pB-5' + (j === 0 ? '' : ' bdT')}>\r\n                          <View>\r\n                            <Text className='fw-600'>{e.createdBy + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                          </View>\r\n                          <View>\r\n                            {\r\n                              (state.editTakeawayId === e._id && !e.isExit) ?\r\n                              <TextInput type='text' placeholder='Takeaway Title' className='form-control mB-10' value={state.editTakeawayTitle} onChange={(event: any) => setState({...state, editTakeawayTitle: event.target.value})} />\r\n                              :\r\n                              <Text>{e.title}</Text>\r\n                            }\r\n                          </View>\r\n                          <View>\r\n                            {\r\n                              (state.editTakeawayId === e._id && !e.isExit) ?\r\n                              <TextArea placeholder='Takeaway Description' className='form-control bd' value={state.editTakeawayDesc} onChange={(event: any) => setState({...state, editTakeawayDesc: event.target.value})} />\r\n                              :\r\n                              <Text>{e.description}</Text>\r\n                            }\r\n                          </View>\r\n                          {\r\n                            e.isExit ?\r\n                          <View>\r\n                            <Text className='c-green-600'>{'Exit by ' + e.exitBy + ' in Gate ' + e.exitGateNo + ' on ' + toDateTimeString(e.exitAt)}</Text>\r\n                          </View>\r\n                          :\r\n                          <View>\r\n                            <Text className='c-red-600'>Still not exit.</Text>\r\n                          </View>\r\n                          }\r\n                          {\r\n                            !e.isExit &&\r\n                            <>\r\n                              {\r\n                              state.editTakeawayId === e._id ?\r\n                              <View className='mT-1 mB-3 p-2'>\r\n                                <span className=\"icon-holder mR-10 cur-p\" onClick={() => onUpdateTakeaway(d._id)}>\r\n                                  <i className=\"c-green-500 fa fa-check\"></i>\r\n                                </span>\r\n                                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                                  setState({\r\n                                    ...state,\r\n                                    editTakeawayId: '',\r\n                                    editTakeawayTitle: '',\r\n                                    editTakeawayDesc: ''\r\n                                  });\r\n                                }}>\r\n                                  <i className=\"c-red-500 fa fa-times\"></i>\r\n                                </span>\r\n                              </View>\r\n                              :\r\n                              <View className='mT-1 mB-3 p-2'>\r\n                                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                                  setState({\r\n                                    ...state,\r\n                                    editTakeawayId: e._id,\r\n                                    editTakeawayTitle: e.title,\r\n                                    editTakeawayDesc: e.description\r\n                                  });\r\n                                }}>\r\n                                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                                  </span>\r\n                                  <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n                                    onRemoveTakeaway(e._id, d._id);\r\n                                  }}>\r\n                                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                                  </span>\r\n                              </View>\r\n                              }\r\n                            </>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text className='p-20'>No takeaway found.</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text className='p-20'>No servant found.</Text>\r\n        }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IServant } from '../models/home';\r\nimport { loadActiveTakeaways, exitTakeaway } from '../store/actions/servant';\r\n\r\nimport Page from '../components/home/gatekeeper/takeaways';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) =>  dispatch(loadActiveTakeaways(appClientId, sCallback, fCallback)),\r\n    onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(exitTakeaway(id, gateNo, callback))\r\n});\r\n\r\nexport const AllTakeaways = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IServant, ITakeaway } from '../../../models/home/servant';\r\nimport Toast from  '../../../util/toast';\r\nimport { isNN } from '../../../util';\r\nimport { toDateTimeString } from '../../../util/convert';\r\nimport { ROLE } from '../../../constants';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void,\r\n  onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([] as Array<IServant>);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, (result: Array<IServant>) => {\r\n      setIsLoading(false);\r\n      setData(result);\r\n    }, (message: string) => {\r\n      setIsLoading(false);\r\n      Toast.fail(message);\r\n    });\r\n  }, []);\r\n\r\n  const onExit = (id: string, servantId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Exit Servant with Takeaway',\r\n      message: 'Are you sure you wish to exit the servant with this takeaway things?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onExit(id, props.gateNo, (result: boolean) => {\r\n              if(result === true){\r\n                let tData = data;\r\n                var foundIndex = tData.findIndex(d => d._id === servantId);\r\n                tData[foundIndex].takeaways = tData[foundIndex].takeaways.filter(d => d._id !== id);\r\n                setData(tData);\r\n                setIsLoading(false);\r\n                Toast.success('Servant exit with takeaway successfully.');\r\n              }else{\r\n                setIsLoading(false);\r\n                Toast.fail('Failed to exit servant with takeaway.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Takeaways', link: 'all-takeaways'}]} />\r\n          <View className='bgc-white p-20'>\r\n            {(isNN(data) && isNN(data.filter(d => d.takeaways && d.takeaways.length > 0))) ?\r\n              data.filter(d => d.takeaways && d.takeaways.length > 0).map((d: IServant, i: number) => {\r\n              return(\r\n                <View key={i} className='mT-5 bdB'>\r\n                  <View className='mB-3'>\r\n                    <Text className='fw-600'>{d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n                  </View>\r\n                  <View className='mB-3'>\r\n                    <Text>{d.name}</Text>\r\n                  </View>\r\n                  <View className='mB-3'>\r\n                    <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n                  </View>\r\n                  {isNN(d.mobileNo) &&\r\n                  <View className='mB-3'>\r\n                    <Text>{d.mobileNo}</Text>\r\n                  </View>\r\n                  }\r\n                  {isNN(d.emailId) &&\r\n                  <View className='mB-3'>\r\n                    <Text>{d.emailId}</Text>\r\n                  </View>\r\n                  }\r\n                  <View className='mT-5 mB-5'>\r\n                    <View>\r\n                      <Text className='fw-600'>Takeaways</Text>\r\n                    </View>\r\n                    <View className='pL-15 pR-15 pB-15 pT-3'>\r\n                      {isNN(d.takeaways) ?\r\n                        d.takeaways.map((e: ITakeaway, j: number) => {\r\n                          return(\r\n                          <View key={'tkycmt' + j} className={'pT-5 pB-5 pR-3 pL-3' + (j === 0 ? '' : ' bdB')}>\r\n                            <View>\r\n                              <Text className='fw-600'>{e.createdBy + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                            </View>\r\n                            <View>\r\n                              <Text>{e.title}</Text>\r\n                            </View>\r\n                            <View>\r\n                              <Text>{e.description}</Text>\r\n                            </View>\r\n                            {props.appUser.role === ROLE.GATEKEEPER &&\r\n                            <View className='mT-10'>\r\n                              {!e.isExit && <Button title='Exit' onPress={() => {onExit(e._id, d._id);}} />}\r\n                            </View>\r\n                            }\r\n                          </View>\r\n                          )\r\n                        })\r\n                        :\r\n                        <Text className='p-20'>No takeaway found.</Text>\r\n                      }\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n                );\r\n            })\r\n            :\r\n            <Text>No data found.</Text>\r\n            }\r\n            <Spinner visible={isLoading} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IServant } from '../models/home';\r\nimport { save } from '../store/actions/servant';\r\nimport Page from '../components/home/new-servant';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => dispatch(save(homeId, data, sCallback))\r\n});\r\n\r\nexport const NewServant = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServant } from '../../models/home';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [age, setAge] = useState(0);\r\n  const [gender, setGender] = useState('');\r\n  const [mobileNo, setMobileNo] = useState('');\r\n  const [emailId, setEmailId] = useState('');\r\n\r\n  const onSave = () => {\r\n    if(isNN(name) && age > 0 && isNN(gender)){\r\n      setIsLoading(true);\r\n        let servant = {\r\n          _id: id,\r\n          name: name,\r\n          age: age,\r\n          gender: gender,\r\n          mobileNo: mobileNo,\r\n          emailId: emailId ? emailId.toLowerCase() : ''\r\n        } as IServant;\r\n        props.onSave(props.user.homes[props.homeIndex]._id, servant, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setId('');\r\n            setName('');\r\n            setAge(0);\r\n            setGender('');\r\n            setMobileNo('');\r\n            setEmailId('');\r\n            // props..navigation.goBack(null)\r\n            Toast.success('Servant saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servant.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Servants', link: 'servants'}, {title: 'New Servant', link: 'new-servant' }]} />  \r\n        <View className='bgc-white p-20'>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' value={name} onChange={(event: any) => setName(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={3} value={age > 0 ? age + '' : ''} onChange={(event: any) => setAge(+(event.target.value.replace(/[^0-9]/g, '')))} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={gender === 'M'} text='Male' onPress={() => setGender('M')} />\r\n            <RadioButton isActive={gender === 'F'} text='Female' onPress={() => setGender('F')} />\r\n            {props.user.client.config.hasOtherGender &&\r\n            <RadioButton isActive={gender === 'O'} text='Other' onPress={() => setGender('O')} />\r\n            }\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' value={mobileNo} onChange={(event: any) => setMobileNo(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Email Id\" className='form-control' value={emailId} onChange={(event: any) => setEmailId(event.target.value)}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, onSave);\r\n            }} />\r\n          </View>\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\n\r\nlet controller: string = 'ticket';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getTicketsResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      dispatch(getTicketsResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Tickets.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          if(isNN(tickets.data)) {\r\n            let arrTickets = [] as Array<ITicket>;\r\n            arrTickets = tickets.data;\r\n            var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n            arrTickets[foundIndex]._id = result.data;\r\n            arrTickets[foundIndex].category = data.category\r\n            arrTickets[foundIndex].title = data.title;\r\n            arrTickets[foundIndex].description = data.description;\r\n            arrTickets[foundIndex].status = data.status;\r\n            arrTickets[foundIndex].updatedBy = user.name;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n          arrTickets[foundIndex]._id = result.data;\r\n          arrTickets[foundIndex].title = data.title;\r\n          arrTickets[foundIndex].description = data.description;\r\n          arrTickets[foundIndex].status = data.status;\r\n          arrTickets[foundIndex].updatedBy = user.name;\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              _homeId: user.homes[homeIndex].number,\r\n              category: data.category,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      // }\r\n      // if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n      //   user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n      //   dispatch(getUserResult(user as IUser));\r\n      // }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const resolve = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/resolve/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const start = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  let newStatus = 'IN-PROGRESS';\r\n  new Api().put(controller + '/start/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          arrTickets = tickets.data;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n          arrTickets[foundIndex].status = newStatus;\r\n          dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        let arrTickets = user.homes[homeIndex].tickets;\r\n        var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n        arrTickets[foundIndex].status = newStatus;\r\n        user.homes[homeIndex].tickets = arrTickets;\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  },{\r\n    status: newStatus\r\n  });\r\n};\r\n\r\nexport const addComment = (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(isNN(comment._id)){\r\n    new Api().put(controller + '/comment/' + comment._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n            var commentIndex = arrTickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n            // arrTickets[ticketIndex].comments[commentIndex] = result.data;\r\n            arrTickets[ticketIndex].comments[commentIndex].comment = comment.comment;\r\n            arrTickets[ticketIndex].comments[commentIndex].updatedBy = comment.updatedBy;\r\n            arrTickets[ticketIndex].comments[commentIndex].updatedAt = comment.updatedAt;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n          var commentIndex = user.homes[appUser.homeIndex].tickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n          user.homes[appUser.homeIndex].tickets[ticketIndex].comments[commentIndex] = comment;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }else{\r\n    new Api().post(controller + '/comment/' + ticketId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment._id = result.data;\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n              // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n              //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n              // }\r\n              arrTickets[ticketIndex].comments.unshift(comment);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n            // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n            //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n            // }\r\n            user.homes[appUser.homeIndex].tickets[ticketIndex].comments.unshift(comment);\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }\r\n};\r\n\r\nexport const removeComment = (id: string, ticketId: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/comment/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n        if(isNN(tickets.data)) {\r\n          var foundIndex = tickets.data.findIndex(d => d._id === ticketId);\r\n          tickets.data[foundIndex].comments = tickets.data[foundIndex].comments.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { ITicketComment } from '../models/home/ticket-comment';\r\nimport { loadAll, save, remove, resolve, start, addComment, removeComment } from '../store/actions/ticket';\r\nimport Page from '../components/home/tickets';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, homeId, callback)),\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, sCallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, tickets, sCallback)),\r\n    onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(resolve(id, user, homeIndex, tickets, sCallback)),\r\n    onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(start(id, user, homeIndex, tickets, sCallback)),\r\n    onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) =>  dispatch(addComment(ticketId, comment, appUser, user, tickets, callback)),\r\n    onRemoveComment: (id: string, ticketId: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(removeComment(id, ticketId, user, homeIndex, tickets, sCallback))\r\n});\r\n\r\nexport const Tickets = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Text, TextInput, TextArea, Picker } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateTimeString } from '../../util/convert';\r\nimport { ROLE } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => void,\r\n  onRemoveComment: (id: string, ticketId: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [state, setState] = useState({\r\n    data: [] as Array<ITicket>,\r\n    id: '',\r\n    category: '',\r\n    title: '',\r\n    description: '',\r\n    status: 'INIT',\r\n    viewId: '',\r\n    comments: [] as Array<ITicketComment>,\r\n    comment: '',\r\n    editCommentId: '',\r\n    editComment: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, (props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER) ? '' : props.user.homes[props.appUser.homeIndex]._id, (result: boolean) => {\r\n      setIsLoading(false);\r\n      // setState({\r\n      //   ...state,\r\n      //   data: getTickets()\r\n      // });\r\n      if(!result){\r\n        Toast.fail('Failed to load Tickets.');\r\n      }\r\n    });\r\n    /*\r\n    if(props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER) {\r\n      setState({\r\n        isLoading: true\r\n      });\r\n      props.onLoadAll(props.user.client._id, (result: boolean) => {\r\n        setState({\r\n          isLoading: false,\r\n          data: getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }else{\r\n      setState({\r\n        isLoading: true\r\n      });\r\n      props.onLoadAllByHome(props.user, props.appUser.homeIndex, (result: boolean) => {\r\n        setState({\r\n          isLoading: false,\r\n          data: getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }\r\n    */\r\n  }, []);\r\n  \r\n  /*\r\n  getTickets = () => {\r\n    if(props.appUser.role === ROLE.USER) {\r\n      return isNN(props.user.homes[props.appUser.homeIndex].tickets) ? props.user.homes[props.appUser.homeIndex].tickets : [];\r\n    }else if(props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER) {\r\n      return (props.tickets.isUpToDate && !props.tickets.isError && isNN(props.tickets.data)) ? props.tickets.data : [];\r\n    }else{\r\n      return [];\r\n    }\r\n  };\r\n  */\r\n\r\n  const onSave = () => {\r\n    if(isNN(state.category) && isNN(state.title) && isNN(state.description)){\r\n      setIsLoading(true);\r\n        let ticket = {\r\n          _id: state.id,\r\n          category: state.category,\r\n          title: state.title,\r\n          description: state.description,\r\n          status: state.status\r\n        } as ITicket;\r\n        props.onSave(ticket, props.user, props.appUser.homeIndex, props.tickets, (result: boolean) => {          \r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setIsEdit(false);\r\n            setState({\r\n              ...state,\r\n              id: '',\r\n              category: '',\r\n              title: '',\r\n              description: '',\r\n              status: 'INIT',\r\n              viewId: '',\r\n              comments: [],\r\n              comment: '',\r\n              editCommentId: '',\r\n              editComment: ''\r\n            });\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, props.user, props.appUser.homeIndex, props.tickets, (result: boolean) => {\r\n              setIsLoading(false);\r\n              setState({\r\n                ...state,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: '',\r\n                editCommentId: '',\r\n                editComment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onResolve = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to resolve ticket',\r\n      message: 'Are you sure you wish to resolve this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onResolve(id, props.user, props.appUser.homeIndex, props.tickets, (result: boolean) => {\r\n              setIsLoading(false);\r\n              setState({\r\n                ...state,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: '',\r\n                editCommentId: '',\r\n                editComment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket resolved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to resolve ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onStart = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to start ticket',\r\n      message: 'Are you sure you wish to start this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onStart(id, props.user, props.appUser.homeIndex, props.tickets, (result: boolean) => {\r\n              setIsLoading(false);\r\n              setState({\r\n                ...state,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: '',\r\n                editCommentId: '',\r\n                editComment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket started successfully.');\r\n              }else{\r\n                Toast.fail('Failed to start ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(state.viewId === id){\r\n      setState({\r\n        ...state,\r\n        viewId: '',\r\n        comments: [],\r\n        comment: '',\r\n        editCommentId: '',\r\n        editComment: ''\r\n      });\r\n    }else{\r\n      setState({\r\n        ...state,\r\n        viewId: id,\r\n        comments: comments,\r\n        comment: '',\r\n        editCommentId: '',\r\n        editComment: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const onAddComment = (id: string) => {\r\n    if(isNN(state.comment)){\r\n      setIsLoading(true);\r\n      props.onAddComment(id, {\r\n        _id: '',\r\n        comment: state.comment,\r\n        createdBy: props.user._id,\r\n        createdByName: props.user.name,\r\n        createdAt: new Date(),\r\n        updatedBy: props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITicketComment, props.appUser, props.user, props.tickets, (result: boolean) => {\r\n        setIsLoading(false);\r\n        if(result === true){\r\n          setState({\r\n            ...state,\r\n            comment: ''\r\n          });\r\n          Toast.success('Comment added successfully.');\r\n        }else{\r\n          Toast.fail('Failed to add comment.');\r\n        }\r\n      });\r\n  }else{\r\n    Toast.warn('Please fill comment before Add.');\r\n  }\r\n  };\r\n\r\n  const onUpdateComment = (id: string) => {\r\n    if(isNN(state.editCommentId) && isNN(state.editComment)){\r\n      setIsLoading(true);\r\n      props.onAddComment(id, {\r\n        _id: state.editCommentId,\r\n        comment: state.editComment,\r\n        updatedBy: props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITicketComment, props.appUser, props.user, props.tickets, (result: boolean) => {\r\n        setIsLoading(false);\r\n        if(result === true){\r\n          setState({\r\n            ...state,\r\n            editCommentId: '',\r\n            editComment: ''\r\n          });\r\n          Toast.success('Comment updated successfully.');\r\n        }else{\r\n          Toast.fail('Failed to update comment.');\r\n        }\r\n      });\r\n  }else{\r\n    Toast.warn('Please fill comment before update.');\r\n  }\r\n  };\r\n\r\n  const onRemoveComment = (id: string, ticketId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete this comment?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemoveComment(id, ticketId, props.user, props.appUser.homeIndex, props.tickets, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                setState({\r\n                  ...state,\r\n                  editCommentId: '',\r\n                  editComment: '',\r\n                  viewId: ''\r\n                });\r\n                Toast.success('Comment removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove comment.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Tickets', link: 'tickets'}]} />\r\n        <View className='bgc-white p-20'>\r\n        {\r\n          props.appUser.role === ROLE.USER &&\r\n          <View>\r\n            <Text className='fl-r cur-p c-blue-500' onClick={() => props.history.push('new-ticket')}>Add New</Text>\r\n          </View>\r\n        }\r\n        {(isNNObject(props.tickets) && props.tickets.isUpToDate && !props.tickets.isError && isNN(props.tickets.data)) ?\r\n        props.tickets.data.map((d: ITicket, i: number) => {\r\n            return(\r\n              <View key={'tkt' + i} className='bdB mT-5'>\r\n               <View className='fw-600 mT-1 mB-3 p-2'>\r\n                  <Text className='fw-600'>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  {(isEdit && state.id === d._id) ?\r\n                    <Picker\r\n                    className='form-control'\r\n                    value={state.category}\r\n                    onChange={(event: any) => setState({...state, category: event.target.value})}>\r\n                      <option key={'ticketcat-1'} value=''>Select Ticket Category</option>\r\n                      {isNN(props.user.client.config.ticketCategories) ?\r\n                      props.user.client.config.ticketCategories.map((d: string, i: number) => {\r\n                        return(<option key={'ticketcat' + i} value={d}>{d}</option>);\r\n                      })\r\n                      :\r\n                      <option key={'ticketcat0'} value='Maintenance'>Maintenance</option>\r\n                      }\r\n                    </Picker>\r\n                    :\r\n                    <Text className='fw-600'>{d.category}</Text>\r\n                  }\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  {(isEdit && state.id === d._id) ?\r\n                    <TextInput type='text' placeholder='Title' className='form-control' value={state.title} onChange={(event: any) => setState({...state, title: event.target.value})} />\r\n                    :\r\n                    <Text>{d.title}</Text>\r\n                  }\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  {(isEdit && state.id === d._id) ?\r\n                    <TextArea placeholder='Description' className='form-control' value={state.description} onChange={(event: any) => setState({...state, description: event.target.value})} />\r\n                    :\r\n                    <Text>{d.description}</Text>\r\n                  }\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.status}</Text>\r\n                </View>\r\n                {(isEdit && state.id === d._id) ?\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={onSave}>\r\n                    <i className=\"c-green-500 fa fa-check\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    setIsEdit(false);\r\n                    setState({\r\n                      ...state, \r\n                      id: '',\r\n                      category: '',\r\n                      title: '',\r\n                      description: '',\r\n                      status: 'INIT',\r\n                      viewId: '',\r\n                      comments: [],\r\n                      comment: ''\r\n                    });\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-times\"></i>\r\n                  </span>\r\n                </View>\r\n                :\r\n                <View className='mT-1 mB-3 p-2'>\r\n                {props.appUser.role === ROLE.USER &&\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                  setIsEdit(true);\r\n                  setState({\r\n                    ...state, \r\n                    id: d._id,\r\n                    category: d.category,\r\n                    title: d.title,\r\n                    description: d.description,\r\n                    status: 'INIT',\r\n                    viewId: '',\r\n                    comments: [],\r\n                    comment: ''\r\n                  });\r\n                }}>\r\n                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                </span>\r\n                }\r\n                {props.appUser.role === ROLE.USER &&\r\n                <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n                  onRemove(d._id);\r\n                }}>\r\n                  <i className=\"c-red-500 fa fa-trash\"></i>\r\n                </span>\r\n                }\r\n                {props.appUser.role === ROLE.USER &&\r\n                  <span className='m-25' onClick={() => {\r\n                    onResolve(d._id);\r\n                  }}>\r\n                    <Text className='cur-p c-blue-500'>RESOLVE</Text>\r\n                  </span>\r\n                }\r\n                {((props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER) && d.status === 'INIT') &&\r\n                <span className='mR-25' onClick={() => {\r\n                  onStart(d._id);\r\n                }}>\r\n                  <Text className='cur-p c-blue-500'>START</Text>\r\n                </span>\r\n                }\r\n                <span onClick={() => {\r\n                  onView(d._id, d.comments);\r\n                }}>\r\n                  <Text className='cur-p c-blue-500'>{(state.viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n                </span>\r\n                </View>\r\n                }\r\n                {state.viewId === d._id &&\r\n                <View className='mT-5 mB-5'>\r\n                  <View>\r\n                    <Text className='fw-600'>Comments</Text>\r\n                  </View>\r\n                  <View className='p-15'>\r\n                    <View className='mT-5 mB-5'>\r\n                      <TextArea placeholder='Comment Text' className='form-control bd' value={state.comment} onChange={(event: any) => setState({...state, comment: event.target.value})} />\r\n                      <View className='mT-5'>\r\n                        <Button\r\n                          title='ADD COMMENT'\r\n                          onPress={() => onAddComment(d._id)}\r\n                          />\r\n                      </View>\r\n                    </View>\r\n                    {isNN(state.comments) ?\r\n                      state.comments.map((e, j) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} className={'pL-3 pR-3 pt-5 pB-5' + (j === 0 ? '' : ' bdT')}>\r\n                          <View>\r\n                            <Text className='fw-600'>{e.createdByName + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                          </View>\r\n                          <View>\r\n                            {\r\n                              state.editCommentId === e._id ?\r\n                              <TextArea placeholder='Comment Text' className='form-control bd' value={state.editComment} onChange={(event: any) => setState({...state, editComment: event.target.value})} />\r\n                              :\r\n                              <Text>{e.comment}</Text>\r\n                            }\r\n                          </View>\r\n                          {\r\n                            e.createdBy === props.user._id &&\r\n                            <>\r\n                              {\r\n                              state.editCommentId === e._id ?\r\n                              <View className='mT-1 mB-3 p-2'>\r\n                                <span className=\"icon-holder mR-10 cur-p\" onClick={() => onUpdateComment(d._id)}>\r\n                                  <i className=\"c-green-500 fa fa-check\"></i>\r\n                                </span>\r\n                                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                                  setState({\r\n                                    ...state, \r\n                                    editCommentId: '',\r\n                                    editComment: ''\r\n                                  });\r\n                                }}>\r\n                                  <i className=\"c-red-500 fa fa-times\"></i>\r\n                                </span>\r\n                              </View>\r\n                              :\r\n                              <View className='mT-1 mB-3 p-2'>\r\n                                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                                  setState({\r\n                                    ...state, \r\n                                    editCommentId: e._id,\r\n                                    editComment: e.comment\r\n                                  });\r\n                                }}>\r\n                                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                                </span>\r\n                                <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n                                  onRemoveComment(e._id, d._id);\r\n                                }}>\r\n                                  <i className=\"c-red-500 fa fa-trash\"></i>\r\n                                </span>\r\n                              </View>\r\n                              }\r\n                            </>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text className='p-20'>No comment found.</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text className='p-20'>{(props.tickets.isUpToDate ? (props.tickets.isError ? props.tickets.errorMessage : \"No ticket found.\") : \"Loading...\")}</Text>\r\n        }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { save } from '../store/actions/ticket';\r\nimport Page from '../components/home/new-ticket';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, sCallback))\r\n});\r\n\r\nexport const NewTicket = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { View, TextInput, Text, TextArea, Picker } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home';\r\nimport { ROLE } from '../../constants';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('INIT');\r\n  \r\n  const onSave = () => {\r\n    if(isNN(category) && isNN(title) && isNN(description)){\r\n      setIsLoading(true);\r\n        let ticket = {\r\n          _id: id,\r\n          category: category,\r\n          title: title,\r\n          description: description,\r\n          status: status\r\n        } as ITicket;\r\n        props.onSave(ticket, props.user, props.appUser.homeIndex, props.tickets, (result: boolean) => {          \r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setId('');\r\n            setCategory('');\r\n            setTitle('');\r\n            setDescription('');\r\n            setStatus('INIT');\r\n            // props.navigation.navigation.goBack(null)\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Tickets', link: 'tickets'}, {title: 'New Ticket', link: 'new-ticket' }]} />  \r\n        {props.appUser.role === ROLE.USER ?\r\n          <View className='bgc-white p-20'>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <Picker\r\n                className='form-control'\r\n                value={category}\r\n                onChange={(event: any) => setCategory(event.target.value)}>\r\n                  <option key={'ticketcat-1'} value=''>Select Ticket Category</option>\r\n                  {isNN(props.user.client.config.ticketCategories) ?\r\n                  props.user.client.config.ticketCategories.map((d: string, i: number) => {\r\n                    return(<option key={'ticketcat' + i} value={d}>{d}</option>);\r\n                  })\r\n                  :\r\n                  <option key={'ticketcat0'} value='Maintenance'>Maintenance</option>\r\n                  }\r\n              </Picker>\r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextInput type='text' placeholder=\"Title\" className='form-control' value={title} onChange={(event: any) => setTitle(event.target.value)} />\r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextArea placeholder=\"Description\" className='form-control' value={description} onChange={(event: any) => setDescription(event.target.value)}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, onSave);\r\n              }} />\r\n            </View>\r\n            {/* <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <Text>{status}</Text>\r\n            </View> */}\r\n            <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={onSave}\r\n              />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View className='bgc-white p-20'>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <Text>Only User can Add New Ticket. If you have USER role and you want to add new ticket change your role to User from settings -> My Role and try again.</Text>\r\n            </View>\r\n          </View>\r\n        }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { loadAll, approve, reject, remove, save, search } from '../store/actions/visitor';\r\nimport { upload as fileUpload } from '../store/actions/file';\r\nimport { IUser } from '../models/user';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IVisitor } from '../models/home';\r\n\r\nimport Page from '../components/home/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    homes: state.Homes,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, isActive, sCallback, fCallback)),\r\n    onApprove: (id: string, callback: (result: boolean) => void) => dispatch(approve(id, callback)),\r\n    onReject: (id: string, callback: (result: boolean) => void) => dispatch(reject(id, callback)),\r\n    onRemove: (id: string, callback: (result: boolean) => void) => dispatch(remove(id, callback)),\r\n    onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => dispatch(save(homeId, data, user, appUser, sCallback, fCallback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(fileUpload(data, callback)),\r\n    onSearch: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => dispatch(search(searchText, sCallback, fCallback))\r\n});\r\n\r\nexport const Visitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Text } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport Toast from  '../../util/toast';\r\nimport { ROLE } from '../../constants';\r\nimport VisitorsView from './gatekeeper/visitors-view'\r\nimport NewVisitor from './gatekeeper/new-visitor';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  void,\r\n  onApprove: (id: string, callback: (result: boolean) => void) => void,\r\n  onReject: (id: string, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, callback: (result: boolean) => void) => void,\r\n  onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([] as Array<IVisitor>);\r\n  const [isActive, setIsActive] = useState(true);\r\n  const [isRequestNew, setIsRequestNew] = useState(false);\r\n  const [passCode, setPassCode] = useState('');\r\n  \r\n  const loadData = () => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, props.user.homes[props.appUser.homeIndex]._id, isActive, (result: Array<IVisitor>) => {\r\n      setIsLoading(false);\r\n      setData(result);\r\n    }, (message: string) => {\r\n      setIsLoading(false);\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n  \r\n  const onActiveChange = () => {\r\n    setIsActive(!isActive);\r\n    loadData();\r\n  };\r\n  \r\n  const onApprove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Approve Visitor Entry',\r\n      message: 'Are you sure you wish to Approve the visitor to Enter?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onApprove(id, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                let tData = data;\r\n                let foundIndex = tData.findIndex(v => v._id === id);\r\n                tData[foundIndex].isApproved = true;\r\n                tData[foundIndex].approvedBy = props.user.name;\r\n                tData[foundIndex].approvedAt = new Date();\r\n                setData(tData);\r\n                Toast.success('Visitor approved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to approve the entry of visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onReject = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Reject Visitor Entry',\r\n      message: 'Are you sure you wish to reject visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onReject(id, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                let tData = data;\r\n                let foundIndex = tData.findIndex(v => v._id === id);\r\n                tData[foundIndex].isRejected = true;\r\n                tData[foundIndex].approvedBy = props.user.name;\r\n                tData[foundIndex].approvedAt = new Date();\r\n                setData(tData);\r\n                Toast.success('Visitor rejected successfully.');\r\n              }else{\r\n                Toast.fail('Failed to reject visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Remove Visitor',\r\n      message: 'Are you sure you wish to remove visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                setData(data.filter(v => v._id !== id));\r\n                Toast.success('Visitor removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onSave = (homeId: string, vData: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => {\r\n    props.onSave(homeId, vData, user, appUser, (result: IVisitor) => {\r\n      sCallback(result);\r\n      // data.unshift(result);\r\n      setData([result, ...data]);\r\n      setPassCode(result.passCode);\r\n      setIsRequestNew(false);\r\n    }, (message: string) => {\r\n      fCallback(message);\r\n    });\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Visitors', link: 'visitors'}]} />\r\n        <View className='bgc-white p-20'>\r\n        {props.appUser.role === ROLE.USER &&\r\n        <View className='mT-3 mB-3 pT-5 pB-5 ta-r'>\r\n          <Text className='cur-p c-blue-500 fw-600 ta-r' onClick={() => setIsRequestNew(!isRequestNew)}>{isRequestNew ? '< Back to Visitors' : 'Request for a New Visitor'}</Text>\r\n        </View>\r\n        }\r\n        {!isRequestNew && <VisitorsView data={data} isActive={isActive} user={props.user} appUser={props.appUser} onActiveChange={onActiveChange} onApprove={onApprove} onReject={onReject} onRemove={onRemove} />}\r\n        {isRequestNew && <NewVisitor appUser={props.appUser} user={props.user} homes={props.homes} gateNo={props.gateNo} onToggleLoading={(isLoading) => setIsLoading(isLoading)} onSave={onSave} onUpload={props.onUpload} onSearch={props.onSearch} />}\r\n        {isNN(passCode) &&\r\n        <Modal\r\n        open={isNN(passCode)}\r\n        onClose={() => setPassCode('')}>\r\n          <View className='mT-30 mB-25 mL-15 mR-15' style={{height: '80%'}}>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>{'Visitor Request created successfully. Please share the passcode(' + passCode + ') to yor visitor and ask him/her to show it to the security in the gate while entering.'}</View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5 ta-c fw-600 c-blue-600' style={{fontSize: 30}}>{passCode}</View>\r\n          </View>\r\n        </Modal>\r\n        }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { changePassword, logout } from '../store/actions/account';\r\n\r\nimport Page from '../components/home/change-password';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => dispatch(changePassword(userId, password, newPassword, callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const ChangePassword = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, { useState } from 'react';\r\nimport { View, TextInput, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, password: string, newPassword: string, sCallback: (result: boolean, message: string) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n\r\n  const passwordPolicyCheck = (p: string) => {\r\n    let anUpperCase = /[A-Z]/;\r\n    let aLowerCase = /[a-z]/; \r\n    let aNumber = /[0-9]/;\r\n    let aSpecial = /[!|@|#|$|%|^|&|*|(|)|-|_]/;\r\n    let result = \"\";\r\n\r\n    if(p.length < 6){\r\n      result=\"New Password not long enough!\"\r\n        return result;\r\n    }\r\n\r\n    var numUpper = 0;\r\n    var numLower = 0;\r\n    var numNums = 0;\r\n    var numSpecials = 0;\r\n    for(var i=0; i<p.length; i++){\r\n        if(anUpperCase.test(p[i]))\r\n            numUpper++;\r\n        else if(aLowerCase.test(p[i]))\r\n            numLower++;\r\n        else if(aNumber.test(p[i]))\r\n            numNums++;\r\n        else if(aSpecial.test(p[i]))\r\n            numSpecials++;\r\n    }\r\n\r\n    if(numUpper < 1 || numLower < 1 || numNums < 1 || numSpecials < 1){\r\n      result=\"New Password dose not match with password policy!\";\r\n        return result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const onUpdate = () => {\r\n    if(isNN(password) && isNN(newPassword) && isNN(confirmNewPassword)){\r\n      if(newPassword === confirmNewPassword){\r\n        let policyResult = passwordPolicyCheck(newPassword);\r\n        if(policyResult.length < 1){\r\n          setIsLoading(true);\r\n          props.onUpdate(props.user._id, password, newPassword, (result: boolean, message: string) => {\r\n            setIsLoading(false);\r\n            if(result === true){\r\n              Toast.success('Password updated successfully. Please login with your new password.');\r\n                props.onLogout((result: boolean) => {});\r\n            }else{\r\n              Toast.fail(message);\r\n            }\r\n          });\r\n        }else{\r\n          Toast.warn(policyResult);\r\n        }\r\n      }else{\r\n        Toast.warn('New Password and Confirm New Password not matchs.');\r\n      }\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Change Password', link: 'change-password'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextInput type='password' placeholder='Password' className='form-control' value={password} onChange={(event: any) => setPassword(event.target.value)} />\r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextInput type='password' placeholder='New Password' className='form-control' value={newPassword} onChange={(event: any) => setNewPassword(event.target.value)} />\r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextInput type='password' placeholder='Confirm New Password' className='form-control' value={confirmNewPassword} onChange={(event: any) => setConfirmNewPassword(event.target.value)}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, onUpdate);\r\n              }} />\r\n            </View>\r\n            <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={onUpdate}\r\n              />\r\n            </View>\r\n            <View className='mT-7'>\r\n              <Text>Note: Password should contain adleast one uppercase, one lowercase, one number and one special character.</Text>\r\n            </View>\r\n          </View>\r\n          <Spinner visible={isLoading} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { updateProfile } from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-profile';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updateProfile(userId, name, mobileNo, emailId, user, callback))\r\n});\r\n\r\nexport const MyProfile = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [mobileNo, setMobileNo] = useState('');\r\n  const [emailId, setEmailId] = useState('');\r\n\r\n  useEffect(() => {\r\n    setName(props.user.name);\r\n    setMobileNo(props.user.mobileNo);\r\n    setEmailId(props.user.emailId);\r\n  }, []);\r\n  \r\n  const onUpdate = () => {\r\n    if(isNN(name) && isNN(mobileNo) && isNN(emailId)){\r\n      setIsLoading(true);\r\n      props.onUpdate(props.user._id, name, mobileNo, (emailId ? emailId.toLowerCase() : ''), props.user, (result: boolean, message: string) => {\r\n        setIsLoading(false);\r\n        if(result === true){\r\n          Toast.success('Profile updated successfully.');\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n      return(\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'My Profile', link: 'my-profile'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextInput type='text' placeholder=\"Name\" className='form-control' value={name} onChange={(event: any) => setName(event.target.value)} />\r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' value={mobileNo} onChange={(event: any) => setMobileNo(event.target.value)} />\r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextInput type='text' placeholder=\"Email Id\" className='form-control' value={emailId} onChange={(event: any) => setEmailId(event.target.value)}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, onUpdate);\r\n              }} />\r\n            </View>\r\n            <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={onUpdate}\r\n              />\r\n            </View>\r\n          </View>\r\n          <Spinner visible={isLoading} />\r\n        </View>\r\n        </View>\r\n        </View>\r\n      );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { updateRole} from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-role';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (role: string, callback: (result: boolean, message: string) => void) => dispatch(updateRole(role, callback))\r\n});\r\n\r\nexport const MyRole = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { View, Picker } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onUpdate: (role: string, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [role, setRole] = useState('');\r\n\r\n  useEffect(() => {\r\n    setRole(props.appUser.role);\r\n  }, []);\r\n  \r\n  const onUpdate = () => {\r\n    if(isNN(role)){\r\n      setIsLoading(true);\r\n      props.onUpdate(role, (result: boolean, message: string) => {\r\n        setIsLoading(false);\r\n        if(result === true){\r\n          Toast.success('Role updated successfully.');\r\n          props.history.push('/')\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select role before Update.');\r\n    }\r\n  };\r\n\r\n      return(\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'My Role', link: 'my-role'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <Picker\r\n                className='form-control'\r\n                value={role}\r\n                onChange={(event: any) => setRole(event.target.value)}>\r\n                  {\r\n                  props.user.role.split(',').map((d: string, i: number) => {\r\n                    return(<option key={'role' + i} value={d}>{d}</option>);\r\n                  })\r\n                  }\r\n              </Picker>\r\n            </View>\r\n            <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={onUpdate}\r\n              />\r\n            </View>\r\n          </View>\r\n          <Spinner visible={isLoading} />\r\n        </View>\r\n        </View>\r\n        </View>\r\n      );\r\n};","import { actionTypes } from '../action-types';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IUser } from '../../models/user';\r\nimport { IAd } from '../../models/ad';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'ad';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getAdResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getAdResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let foundIndex = ads.findIndex(d => d._id === result.data);\r\n        ads[foundIndex]._id = result.data;\r\n        ads[foundIndex].title = data.title;\r\n        ads[foundIndex].description = data.description;\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          ads.unshift({\r\n            _id: result.data,\r\n            title: data.title,\r\n            description: data.description,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IAd);\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      ads = ads.filter((d, i) => d._id !== id);\r\n      dispatch(getAdResult(ads, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { loadAll, save, remove } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/ads';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, callback)),\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback)),\r\n    onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(remove(id, ads, callback))\r\n});\r\n\r\nexport const Ads = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { isNN } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onLoad: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  \r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, (result: boolean) => {\r\n      setIsLoading(false);\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n  }, []);\r\n  \r\n  const onSave = () => {\r\n    if(isNN(title) && isNN(description)){\r\n      setIsLoading(true);\r\n        let ad = {\r\n          _id: id,\r\n          title: title,\r\n          description: description\r\n        } as IAd;\r\n        props.onSave(props.user.client._id, ad, props.user, props.ads.data, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setIsEdit(false);\r\n            setId('');\r\n            setTitle('');\r\n            setDescription('');\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, props.ads.data, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                Toast.success('Ad removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ad.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Ads', link: 'ads'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <View>\r\n              <Text className='fl-r cur-p mB-3 c-blue-500' onClick={() => props.history.push('new-ad')}>Add New</Text>\r\n            </View>\r\n            {(props.ads.isUpToDate && !props.ads.isError && isNN(props.ads.data)) ?\r\n              props.ads.data.map((d: IAd, i: number) => {\r\n                return(\r\n                  (isEdit === true && id === d._id) ?\r\n                  <View key={i} className='bdB mT-5'>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                        <Text className='fw-600'>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <TextInput type='text' placeholder=\"Title\" className='form-control' value={title} onChange={(event: any) => setTitle(event.target.value)} />\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <TextArea placeholder=\"Description\" className='form-control' value={description} onChange={(event: any) => setDescription(event.target.value)} />\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <span className=\"icon-holder mR-10 cur-p\" onClick={onSave}>\r\n                        <i className=\"c-green-500 fa fa-check\"></i>\r\n                      </span>\r\n                      <span className=\"icon-holder cur-p\" onClick={() => {\r\n                        setIsEdit(false);\r\n                        setId('');\r\n                        setTitle('');\r\n                        setDescription('');\r\n                      }}>\r\n                        <i className=\"c-red-500 fa fa-times\"></i>\r\n                      </span>\r\n                    </View>\r\n                  </View>\r\n                  :\r\n                  <View key={i} className='bdB mT-5'>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                        <Text className='fw-600'>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text>{d.title}</Text>\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text>{d.description}</Text>\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                        setIsEdit(true);\r\n                        setId(d._id);\r\n                        setTitle(d.title);\r\n                        setDescription(d.description);\r\n                      }}>\r\n                        <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                      </span>\r\n                      <span className=\"icon-holder cur-p\" onClick={() => {\r\n                        onRemove(d._id);\r\n                      }}>\r\n                        <i className=\"c-red-500 fa fa-trash\"></i>\r\n                      </span>\r\n                    </View>\r\n                  </View>\r\n                )\r\n              })\r\n              :\r\n              <Text className='p-20'>{(props.ads.isUpToDate ? (props.ads.isError ? props.ads.errorMessage : \"No ad found.\") : \"Loading...\")}</Text>\r\n            }\r\n          <Spinner visible={isLoading} />\r\n    </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { save } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/new-ad';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback))\r\n});\r\n\r\nexport const NewAd = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { View, TextInput, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { isNN, onEnter } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const onSave = () => {\r\n    if(isNN(title) && isNN(description)){\r\n      setIsLoading(true);\r\n        let ad = {\r\n          _id: id,\r\n          title: title,\r\n          description: description\r\n        } as IAd;\r\n        props.onSave(props.user.client._id, ad, props.user, props.ads.data, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setId('');\r\n            setTitle('');\r\n            setDescription('');\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Ads', link: 'ads'}, {title: 'New Ad', link: 'new-ad'}]} />\r\n        <View className='bgc-white p-20'>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Title\" className='form-control' value={title} onChange={(event: any) => setTitle(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextArea placeholder=\"Description\" className='form-control' value={description} onChange={(event: any) => setDescription(event.target.value)}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, onSave);\r\n            }} />\r\n          </View>\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IUsers } from '../models/store/users';\r\nimport { removeByAM } from '../store/actions/member';\r\n\r\nimport Page from '../components/home/manager/users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => dispatch(removeByAM(id, homeIndex, user, users, callback))\r\n});\r\n\r\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TextInput, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IMember } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\nimport { APPTYPE } from '../../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => void,\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const [isEdit, setIsEdit] = useState(false);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchResult, setSearchResult] = useState([] as Array<IMember>);\r\n  const [searchResultIndex, setSearchResultIndex] = useState(10);\r\n\r\n  // const getHomes = (userId: string) => {\r\n  //   let homes = '';\r\n  //   if((props.homes.isUpToDate && !props.homes.isError && isNN(props.homes.data)) && (props.userHomes.isUpToDate && !props.userHomes.isError && isNN(props.userHomes.data))){\r\n  //     let homeIds = [] as Array<string>;\r\n  //     props.userHomes.data.filter(uh => uh.userId === userId).map((uh: IUserHome, i: number) => homeIds.push(uh.homeId));\r\n  //     props.homes.data.filter(d => homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n  //   }\r\n  //   return homes;\r\n  // };\r\n\r\n  const onSearch = () => {\r\n    if(isNN(searchText) && props.users.isUpToDate && !props.users.isError && isNN(props.users.data)){\r\n      let tempSearchText = searchText.toLowerCase();\r\n      let homes = props.homes.data.filter(h => h.number.toLowerCase() === tempSearchText);\r\n      setSearchResult(props.users.data.filter(d => (d.name + '').toLowerCase().indexOf(tempSearchText) >= 0 || (d.mobileNo + '').toLowerCase().indexOf(tempSearchText) >= 0 || (d.emailId + '').toLowerCase().indexOf(tempSearchText) >= 0 || (d.number + '').toLowerCase().indexOf(tempSearchText) >= 0 || (isNN(homes.filter(h => h.memberIds.indexOf(d._id) >= 0)))));\r\n      setSearchResultIndex(10);\r\n    }else{\r\n      setSearchResult([]);\r\n      setSearchResultIndex(10);\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, props.appUser.homeIndex, props.user, props.users, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                onSearch();\r\n                Toast.success('User removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove user.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n      return(\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Users', link: 'users'}]} />\r\n          <View className='bgc-white p-20'>\r\n          <View>\r\n            <Text className='fl-r cur-p c-blue-500' onClick={() => props.history.push('edit-user/0/false')}>Add New</Text>\r\n            <Text className='fl-r cur-p c-blue-500 mR-15' onClick={() => props.history.push('approve-users')}>View Users Waiting for Approval</Text>\r\n          </View>\r\n          <View className='mB-3 pB-5'>\r\n            <TextInput type='text' placeholder=\"Search User\" className='form-control mR-10 d-i' style={{width: 'calc(100% - 40px)'}} value={searchText} onChange={(event: any) => setSearchText(event.target.value)}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, onSearch);\r\n            }} />\r\n            <span className='icon-holder cur-p' onClick={onSearch}>\r\n              <i className='ti-search pdd-right-10 fw-900'></i>\r\n            </span>\r\n          </View>\r\n\r\n          {isNN(searchResult) ?\r\n          searchResult.slice(0, searchResultIndex).map((d: IMember, i: number) => {\r\n            return(\r\n              <View key={'usr' + i} className='bdB mT-5'>\r\n                {(props.user.client.config.appType == APPTYPE.QUARTERS && isNN(d.number)) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Number: ' + d.number}</Text>                  \r\n                </View>\r\n                }\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Mobile No: ' + d.mobileNo}</Text>         \r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Email: ' + d.emailId}</Text>         \r\n                </View>\r\n                }\r\n                {/* <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Owner Name: ' + (isNN(d.ownername) ? d.ownername : '')}</Text>         \r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Owner Mobile No: ' + (d.ownermobile > 0 ? d.ownermobile : '')}</Text>         \r\n                </View> */}\r\n                {/* <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Role: ' + (isNN(d.type) ? d.type.replace(/,/g, ', ') : '')}</Text>         \r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'House(s): ' + getHomes(d._id)}</Text>         \r\n                </View> */}\r\n                {(d._id !== props.user._id) &&\r\n                  <View className='mT-1 mB-3 p-2'>\r\n                    <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                      props.history.push('edit-user/' + d._id + '/false');////TODO\r\n                      // props.navigation.navigate('EditUser', {id: d._id});\r\n                      // setState({\r\n                      //   isEdit: true,\r\n                      //   id: d.id\r\n                      // });\r\n                    }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                      onRemove(d._id);\r\n                    }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n                  </View>\r\n                }\r\n              </View>\r\n              \r\n            )\r\n          })\r\n          :\r\n          <Text className='p-20'>No user match with your search.</Text>\r\n        }\r\n        {(searchResult.length > searchResultIndex) &&\r\n        <View className='bdB mT-5'>\r\n          <View className='p-10'>\r\n            <Text className='c-blue-500 fw-600' onClick={() => {\r\n              setSearchResultIndex(searchResultIndex + 10)\r\n            }}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n      );\r\n};","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'home';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IHome>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      result.data.forEach((h: any) => {\r\n        h.memberIds = h.members;\r\n        delete h.members;\r\n      });\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Homes.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNN(result.data._id)) {\r\n      result.data.memberIds = result.data.members;\r\n      delete result.data.members;\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Home.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n          var foundIndex = homes.data.findIndex(d => d._id === result.data);\r\n          homes.data[foundIndex]._id = result.data;\r\n          homes.data[foundIndex].number = data.number;\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n            homes.data.push({\r\n              _id: result.data,\r\n              // name: name,\r\n              number: data.number\r\n            } as IHome);\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const checkNumberAvail = (id: string, number: string, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().get(controller + '/checkno/' + number, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes = user.homes.filter((d, i) => d._id !== id);\r\n      homes.data = homes.data.filter((d, i) => d._id !== id);\r\n      ////userHomes.data = userHomes.data.filter((d, i) => d.homeId !== id);\r\n      dispatch(getUserResult(user));\r\n      dispatch(getHomesResult(homes.data, true, false, \"\"));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { remove } from '../store/actions/home';\r\n\r\nimport Page from '../components/home/manager/homes';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => dispatch(remove(id, user, homes, callback))\r\n});\r\n\r\nexport const Homes = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View,  TextInput, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => void,\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const [isEdit, setIsEdit] = useState(false);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchResult, setSearchResult] = useState([] as Array<IHome>);\r\n  const [searchResultIndex, setSearchResultIndex] = useState(10);\r\n  \r\n  // const getUsers = (homeId: string) => {\r\n  //   let users = '';\r\n  //   if((props.users.isUpToDate && !props.users.isError && isNN(props.users.data)) && (props.userHomes.isUpToDate && !props.userHomes.isError && isNN(props.userHomes.data))){\r\n  //     let userIds = [] as Array<string>;\r\n  //     props.userHomes.data.filter(uh => uh.homeId === homeId).map((uh: IUserHome, i: number) => userIds.push(uh.userId));\r\n  //     props.users.data.filter(d => userIds.indexOf(d._id) >= 0).map((u: IMember, i: number) => users += (users.length > 0 ? ', ' : '') + u.name);\r\n  //   }\r\n  //   return users;\r\n  // };\r\n\r\n  const onSearch = () => {\r\n    if(isNN(searchText) && props.homes.isUpToDate && !props.homes.isError && isNN(props.homes.data)){\r\n      setSearchResult(props.homes.data.filter(d => (d.number + '').toLocaleLowerCase().indexOf(searchText.toLowerCase()) >= 0));\r\n      setSearchResultIndex(10);\r\n    }else{\r\n      setSearchResult([]);\r\n      setSearchResultIndex(10);\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, props.user, props.homes, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                onSearch();\r\n                Toast.success('House removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove house.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n      return(\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Houses', link: 'homes'}]} />\r\n          <View className='bgc-white p-20'>\r\n          <View>\r\n            <Text className='fl-r cur-p c-blue-500 mB-3' onClick={() => props.history.push('edit-home/0')}>Add New</Text>\r\n          </View>\r\n          <View className='mB-3 pB-5'>\r\n            <TextInput type='text' placeholder=\"Search House\" className='form-control mR-10 d-i' style={{width: 'calc(100% - 40px)'}} value={searchText} onChange={(event: any) => setSearchText(event.target.value)}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, onSearch);\r\n            }} />\r\n            <span className='icon-holder cur-p' onClick={onSearch}>\r\n              <i className='ti-search pdd-right-10 fw-900'></i>\r\n            </span>\r\n          </View>\r\n\r\n          {isNN(searchResult) ?\r\n          searchResult.slice(0, searchResultIndex).map((d: IHome, i: number) => {\r\n            return(\r\n              <View key={'home' + i} className='bdB mT-5'>\r\n                {/* <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View> */}\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Number: ' + d.number}</Text>         \r\n                </View>\r\n                {/* <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Address: ' + (isNN(d.address) ? d.address : '')}</Text>         \r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'User(s): ' + getUsers(d._id)}</Text>         \r\n                </View> */}\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                    props.history.push('view-home/' + d._id);\r\n                    // props.navigation.navigate('ViewHome', {id: d._id});\r\n                  }}>\r\n                    <i className=\"c-orange-500 fa fa-eye\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                    props.history.push('edit-home/' + d._id);\r\n                    // props.navigation.navigate('EditHome', {id: d._id});\r\n                    // setState({\r\n                    //   isEdit: true,\r\n                    //   id: d.id\r\n                    // });\r\n                  }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                      onRemove(d._id);\r\n                    }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text className='p-20'>No house match with your search.</Text>\r\n        }\r\n        {(searchResult.length > searchResultIndex) &&\r\n        <View className='bdB mT-5'>\r\n          <View className='p-10'>\r\n            <Text className='fw-600 c-blue-500' onClick={() => {\r\n            setSearchResultIndex(searchResultIndex + 10)\r\n            }}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n      );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IMember } from '../models/home';\r\nimport { IUsers } from '../models/store/users';\r\nimport { load, saveByAM } from '../store/actions/member';\r\nimport Page from '../components/home/manager/edit-user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => dispatch(saveByAM(data, homeIds, user, users, isApprove, callback))\r\n});\r\n\r\nexport const EditUser = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { ScrollView, View, TextInput, Text } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Toast from  '../../../util/toast';\r\nimport { ROLE, APPTYPE } from '../../../constants';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isShowHomes, setIsShowHomes] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    id: '',\r\n    number: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    type: 'TENANT',\r\n    homeIds: [] as Array<string>,\r\n    role: {\r\n      isAdmin: false,\r\n      isManager: false,\r\n      isGatekeeper: false,\r\n      isUser: false\r\n    }\r\n  });\r\n  \r\n  useEffect(() => {\r\n    let userId = props.match.params.id;\r\n    if(userId.length > 0 && userId !== '0'){\r\n      setIsLoading(true);\r\n      props.onLoad(userId, (result: IMember, homeIds: Array<string>) => {\r\n        setIsLoading(false);\r\n        if(result && isNN(result._id)){\r\n          setFormData({\r\n            id: result._id,\r\n            number: result.number,\r\n            name: result.name,\r\n            age: result.age,\r\n            gender: result.gender,\r\n            mobileNo: result.mobileNo,\r\n            emailId: result.emailId,\r\n            type: result.type,\r\n            homeIds: homeIds,\r\n            role: {\r\n              isAdmin: (',' + result.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n              isManager: (',' + result.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n              isGatekeeper: (',' + result.role + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n              isUser: (',' + result.role + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n            }\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load User.');\r\n        }\r\n      }, (message: string) => {\r\n        setIsLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load User.');\r\n      });\r\n    }\r\n\r\n    /*\r\n    if(userId > 0 && (props.users.isUpToDate && !props.users.isError && isNN(props.users.data))){\r\n      let users = props.users.data.filter((u: IUser, i: number) => u._id === userId);\r\n      if(isNNObject(users) && users.length > 0){\r\n        let homeIds = [] as Array<string>;\r\n        if(props.userHomes.isUpToDate && !props.userHomes.isError && isNN(props.userHomes.data)){\r\n          props.userHomes.data.filter((uh: IUserHome, i: number) => uh.userId === userId).map(uh => {\r\n            homeIds.push(uh.homeId);\r\n          });\r\n        }\r\n        setFormData({...formData, \r\n          id: users[0]._id,\r\n          name: users[0].name,\r\n          mobileNo: users[0].mobileNo,\r\n          emailId: users[0].emailId,\r\n          ////ownername: users[0].ownername,\r\n          ////ownermobile: users[0].ownermobile,\r\n          homeIds: homeIds,\r\n          role: {\r\n            isAdmin: (',' + users[0].type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n            isManager: (',' + users[0].type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n            isGatekeeper: (',' + users[0].type + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n            isUser: (',' + users[0].type + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n          }\r\n        });\r\n      }\r\n    }\r\n    */\r\n  }, []);\r\n  \r\n  const getHomes = () => {\r\n    let homes = '';\r\n    if(isNN(formData.homeIds) && (props.homes.isUpToDate && !props.homes.isError && isNN(props.homes.data))){\r\n      props.homes.data.filter(d => formData.homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n    }\r\n    return homes;\r\n  };\r\n\r\n  const onSave = () => {\r\n    if((props.user.client.config.appType !== APPTYPE.QUARTERS || isNN(formData.number)) && isNN(formData.name) && formData.age > 0 && isNN(formData.gender)){\r\n      let role = '';\r\n      if(formData.role.isAdmin){\r\n        role = ROLE.ADMIN\r\n      }\r\n      if(formData.role.isManager){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.MANAGER\r\n      }\r\n      if(formData.role.isGatekeeper){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.GATEKEEPER\r\n      }\r\n      if(formData.role.isUser){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.USER\r\n      }\r\n        setIsLoading(true);\r\n        let member = {\r\n          _id: formData.id,\r\n          number: formData.number,\r\n          name: formData.name,\r\n          age: formData.age,\r\n          gender: formData.gender,\r\n          mobileNo: formData.mobileNo,\r\n          emailId: formData.emailId ? formData.emailId.toLowerCase() : '',\r\n          type: formData.type,\r\n          role: role\r\n        } as IMember;\r\n        props.onSave(member, formData.homeIds, props.user, props.users, props.match.params.isApprove === 'true', (result: boolean, message: string) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setFormData({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'TENANT',\r\n              homeIds: [],\r\n              role: {\r\n                isAdmin: false,\r\n                isManager: false,\r\n                isGatekeeper: false,\r\n                isUser: false\r\n              }\r\n            });\r\n            Toast.success('User saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save user.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (formData.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onToggleHomeModel = (isShow: boolean) => {\r\n    setIsShowHomes(isShow);\r\n  }\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Users', link: 'users'}, {title: 'Edit User', link: 'edit-user/0'}]} />\r\n        <View className='bgc-white p-20'>\r\n          {props.user.client.config.appType == APPTYPE.QUARTERS &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"User Id / Number\" className='form-control' value={formData.number} onChange={(event: any) => setFormData({...formData, number: event.target.value})} />\r\n          </View>\r\n          }\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' value={formData.name} onChange={(event: any) => setFormData({...formData, name: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} value={formData.age > 0 ? formData.age + '' : ''} onChange={(event: any) => setFormData({...formData, age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={formData.gender === 'M'} text='Male' onPress={() => setFormData({...formData, gender: 'M'})} />\r\n            <RadioButton isActive={formData.gender === 'F'} text='Female' onPress={() => setFormData({...formData, gender: 'F'})} />\r\n            {props.user.client.config.hasOtherGender &&\r\n            <RadioButton isActive={formData.gender === 'O'} text='Other' onPress={() => setFormData({...formData, gender: 'O'})} />\r\n            }\r\n          </View>            \r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' value={formData.mobileNo} onChange={(event: any) => setFormData({...formData, mobileNo: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' value={formData.emailId} onChange={(event: any) => setFormData({...formData, emailId: event.target.value})} />\r\n          </View>\r\n          {props.user.client.config.appType == APPTYPE.APARTMENT &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={formData.type === 'OWNER'} text='Owner' onPress={() => setFormData({...formData, type: 'OWNER'})} />\r\n            <RadioButton isActive={formData.type === 'TENANT'} text='Tenant' onPress={() => setFormData({...formData, type: 'TENANT'})} />\r\n          </View>\r\n          }\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mR-10'>Role: </Text>\r\n            <Checkbox isActive={formData.role.isAdmin} text={ROLE.ADMIN} onPress={() => {\r\n              let tRole = formData.role;\r\n              tRole.isAdmin = !formData.role.isAdmin;\r\n              setFormData({\r\n                ...formData,\r\n                role: tRole\r\n              });\r\n            }} />\r\n            <Checkbox isActive={formData.role.isManager} text={ROLE.MANAGER} onPress={() => {\r\n              let tRole = formData.role;\r\n              tRole.isManager = !formData.role.isManager;\r\n              setFormData({\r\n                ...formData,\r\n                role: tRole\r\n              });\r\n            }} />\r\n            <Checkbox isActive={formData.role.isGatekeeper} text={ROLE.GATEKEEPER} onPress={() => {\r\n              let tRole = formData.role;\r\n              tRole.isGatekeeper = !formData.role.isGatekeeper;\r\n              setFormData({\r\n                ...formData,\r\n                role: tRole\r\n              });\r\n            }} />\r\n            <Checkbox isActive={formData.role.isUser} text={ROLE.USER} onPress={() => {\r\n              let tRole = formData.role;\r\n              tRole.isUser = !formData.role.isUser;\r\n              setFormData({\r\n                ...formData,\r\n                role: tRole\r\n              });\r\n            }} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mR-5'>House(s):</Text>\r\n            <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n              setIsShowHomes(true);\r\n             }}>\r\n               <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n            </span>\r\n            <Text>{getHomes()}</Text>\r\n          </View>\r\n          {(props.homes.isUpToDate && !props.homes.isError && isNN(props.homes.data)) &&\r\n          <Modal\r\n          open={isShowHomes}\r\n          onClose={() => onToggleHomeModel(false)}>\r\n            <View className='mT-30 mB-25 mL-15 mR-15' style={{height: '80%'}}>\r\n              <ScrollView className='bd bdc-blue-500' style={{height: '50%', maxHeight: '50%'}}>\r\n                {\r\n                  props.homes.data.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text key={'home' + i} className={'cur-p bdB p-3 mB-1' + (formData.homeIds.indexOf(d._id) >= 0 ? ' bgc-blue-500 c-white' : '')} onClick={() => {\r\n                        if(formData.homeIds.indexOf(d._id) >= 0){\r\n                          setFormData({...formData, \r\n                            homeIds: formData.homeIds.filter(e => e !== d._id)\r\n                          });\r\n                        }else{\r\n                          let tHomeIds = formData.homeIds;\r\n                          tHomeIds.push(d._id);\r\n                          setFormData({\r\n                            ...formData,\r\n                            homeIds: tHomeIds\r\n                          });\r\n                        }\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n                </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            title={props.match.params.isApprove === 'true' ? 'Approve' : 'SAVE'}\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};\r\n\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { loadWFAUsers, reject } from '../store/actions/member';\r\nimport { IMember } from '../models/home';\r\n\r\nimport Page from '../components/home/manager/approve-users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadWFAUsers(sCallback, fCallback)),\r\n    onReject: (id: string, callback: (result: boolean) => void) => dispatch(reject(id, callback))\r\n});\r\n\r\nexport const ApproveUsers = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport Spinner from '../../common/spinner';\r\nimport { IMember } from '../../../models/home/member';\r\nimport Toast from  '../../../util/toast';\r\nimport { isNN } from '../../../util';\r\nimport { toDateTimeString } from '../../../util/convert';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  onLoad: (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onReject: (id: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([] as Array<IMember>);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad((result: Array<IMember>) => {\r\n      setIsLoading(false);\r\n      setData(result);\r\n    }, (message: string) => {\r\n      setIsLoading(false);\r\n      Toast.fail(message);\r\n    });\r\n  }, []);\r\n\r\n  const onApprove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Approve',\r\n      message: 'You want to Approve the user?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            props.history.push('edit-user/' + id + '/true');\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onReject = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Reject',\r\n      message: 'You want to Reject the user?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onReject(id, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                setData(data.filter(v => v._id !== id));\r\n                Toast.success('User rejected successfully.');\r\n              }else{\r\n                Toast.fail('Failed to reject the user.');\r\n              }\r\n            }); \r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Users', link: 'users'}, {title: 'Users Waiting for Approval', link: 'approve-users'}]} />\r\n          <View className='bgc-white p-20'>\r\n            {isNN(data) ?\r\n            data.map((d: IMember, i: number) => {\r\n              return(\r\n                <View key={i} className='bdB mT-5'>\r\n                  <View className='mT-1 mB-3 p-2'>\r\n                    <Text className='fw-600'>{d.name}</Text>\r\n                  </View>\r\n                  {(d.age > 0 || isNN(d.gender)) && \r\n                  <View className='mT-1 mB-3 p-2'>\r\n                    <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other')) : '')}</Text>\r\n                  </View>\r\n                  }\r\n                  <View className='mT-1 mB-3 p-2'>\r\n                    On <Text className='fw-600'>{toDateTimeString(d.createdAt)}</Text>\r\n                  </View>\r\n                  {isNN(d.mobileNo) && \r\n                  <View className='mT-1 mB-3 p-2'>\r\n                    <Text>{d.mobileNo}</Text>\r\n                  </View>\r\n                  }\r\n                  {isNN(d.emailId) && \r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text>{d.emailId}</Text>\r\n                    </View>\r\n                  }\r\n                  <View className='mT-1 mB-3 p-2'>\r\n                    <Button title='Approve' className='mR-10' onPress={() => { onApprove(d._id); }} />\r\n                    <Button title='Reject' onPress={() => { onReject(d._id); }} />\r\n                  </View>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <Text className='p-20'>No user found.</Text>\r\n            }\r\n            <Spinner visible={isLoading} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { IHome } from '../models/home';\r\nimport { IUser } from '../models/user';\r\nimport { load, save, checkNumberAvail } from '../store/actions/home';\r\nimport Page from '../components/home/manager/edit-home';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => dispatch(save(data, user, homes, callback)),\r\n    onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => dispatch(checkNumberAvail(id, number, callback))\r\n});\r\n\r\nexport const EditHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { ScrollView, View, TextInput, Text, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => void,\r\n  onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  id: string,\r\n\tblockId: string,\r\n\tnumber: string,\r\n\taddress: string,\r\n  bedRoom: number,\r\n  parking: string,\r\n  description: string,\r\n  members: Array<string>,\r\n};\r\n\r\nexport default (props:IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isShowUsers, setIsShowUsers] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    id: '',\r\n    blockId: '',\r\n    number: '',\r\n    address: '',\r\n    bedRoom: 1,\r\n    parking: '',\r\n    description: '',\r\n    members: [] as Array<string>\r\n  });\r\n\r\nuseEffect(() => {\r\n    let homeId = props.match.params.id; // props.navigation.state.params.id;\r\n    if(homeId.length > 0 && homeId !== '0'){\r\n      setIsLoading(true);\r\n      props.onLoad(homeId, (result: IHome) => {\r\n        setIsLoading(false);\r\n        if(result && isNN(result._id)){\r\n          setFormData({\r\n            ...formData,\r\n            id: result._id,\r\n            blockId: result._blockId,\r\n            number: result.number,\r\n            address: result.address,\r\n            bedRoom: result.bedRoom,\r\n            parking: result.parking,\r\n            description: result.description,\r\n            members: result.memberIds\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load house.');\r\n        }\r\n      }, (message: string) => {\r\n        setIsLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load house.');\r\n      });\r\n    }\r\n    \r\n    /*\r\n    if(homeId > 0 && (props.homes.isUpToDate && !props.homes.isError && isNN(props.homes.data))){\r\n      let homes = props.homes.data.filter((u: IHome, i: number) => u._id === homeId);\r\n      if(isNNObject(homes) && homes.length > 0){\r\n        let members = [] as Array<string>;\r\n        if(props.userHomes.isUpToDate && !props.userHomes.isError && isNN(props.userHomes.data)){\r\n          props.userHomes.data.filter((uh: IUserHome, i: number) => uh.homeId === homeId).map(uh => {\r\n            members.push(uh.userId);\r\n          });\r\n        }\r\n        setState({\r\n          id: homes[0]._id,\r\n          blockId: homes[0]._blockId,\r\n          number: homes[0].number,\r\n          address: homes[0].address,\r\n          bedRoom: homes[0].bedRoom,\r\n          parking: homes[0].parking,\r\n          description: homes[0].description,\r\n          members: members\r\n        });\r\n      }\r\n    }\r\n    */\r\n  }, []);\r\n\r\n  const getUsers = () => {\r\n    let users = '';\r\n    if(isNN(formData.members) && (props.users.isUpToDate && !props.users.isError && isNN(props.users.data))){\r\n      props.users.data.filter(d => formData.members.indexOf(d._id) >= 0).map((u: IMember, i: number) => \r\n        users += (users.length > 0 ? ', ' : '') + u.name + (isNN(u.number) ? '(' + u.number + ')' : '')\r\n      );\r\n    }\r\n    return users;\r\n  };\r\n\r\n  const onSave = () => {\r\n    if(isNN(formData.blockId) && isNN(formData.number)){\r\n      setIsLoading(true);\r\n      /*\r\n      props.onCheckNumberAvail(state.id, state.number, (result: boolean) => {\r\n        if(result === true){\r\n          */\r\n         let home = {\r\n           _id: formData.id,\r\n           _blockId: formData.blockId,\r\n           number: formData.number,\r\n           address: formData.address,\r\n           bedRoom: formData.bedRoom,\r\n           parking: formData.parking,\r\n           description: formData.description,\r\n           memberIds: formData.members\r\n         } as IHome;\r\n          props.onSave(home, props.user, props.homes, (result: boolean, message: string) => {\r\n            setIsLoading(false);\r\n            if(result === true){\r\n              setFormData({\r\n                id: '',\r\n                blockId: '',\r\n                number: '',\r\n                address: '',\r\n                bedRoom: 1,\r\n                parking: '',\r\n                description: '',\r\n                members: []\r\n              });\r\n              Toast.success('House saved successfully.');\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to save house.');\r\n            }\r\n          });\r\n          /*\r\n        }else{\r\n          setState({\r\n            isLoading: false,\r\n          });\r\n          Toast.warn('House with same Number already available. Please change the house number.');\r\n        }\r\n      });\r\n      */\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (formData.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onToggleUserModel = (isShow: boolean) => {\r\n    setIsShowUsers(isShow);\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Houses', link: 'homes'}, {title: 'Edit House', link: 'edit-home/0'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Picker\r\n            className='form-control'\r\n            value={formData.blockId}\r\n            onChange={(event: any) => setFormData({...formData, blockId: event.target.value})}>\r\n              <option key={'block0'} value=''>Select Block</option>\r\n              {(props.blocks && props.blocks.isUpToDate && !props.blocks.isError && isNN(props.blocks.data)) &&\r\n                props.blocks.data.map((d: IBlock, i: number) => {\r\n                  return(<option key={'block' + i} value={d._id}>{d.name}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' value={formData.number} onChange={(event: any) => setFormData({...formData, number: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextArea placeholder=\"Address\" className='form-control' value={formData.address} onChange={(event: any) => setFormData({...formData, address: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text>No of bed rooms: </Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={formData.bedRoom === 1} text='1' onPress={() => setFormData({...formData, bedRoom: 1})} />\r\n            <RadioButton isActive={formData.bedRoom === 2} text='2' onPress={() => setFormData({...formData, bedRoom: 2})} />\r\n            <RadioButton isActive={formData.bedRoom === 3} text='3' onPress={() => setFormData({...formData, bedRoom: 3})} />\r\n            <RadioButton isActive={formData.bedRoom === 4} text='4' onPress={() => setFormData({...formData, bedRoom: 4})} />\r\n            <RadioButton isActive={formData.bedRoom === 5} text='5' onPress={() => setFormData({...formData, bedRoom: 5})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Parking\" className='form-control' value={formData.parking} onChange={(event: any) => setFormData({...formData, parking: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Description\" className='form-control' value={formData.description} onChange={(event: any) => setFormData({...formData, description: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mR-5'>User(s):</Text>\r\n            <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n              setIsShowUsers(true);\r\n             }}>\r\n              <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n            </span>\r\n            <Text>{getUsers()}</Text>\r\n          </View>\r\n          {(props.users.isUpToDate && !props.users.isError && isNN(props.users.data)) &&\r\n          <Modal\r\n          open={isShowUsers}\r\n          onClose={() => onToggleUserModel(false)}>\r\n            <View className='mT-30 mB-25 mL-15 mR-15' style={{height: '80%'}}>\r\n              <ScrollView className='bd bdc-blue-500' style={{height: '50%', maxHeight: '50%'}}>\r\n              {\r\n                props.users.data.map((d: IMember, i: number) => {\r\n                  return(\r\n                    <Text key={'user' + i} className={'cur-p bdB p-3 mB-1' + (formData.members.indexOf(d._id) >= 0 ? ' bgc-blue-500 c-white' : '')} onClick={() => {\r\n                      if(formData.members.indexOf(d._id) >= 0){\r\n                        setFormData({\r\n                          ...formData,\r\n                          members: formData.members.filter(e => e !== d._id)\r\n                        });\r\n                      }else{\r\n                        let tMembers = formData.members;\r\n                        tMembers.push(d._id);\r\n                        setFormData({\r\n                          ...formData,\r\n                          members: tMembers\r\n                        });\r\n                      }\r\n                    }}>{d.name + (d.number ? '(' + d.number + ')' : '')}</Text>\r\n                  )\r\n                })\r\n              }\r\n              </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IVisitor } from '../models/home';\r\nimport { loadAll, enter, exit } from '../store/actions/visitor';\r\n\r\nimport Page from '../components/home/gatekeeper/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    homes: state.Homes,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, isActive, sCallback, fCallback)),\r\n    onEnter: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(enter(id, gateNo, callback)),\r\n    onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(exit(id, gateNo, callback))\r\n});\r\n\r\nexport const AllVisitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport VisitorsView from './visitors-view';\r\nimport { View } from '../../common/elements';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onEnter: (id: string, gateNo: string, callback: (result: boolean) => void) => void,\r\n  onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([] as Array<IVisitor>);\r\n  const [isActive, setIsActive] = useState(true);\r\n  \r\n  const loadData = () => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, '', isActive, (result: Array<IVisitor>) => {\r\n      setIsLoading(false);\r\n      setData(result);\r\n    }, (message: string) => {\r\n      setIsLoading(false);\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n  \r\n  const onActiveChange = () => {\r\n    setIsActive(!isActive);\r\n    loadData();\r\n  };\r\n\r\n  const onEnter = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Allow Visitor Entry',\r\n      message: 'Are you sure you wish to Allow the visitor to Enter?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onEnter(id, props.gateNo, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                let tData = data;\r\n                let foundIndex = tData.findIndex(v => v._id === id);\r\n                tData[foundIndex].isEntered = true;\r\n                tData[foundIndex].enteredBy = props.user.name;\r\n                tData[foundIndex].enteredAt = new Date();\r\n                setData(tData);\r\n                Toast.success('Visitor entered successfully.');\r\n              }else{\r\n                Toast.fail('Failed to allow the entry of visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onExit = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Exit Visitor',\r\n      message: 'Are you sure you wish to exit visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onExit(id, props.gateNo, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                setData(data.filter(v => v._id !== id));\r\n                Toast.success('Visitor exit successfully.');\r\n              }else{\r\n                Toast.fail('Failed to exit visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Visitors', link: 'all-visitors'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <VisitorsView user={props.user} appUser={props.appUser} data={data} isActive={isActive} onActiveChange={onActiveChange} onEnter={onEnter} onExit={onExit} />\r\n            <Spinner visible={isLoading} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { INotification } from '../models/notification';\r\nimport { loadAll, push } from '../store/actions/notification';\r\nimport Page from '../components/home/manager/notification';\r\nimport { IUser } from '../models/user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, sCallback, fCallback)),\r\n    onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => dispatch(push(appClientId, data, user, callback))\r\n});\r\n\r\nexport const Notification = connect(mapStateToProps, mapDispatchToProps)(Page);","import { INotification } from '../../models/notification';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { IUser } from '../../models/user';\r\n\r\nlet controller: string = 'notification';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Notification.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const push = (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => (dispatch: any) => {  \r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback({\r\n        _id: result.data,\r\n        title: data.title,\r\n        body: data.body,\r\n        createdBy: user.name,\r\n        createdAt: new Date()\r\n      } as INotification);\r\n    }else{\r\n      callback(null);\r\n    }\r\n  }, data);\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { INotification } from '../../../models/notification';\r\nimport { isNN, isNNObject, onEnter } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\nimport RadioButton from '../../common/radio-button';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => void,\r\n  onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([] as Array<INotification>);\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, (result: Array<INotification>) => {\r\n      setIsLoading(false);\r\n      setData(result);\r\n    }, (message: string) => {\r\n      setIsLoading(false);\r\n      Toast.fail(message);\r\n    });\r\n  }, []);\r\n  \r\n  const onPush = () => {\r\n    if(isNN(title) && isNN(body)){\r\n      confirmAlert({\r\n        title: 'Confirm to send push notification',\r\n        message: 'Are you sure? This notification will send to all users using this app in your Appartment. Are you sure you want to Push?',\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n              setIsLoading(true);\r\n              let notification = {\r\n                title: title,\r\n                body: body\r\n              } as INotification;\r\n              props.onPush(props.user.client._id, notification, props.user, (result: INotification | null) => {\r\n                setIsLoading(false);\r\n                if(isNNObject(result)){\r\n                  // data.unshift(result as INotification);\r\n                  setData([result as INotification, ...data]);\r\n                  setTitle('');\r\n                  setBody('');\r\n                  Toast.success('Notification pushed successfully.');\r\n                }else{\r\n                  Toast.fail('Failed to push Notification.');\r\n                }\r\n              });\r\n            }\r\n          },\r\n          {\r\n            label: 'No',\r\n            onClick: () => {}\r\n          }\r\n        ]\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Push.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Notification', link: 'notification'}]} />\r\n        <View className='bgc-white p-20'>\r\n        {isNN(props.user.client.config.notificationTypes) &&\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          {props.user.client.config.notificationTypes.map((d, i) => {\r\n            return(<RadioButton isActive={d === title} text={d} onPress={() => setTitle(d)} />);\r\n          })\r\n          }\r\n          <RadioButton isActive={!isNN(props.user.client.config.notificationTypes.filter((d, i) => d === title))} text='Other' onPress={() => setTitle('')} />\r\n        </View>\r\n        }\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' value={title} disabled={isNN(props.user.client.config.notificationTypes.filter((d, i) => d === title))} onChange={(event: any) => setTitle(event.target.value)} />\r\n        </View>\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <TextArea placeholder=\"Body\" className='form-control' value={body} onChange={(event: any) => setBody(event.target.value)}\r\n          onKeyPress={(e) => {\r\n            onEnter(e, onPush);\r\n          }} />\r\n        </View>\r\n        <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            className='mR-10'\r\n            title=\"PUSH\"\r\n            onPress={onPush}\r\n            />\r\n            <Button\r\n            title=\"CLEAR\"\r\n            onPress={() => {\r\n              setTitle('');\r\n              setBody('');\r\n            }}\r\n            />\r\n        </View>\r\n      {(isNN(data)) ?\r\n        data.map((d: INotification, i: number) => {\r\n          return(\r\n            <View key={i} className={'mT-5' + (i === 0 ? '' : ' bdT')}>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                  <Text className='fw-600'>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text className='fw-600'>{d.title}</Text>\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.body}</Text>\r\n              </View>\r\n              <View className='mT-3 mB-3 pT-5 pB-5'>\r\n                <Button title=\"Duplicate\" onPress={() => {\r\n                  setTitle(d.title);\r\n                  setBody(d.body);\r\n                }} />\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text className='p-20'>No notification found.</Text>\r\n      }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'outing';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getOutingResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getOutingResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    // Not Implemented\r\n        callback(false);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      console.log('result:', result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        outings.data.unshift(data);\r\n        dispatch(getOutingResult(outings.data, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    },data);\r\n  }\r\n};\r\n\r\nexport const retunBack = (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().delete(controller + '/return/' + id, (result: any, message: string) => {\r\n    debugger;\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      var foundIndex = outings.data.findIndex(d => d._id === id);\r\n      outings.data[foundIndex].isReturned = true;\r\n      outings.data[foundIndex].returnedAt = new Date();\r\n      dispatch(getOutingResult(outings.data, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getOutingResult = (data: Array<IOuting>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_OUTINGS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IOutings\r\n});","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/index';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { loadAll, retunBack } from '../store/actions/outing';\r\nimport Page from '../components/home/outings';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    data: state.Outings\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, homeId, callback)),\r\n    onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(retunBack(id, user, outings, callback))\r\n});\r\n\r\nexport const Outings = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Button from '../common/button';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateTimeString } from '../../util/convert';\r\nimport { ROLE } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\nimport Breadcrum from '../common/breadcrum';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  data: IOutings,\r\n  onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, props.appUser.role === ROLE.USER ? props.user.homes[props.appUser.homeIndex]._id : '', (result: boolean) => {\r\n      setIsLoading(false);\r\n      if(!result){\r\n        Toast.fail('Failed to load Door Locks.');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onReturnBack = (outingId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to open the door',\r\n      message: 'Are you sure? You want to open the door?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onReturnBack(outingId, props.user, props.data, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result){\r\n                Toast.success('Successfully opened the door.');\r\n              }else{\r\n                Toast.fail('Failed to open the door.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Door Locks', link: 'outings'}]} />\r\n          <View className='bgc-white p-20'>\r\n            {(props.appUser.role === ROLE.USER && (!isNNObject(props.data) || !isNN(props.data.data.filter(o => o.isReturned !== true)))) &&\r\n              <View className='ta-r'>\r\n                <Button\r\n                title='Lock The Door'\r\n                onPress={() => {\r\n                  props.history.push('new-outing')\r\n                }}\r\n                />\r\n              </View>\r\n            }\r\n            {\r\n              (isNNObject(props.data) && props.data.isUpToDate && !props.data.isError && isNN(props.data.data)) ?\r\n              props.data.data.map((d: IOuting, i: number) => {\r\n                return(\r\n                  <View key={\"o\" + d._id} className='bdB mT-5'>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text className='fw-600'>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                        <Text className='fw-600'>{toDateTimeString(d.fromDate) + \" to \" + toDateTimeString(d.toDate)}</Text>\r\n                    </View>\r\n                    {isNN(d.place) &&\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text className='fw-600'>{d.place}</Text>\r\n                    </View>\r\n                    }\r\n                    {isNN(d.address) &&\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text>{d.address}</Text>\r\n                    </View>\r\n                    }\r\n                    {d.isReturned &&\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text>{'Returned on ' + toDateTimeString(d.returnedAt)}</Text>\r\n                    </View>\r\n                    }\r\n                    {props.appUser.role !== ROLE.USER && \r\n                      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n                        <Text>No one in the home</Text>\r\n                      </View>\r\n                    }\r\n                    {(props.appUser.role === ROLE.USER && d.isReturned !== true) &&\r\n                      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n                        <Button title='Open The Door' onPress={() => {\r\n                          onReturnBack(d._id);\r\n                        }} />\r\n                      </View>\r\n                    }\r\n                  </View>\r\n                )\r\n              })\r\n              :\r\n              <Text className='p-20'>{(props.data.isUpToDate ? (props.data.isError ? props.data.errorMessage : \"No door lock found.\") : \"Loading...\")}</Text>\r\n            }\r\n            <Spinner visible={isLoading} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { IOuting } from '../models/outing';\r\nimport { save } from '../store/actions/outing';\r\nimport Page from '../components/home/new-outing';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    outings: state.Outings\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(save(data, homeId, user, outings, callback))\r\n});\r\n\r\nexport const NewOuting = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  outings: IOutings,\r\n  onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void,\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [state, setState] = useState({\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    place: '',\r\n    address: '',\r\n    datePickerType: '',\r\n    datePickerDate: new Date()\r\n  });\r\n  \r\n  const onSave = () => {\r\n    // if(isNNObject(state.fromDate) && isNNObject(state.toDate) && isNN(state.place) && isNN(state.address)){\r\n    if(isNNObject(state.fromDate) && isNNObject(state.toDate)){\r\n        setIsLoading(true);\r\n        let outing = {\r\n          ////homeId: props.user.home[props.appUser.homeIndex].id,\r\n          _homeId: props.user.homes[props.appUser.homeIndex].number,\r\n          fromDate: state.fromDate,\r\n          toDate : state.toDate,\r\n          place: state.place,\r\n          address: state.address,\r\n          isReturned: false,\r\n          createdBy: props.user.name,\r\n          createdAt: new Date()\r\n        } as IOuting;\r\n        props.onSave(outing, props.user.homes[props.appUser.homeIndex]._id, props.user, props.outings, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setState({\r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              place: '',\r\n              address: '',\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Outing submitted successfully.');\r\n          }else{\r\n            Toast.fail('Failed to submit Outing.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before submit Outing.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Notice', link: 'notice'}, {title: 'New Outing', link: 'new-outing' }]} />\r\n        <View className='bgc-white p-20' style={{minHeight: 450}}>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='w-100'>From Date: </Text>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              setState({\r\n                ...state,\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={state.fromDate}\r\n            />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='w-100'>To Date: </Text>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              setState({\r\n                ...state,\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={state.toDate}\r\n            />\r\n          </View>\r\n          {/* <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Place\" className='form-control' value={state.place} onChange={(event: any) => setState({...state, place: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextArea placeholder=\"Address\" className='form-control' value={state.address} onChange={(event: any) => setState({...state, address: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, onSave);\r\n            }} />\r\n          </View> */}\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { actionTypes } from '../action-types';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user';\r\nimport { IDocument } from '../../models/document';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants';\r\n\r\nlet controller: string = 'document';\r\n\r\nexport const loadAll = (homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getDocumentResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getDocumentResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Documents.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // document.file = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          var foundIndex = documents.findIndex(d => d._id === result.data._id);\r\n          documents[foundIndex]._id = result.data._id;\r\n          ////documents[foundIndex].userId = data.userId;\r\n          ////documents[foundIndex].homeId = data.homeId;\r\n          documents[foundIndex].title = data.title;\r\n          documents[foundIndex].description = data.description;\r\n          documents[foundIndex].file = data.file;\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          documents.unshift({\r\n            _id: result.data._id,\r\n            ////userId: data.userId,\r\n            ////homeId: data.homeId,\r\n            title: data.title,\r\n            description: data.description,\r\n            file: data.file,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IDocument);\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      documents = documents.filter((d, i) => d._id !== id);\r\n      dispatch(getDocumentResult(documents, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getDocumentResult = (data: Array<IDocument>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_DOCUMENTS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IDocuments\r\n});","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IDocument } from '../models/document';\r\nimport { loadAll, save, remove } from '../store/actions/documents';\r\nimport { upload } from '../store/actions/file';\r\nimport Page from '../components/home/my-documents';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    homeIndex: state.AppUser.homeIndex,\r\n    user: state.User,\r\n    documents: state.Documents\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(homeId, callback)),\r\n    onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(save(homeId, data, homeIndex, user, documents, callback)),\r\n    onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(remove(id, documents, callback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(upload(data, callback))\r\n});\r\n\r\nexport const MyDocuments = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Text, TextInput, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IDocument } from '../../models/document';\r\nimport { FILE_BASE_PATH } from '../../constants';\r\nimport { isNN, generateUUID } from '../../util/index';\r\nimport { toDateString } from '../../util/convert';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  homeIndex: number,\r\n  user: IUser,\r\n  documents: IDocuments,\r\n  onLoad: (homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [state, setState] = useState({\r\n    id: '',\r\n      homeId: isNN(props.user.homes) ? props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.homes[props.homeIndex]._id, (result: boolean) => {\r\n      setIsLoading(false);\r\n      if(!result){\r\n        Toast.fail('Failed to load Documents.');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onFileSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        setIsLoading(true);\r\n        // upload file to api.\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        props.onUpload(data, (result: boolean, message: string) => {\r\n          setIsLoading(false);\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }else{\r\n            setState({\r\n              ...state,\r\n              fileName: fileName\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSave = () => {\r\n    if(isNN(state.title) && isNN(state.fileName)){\r\n      setIsLoading(true);\r\n        /*\r\n        let data = state.data;\r\n        data.id = state.id,\r\n        data.userId = props.user._id,\r\n        data.homeId = state.homeId;\r\n        data.title = state.title;\r\n        data.description = state.description;\r\n        data.createdBy = props.user._id;\r\n        data.createdOn = new Date();\r\n        */\r\n        \r\n        let document = {\r\n          _id: state.id,\r\n          title: state.title,\r\n          description: state.description,\r\n          file: state.fileName,\r\n          createdBy: props.user.name,\r\n          createdAt: new Date()\r\n        } as IDocument;\r\n        props.onSave(state.homeId, document, props.homeIndex, props.user, props.documents.data, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setIsEdit(false);\r\n            onClear();\r\n            Toast.success('Document saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save document.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onClear = () => {\r\n    setState({\r\n      ...state,\r\n      id: '',\r\n      homeId: isNN(props.user.homes) ? props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n    });\r\n  };\r\n  \r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, props.documents.data, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                Toast.success('Document removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove document.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'My Documents', link: 'my-documents'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' value={state.title} onChange={(event: any) => setState({...state, title: event.target.value})} />\r\n        </View>\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <TextArea placeholder=\"Description\" className='form-control' value={state.description} onChange={(event: any) => setState({...state, description: event.target.value})} />\r\n        </View>\r\n        {isNN(props.user.homes) &&\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n        <Text className='mR-10'>House:</Text>\r\n        {props.user.homes.map((h: IHome, i: number) => {\r\n          return(\r\n            <RadioButton isActive={h._id === state.homeId} text={h.number} key={'home' + i} onPress={() => setState({...state, homeId: h._id})} />\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n        }\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          {/* <Button\r\n              title='Select Document'\r\n              onPress={onImageSelect}\r\n              /> */}\r\n              <input type='file' name='file' placeholder='Select Document' onChange={onFileSelect}/>\r\n              {isNN(state.fileName) &&\r\n              <Text className='mL-15'>{state.fileName}</Text>\r\n              }\r\n        </View>\r\n        <View className='cur-p mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            className='mR-10'\r\n            title='SAVE'\r\n            onPress={onSave}\r\n            />\r\n            <Button\r\n            title='CLEAR'\r\n            onPress={onClear}\r\n            />\r\n        </View>\r\n      {(props.documents.isUpToDate && !props.documents.isError && isNN(props.documents.data)) ?\r\n        props.documents.data.map((d: IDocument, i: number) => {\r\n          return(\r\n            <View key={i} className='bdB mT-5'>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                  <Text className='fw-600'>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text className='fw-600'>{d.title}</Text>\r\n              </View>\r\n              {isNN(d.description) &&\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              }\r\n              {isNN(props.user.homes.filter(ho => ho._id === d._id)) &&\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{'House: ' + props.user.homes.filter(ho => ho._id === d._id)[0].number}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.file) &&\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n              </View>\r\n              }\r\n              <View className='mT-1 mB-3 p-2'>\r\n                {/* <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                  setIsEdit(true);\r\n                  setState({\r\n                    ...state,\r\n                    id: d.id,\r\n                    homeId: d.homeId,\r\n                    title: d.title,\r\n                    description: d.description,\r\n                  });\r\n                }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span> */}\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    onRemove(d._id);\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text className='p-20'>{props.documents.isUpToDate ? 'No document found.' : (props.documents.isError ?  props.documents.errorMessage : 'No document found.')}</Text>\r\n      }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { actionTypes } from '../action-types';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { IBlock } from '../../models/block/block';\r\nimport { IUser } from '../../models/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util';\r\nimport { IHome } from '../../models/home';\r\nimport { IHomes } from '../../models/store/homes';\r\n\r\nlet controller: string = 'block';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getBlockResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getBlockResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, homes: Array<IHome>, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = blocks.findIndex(d => d._id === result.data);\r\n        blocks[foundIndex]._id = result.data;\r\n        blocks[foundIndex].name = data.name;\r\n        blocks[foundIndex].description = data.description;\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.blockId))\r\n      {\r\n        blocks.unshift({\r\n            _id: result.data.blockId,\r\n            name: data.name,\r\n            description: data.description,\r\n            createdBy: user.name\r\n          } as IBlock);\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        if(isNN(result.data.homes)){\r\n          result.data.homes.forEach((h: any) => {\r\n            h.memberIds = h.members;\r\n            delete h.members;\r\n          });\r\n          homes = homes.concat(result.data.homes);\r\n          dispatch(getHomesResult(homes, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      blocks = blocks.filter((d, i) => d._id !== id);\r\n      dispatch(getBlockResult(blocks, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { remove } from '../store/actions/block';\r\nimport Page from '../components/home/manager/blocks';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => dispatch(remove(id, blocks, callback))\r\n});\r\n\r\nexport const Blocks = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View,  TextInput, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  homes: IHomes,\r\n  onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const [isEdit, setIsEdit] = useState(false);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchResult, setSearchResult] = useState([] as Array<IBlock>);\r\n  const [searchResultIndex, setSearchResultIndex] = useState(10);\r\n\r\n  const onSearch = () => {\r\n    if(isNN(searchText) && props.blocks.isUpToDate && !props.blocks.isError && isNN(props.blocks.data)){\r\n      setSearchResult(props.blocks.data.filter(d => (d.name + '').toLocaleLowerCase().indexOf(searchText.toLowerCase()) >= 0));\r\n      setSearchResultIndex(10);\r\n    }else{\r\n        setSearchResult([]);\r\n        setSearchResultIndex(10);\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            let homes = (isNN(props.homes.data)) ? props.homes.data.filter(h => h._blockId === id) : [];\r\n            if(isNN(homes)){\r\n              let msg = '';\r\n              homes.map(h => {\r\n                msg += (msg.length > 0 ? ', ' : '') + h.number;\r\n              });\r\n              if(homes.length > 1){\r\n                msg = 'Houses ' + msg + ' are assigned under this block. Please move these houses to other block and try to delete';\r\n              }else{\r\n                msg = 'House ' + msg + ' is assigned under this block. Please move this house to other block and try to delete.';\r\n              }\r\n              Toast.fail(msg);\r\n            }else{\r\n              setIsLoading(true);\r\n              props.onRemove(id, props.blocks.data, (result: boolean) => {\r\n                setIsLoading(false);\r\n                if(result === true){\r\n                  onSearch();\r\n                  Toast.success('House removed successfully.');\r\n                }else{\r\n                  Toast.fail('Failed to remove house.');\r\n                }\r\n              });\r\n            }\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Blocks', link: 'blocks'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View>\r\n          <Text className='fl-r cur-p c-blue-500 mB-3' onClick={() => props.history.push('edit-block/0')}>Add New</Text>\r\n        </View>\r\n        <View className='mB-3 pB-5'>\r\n          <TextInput type='text' placeholder=\"Search Block\" className='form-control mR-10 d-i' style={{width: 'calc(100% - 40px)'}} value={searchText} onChange={(event: any) => setSearchText(event.target.value)}\r\n          onKeyPress={(e) => {\r\n            onEnter(e, onSearch);\r\n          }} />\r\n          <span className='icon-holder cur-p' onClick={onSearch}>\r\n            <i className='ti-search pdd-right-10 fw-900'></i>\r\n          </span> \r\n        </View>\r\n        {isNN(searchResult) ?\r\n        searchResult.slice(0, searchResultIndex).map((d: IBlock, i: number) => {\r\n          return(\r\n            <View key={'block' + i} className='bdB mT-5'>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{'Name: ' + d.name}</Text>         \r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{'Description: ' + (isNN(d.description) ? d.description : '')}</Text>\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text className='mR-10'>Houses: </Text>\r\n                {\r\n                  (isNN(props.homes.data) && isNN(props.homes.data.filter(h => h._blockId === d._id))) ?\r\n                  props.homes.data.filter(h => h._blockId === d._id).map((h, i) => {\r\n                  return(<Link to={'edit-home/' + h._id} className='mR-10'>{h.number}</Link>)\r\n                  })\r\n                  :\r\n                  <Text>No house assigned under this block.</Text>\r\n                }\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                  props.history.push('edit-block/' + d._id);////TODO\r\n                  // props.navigation.navigate('EditBlock', {id: d._id});\r\n                }}>\r\n                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                </span>\r\n                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    onRemove(d._id);\r\n                  }}>\r\n                  <i className=\"c-red-500 fa fa-trash\"></i>\r\n                </span>\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text className='p-20'>No block match with your search.</Text>\r\n      }\r\n      {(searchResult.length > searchResultIndex) &&\r\n      <View className='bdB mT-5'>\r\n        <View className='p-10'>\r\n          <Text className='fw-600 c-blue-500' onClick={() =>{\r\n            setSearchResultIndex(searchResultIndex + 10);\r\n          }}>Show More</Text>\r\n        </View>\r\n      </View>\r\n      }\r\n      <Spinner visible={isLoading} />\r\n  </View>\r\n  </View>\r\n  </View>\r\n  </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { IUser } from '../models/user';\r\nimport { IHome } from '../models/home';\r\nimport { save } from '../store/actions/block';\r\nimport Page from '../components/home/manager/edit-block';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, homes: Array<IHome>, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, blocks, homes, callback))\r\n});\r\n\r\nexport const EditBlock = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { View, TextInput } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { isNN, onEnter } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome } from '../../../models/home';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  homes: IHomes,\r\n  onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, homes: Array<IHome>, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [homeCount, setHomeCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let blockId = props.match.params.id; // props.navigation.state.params.id;\r\n    if(blockId.length > 0 && blockId !== '0' && props.blocks && isNN(props.blocks.data)){\r\n      let block = props.blocks.data.filter((d, i) => {\r\n        return d._id === blockId\r\n      });\r\n      if(isNN(block)){\r\n        setId(block[0]._id);\r\n        setName(block[0].name);\r\n        setDescription(block[0].description)\r\n      }\r\n    }\r\n  }, []);\r\n  \r\n  const onSave = () => {\r\n    if(isNN(name) && (isNN(id) || homeCount > 0)){\r\n      if(!isNN(props.blocks.data) || !isNN(props.blocks.data.filter(b => b.name === name))){\r\n        setIsLoading(true);\r\n        let block = {\r\n          _id: id,\r\n          name: name,\r\n          description: description\r\n        } as IBlock;\r\n        block = Object.assign(block, {\r\n          homeCount: homeCount\r\n        });\r\n        props.onSave(props.user.client._id, block, props.user, (props.blocks && props.blocks.data) ? props.blocks.data : [], (props.homes && props.homes.data) ? props.homes.data : [], (result: boolean, message: string) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n              setId('');\r\n              setName('');\r\n              setDescription('');\r\n              setHomeCount(0);\r\n            Toast.success(isNN(id) ? 'Block saved successfully.' : 'Block saved and house(s) created successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save block.');\r\n          }\r\n        });\r\n      }else{\r\n        Toast.fail('Block with same name already exists. Please give different name.');\r\n      }\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n      <Breadcrum data={[{title: 'Blocks', link: 'blocks'}, {title: 'Edit Block', link: 'edit-block/0'}]} />\r\n      <View className='bgc-white p-20'>\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <TextInput type='text' placeholder=\"Name\" className='form-control' value={name} onChange={(event: any) => setName(event.target.value)} />\r\n        </View>\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <TextInput type='text' placeholder=\"Description\" className='form-control' value={description} onChange={(event: any) => setDescription(event.target.value)}\r\n          onKeyPress={(e) => {\r\n            onEnter(e, onSave);\r\n          }} />\r\n        </View>\r\n        {!isNN(id) &&\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <TextInput type='number' placeholder=\"Number of houses in this block\" className='form-control' value={homeCount > 0 ? homeCount + '' : ''} onChange={(event: any) => setHomeCount(+(event.target.value.replace(/[^0-9]/g, '')))} />\r\n        </View>\r\n        }\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <Button\r\n          title=\"SAVE\"\r\n          onPress={onSave}\r\n          />\r\n        </View>\r\n      </View>\r\n      <Spinner visible={isLoading} />\r\n    </View>\r\n    </View>\r\n    </View>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport { View, ScrollView, TextInput, Text, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome } from '../../../models/home';\r\nimport { isNN } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\nimport { MONTH } from '../../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [amount, setAmount] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [month, setMonth] = useState(new Date().getMonth());\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const [searchText, setSearchText] = useState('');\r\n  const [showHomes, setShowHomes] = useState(false);\r\n  const [isAllHome, setIsAllHome] = useState(false);\r\n  const [homes, setHomes] = useState([] as Array<IHome>);\r\n\r\n  const onSave = () => {\r\n    if(amount > 0 && (isAllHome || homes.length > 0)){\r\n      let homeIds = [] as any;\r\n      homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        amount: amount,\r\n        description: description,\r\n        month: month,\r\n        year: year,\r\n        isAllHome: isAllHome,\r\n        homes: homeIds\r\n      };\r\n      setIsLoading(true);\r\n      props.onSave(props.user.client._id, data, props.user, (result: boolean, message: string) => {\r\n        setIsLoading(false);\r\n        if(result === true){\r\n          // props.navigation.navigation.goBack(null);\r\n          onClear();\r\n          Toast.success('Payment saved successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to save payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Save.');\r\n    }\r\n  };\r\n\r\n  const onClear = () => {\r\n    setAmount(0);\r\n    setDescription('');\r\n    setMonth(new Date().getMonth());\r\n    setYear(new Date().getFullYear());\r\n    setSearchText('');\r\n    setShowHomes(false);\r\n    setIsAllHome(false);\r\n    setHomes([]);\r\n  };\r\n\r\n    return(\r\n        <View className='pL-15 pR-15'>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Amount\" className='form-control' value={amount > 0 ? amount + '' : ''} onChange={(event: any) => setAmount(+(event.target.value.replace(/[^0-9]/g, '')))} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mT-15'>{'Payment for ' + year + ' '}</Text>\r\n            <Picker\r\n              className='form-control'\r\n              value={month}\r\n              onChange={(event: any) => setMonth(event.target.value)}>\r\n              {\r\n                MONTH.filter((m, i) => m.value <= new Date().getMonth()).map((m: any, i: number) => {\r\n                  return(<option key={'month' + i} value={m.value}>{m.title}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextArea placeholder=\"Description\" className='form-control' value={description} onChange={(event: any) => setDescription(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mR-15'>{'Apply to House(s): ' + (isAllHome ? '' : homes.length)}</Text>\r\n            <Checkbox isActive={isAllHome} text='All Homes' onPress={() => setIsAllHome(!isAllHome)} />\r\n          </View>\r\n          {!isAllHome &&\r\n          <ScrollView className='mT-3 mB-3 pT-5 pB-5 ov-s'>\r\n                {\r\n                  homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='cur-p mR-6 c-blue-500'\r\n                      key={'ho' + i}\r\n                      onClick={() => {\r\n                        setHomes(homes.filter((h, i) => h._id !== d._id));\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n          }\r\n          {!isAllHome &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Enter House Number\" className='form-control p-6 bd bdrs-5'\r\n            value={searchText} \r\n            onChange={(event: any) => {\r\n              setShowHomes(true);\r\n              setSearchText(event.target.value)\r\n            }} />\r\n          </View>\r\n          }\r\n            {(!isAllHome && showHomes && isNN(searchText) && props.homes && props.homes.data.length > 0 ) &&\r\n              <ScrollView className='mT-3 mB-3 pT-5 pB-5 ov-s'>\r\n                {\r\n                  props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(searchText.toLowerCase()) >= 0 && (homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='cur-p mR-6'\r\n                      key={'ho' + i}\r\n                      onClick={() => {\r\n                        let tHomes = homes;\r\n                        tHomes.push(d);\r\n                        setHomes(tHomes);\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n              </ScrollView>\r\n            }\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n              <Button\r\n              className='mR-10'\r\n              title=\"SAVE\"\r\n              onPress={onSave}\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={onClear}\r\n              />\r\n          </View>\r\n          <Spinner visible={isLoading} />\r\n        </View>\r\n    );\r\n};","import React, {useState} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Text, TextInput, ScrollView, TextArea } from '../../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IPayment } from '../../../models/home';\r\nimport { MONTH } from '../../../constants';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN } from '../../../util';\r\nimport Toast from '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [state, setState] = useState({\r\n    isLoading: false,\r\n    isShowSearch: true,\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    datePickerType: '',\r\n    datePickerDate: new Date(),\r\n    homes: [] as Array<IHome>,\r\n    searchText: '',\r\n    showHomes: false,\r\n    data: [] as Array<IPayment>,\r\n    isShowUpdateModel: false,\r\n    uPaymentId: '',\r\n    uAmount: 0,\r\n    uDescription: ''\r\n  });\r\n\r\n  const onSearch = () => {\r\n    if(state.fromDate && state.toDate){\r\n      let homeIds = [] as any;\r\n      state.homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        fromDate: state.fromDate,\r\n        toDate: state.toDate,\r\n        homes: homeIds\r\n      };\r\n      setState({\r\n        ...state,\r\n        isLoading: true\r\n      });\r\n      props.onSearch(props.user.client._id, data, props.user, (result: Array<IPayment>) => {\r\n        setState({\r\n          ...state,\r\n          isLoading: false,\r\n          isShowSearch: false,\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        setState({\r\n          ...state,\r\n          isLoading: false,\r\n        });\r\n        Toast.fail(message ? message : 'Failed to load payment.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Search.');\r\n    }\r\n  };\r\n\r\n  const onUpdate = () => {\r\n    if(isNN(state.uPaymentId) && state.uAmount > 0){\r\n      let data = {\r\n        amount: state.uAmount,\r\n        description: state.uDescription,\r\n      };\r\n      setState({\r\n        ...state,\r\n        isLoading: true\r\n      });\r\n      props.onUpdate(state.uPaymentId, data, props.user, (result: boolean, message: string) => {\r\n        setState({\r\n          ...state,\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          // props.navigation.navigation.goBack(null);\r\n          let pData = state.data;\r\n          var foundIndex = pData.findIndex(d => d._id === state.uPaymentId);\r\n          pData[foundIndex].amount = state.uAmount;\r\n          pData[foundIndex].description = state.uDescription;\r\n          setState({\r\n            ...state,\r\n            isShowUpdateModel: false,\r\n            uPaymentId: '',\r\n            uAmount: 0,\r\n            uDescription: '',\r\n            data: pData\r\n          });\r\n          Toast.success('Payment updated successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to update payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before update.');\r\n    }\r\n  };\r\n\r\n    return(\r\n        <View className='pL-15 pR-15'>\r\n          {state.isShowSearch ?\r\n          <View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                setState({\r\n                  ...state,\r\n                  fromDate: date\r\n                });\r\n              }}\r\n              value={state.fromDate}\r\n              />\r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                setState({\r\n                  ...state,\r\n                  toDate: date\r\n                });\r\n              }}\r\n              value={state.toDate}\r\n              />\r\n          </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mR-15'>{'House(s): ' + (state.homes.length > 0 ? state.homes.length : 'All')}</Text>\r\n          </View>\r\n            <ScrollView className='mT-3 mB-3 pT-5 pB-5 ov-s'>\r\n                {\r\n                  state.homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='cur-p mR-6 c-blue-500'\r\n                      key={'ho' + i}\r\n                      onClick={() => {\r\n                        setState({\r\n                          ...state,\r\n                          homes: state.homes.filter((h, i) => h._id !== d._id)\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Enter House Number\" className='form-control p-6 bd bdrs-5'\r\n            value={state.searchText} \r\n            onChange={(event: any) => setState({...state, showHomes: true, searchText: event.target.value})} />\r\n          </View>\r\n            {(state.showHomes && isNN(state.searchText) && props.homes && props.homes.data.length > 0 ) &&\r\n            <ScrollView className='mT-3 mB-3 pT-5 pB-5 ov-s'>\r\n                {\r\n                  props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(state.searchText.toLowerCase()) >= 0 && (state.homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='cur-p mR-6'\r\n                      key={'ho' + i}\r\n                      onClick={() => {\r\n                        let homes = state.homes;\r\n                        homes.push(d);\r\n                        setState({\r\n                          ...state,\r\n                          homes: homes\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            }\r\n            <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n                <Button\r\n                title=\"SEARCH\"\r\n                onPress={onSearch}\r\n                />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View>\r\n             <Text \r\n             className='fl-r cur-p c-blue-500 fw-600 ta-c'\r\n             onClick={() => {\r\n               setState({\r\n                ...state,\r\n                 isShowSearch: true\r\n               });\r\n             }}>Show Search</Text>\r\n          </View>\r\n          }\r\n          <View>\r\n            {(isNN(state.data)) ?\r\n              state.data.map((d: IPayment, i: number) => {\r\n                return(\r\n                  <View key={i} className='bdB mT-5'>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                        <Text className='fw-600'>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text className='fw-600'>{'Rs.' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                    </View>\r\n                    {isNN(d.description) &&\r\n                      <View className='mT-1 mB-3 p-2'>\r\n                        <Text>{d.description}</Text>\r\n                      </View>\r\n                    }\r\n                    <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n                      <Button title=\"Update\" onPress={() => {\r\n                        setState({\r\n                          ...state,\r\n                          isShowUpdateModel: true,\r\n                          uPaymentId: d._id,\r\n                          uAmount: d.amount,\r\n                          uDescription: d.description\r\n                        });\r\n                      }} />\r\n                    </View>\r\n                  </View>\r\n                )\r\n              })\r\n              :\r\n              <Text className='p-20'>No payment found.</Text>\r\n            }\r\n          </View>\r\n          <Modal\r\n          open={state.isShowUpdateModel}\r\n          onClose={() => {\r\n            setState({\r\n              ...state,\r\n              isShowUpdateModel: false,\r\n              uPaymentId: '',\r\n              uAmount: 0,\r\n              uDescription: ''\r\n            });\r\n          }}>\r\n          <View className='mT-30 mB-25 mL-15 mR-15'>\r\n            <View>\r\n              <View className='mT-3 mB-3 pT-5 pB-5'>\r\n                <TextInput type='text' placeholder=\"Amount\" className='form-control' value={state.uAmount > 0 ? state.uAmount + '' : ''} onChange={(event: any) => setState({...state, uAmount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View className='mT-3 mB-3 pT-5 pB-5'>\r\n                <TextArea placeholder=\"Description\" className='form-control' value={state.uDescription} onChange={(event: any) => setState({...state, uDescription: event.target.value})} />\r\n              </View>\r\n              <View className='cur-p mT-3 mB-3 pT-5 pB-5'>\r\n                  <Button\r\n                  className='mR-10'\r\n                  title=\"SAVE\"\r\n                  onPress={onUpdate}\r\n                  />\r\n                  <Button\r\n                  title=\"CLEAR\"\r\n                  onPress={() => {\r\n                    setState({\r\n                      ...state,\r\n                      uAmount: 0,\r\n                      uDescription: ''\r\n                    });\r\n                  }}\r\n                  />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n          <Spinner visible={state.isLoading} />\r\n        </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IPayment } from '../models/home';\r\nimport { loadAll, save, search, updatePay } from '../store/actions/payment';\r\nimport Page from '../components/home/manager/payment';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, homeId, sCallback, fCallback)),\r\n    onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, callback)),\r\n    onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(search(appClientId, data, user, sCallback, fCallback)),\r\n    onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updatePay(id, data, user, callback))\r\n});\r\n\r\nexport const Payment = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { View } from '../../common/elements';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IPayment } from '../../../models/home';\r\nimport PaymentForm from './payment-form';\r\nimport PaymentHistory from './payment-history';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  // const [history, setHistory] = useState([] as Array<IPayment>);\r\n\r\n  // useEffect(() => {\r\n  //   props.onLoad(props.user.client._id, '', (result: Array<IPayment>) => {\r\n  //     if(isNN(result)){\r\n  //       setHistory(result);\r\n  //     }\r\n  //   }, (message: string) => {\r\n  //     Toast.fail(message ? message : 'Failed to load Payments.');\r\n  //   });\r\n  // }, []);\r\n  \r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Payment', link: 'payment'}]} />\r\n        <View className='bgc-white p-20'>\r\n          <View className='tab-bar'>\r\n            <span className={'tab' + (activeTab === 1 ? ' active': '')} onClick={() => setActiveTab(1)}>\r\n              NEW\r\n            </span>\r\n            <span className={'tab' + (activeTab === 2 ? ' active': '')} onClick={() => setActiveTab(2)}>\r\n              HISTORY\r\n            </span>\r\n          </View>\r\n          <View className='tab-content p-15'>\r\n            {\r\n              activeTab === 1 ? \r\n                <PaymentForm history={props.history} appUser={props.appUser} user={props.user} homes={props.homes} onSave={props.onSave} />\r\n              :\r\n                <PaymentHistory history={props.history} appUser={props.appUser} user={props.user} homes={props.homes} onSearch={props.onSearch} onUpdate={props.onUpdate} />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IBlock } from '../../../../models/block';\r\nimport { IHome } from '../../../../models/home';\r\n\r\ninterface IProps {\r\n  blocks: IBlocks,\r\n  data: IHome\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  let { blocks, data } = props;\r\n  let blockName = '';\r\n  if(data && isNN(data._id) && blocks && blocks.isUpToDate && !blocks.isError && blocks.data){\r\n    let block = blocks.data.filter((d: IBlock, i: number) => d._id === data._blockId);\r\n    if(block && block.length > 0){\r\n      blockName = block[0].name;\r\n    }\r\n  }\r\n  return(\r\n    (data && isNN(data._id)) ?\r\n    <View>\r\n      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n        <Text>{'Block: ' + blockName}</Text>\r\n      </View>\r\n      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n        <Text>{'Number: ' + data.number}</Text>\r\n      </View>\r\n      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n        <Text>{'Address: ' + data.address}</Text>\r\n      </View>\r\n      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n        <Text>{'No of bed room(s): ' + data.bedRoom}</Text>\r\n      </View>\r\n      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n        <Text>{'Parking: ' + data.parking}</Text>\r\n      </View>\r\n      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n        <Text>{'Description: ' + data.description}</Text>\r\n      </View>\r\n    </View>\r\n    :\r\n    <Text>No data found.</Text>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { IUser } from '../../../../models/user';\r\nimport { IMember } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { APPTYPE } from '../../../../constants';\r\nimport { isNN } from '../../../../util/index';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [data, setData] = useState([] as Array<IMember>);\r\n\r\n  useEffect(() => {\r\n    if(props.homeId.length > 0){\r\n      props.onToggleLoading(true);\r\n      props.onLoad(props.homeId, (result: Array<IMember>) => {\r\n        props.onToggleLoading(false);\r\n        setData(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Members.');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return(\r\n    <View>\r\n    <View className='ta-c mT-1 mB-3 p-2'>\r\n      <Text className='c-blue-700 fw-600 mB-10'>Members</Text>\r\n    </View>\r\n      {isNN(data) ?\r\n        data.map((d: IMember, i: number) => {\r\n        return(\r\n          <View key={i} className='bdB mT-5'>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text className='fw-600'>{(isNN(d.createdBy) ? d.createdBy : '') + ' on ' + toDateString(d.createdAt)}</Text>\r\n            </View>\r\n            {(props.user.client.config.appType == APPTYPE.QUARTERS && isNN(d.number)) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.name}</Text>\r\n            </View>\r\n            }\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.name}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n            </View>\r\n            {isNN(d.mobileNo) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.mobileNo}</Text>\r\n            </View>\r\n            }\r\n            {isNN(d.emailId) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.emailId}</Text>\r\n            </View>\r\n            }\r\n            {props.user.client.config.appType == APPTYPE.APARTMENT &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.type}</Text>\r\n            </View>\r\n            }\r\n          </View>\r\n          );\r\n      })\r\n      :\r\n      <Text>No data found.</Text>\r\n    }\r\n    </View>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IVehicle } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [data, setData] = useState([] as Array<IVehicle>);\r\n\r\n  useEffect(() => {\r\n    if(props.homeId.length > 0){\r\n      props.onToggleLoading(true);\r\n      props.onLoad(props.homeId, (result: Array<IVehicle>) => {\r\n        props.onToggleLoading(false);\r\n        setData(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  }, []);\r\n  \r\n  return(\r\n    <View>\r\n      <View className='ta-c mT-1 mB-3 p-2'>\r\n        <Text className='c-blue-700 fw-600 mB-10'>Vehicles</Text>\r\n      </View>\r\n      {isNN(data) ? \r\n        data.map((d: IVehicle, i: number) => {\r\n        return(\r\n          <View key={i} className='bdB mT-5'>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text className='fw-600'>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.type}</Text>                  \r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.number}</Text>\r\n            </View>\r\n          </View>\r\n          );\r\n      })\r\n      :\r\n      <Text>No data found.</Text>\r\n    }\r\n    </View>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IServant, ITakeaway } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateTimeString } from '../../../../util/convert';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [data, setData] = useState([] as Array<IServant>);\r\n  const [viewId, setViewId] = useState('');\r\n  const [takeaways, setTakeaways] = useState([] as Array<ITakeaway>);\r\n\r\n  useEffect(() => {\r\n    if(props.homeId.length > 0){\r\n      props.onToggleLoading(true);\r\n      props.onLoad(props.homeId, (result: Array<IServant>) => {\r\n        props.onToggleLoading(false);\r\n        setData(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Servants.');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n const onView = (id: string, takeaways: Array<ITakeaway>) => {\r\n    if(viewId === id){\r\n      setViewId('');\r\n      setTakeaways([]);\r\n    }else{\r\n      setViewId(id);\r\n      setTakeaways(takeaways);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <View>\r\n      <View className='ta-c mT-1 mB-3 p-2'>\r\n        <Text className='c-blue-700 fw-600 mB-10'>Servants</Text>\r\n      </View>\r\n      {isNN(data) ?\r\n        data.map((d: IServant, i: number) => {\r\n        return(\r\n          <View key={i} className='bdB mT-5'>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text className='fw-600'>{d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.name}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n            </View>\r\n            {isNN(d.mobileNo) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.mobileNo}</Text>\r\n            </View>\r\n            }\r\n            {isNN(d.emailId) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.emailId}</Text>\r\n            </View>\r\n            }\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <span onClick={() => {\r\n                onView(d._id, d.takeaways);\r\n              }}>\r\n                <Text className='cur-p c-blue-500'>{(viewId === d._id ? 'Hide' : 'View') + ' Takeaways'}</Text>\r\n              </span>\r\n            </View>\r\n            {viewId === d._id &&\r\n            <View className='mT-5 mB-5'>\r\n              <View>\r\n                <Text className='fw-600'>Takeaways</Text>\r\n              </View>\r\n              <View className='p-15'>\r\n                {isNN(takeaways) ?\r\n                  takeaways.map((e: ITakeaway, j: number) => {\r\n                    return(\r\n                    <View key={'tkycmt' + j} className={'pL-3 pR-3 pT-5 pB-5' + (j === 0 ? '' : ' bdT')}>\r\n                      <View>\r\n                        <Text className='fw-600'>{e.createdBy + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                      </View>\r\n                      <View>\r\n                        <Text>{e.title}</Text>\r\n                      </View>\r\n                      <View>\r\n                        <Text>{e.description}</Text>\r\n                      </View>\r\n                      {\r\n                        e.isExit ?\r\n                      <View>\r\n                        <Text className='c-green-600'>{'Exit by ' + e.exitBy + ' in Gate ' + e.exitGateNo + ' on ' + toDateTimeString(e.exitAt)}</Text>\r\n                      </View>\r\n                      :\r\n                      <View>\r\n                        <Text className='c-red-600'>Still not exit.</Text>\r\n                      </View>\r\n                      }\r\n                    </View>\r\n                    )\r\n                  })\r\n                  :\r\n                  <Text className='p-20'>No takeaway found.</Text>\r\n                }\r\n              </View>\r\n            </View>\r\n            }\r\n          </View>\r\n          );\r\n      })\r\n      :\r\n      <Text>No data found.</Text>\r\n    }\r\n    </View>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { ITicket } from '../../../../models/home';\r\nimport { ITicketComment } from '../../../../models/home/ticket-comment';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateTimeString } from '../../../../util/convert';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [data, setData] = useState([] as Array<ITicket>);\r\n  const [viewId, setViewId] = useState('');\r\n  const [comments, setComments] = useState([] as Array<ITicketComment>);\r\n\r\n  useEffect(() => {\r\n    if(props.homeId.length > 0){\r\n      props.onToggleLoading(true);\r\n      props.onLoad(props.homeId, (result: Array<ITicket>) => {\r\n        props.onToggleLoading(false);\r\n        setData(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(viewId === id){\r\n      setViewId('');\r\n      setComments([]);\r\n    }else{\r\n      setViewId(id);\r\n      setComments(comments);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <View>\r\n      <View className='ta-c mT-1 mB-3 p-2'>\r\n        <Text className='c-blue-700 fw-600 mB-10'>Tickets</Text>\r\n      </View>\r\n      {isNN(data) ?\r\n        data.map((d: ITicket, i: number) => {\r\n        return(\r\n          <View key={'tkt' + i} className='bdB mT-5'>\r\n           <View className='mT-1 mB-3 p-2'>\r\n              <Text className='fw-600'>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.title}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.description}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.status}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <span onClick={() => {\r\n                onView(d._id, d.comments);\r\n              }}>\r\n                <Text className='cur-p c-blue-500'>{(viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n              </span>\r\n            </View>\r\n            {viewId === d._id &&\r\n            <View className='mT-5 mB-5'>\r\n              <View>\r\n                <Text className='fw-600'>Comments</Text>\r\n              </View>\r\n              <View className='p-15'>\r\n                {isNN(comments) ?\r\n                  comments.map((e: ITicketComment, j: number) => {\r\n                    return(\r\n                    <View key={'tkycmt' + j} className={'pL-3 pR-3 pT-5 pB-5' + (j === 0 ? '' : ' bdT')}>\r\n                      <View>\r\n                        <Text className='fw-600'>{e.createdByName + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                      </View>\r\n                      <View>\r\n                        <Text>{e.comment}</Text>\r\n                      </View>\r\n                    </View>\r\n                    )\r\n                  })\r\n                  :\r\n                  <Text className='p-20'>No comment found.</Text>\r\n                }\r\n              </View>\r\n            </View>\r\n            }\r\n          </View>\r\n          );\r\n      })\r\n      :\r\n      <Text>No data found.</Text>\r\n    }\r\n    </View>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IVisitor } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUser } from '../../../../models/user';\r\nimport VisitorsView from '../../gatekeeper/visitors-view';\r\nimport { View, Text } from '../../../common/elements';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [data, setData] = useState([] as Array<IVisitor>);\r\n  const [isActive, setIsActive] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = () => {\r\n    if(props.homeId.length > 0){\r\n      props.onToggleLoading(true);\r\n      props.onLoad(props.homeId, isActive, (result: Array<IVisitor>) => {\r\n        props.onToggleLoading(false);\r\n        setData(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Visitors.');\r\n      });\r\n    }\r\n  };\r\n  \r\n  const onActiveChange = () => {\r\n    setIsActive(!isActive);\r\n    loadData();\r\n  };\r\n\r\n  return(\r\n    <View>\r\n      <View className='ta-c mT-1 mB-3 p-2'>\r\n        <Text className='c-blue-700 fw-600 mB-10'>Visitors</Text>\r\n      </View>\r\n      <VisitorsView data={data} isActive={isActive} user={props.user} appUser={props.appUser} onActiveChange={onActiveChange} />\r\n    </View>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IPayment } from '../../../../models/home';\r\nimport { ITransaction } from '../../../../models/home/transaction';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { MONTH } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [data, setData] = useState([] as Array<IPayment>);\r\n  const [viewId, setViewId] = useState('');\r\n  const [transactions, setTransactions] = useState([] as Array<ITransaction>);\r\n  \r\n  useEffect(() => {\r\n    if(props.homeId.length > 0){\r\n      props.onToggleLoading(true);\r\n      props.onLoad(props.homeId, (result: Array<IPayment>) => {\r\n        props.onToggleLoading(false);\r\n        setData(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Payments.');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onView = (id: string, transactions: Array<ITransaction>) => {\r\n    if(viewId === id){\r\n      setViewId('');\r\n      setTransactions([]);\r\n    }else{\r\n      setViewId(id);\r\n      setTransactions(transactions);\r\n    }\r\n  };\r\n\r\n  const getAmountPaid = (transactions: Array<ITransaction>) => {\r\n    let amount = 0;\r\n    if(isNN(transactions)){\r\n      transactions.filter((d: ITransaction, i: number) => d.isSuccess === true).map((d:ITransaction, i: number) => amount += d.amount);\r\n    }\r\n    return amount;\r\n  };\r\n\r\n  return(\r\n    <View>\r\n      <View className='ta-c mT-1 mB-3 p-2'>\r\n        <Text className='c-blue-700 fw-600 mB-10'>Payments</Text>\r\n      </View>\r\n      {isNN(data) ?\r\n        data.map((d: IPayment, i: number) => {\r\n        return(\r\n          <View key={i} className='bdB mT-5'>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                    <Text className='fw-600'>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Rs. ' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Amount Paid Rs. ' + getAmountPaid(d.transactions)}</Text>\r\n                </View>\r\n                {isNN(d.description) &&\r\n                  <View className='mT-1 mB-3 p-2'>\r\n                    <Text>{d.description}</Text>\r\n                  </View>\r\n                }\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <span onClick={() => {\r\n                    onView(d._id, d.transactions);\r\n                  }}>\r\n                    <Text className='cur-p c-blue-500'>{(viewId === d._id ? 'Hide' : 'View') + ' Transactions'}</Text>\r\n                  </span>\r\n                </View>\r\n                {viewId === d._id &&\r\n                <View className='mT-5 mB-5'>\r\n              <View className='bdB'>\r\n                <Text className='fw-600'>Transactions</Text>\r\n              </View>\r\n              <View className='mT-3'>\r\n                {isNN(transactions) ?\r\n                  transactions.map((e: ITransaction, j: number) => {\r\n                    return(\r\n                    <View key={'tktcmt' + j} className={'pL-3 pR-3 pT-5 pB-5' + (j === 0 ? '' : ' bdT')}>\r\n                      <View className='fw-600'>\r\n                        <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                      </View>\r\n                      <View>\r\n                        <Text>{'Ref Id: ' + e.txnRef}</Text>\r\n                      </View>\r\n                      <View>\r\n                        <Text>{'Txn Id: ' + e.txnId}</Text>\r\n                      </View>\r\n                      <View>\r\n                        <Text>{'Amount: ' + e.amount}</Text>\r\n                      </View>\r\n                      <View>\r\n                        <Text>{'Status: ' + (e.isSuccess ? 'SUCCESS' : 'FAILED')}</Text>\r\n                      </View>\r\n                      {\r\n                        isNN(e.reason) &&\r\n                        <View>\r\n                          <Text>{'Reason: ' + e.reason}</Text>\r\n                        </View>\r\n                      }\r\n                    </View>\r\n                    )\r\n                  })\r\n                  :\r\n                  <Text className='p-20'>No transaction found.</Text>\r\n                }\r\n              </View>\r\n            </View>\r\n            }\r\n              </View>\r\n          );\r\n      })\r\n      :\r\n      <Text>No data found.</Text>\r\n    }\r\n    </View>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { FILE_BASE_PATH } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [data, setData] = useState([] as Array<IDocument>);\r\n  \r\n  useEffect(() => {\r\n    if(props.homeId.length > 0){\r\n      props.onToggleLoading(true);\r\n      props.onLoad(props.homeId, (result: Array<IDocument>) => {\r\n        props.onToggleLoading(false);\r\n        setData(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return(\r\n    <View>\r\n      <View className='ta-c mT-1 mB-3 p-2'>\r\n        <Text className='c-blue-700 fw-600 mB-10'>Documents</Text>\r\n      </View>\r\n      {isNN(data) ?\r\n        data.map((d: IDocument, i: number) => {\r\n        return(\r\n          <View key={i} className='bdB mT-5'>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text className='fw-600'>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text className='fw-600'>{d.title}</Text>\r\n            </View>\r\n            {isNN(d.description) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.description}</Text>\r\n            </View>\r\n            }\r\n            {isNN(d.file) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n            <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n            </View>\r\n            }\r\n          </View>\r\n          );\r\n      })\r\n      :\r\n      <Text>No data found.</Text>\r\n    }\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHome, IMember, IVehicle, IServant, ITicket, IPayment, IVisitor } from '../models/home';\r\nimport { IDocument } from '../models/document';\r\nimport { load } from '../store/actions/home';\r\nimport { loadAllByHome as loadMembers} from '../store/actions/member';\r\nimport { loadAllByHome as loadVehicles } from '../store/actions/vehicle';\r\nimport { loadAllByHome as loadServants } from '../store/actions/servant';\r\nimport { loadAllByHome as loadTickets } from '../store/actions/ticket';\r\nimport { loadAll as loadVisitors } from '../store/actions/visitor';\r\nimport { loadAll as loadPayments } from '../store/actions/payment';\r\nimport { loadAllByHome as loadDocuments } from '../store/actions/documents';\r\nimport Page from '../components/home/manager/view-home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadMembers(homeId, sCallback, fCallback)),\r\n    onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => dispatch(loadVehicles(homeId, sCallback, fCallback)),\r\n    onLoadServants: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => dispatch(loadServants(homeId, sCallback, fCallback)),\r\n    onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => dispatch(loadTickets(homeId, sCallback, fCallback)),\r\n    onLoadVisitors: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => dispatch(loadVisitors('', homeId, isActive, sCallback, fCallback)),\r\n    onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadPayments('', homeId, sCallback, fCallback)),\r\n    onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => dispatch(loadDocuments(homeId, sCallback, fCallback))\r\n});\r\n\r\nexport const ViewHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { View } from '../../../common/elements';\r\nimport Spinner from '../../../common/spinner';\r\nimport Breadcrum from '../../../common/breadcrum';\r\nimport { IUser } from '../../../../models/user/user';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUsers } from '../../../../models/store/users';\r\nimport { IHomes } from '../../../../models/store/homes';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IHome, IMember, IVehicle, IServant, ITicket, IVisitor, IPayment } from '../../../../models/home';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from  '../../../../util/toast';\r\nimport { isNN } from '../../../../util/index';\r\nimport Info from './info';\r\nimport Members from './members';\r\nimport Vehicles from './vehicles';\r\nimport Servants from './servants';\r\nimport Tickets from './tickets';\r\nimport Visitors from './visitors';\r\nimport Payments from './payments';\r\nimport Documents from './documents';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadServants: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVisitors: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [homeId, setHomeId] = useState('');\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const [data, setData] = useState({} as IHome);\r\n\r\n  useEffect(() => {\r\n    let homeId = props.match.params.id; // props.navigation.state.params.id;\r\n    setHomeId(homeId);\r\n    if(homeId.length > 0){\r\n      setIsLoading(true);\r\n      props.onLoad(homeId, (result: IHome) => {\r\n        setIsLoading(false);\r\n        if(result && isNN(result._id)){\r\n          setData(result);\r\n        }else{\r\n          Toast.fail('Failed to load house.');\r\n        }\r\n      }, (message: string) => {\r\n        setIsLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load house.');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const toggleLoading = (isLoading: boolean) => {\r\n    setIsLoading(isLoading);\r\n  }\r\n  \r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Houses', link: 'homes'}, {title: 'View House', link: 'view-home'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <View className='tab-bar'>\r\n              <span className={'tab' + (activeTab === 1 ? ' active': '')} onClick={() => setActiveTab(1)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-deep-purple-a700 ti-info-alt\"></i>\r\n                </span>\r\n              </span>\r\n              <span className={'tab' + (activeTab === 2 ? ' active': '')} onClick={() => setActiveTab(2)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-brown-500 fa fa-users\"></i>\r\n                </span>\r\n              </span>\r\n              <span className={'tab' + (activeTab === 3 ? ' active': '')} onClick={() => setActiveTab(3)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-indigo-500 fa fa-car\"></i>\r\n                </span>\r\n              </span>\r\n              <span className={'tab' + (activeTab === 4 ? ' active': '')} onClick={() => setActiveTab(4)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-deep-purple-500 fa fa-female\"></i>\r\n                </span>\r\n              </span>\r\n              <span className={'tab' + (activeTab === 5 ? ' active': '')} onClick={() => setActiveTab(5)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-orange-500 ti-headphone-alt\"></i>\r\n                </span>\r\n              </span>\r\n              <span className={'tab' + (activeTab === 6 ? ' active': '')} onClick={() => setActiveTab(6)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-pink-500 fa fa-id-card-o\"></i>\r\n                </span>\r\n              </span>\r\n              {props.user.client.config.hasPayment &&\r\n              <span className={'tab' + (activeTab === 7 ? ' active': '')} onClick={() => setActiveTab(7)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-indigo-500 fa fa-credit-card\"></i>\r\n                </span>\r\n              </span>\r\n              }\r\n              <span className={'tab' + (activeTab === 8 ? ' active': '')} onClick={() => setActiveTab(8)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-blue-500 fa fa-file-text\"></i>\r\n                </span>\r\n              </span>\r\n            </View>\r\n            <View className='p-15'>\r\n              {\r\n                activeTab === 1 ?\r\n                    <Info blocks={props.blocks} data={data} />\r\n                :\r\n                  activeTab === 2 ?\r\n                    <Members user={props.user} homeId={homeId} onToggleLoading={toggleLoading} onLoad={props.onLoadMembers} />\r\n                  :\r\n                    activeTab === 3 ?\r\n                      <Vehicles homeId={homeId} onToggleLoading={toggleLoading} onLoad={props.onLoadVehicles} />\r\n                    :\r\n                      activeTab === 4 ?\r\n                        <Servants homeId={homeId} onToggleLoading={toggleLoading} onLoad={props.onLoadServants} />\r\n                      :\r\n                        activeTab === 5 ?\r\n                          <Tickets homeId={homeId} onToggleLoading={toggleLoading} onLoad={props.onLoadTickets} />\r\n                        :\r\n                          activeTab === 6 ?\r\n                            <Visitors appUser={props.appUser} user={props.user} homeId={homeId} onToggleLoading={toggleLoading} onLoad={props.onLoadVisitors} />\r\n                          :\r\n                            activeTab === 7 ?\r\n                              <Payments homeId={homeId} onToggleLoading={toggleLoading} onLoad={props.onLoadPayments} />\r\n                            :\r\n                              <Documents homeId={homeId} onToggleLoading={toggleLoading} onLoad={props.onLoadDocuments} />\r\n              }            \r\n            </View>\r\n          </View>\r\n          <Spinner visible={isLoading} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { actionTypes } from '../action-types';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IUser } from '../../models/user';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n//import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'poll';\r\n\r\nexport const loadAll = (appClientId: string, userRole: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getPollResult([], false, false, ''));\r\n  // new Api().get(controller + 'loadall/?appClientId=' + appClientId + '&userRole=' + userRole, (result: any, message: string) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getPollResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = polls.findIndex(d => d._id === result.data);\r\n        polls[foundIndex]._id = result.data;\r\n        polls[foundIndex].topic = data.topic;\r\n        polls[foundIndex].description = data.description;\r\n        polls[foundIndex].isAllowMultiple = data.isAllowMultiple;\r\n        polls[foundIndex].isOneVotePerFlat = data.isOneVotePerFlat;\r\n        polls[foundIndex].isAnonymous = data.isAnonymous;\r\n        polls[foundIndex].fromDate = data.fromDate;\r\n        polls[foundIndex].toDate = data.toDate;\r\n        polls[foundIndex].options = data.options;\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        sCallback(true);\r\n      }else{\r\n        sCallback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      // console.log(\"OUT: \" + result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        polls.unshift(data);\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        sCallback(true);\r\n      }else{\r\n        sCallback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, polls: Array<IPoll>, userId: string, sCallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      polls = polls.filter((d, i) => d._id !== id);\r\n      dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n      sCallback(true);\r\n    }else{\r\n      sCallback(false);\r\n    }\r\n  }, {\r\n    Id: id,\r\n    UserId: userId\r\n  });\r\n};\r\n\r\nexport const vote = (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/vote/' + pollId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      var foundIndex = polls.data.findIndex(d => d._id === pollId);\r\n      polls.data[foundIndex].votes = result.data;\r\n      dispatch(getPollResult(polls.data, true, false, ''));\r\n\r\n      /*\r\n      // Update home\r\n      if(!isNN(user.homes[appUser.homeIndex].votes)){\r\n        user.home[appUser.homeIndex].vote = [];\r\n      }\r\n      result.data.map((v: IVote, vi: number) => {\r\n        user.home[appUser.homeIndex].vote.push(v);\r\n      });\r\n      dispatch(getUserResult(user));\r\n      */\r\n      // Update polls\r\n      // if(polls.isUpToDate && !polls.isError && isNN(polls.data) && ((',' + user.type + ',').indexOf(ROLE.ADMIN) >= 0 || (',' + user.type + ',').indexOf(ROLE.MANAGER) >= 0)){\r\n        if(polls.isUpToDate && !polls.isError && isNN(polls.data)){\r\n        let lstPoll = polls.data;\r\n        let pollIndex = lstPoll.findIndex(p => p._id === pollId);\r\n        lstPoll[pollIndex].votes = result.data;\r\n        /*\r\n        if(!isNN(lstPoll[pollIndex].votes)){\r\n          lstPoll[pollIndex].vote = [];\r\n        }\r\n        result.data.map((v: IVote, vi: number) => {\r\n          lstPoll[pollIndex].vote.unshift(v);\r\n        });\r\n        */\r\n        dispatch(getPollResult(lstPoll, true, false, \"\"));\r\n      }\r\n     // dispatch(getUserResult(user));\r\n      \r\n      sCallback(true);\r\n    }else{\r\n      sCallback(false);\r\n    }\r\n  }, {\r\n    votes: votes\r\n  });\r\n};\r\n\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});","import { jsError } from \"./index\";\r\n\r\nexport function percentage(_partialValue: number, _totalValue: number) {\r\n    try{\r\n        if(_totalValue > 0){\r\n            return (100 * _partialValue) / _totalValue;\r\n        }else{\r\n            return 0;\r\n        }\r\n    } catch (ex) {\r\n    jsError(ex, 'calc.percentage'); \r\n    return 0; \r\n  }\r\n };","import React, {useState} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport DatePicker from 'react-date-picker';\r\nimport { View, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IPolls } from '../../../models/store/polls';\r\nimport { IPoll } from '../../../models/poll/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN, isNNObject } from '../../../util/index';\r\nimport { percentage } from '../../../util/calc';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onSave: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, polls: Array<IPoll>, userID: string, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [state, setState] = useState({\r\n    isEdit: false,\r\n    isLoading: false,\r\n    id: '',\r\n    topic: '',\r\n    description: '',\r\n    isAllowMultiple: false,\r\n    isOneVotePerFlat: false,\r\n    isAnonymous: false,\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    pollOption: [] as Array<string>,\r\n    showVotePoll: { _id: '' } as IPoll,\r\n    datePickerType: '',\r\n    datePickerDate: new Date()\r\n  });\r\n  \r\n  const onSave = () => {\r\n    if(isNN(state.topic) && isNN(state.description) && isNNObject(state.fromDate) && isNNObject(state.toDate) && isNN(state.pollOption.filter(po => isNN(po)))){\r\n        setState({\r\n          ...state,\r\n          isLoading: true\r\n        });\r\n        let poll = {\r\n          _id: state.id,\r\n          topic: state.topic,\r\n          description: state.description,\r\n          isAllowMultiple: state.isAllowMultiple,\r\n          isOneVotePerFlat: state.isOneVotePerFlat,\r\n          isAnonymous: state.isAnonymous,\r\n          fromDate: state.fromDate,\r\n          toDate: state.toDate,\r\n          options: state.pollOption.filter(po => isNN(po))\r\n        } as IPoll;\r\n        props.onSave(props.user.client._id, poll, props.polls.data, props.user, (result: boolean) => {\r\n          setState({\r\n            ...state,\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            setState({\r\n              ...state,\r\n              isEdit: false,\r\n              id: '',\r\n              topic: '',\r\n              description: '',\r\n              isAllowMultiple: false,\r\n              isOneVotePerFlat: false,\r\n              isAnonymous: false,\r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              pollOption: [],\r\n              showVotePoll: { _id: '' } as IPoll,\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Poll saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save pol.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setState({\r\n              ...state,\r\n              isLoading: true\r\n            });\r\n            props.onRemove(id, props.polls.data, props.user._id, (result: boolean) => {\r\n              setState({\r\n                ...state,\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Poll removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove poll.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const loadVotes = () => {\r\n    if(isNNObject(state.showVotePoll) && state.showVotePoll._id.length > 0){\r\n      let votes = [] as any;\r\n      state.showVotePoll.options.map((po: string, poi: number) => \r\n        votes.push({\r\n          option: po,\r\n          votes: state.showVotePoll.votes.filter(v => v.option === poi).length\r\n        })\r\n      );\r\n      return(\r\n        <View className='p-15'>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text className='fw-600'>{state.showVotePoll.topic}</Text>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text>{state.showVotePoll.description}</Text>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text className='fw-600'>{'Votes: ' + state.showVotePoll.votes.length}</Text>\r\n          </View>\r\n        {\r\n        votes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n          return(\r\n            <View key={'pvo' + voi} className='mT-1 mB-3 p-2'>\r\n              <Text>\r\n                {vo.votes + ' (' + percentage(vo.votes, state.showVotePoll.votes.length) +  '%) - ' + vo.option}\r\n              </Text>\r\n            </View>\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n      )\r\n    }else{\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View>\r\n        {state.isEdit === false &&\r\n        <View className='bdB mT-5 pB-5'>\r\n          <Button\r\n          title=\"ADD NEW\"\r\n          onPress={() => {\r\n            setState({\r\n              ...state,\r\n              isEdit: true,\r\n              id: '',\r\n              topic: '',\r\n              description: '',\r\n              isAllowMultiple: false,\r\n              isOneVotePerFlat: false,\r\n              isAnonymous: false, \r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              pollOption: [],\r\n              showVotePoll: { _id: '' } as IPoll,\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n             });\r\n          }}\r\n          />\r\n        </View>\r\n        }\r\n        {\r\n         (state.isEdit === true && state.id.length === 0)  ?\r\n         <View key={\"p0\"} className='bdB mT-5'>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' value={state.topic} onChange={(event: any) => setState({...state, topic: event.target.value})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <TextArea placeholder=\"Description\" className='form-control' value={state.description} onChange={(event: any) => setState({...state, description: event.target.value})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              setState({\r\n                ...state,\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={state.fromDate}\r\n            />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              setState({\r\n                ...state,\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={state.toDate}\r\n            />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Checkbox isActive={state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => setState({...state, isAllowMultiple: !state.isAllowMultiple})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Checkbox isActive={state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => setState({...state, isOneVotePerFlat: !state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Checkbox isActive={state.isAnonymous} text='Anonymous Voting' onPress={() => setState({...state, isAnonymous: !state.isAnonymous})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(state.pollOption) ?\r\n            state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} className='mT-1 mB-3 p-2'>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' value={e} onChange={(event: any) => {\r\n                    let newOptions = state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    setState({...state, pollOption: newOptions});\r\n                  }} />\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    let newOptions = state.pollOption;\r\n                    delete newOptions[j];\r\n                    setState({...state, pollOption: newOptions});\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-times\"></i>\r\n                  </span>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>No option found.</Text>\r\n            </View>\r\n          }\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <span\r\n              onClick={() => {\r\n                if(!isNN(state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = state.pollOption;\r\n                  newOptions.push('');\r\n                  setState({...state, pollOption: newOptions});\r\n                }\r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </span>\r\n            </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <span className=\"icon-holder mR-10 cur-p\" onClick={onSave}>\r\n              <i className=\"c-green-500 fa fa-check\"></i>\r\n            </span>\r\n            <span className=\"icon-holder cur-p\" onClick={() => {\r\n              setState({\r\n                ...state,\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <i className=\"c-red-500 fa fa-times\"></i>\r\n            </span>\r\n          </View>\r\n        </View>\r\n        :\r\n        []\r\n        }\r\n      {\r\n      (isNNObject(props.polls) && props.polls.isUpToDate && !props.polls.isError && isNN(props.polls.data)) ?      \r\n      props.polls.data.map((d: IPoll, i: number) => {\r\n      return(\r\n        (state.isEdit === true && state.id === d._id) ?\r\n        <View key={\"p\" + d._id} className='bdB mT-5'>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' value={state.topic} onChange={(event: any) => setState({...state, topic: event.target.value})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <TextArea placeholder=\"Description\" className='form-control' value={state.description} onChange={(event: any) => setState({...state, description: event.target.value})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              setState({\r\n                ...state,\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={state.fromDate}\r\n            />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              setState({\r\n                ...state,\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={state.toDate}\r\n            />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Checkbox isActive={state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => setState({...state, isAllowMultiple: !state.isAllowMultiple})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Checkbox isActive={state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => setState({...state, isOneVotePerFlat: !state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Checkbox isActive={state.isAnonymous} text='Anonymous Voting' onPress={() => setState({...state, isAnonymous: !state.isAnonymous})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(state.pollOption) ?\r\n            state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} className='mT-1 mB-3 p-2'>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' value={e} onChange={(event: any) => {\r\n                    let newOptions = state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    setState({...state, pollOption: newOptions});\r\n                  }} />\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    let newOptions = state.pollOption;\r\n                    delete newOptions[j];\r\n                    setState({...state, pollOption: newOptions});\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-times\"></i>\r\n                  </span>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>No option found.</Text>\r\n            </View>\r\n          }\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <span\r\n              onClick={() => {\r\n                if(!isNN(state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = state.pollOption;\r\n                  newOptions.push('');\r\n                  setState({...state, pollOption: newOptions});\r\n                }            \r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </span>\r\n            </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <span className=\"icon-holder mR-10 cur-p\" onClick={onSave}>\r\n              <i className=\"c-green-500 fa fa-check\"></i>\r\n            </span>\r\n            <span className=\"icon-holder cur-p\" onClick={() => {\r\n              setState({\r\n                ...state,\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <i className=\"c-red-500 fa fa-times\"></i>\r\n            </span>\r\n          </View>\r\n        </View>\r\n        :\r\n        <View key={\"p\" + d._id} className='bdB mT-5'>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text className='fw-600'>{d.topic}</Text>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text>{d.description}</Text>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text>{toDateString(d.fromDate) + \" to \" + toDateString(d.toDate)}</Text>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <View className={'bd pT-3 pB-3 pL-5 pR-5 ' + (d.isAllowMultiple === true ? 'bgc-blue-600 bdc-blue-600' : 'mL-5')}>\r\n              <Text className={(d.isAllowMultiple === true ? 'c-white' : '')}>Allow Multiple Votes</Text>\r\n            </View>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <View className={'bd pT-3 pB-3 pL-5 pR-5 ' + (d.isOneVotePerFlat === true ? 'bgc-blue-600 bdc-blue-600' : 'mL-5')}\r\n             >\r\n              <Text className={(d.isOneVotePerFlat === true ? 'c-white' : '')}>One Vote per Flat</Text>\r\n            </View>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <View className={'bd pT-3 pB-3 pL-5 pR-5 ' + (d.isAnonymous === true ? 'bgc-blue-600 bdc-blue-600' : 'mL-5')}>\r\n              <Text className={(d.isAnonymous === true ? 'c-white' : '')}>Anonymous Voting</Text>\r\n            </View>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(d.options) ?\r\n            d.options.map((e: string, j: number) => {\r\n              return(\r\n                <View key={\"po\" + j} className='mT-1 mB-3 p-2'>\r\n                  <Text key={\"pot\" + j}>{e}</Text>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text className='p-10'>No option found.</Text> \r\n            </View>           \r\n          }\r\n          <View className='mT-1 mB-3 p-2'>\r\n          {(d.fromDate > new Date()) &&\r\n          <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n            setState({\r\n              ...state,\r\n              isEdit: true,\r\n              id: d._id,\r\n              topic: d.topic,\r\n              description: d.description,\r\n              isAllowMultiple: d.isAllowMultiple,\r\n              isOneVotePerFlat: d.isOneVotePerFlat,\r\n              isAnonymous: d.isAnonymous,\r\n              fromDate: d.fromDate,\r\n              toDate: d.toDate,\r\n              pollOption: (isNN(d.options) ? d.options : [])\r\n            });\r\n          }}>\r\n            <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n          </span>\r\n          }\r\n          <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n              onRemove(d._id);\r\n            }}>\r\n            <i className=\"c-red-500 fa fa-trash\"></i>\r\n          </span>\r\n            <Text className='cur-p c-blue-500' onClick={() => {\r\n              setState({...state, showVotePoll: d})\r\n            }}>View Votes</Text>\r\n          </View>\r\n        </View>\r\n      )\r\n      })\r\n      :\r\n      <Text className='p-20'>{(props.polls.isUpToDate ? (props.polls.isError ? props.polls.errorMessage : \"No poll found.\") : \"Loading...\")}</Text>\r\n    }\r\n    <Modal\r\n      open={(isNNObject(state.showVotePoll) && state.showVotePoll._id.length > 0)}\r\n      onClose={() => setState({...state, showVotePoll : { _id: '' } as IPoll})}>\r\n      <View className='mT-30 mB-25 mL-15 mR-15' style={{height: '80%'}}>\r\n        <View>\r\n        {\r\n          loadVotes()\r\n        }\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n    <Spinner visible={state.isLoading} />\r\n    </View>  \r\n    );\r\n};","import React, {useState} from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Checkbox from '../common/checkbox';\r\nimport Spinner from '../common/spinner';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { percentage } from '../../util/calc';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  let curDate = new Date();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [votePollId, setVotePollId] = useState('');\r\n  const [votes, setVotes] = useState([] as Array<IVote>);\r\n  const [currentDate, setCurrentDate] = useState(new Date((curDate.getMonth() + 1) + '/' + curDate.getDate() + '/' + curDate.getFullYear()));\r\n\r\n  const loadVotes = (poll: IPoll) => {\r\n    let tVotes = [] as any;\r\n    poll.options.map((po: string, poi: number) => \r\n      tVotes.push({\r\n        option: po,\r\n        votes: poll.votes.filter(v => v.option === poi).length\r\n      })\r\n    );\r\n    return(\r\n    tVotes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n      return(\r\n        <View key={'pvo' + voi} className='mT-1 mB-3 p-2'>\r\n          <Text>\r\n            {vo.votes + ' (' + percentage(vo.votes, poll.votes.length) +  '%) - ' + vo.option}\r\n          </Text>\r\n        </View>\r\n      )\r\n    })\r\n    )\r\n  };\r\n\r\n  const onSelectOption = (poll: IPoll, optionId: number) => {\r\n    if(votePollId === poll._id){\r\n      if(isNN(votes.filter(v => v.option === optionId))){\r\n        setVotes(votes.filter(v => v.option !== optionId));\r\n      }else{\r\n        let tVotes = [] as Array<IVote>;\r\n        if(poll.isAllowMultiple){\r\n          tVotes = votes;\r\n        }\r\n        tVotes.push({\r\n            _homeId: props.user.homes[props.appUser.homeIndex]._id,\r\n            _memberId: props.user._id,\r\n            option: optionId,\r\n            isActive: true,\r\n            createdBy: props.user._id\r\n          } as IVote);\r\n          setVotes(tVotes);\r\n        // if(poll.isAllowMultiple || !isNN(votes.filter(v => v.pollId === poll.id))){\r\n\r\n        // }\r\n      }\r\n    }else{\r\n      let tVotes = [] as Array<IVote>;\r\n      tVotes.push({\r\n        _homeId: props.user.homes[props.appUser.homeIndex]._id,\r\n        _memberId: props.user._id,\r\n        option: optionId,\r\n        isActive: true,\r\n        createdBy: props.user._id\r\n      } as IVote);\r\n      setVotePollId(poll._id);\r\n      setVotes(tVotes);\r\n    }\r\n  };\r\n\r\n  const onVote = (pollId: string) => {\r\n    if(votePollId === pollId &&  isNN(votes)){\r\n      setIsLoading(true);\r\n      props.onVote(pollId, votes, props.polls, props.user, props.appUser, (result: boolean) => {\r\n        setIsLoading(false);\r\n        if(result === true){\r\n          setVotePollId('');\r\n          setVotes([]);\r\n          Toast.success('Your vote saved successfully.');\r\n        }else{\r\n          Toast.fail('Failed to save your vote.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select any option to vote.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View>\r\n      {\r\n        (isNNObject(props.polls) && props.polls.isUpToDate && !props.polls.isError && isNN(props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= currentDate))) ?\r\n        props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= currentDate).map((d: IPoll, i: number) => {\r\n          return(\r\n            <View key={\"p\" + d._id} className='bdB mT-5'>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text className='fw-600'>{d.topic}</Text>\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === props.user.homes[props.appUser.homeIndex]._id))) &&\r\n                d.options.map((o: string, oi: number) => {\r\n                  return(\r\n                    <View key={\"popt\" + oi} className='mT-1 mB-3 p-2'>\r\n                      <Checkbox isActive={(votePollId === d._id && isNN(votes.filter(v => v.option === oi)))} text={o} onPress={() => onSelectOption(d, oi)} />\r\n                    </View>\r\n                  )\r\n                })\r\n              }\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === props.user.homes[props.appUser.homeIndex]._id))) &&\r\n                <View className='mT-5'>\r\n                  <Button title=\"Vote\" onPress={() => onVote(d._id)} />\r\n                </View>\r\n              }\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text className='fw-600'>Your Votes:</Text>\r\n              </View>\r\n              {isNN(d.options) &&\r\n                loadVotes(d)\r\n              }\r\n            </View>\r\n          )\r\n      })\r\n      :\r\n      <Text className='p-20'>{(props.polls.isUpToDate ? (props.polls.isError ? props.polls.errorMessage : \"No active poll found.\") : \"Loading...\")}</Text>\r\n    }\r\n    <Spinner visible={isLoading} />\r\n    </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { IPolls } from '../models/store/polls';\r\nimport { IPoll, IVote } from '../models/poll/index';\r\nimport { loadAll as loadAllAds } from '../store/actions/ad';\r\nimport { loadAll as loadAllPools, save, remove, vote } from '../store/actions/poll';\r\nimport Page from '../components/home/notification';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    polls: state.Polls,\r\n    remainders: [],\r\n    complaints: []\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoadAds: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAllAds(appClientId, callback)),\r\n    onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => dispatch(loadAllPools(appClientId, userRole, callback)),\r\n    onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => dispatch(save(appClientId, data, polls, user, sCallback)),\r\n    onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, sCallback: (result: boolean) => void) => dispatch(remove(id, polls, userId, sCallback)),\r\n    onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => dispatch(vote(pollId, votes, polls, user, appUser, sCallback))\r\n});\r\n\r\nexport const Notice = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { View } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IComplaint, IRemainder } from '../../models/home/index';\r\nimport AMPoll from './manager/poll';\r\nimport UserPoll from './poll';\r\nimport CustomList from './custom-list';\r\nimport { ROLE } from '../../constants';\r\nimport { isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  polls: IPolls,\r\n  remainders: Array<IRemainder>,\r\n  complaints: Array<IComplaint>,\r\n  onLoadAds: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => void,\r\n  onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => void,\r\n  onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, sCallback: (result: boolean) => void) => void,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [activeTab, setActiveTab] = useState((isNNObject(props.user) && (props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER)) ? 1 : 2);\r\n  const [isShowPoll, setIsShowPoll] = useState(isNNObject(props.user) && (props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER || (props.appUser.role === ROLE.USER && props.appUser.homeIndex >= 0)));\r\n  \r\n  useEffect(() => {\r\n    props.onLoadAds(props.user.client._id, (result: boolean) => {\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n    if(isShowPoll){\r\n      props.onLoadPoll(props.user.client._id, props.appUser.role, (result: boolean) => {\r\n        if(!result){\r\n          Toast.fail('Failed to load Poll.');\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n  \r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Notice', link: 'notice'}]} />\r\n        <View className='bgc-white p-20'>\r\n          <View className='tab-bar'>\r\n          {isShowPoll &&\r\n            <span className={'tab' + (activeTab === 1 ? ' active': '')} onClick={() => setActiveTab(1)}>\r\n              POLL\r\n            </span>\r\n          }\r\n            <span className={'tab' + (activeTab === 2 ? ' active': '')} onClick={() => setActiveTab(2)}>\r\n              ADS\r\n            </span>\r\n            {/* <span className={'tab' + (activeTab === 3 ? ' active': '')} onClick={() => setActiveTab(3)}>\r\n              REMINDERS\r\n            </span>\r\n            <span className={'tab' + (activeTab === 4 ? ' active': '')} onClick={() => setActiveTab(4)}>\r\n            COMPLAINTS\r\n            </span> */}\r\n          </View>\r\n          <View className='p-15'>\r\n            {\r\n              activeTab === 1 ? \r\n                (props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER) ? \r\n                  <AMPoll appUser={props.appUser} user={props.user} polls={props.polls} onSave={props.onSavePoll} onRemove={props.onRemovePoll} />\r\n                :\r\n                  <UserPoll appUser={props.appUser} user={props.user} polls={props.polls} onVote={props.onVote} />\r\n              :\r\n                activeTab === 2 ?\r\n                  <CustomList data={(props.ads.isUpToDate ? props.ads.data : [])} message={(props.ads.isUpToDate ? (props.ads.isError ? props.ads.errorMessage : \"No data found.\") : \"Loading...\")} />\r\n                :\r\n                  <CustomList data={activeTab === 4 ? props.remainders : props.complaints} message=\"No data found.\" />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport Page from '../components/home/help';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n});\r\n\r\nexport const Help = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IUser } from '../../models/user';\r\n\r\ninterface IProps {\r\n  user: IUser\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Info', link: 'info'}]} />\r\n          <View className='bgc-white p-20'>\r\n          \r\n          {/* <Image source={Images.workInProgress} className='mT-30' />\r\n              <Text>Work in progress.</Text> */}\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='c-blue-500 fw-600 ta-c'>{props.user.client.name}</Text>\r\n          </View>\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n              <Text className='c-blue-500 fw-600 ta-c'>{props.user.client.description}</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text>\r\n              {\"Apartment Residents & Apartment Owners need a common platform through which they can connect with association, get to know & discuss common issues of the neighborhood\"}\r\n            </Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text>House users</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mL-15'>Maintenance Admin Payment</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mL-15'>Receive real-time notifications</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mL-15'>Visitor management</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mL-15'>Lodge any complaint related to your apartment and track</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text>Admin Users</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mL-15'>Create polls and gather the opinion of all Apartment residents</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mL-15'>All details of your flat, staff who work in your flat, visitors coming to your flat</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mL-15'>Accounts  and much more...</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\n\r\nexport default () => {\r\n    return (\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <View className='bgc-white p-20'>\r\n                <Text>Page not found.</Text>\r\n            </View>\r\n        </View>\r\n        </View>\r\n        </View>\r\n    );\r\n};","import * as $ from 'jquery';\n\nconst initSideBar = () => {\n  // Sidebar links\n  $('.sidebar .sidebar-menu li a').on('click', function() {\n    const $this = $(this);\n\n    if ($this.parent().hasClass('open')) {\n      $this\n          .parent()\n          .children('.dropdown-menu')\n          .slideUp(200, () => {\n            $this.parent().removeClass('open');\n          });\n    } else {\n      $this\n          .parent()\n          .parent()\n          .children('li.open')\n          .children('.dropdown-menu')\n          .slideUp(200);\n\n      $this\n          .parent()\n          .parent()\n          .children('li.open')\n          .children('a')\n          .removeClass('open');\n\n      $this\n          .parent()\n          .parent()\n          .children('li.open')\n          .removeClass('open');\n\n      $this\n          .parent()\n          .children('.dropdown-menu')\n          .slideDown(200, () => {\n            $this.parent().addClass('open');\n          });\n    }\n  });\n\n  // Sidebar Activity Class\n  const sidebarLinks = $('.sidebar').find('.sidebar-link');\n\n  sidebarLinks\n      .each((index, el) => {\n        $(el).removeClass('active');\n      })\n      .filter(function() {\n        const href = $(this).attr('href');\n        const pattern = href[0] === '/' ? href.substr(1) : href;\n        return pattern === (window.location.pathname).substr(1);\n      })\n      .addClass('active');\n\n  // ٍSidebar Toggle\n  $('.sidebar-toggle').on('click', (e) => {\n    $('.app').toggleClass('is-collapsed');\n    e.preventDefault();\n  });\n\n  /**\n   * Wait untill sidebar fully toggled (animated in/out)\n   * then trigger window resize event in order to recalculate\n   * masonry layout widths and gutters.\n   */\n  $('#sidebar-toggle').click((e) => {\n    e.preventDefault();\n    setTimeout(() => {\n      window.dispatchEvent(window.EVENT);\n    }, 300);\n  });\n};\n\nexport default initSideBar;\n","import * as $ from 'jquery';\nimport PerfectScrollbar from 'perfect-scrollbar';\n\nconst initScrollBar = () => {\n  const scrollables = $('.scrollable');\n  if (scrollables.length > 0) {\n    scrollables.each((index, el) => {\n      new PerfectScrollbar(el);\n    });\n  }\n};\n\nexport default initScrollBar;\n","import * as $ from 'jquery';\nimport 'bootstrap';\n\nconst initPopover = () => {\n  // ------------------------------------------------------\n  // @Popover\n  // ------------------------------------------------------\n\n  $('[data-toggle=\"popover\"]').popover();\n\n  // ------------------------------------------------------\n  // @Tooltips\n  // ------------------------------------------------------\n\n  $('[data-toggle=\"tooltip\"]').tooltip();\n};\n\nexport default initPopover;\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { getProfile, homeChange, logout } from '../store/actions/account';\r\nimport Page from '../components/home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    getProfile: (callback: (result: boolean, message: string) => void) => dispatch(getProfile(callback)),\r\n    onHomeChange: (index: number, callback: (result: boolean) => void) => dispatch(homeChange(index, callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport TitleBar from './title-bar';\r\nimport NavBar from './nav-bar';\r\nimport Footer from './footer';\r\nimport { ROLE } from '../../constants';\r\nimport { isNNObject, isNN } from '../../util';\r\nimport Toast from  '../../util/toast';\r\n\r\nimport { Dashboard as CDashboard} from '../../containers/dashboard';\r\nimport { Members as CMembers } from '../../containers/members';\r\nimport { NewMember as CNewMember } from '../../containers/new-member';\r\nimport { Vehicles as CVehicles } from '../../containers/vehicles';\r\nimport { NewVehicle as CNewVehicle } from '../../containers/new-vehicle';\r\nimport { Servants as CServants } from '../../containers/servants';\r\nimport { AllTakeaways as CAllTakeaways } from '../../containers/all-takeaways';\r\nimport { NewServant as CNewServant } from '../../containers/new-servant';\r\nimport { Tickets as CTickets } from '../../containers/tickets';\r\nimport { NewTicket as CNewTicket } from '../../containers/new-ticket';\r\nimport { Visitors as CVisitors } from '../../containers/visitors';\r\n// import { NewVisitor as CNewVisitor } from '../../containers/new-visitor';\r\nimport { ChangePassword as CChangePassword } from '../../containers/change-password';\r\nimport { MyProfile as CMyProfile } from '../../containers/my-profile';\r\nimport { MyRole as CMyRole } from '../../containers/my-role';\r\nimport { Ads as CAds } from '../../containers/ads';\r\nimport { NewAd as CNewAd } from '../../containers/new-ad';\r\nimport { Users as CUsers } from '../../containers/users';\r\nimport { Homes as CHomes } from '../../containers/homes';\r\nimport { EditUser as CEditUser } from '../../containers/edit-user';\r\nimport { ApproveUsers as CApproveUsers } from '../../containers/approve-users';\r\nimport { EditHome as CEditHome } from '../../containers/edit-home';\r\nimport { AllVisitors as CAllVisitors } from '../../containers/all-visitors';\r\nimport { Notification as CNotification } from '../../containers/notification';\r\nimport { Outings as COutings } from '../../containers/outings';\r\nimport { NewOuting as CNewOuting } from '../../containers/new-outing';\r\nimport { MyDocuments as CMyDocuments } from '../../containers/my-documents';\r\nimport { Blocks as CBlocks } from '../../containers/blocks';\r\nimport { EditBlock as CEditBlock } from '../../containers/edit-block';\r\nimport { Payment as CPayment } from '../../containers/payment';\r\nimport { ViewHome as CViewHome } from '../../containers/view-home';\r\nimport { Notice as CNotice } from '../../containers/notice';\r\nimport { Help as CHelp } from '../../containers/help';\r\nimport NotFound from '../../components/not-found';\r\n\r\nimport initSideBar from '../../theme/scripts/sidebar/index';\r\nimport initScrollBar from '../../theme/scripts/scrollbar/index';\r\nimport initPopover from '../../theme/scripts/popover/index';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  getProfile: (callback: (result: boolean, message: string) => void) => void,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  useEffect(() => {\r\n    if(!isNNObject(props.user) || !isNN(props.user._id)){\r\n      setIsLoading(true);\r\n      props.getProfile( (result: boolean, message: string) => {\r\n        setIsLoading(false);\r\n        if(result !== true){\r\n          Toast.fail('Failed to load Profile: ' + message);\r\n        }\r\n      });\r\n    }\r\n    // setTimeout(() => {\r\n    //   initSideBar();\r\n    //   initScrollBar();\r\n    //   initPopover();\r\n    // }, 1000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    initSideBar();\r\n    initScrollBar();\r\n    initPopover();\r\n  });\r\n  \r\n  const isUser = () => {\r\n    return props.appUser.role === ROLE.USER;\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    return props.appUser.role === ROLE.ADMIN;\r\n  };\r\n  \r\n  const isManager = () => {\r\n    return props.appUser.role === ROLE.MANAGER;\r\n  };\r\n\r\n  const isGateKeeper = () => {\r\n    return props.appUser.role === ROLE.GATEKEEPER;\r\n  };\r\n\r\n  return (\r\n    !isLoading ?\r\n      <View>\r\n        <NavBar appUser={props.appUser} user={props.user} />\r\n        <View className=\"page-container\">\r\n          <TitleBar appUser={props.appUser} user={props.user} onHomeChange={props.onHomeChange} onLogout={props.onLogout}/>\r\n          <main className='main-content bgc-grey-100'>\r\n            {((isNN(props.appUser.role) && !isUser()) || isNN(props.user.homes)) ?\r\n            <Switch>\r\n              <Route path={'/'} exact component={CDashboard} />\r\n              {/* <Route path={'/login'} exact component={CLogin} /> */}\r\n              {isUser() && <Route path={'/members'} exact component={CMembers} />}\r\n              {isUser() && <Route path={'/new-member'} exact component={CNewMember} />}\r\n              {isUser() && <Route path={'/vehicles'} exact component={CVehicles} />}\r\n              {isUser() && <Route path={'/new-vehicle'} exact component={CNewVehicle} />}\r\n              {isUser() && <Route path={'/servants'} exact component={CServants} />}\r\n              {isUser() && <Route path={'/new-servant'} exact component={CNewServant} />}\r\n              {(isUser() || isAdmin() || isManager()) && <Route path={'/tickets'} exact component={CTickets} />}\r\n              {isUser() && <Route path={'/new-ticket'} exact component={CNewTicket} />}\r\n              {isUser() && <Route path={'/visitors'} exact component={CVisitors} />}\r\n              <Route path={'/outings'} exact component={COutings} />\r\n              {isUser() && <Route path={'/new-outing'} exact component={CNewOuting} />}\r\n              {/* {isUser() && <Route path={'/new-visitor'} exact component={CNewVisitor} />} */}\r\n              {(isAdmin() || isManager()) && <Route path={'/ads'} exact component={CAds} />}\r\n              {(isAdmin() || isManager()) && <Route path={'/new-ad'} exact component={CNewAd} />}\r\n              {(isAdmin() || isManager()) && <Route path={'/notification'} exact component={CNotification} />}\r\n              {isAdmin() && <Route path={'/users'} exact component={CUsers} />}\r\n              {isAdmin() && <Route path={'/edit-user/:id/:isApprove'} exact component={CEditUser} />}\r\n              {isAdmin() && <Route path={'/approve-users'} exact component={CApproveUsers} />}\r\n              {isAdmin() && <Route path={'/homes'} exact component={CHomes} />}\r\n              {isAdmin() && <Route path={'/view-home/:id'} exact component={CViewHome} />}\r\n              {isAdmin() && <Route path={'/edit-home/:id'} exact component={CEditHome} />}\r\n              {isAdmin() && <Route path={'/blocks'} exact component={CBlocks} />}\r\n              {isAdmin() && <Route path={'/edit-block/:id'} exact component={CEditBlock} />}\r\n              {(isAdmin() || isManager() && props.user.client.config.hasPayment) && <Route path={'/payment'} exact component={CPayment} />}\r\n              {(isAdmin() || isManager() || isGateKeeper()) && <Route path={'/all-visitors'} exact component={CAllVisitors} />}\r\n              {(isAdmin() || isManager() || isGateKeeper()) && <Route path={'/all-takeways'} exact component={CAllTakeaways} />}\r\n              <Route path={'/notice'} exact component={CNotice} />\r\n              <Route path={'/my-profile'} exact component={CMyProfile} />\r\n              {props.user.role.indexOf(',') > 0 && <Route path={'/my-role'} exact component={CMyRole} />}\r\n              <Route path={'/my-documents'} exact component={CMyDocuments} />\r\n              <Route path={'/change-password'} exact component={CChangePassword} />\r\n              <Route path={'/info'} exact component={CHelp} />              \r\n              <Route component={NotFound} />\r\n            </Switch>\r\n            :\r\n            <View id='mainContent'>\r\n              <Text className='m-20'>You are not authorized to view this content. Please contact administrator/manager.</Text>\r\n            </View>\r\n            }\r\n          </main>\r\n          <Footer />\r\n        </View>\r\n      </View>\r\n      :\r\n      <Spinner visible={isLoading} text={\"Loading...\"} />\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { setLogin } from '../store/actions/account';\r\nimport Page from '../components/app-container';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n   appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n   setLogin: (isLoggedIn: boolean) => dispatch(setLogin(isLoggedIn))\r\n});\r\n\r\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useEffect} from 'react';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Login} from '../containers/login';\r\nimport {Home} from '../containers/home';\r\nimport {IAppUser} from '../models/app-user/app-user';\r\nimport {isNN} from '../util';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  setLogin: (isLoggedIn: boolean) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  useEffect(() => {\r\n    const token: string | null = sessionStorage.getItem('auth_token');\r\n    if (isNN(token)) {\r\n      props.setLogin(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    props.appUser.isLoggedIn ?\r\n    <HashRouter>\r\n      <Home />\r\n    </HashRouter> :\r\n    <Login />\r\n  );\r\n};\r\n","import * as $ from 'jquery';\n\nexport default (function() {\n  // ------------------------------------------------------\n  // @Window Resize\n  // ------------------------------------------------------\n\n  /**\n   * NOTE: Register resize event for Masonry layout\n   */\n  const EVENT = document.createEvent('UIEvents');\n  window.EVENT = EVENT;\n  EVENT.initUIEvent('resize', true, false, window, 0);\n\n\n  window.addEventListener('load', () => {\n    /**\n     * Trigger window resize event after page load\n     * for recalculation of masonry layout.\n     */\n    window.dispatchEvent(EVENT);\n  });\n\n  // ------------------------------------------------------\n  // @External Links\n  // ------------------------------------------------------\n\n  // Open external links in new window\n  $('a')\n      .filter('[href^=\"http\"], [href^=\"//\"]')\n      .not(`[href*=\"${window.location.host}\"]`)\n      .attr('rel', 'noopener noreferrer')\n      .attr('target', '_blank');\n\n  // ------------------------------------------------------\n  // @Resize Trigger\n  // ------------------------------------------------------\n\n  // Trigger resize on any element click\n  document.addEventListener('click', () => {\n    window.dispatchEvent(window.EVENT);\n  });\n}());\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n                console.log(\n                    'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n      .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n        // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n        // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            'No internet connection found. App is running in offline mode.',\n        );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","const registerServiceWorker = () => {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker\n        .register('./firebase-messaging-sw.js')\n        .then(function(registration) {\n          console.log('Registration successful, scope is:', registration.scope);\n        })\n        .catch(function(err) {\n          console.log('Service worker registration failed, error:', err);\n        });\n  }\n};\n\nexport {registerServiceWorker};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { registerServiceWorker } from './services/register-sw';\r\n\r\nregisterServiceWorker();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, {useEffect} from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\r\nimport { store } from './store/app-store';\r\nimport { AppContainer } from './containers/app-container';\r\nimport { init as fcmInit } from './services/init-fcm';\r\nimport './theme/scripts/index';\r\n\r\nexport default () => {\r\n  useEffect(() => {\r\n    fcmInit();\r\n  }, []);\r\n  \r\n  return(\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_RIGHT} />\r\n    </Provider>\r\n  );\r\n};","import * as firebase from 'firebase/app';\nimport 'firebase/messaging';\n\nexport const init = () => {\n  try {\n    const initializedFirebaseApp = firebase.initializeApp({\n      apiKey: 'AIzaSyCrGumtbn2McvNXzZdhShhLaW0QsIFZxOk',\n      authDomain: 'nest-df0a7.firebaseapp.com',\n      databaseURL: 'https://nest-df0a7.firebaseio.com',\n      projectId: 'nest-df0a7',\n      storageBucket: 'nest-df0a7.appspot.com',\n      messagingSenderId: '422026408390',\n      appId: '1:422026408390:web:cf0e6a945e7f1ec0d602c7',\n    });\n\n    const messaging = initializedFirebaseApp.messaging();\n\n    messaging.usePublicVapidKey(\n        'BExnmgKfYLBd44lIqI5xRAD55I5Qhsaa7sI_wJ19zcIuq05y2Z1AtuaNBChU--UhjFxpA2XLR2lI02otUje4Rkk',\n    );\n\n    messaging\n        .requestPermission()\n        .then(async function() {\n          const token = await messaging.getToken();\n          localStorage.setItem('fcm_token', token);\n        })\n        .catch(function(err) {\n          console.log('Unable to get permission to notify.', err);\n        });\n  } catch (ex) {\n    console.log('FCM ERROR: ', ex);\n  }\n};\n"],"sourceRoot":""}