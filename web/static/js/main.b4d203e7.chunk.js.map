{"version":3,"sources":["store/action-types.ts","store/reducers/app-user.ts","store/reducers/user.ts","store/reducers/ads.ts","store/reducers/polls.ts","store/reducers/outings.ts","store/reducers/documents.ts","store/reducers/users.ts","store/reducers/homes.ts","store/reducers/user-homes.ts","store/reducers/tickets.ts","store/reducers/blocks.ts","store/reducers/gate-no.ts","store/reducers/state.ts","store/app-store.ts","constants/index.ts","util/index.ts","store/api/api.ts","store/actions/account.ts","components/common/elements.tsx","components/common/button.tsx","components/images.ts","components/common/spinner.tsx","styles/common.ts","util/toast.ts","components/common/radio-button.tsx","styles/model.ts","components/login/sign-up.tsx","components/login/index.tsx","containers/login.tsx","styles/popup.ts","components/home/title-bar.tsx","constants/nav.ts","components/home/nav-bar.tsx","components/home/tab-bar.tsx","store/actions/payment.ts","store/actions/visitor.ts","store/actions/file.ts","components/home/my-dues.tsx","util/convert.ts","components/home/history.tsx","components/home/custom-list.tsx","styles/card.ts","components/home/home.tsx","components/home/manager/home.tsx","components/home/gatekeeper/new-visitor.tsx","components/home/gatekeeper/home.tsx","components/home/dashboard.tsx","containers/dashboard.tsx","store/actions/member.ts","components/common/breadcrum.tsx","styles/page.ts","styles/icon.ts","components/home/members.tsx","containers/members.tsx","components/home/new-member.tsx","containers/new-member.tsx","store/actions/vehicle.ts","components/home/vehicles.tsx","containers/vehicles.tsx","components/home/new-vehicle.tsx","containers/new-vehicle.tsx","store/actions/servent.ts","components/home/servents.tsx","containers/servents.tsx","components/home/new-servent.tsx","containers/new-servent.tsx","store/actions/ticket.ts","components/home/tickets.tsx","containers/tickets.tsx","components/home/new-ticket.tsx","containers/new-ticket.tsx","components/common/checkbox.tsx","components/home/gatekeeper/visitors-view.tsx","components/home/visitors.tsx","containers/visitors.tsx","components/home/change-password.tsx","containers/change-password.tsx","components/home/my-profile.tsx","containers/my-profile.tsx","components/home/my-role.tsx","containers/my-role.tsx","store/actions/ad.ts","components/home/manager/ads.tsx","containers/ads.tsx","components/home/manager/new-ad.tsx","containers/new-ad.tsx","components/home/manager/users.tsx","containers/users.tsx","store/actions/home.ts","components/home/manager/homes.tsx","containers/homes.tsx","styles/mlist.ts","components/home/manager/edit-user.tsx","containers/edit-user.tsx","components/home/manager/approve-users.tsx","containers/approve-users.tsx","components/home/manager/edit-home.tsx","containers/edit-home.tsx","components/home/gatekeeper/visitors.tsx","containers/all-visitors.tsx","components/home/manager/notification.tsx","containers/notification.tsx","store/actions/notification.ts","store/actions/outing.ts","components/home/new-outing.tsx","containers/new-outing.tsx","store/actions/documents.ts","components/home/my-documents.tsx","containers/my-documents.tsx","store/actions/block.ts","components/home/manager/blocks.tsx","containers/blocks.tsx","components/home/manager/edit-block.tsx","containers/edit-block.tsx","components/home/manager/payment-form.tsx","components/home/manager/payment-history.tsx","components/home/manager/payment.tsx","containers/payment.tsx","components/home/manager/view-home/info.tsx","components/home/manager/view-home/members.tsx","components/home/manager/view-home/vehicles.tsx","components/home/manager/view-home/servents.tsx","components/home/manager/view-home/tickets.tsx","components/home/manager/view-home/visitors.tsx","components/home/manager/view-home/payments.tsx","components/home/manager/view-home/documents.tsx","components/home/manager/view-home/index.tsx","containers/view-home.tsx","store/actions/poll.ts","util/calc.ts","components/home/manager/poll.tsx","components/home/poll.tsx","components/home/outing.tsx","components/home/notification.tsx","containers/notice.tsx","components/home/help.tsx","containers/help.tsx","components/not-found/index.tsx","components/home/index.tsx","containers/home.tsx","components/app-container.tsx","containers/app-container.tsx","App.tsx","services/init-fcm.js","serviceWorker.js","services/register-sw.js","index.tsx"],"names":["actionTypes","handleLoginResult","state","payload","Object","objectSpread","isLoggedIn","handleRoleResult","role","handleHomeIndexResult","homeIndex","handleResult","_id","number","name","age","gender","mobileNo","emailId","type","image","createdBy","updatedBy","homes","client","data","isUpToDate","isError","errorMessage","State","combineReducers","AppUser","arguments","length","undefined","action","SET_LOGIN_STATUS","SET_ROLE","SET_HOME_INDEX","RESET","User","description","address","upi","id","rep","repType","LOAD_USER","Ads","LOAD_ADS","Polls","LOAD_POLLS","Outings","LOAD_OUTINGS","Documents","LOAD_DOCUMENTS","Users","LOAD_USERS","Homes","LOAD_HOMES","UserHomes","LOAD_USERHOMES","Tickets","LOAD_TICKETS","Blocks","LOAD_BLOCKS","GateNo","SET_GATE_NO","store","createStore","compose","applyMiddleware","reduxThunk","API_BASE_PATH","DEFAULT_DATE_FORMAT","DEFAULT_DATE_TIME_FORMAT","IMAGE_BASE_PATH","FILE_BASE_PATH","COLOR","ROLE","USER","ADMIN","GATEKEEPER","MANAGER","MONTH","title","value","isNN","_input","isNNObject","json2Str","JSON","stringify","ex","jsError","generateUUID","d","Date","getTime","performance","now","replace","c","r","Math","random","floor","toString","_ex","_funName","console","log","onEnter","_e","_callback","keyCode","which","Api","url","get","callback","_this","fetch","post","delete","patch","put","upload","_callee","token","clientId","userId","formData","regenerator_default","a","wrap","_context","prev","next","getAS","sent","FormData","append","file","method","headers","Accept","x-access-token","client-id","user-id","body","then","response","json","message","catch","error","stop","_callee2","key","_context2","sessionStorage","getItem","abrupt","t0","_callee3","_context3","Content-Type","logout","dispatch","removeItem","setLoginResult","setHomeIndexResult","resetState","setGateNoResult","gateNo","setRoleResult","getUserResult","getUsersResult","getHomesResult","getBlockResult","View","styled","div","_templateObject","ScrollView","_templateObject2","Image","img","_templateObject3","TextInput","input","_templateObject4","TextArea","textarea","_templateObject5","Picker","select","_templateObject6","Text","label","_templateObject7","TouchableHighlight","span","_templateObject8","Button","this","react","className","props","onClick","onPress","style","styles","btn","React","defaultProps","backgroundColor","borderColor","color","cursor","Images","logo","logoInv","icon","homeIcon","homeIconInv","homeIconWhite","notification","notificationInv","notificationWhite","setting","settingInv","settingWhite","info","infoInv","infoWhite","workInProgress","members","membersInv","vehicle","vehicleInv","username","password","support","supportInv","visitors","visitorsInv","visitorsWhite","servent","serventInv","add","edit","close","tick","cancel","mobile","email","addvertise","reminder","users","blocks","search","datePicker","money","moneyInv","view","document","documentInv","menu","loading","Spinner","visible","src","width","height","fontWeight","marginTop","text","Toast","success","msg","toast","fail","warn","warning","show","bgColor","textColor","RadioButton","container","checked","isActive","marginRight","circle","borderRadius","borderWidth","alignItems","justifyContent","dot","marginLeft","head","flexDirection","alignContent","paddingLeft","paddingRight","paddingTop","paddingBottom","flex","alignSelf","font-weight","fontSize","marginBottom","row","ele","radio","display","radioText","radioActive","radioActiveText","saveBtn","SignUp","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSave","clientCode","member","toLowerCase","onSignUp","result","setState","bind","assertThisInitialized","_this2","modelStyles","placeholder","CommonStyles","onChange","event","target","radio_button_RadioButton","button_Button","Index","onLogin","userName","isLoading","onForgetPassword","isForgetPass","isSignUp","mobileNumber","onForgetPassSubmit","onCreateAccount","maxWidth","txtIcon","txt","onKeyPress","e","textAlign","sign_up_SignUp","float","borderStyle","margin","spinner_Spinner","resizeMode","top","Login","connect","ownProps","fcm_token","localStorage","controller","setItem","rememberMe","fcmToken","os","osVersion","login","forgetPassword","assign","signup","Page","content","TitleBar","onToggleHomeModel","isShow","isShowHomeModel","onHomeChange","index","confirmAlert","buttons","onLogout","titleBar","react_router_dom","to","appUser","titleText","user","index_es","open","onClose","popupStyles","map","i","homeList","activeHome","inActiveHome","padding","borderBottomWidth","borderBottomColor","border-bottom-style","NAV","path","roles","child","isMRole","NavBar","getImage","loadNav","nav","pTitle","isTopLevel","that","activeTopMenu","inner","indexOf","split","activeMenu","filter","isExpand","onToggleMenu","TabBar","tabBar","borderTopColor","borderTopWidth","border-top-style","tab","tabImage","activeTab","loadAll","appClientId","homeId","sCallback","fCallback","MyDues","getTotalDue","totalDue","home","payments","amountPaid","transactions","t","j","isSuccess","amount","payNow","paymentId","transactionRef","payment","successCallback","Status","responseCode","transaction","txnRef","txnId","status","reason","onPaymentUpdate","updateResult","clearTxn","txnFailure","failureCallback","p","myDueFirst","myDue","m","forMonth","forYear","borderLeftColor","borderLeftWidth","toDateString","_format","moment","format","toDateTimeString","History","slice","paidDate","createdAt","CustomList","borderBottomStyle","card","maxHeight","Home","cardStyles","history","push","vehicles","servents","my_dues_MyDues","onPaymentUpload","custom_list_CustomList","history_History","NewVisitor","onImageSelect","files","arrFileName","fileName","onUpload","showHomes","visitor","passCode","homeSearchText","onClear","viewAll","overflow","maxLength","onBlur","onGateNoChanged","new_visitor_NewVisitor","onToggleLoading","onSaveVisitor","Dashboard","home_Home","manager_home_Home","ads","tickets","gatekeeper_home_Home","outings","setGateNo","approvalid","paymentIndex","findIndex","update","scallback","saveVisitor","fileUpload","save","foundIndex","Breadcrum","cnr","link","sep","MarginTop","addIcon","editIcon","deleteIcon","closeIcon","Members","isEdit","onRemove","breadcrum_Breadcrum","iconStyles","remove","NewMember","Vehicles","NewVehicle","Servents","NewServent","arrTickets","getTicketsResult","unshift","_homeId","comments","ticket","viewId","comment","onResolve","onStart","onView","onAddComment","onLoad","_this3","myStyles","cmntsCnr","cmntsHdr","cmntsHdrTxt","cmntsCnt","cmntCnrFst","cmntCnr","cmntHdr","cmntCnt","addCmntCnt","newCmnt","resolve","start","ticketId","ticketIndex","commentIndex","addComment","NewTicket","Checkbox","VisitorsView","onToggleZoomImage","isZoom","isZoomImage","zoomImage","pageStyles","checkbox_Checkbox","onActiveChange","cardContainer","homeNumber","isEntered","isExit","isApproved","isRejected","approvedBy","approvedAt","enteredBy","enteredAt","exitBy","exitGateNo","exitAt","onExit","onApprove","onReject","border-style","Visitors","loadData","v","visitors_view_VisitorsView","approve","reject","ChangePassword","passwordPolicyCheck","anUpperCase","aLowerCase","aNumber","aSpecial","numUpper","numLower","numNums","numSpecials","test","onUpdate","newPassword","confirmNewPassword","policyResult","changePassword","MyProfile","updateProfile","MyRole","updateRole","getAdResult","ad","NewAd","getHomes","userHomes","homeIds","uh","h","onSearch","searchText","toLocaleLowerCase","searchResult","memberIds","searchResultIndex","removeByAM","load","getUsers","userIds","u","mListCnr","mListActiveRow","mListRow","EditUser","isAdmin","isManager","isGatekeeper","isUser","match","params","isApprove","isShowHomes","commonStyles","mlistStyles","isAM","saveByAM","ApproveUsers","accountController","loadWFAUsers","EditHome","blockId","_blockId","bedRoom","parking","onToggleUserModel","isShowUsers","onCheckNumberAvail","checkNumberAvail","AllVisitors","enter","exit","Notification","onPush","getOutingResult","NewOuting","fromDate","toDate","place","outing","isReturned","datePickerType","datePickerDate","entry_default","date","getDocumentResult","MyDocuments","onFileSelect","documents","ho","rel","href","EditBlock","block","PaymentForm","isAllHome","month","year","getMonth","getFullYear","PaymentHistory","isShowSearch","uPaymentId","uAmount","uDescription","pData","isShowUpdateModel","mode","Payment","payment_form_PaymentForm","payment_history_PaymentHistory","updatePay","Info","_this$props","blockName","Payments","getAmountPaid","ViewHome","toggleLoading","info_Info","view_home_members_Members","onLoadMembers","view_home_vehicles_Vehicles","onLoadVehicles","view_home_servents_Servents","onLoadServents","view_home_tickets_Tickets","onLoadTickets","view_home_visitors_Visitors","onLoadVisitors","payments_Payments","onLoadPayments","view_home_documents_Documents","onLoadDocuments","loadMembers","loadVehicles","loadServents","loadTickets","loadVisitors","loadPayments","loadDocuments","getPollResult","percentage","_partialValue","_totalValue","Poll","topic","pollOption","po","poll","isAllowMultiple","isOneVotePerFlat","isAnonymous","options","polls","showVotePoll","loadVotes","votes","poi","option","sort","b","vo","voi","newOptions","onSelectOption","optionId","votePollId","_memberId","onVote","pollId","currentDate","getDate","o","oi","Outing","onReturnBack","outingId","returnedAt","isShowPoll","onLoadAds","onLoadPoll","onLoadOuting","poll_Poll","onSavePoll","onRemovePoll","home_poll_Poll","outing_Outing","remainders","complaints","Notice","loadAllAds","userRole","loadAllPools","Id","UserId","lstPoll","pollIndex","vote","loadAllOutings","retunBack","Help","listItem","isGateKeeper","getProfile","title_bar_TitleBar","nav_bar_NavBar","react_router","exact","component","CDashboard","CMembers","CNewMember","CVehicles","CNewVehicle","CServents","CNewServent","CTickets","CNewTicket","CVisitors","CAds","CNewAd","CNotification","CUsers","CEditUser","CApproveUsers","CHomes","CViewHome","CEditHome","CBlocks","CEditBlock","CPayment","CAllVisitors","CNotice","CNewOuting","CMyProfile","CMyRole","CMyDocuments","CChangePassword","CHelp","NotFound","tab_bar_TabBar","mresult","bresult","hresult","forEach","homeChange","AppContainer","setLogin","containers_home_Home","App","messaging","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","usePublicVapidKey","requestPermission","asyncToGenerator","mark","getToken","err","fcmInit","react_default","createElement","es","containers_app_container_AppContainer","lib","ToastsStore","position","ToastsContainerPosition","TOP_RIGHT","Component","Boolean","window","location","hostname","navigator","serviceWorker","register","registration","scope","ReactDOM","render","App_App","getElementById","ready","unregister"],"mappings":"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","file":"static/js/main.b4d203e7.chunk.js","sourcesContent":["export enum actionTypes{\r\n    SET_LOGIN_STATUS,\r\n    SET_ROLE,\r\n    SET_HOME_INDEX,\r\n    LOAD_USER,\r\n    LOAD_ADS,\r\n    LOAD_POLLS,\r\n    LOAD_OUTINGS,\r\n    LOAD_DOCUMENTS,\r\n    LOAD_USERS,\r\n    LOAD_HOMES,\r\n    LOAD_USERHOMES,\r\n    LOAD_TICKETS,\r\n    SAVE_MEMBER,\r\n    LOAD_BLOCKS,\r\n    SET_GATE_NO,\r\n    RESET\r\n};","import { actionTypes } from '../action-types';\r\nimport { IAppUser } from '../../models/app-user/app-user';\r\n\r\nconst createEmptyResult = (): IAppUser => ({\r\n    isLoggedIn: false,\r\n    role: '',\r\n    homeIndex: -1\r\n});\r\n\r\nexport const AppUser = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_LOGIN_STATUS:\r\n            return handleLoginResult(state, action.payload);\r\n        case actionTypes.SET_ROLE:\r\n            return handleRoleResult(state, action.payload);\r\n        case actionTypes.SET_HOME_INDEX:\r\n            return handleHomeIndexResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleLoginResult = (state: IAppUser, payload: boolean): IAppUser => {\r\n    return {\r\n        ...state,\r\n        isLoggedIn: payload\r\n    };\r\n};\r\n\r\nconst handleRoleResult = (state: IAppUser, payload: string): IAppUser => {\r\n    return {\r\n        ...state,\r\n        role: payload\r\n    };\r\n};\r\n\r\nconst handleHomeIndexResult = (state: IAppUser, payload: number): IAppUser => {\r\n    return {\r\n        ...state,\r\n        homeIndex: payload\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\nimport { IUser } from '../../models/user/user';\n\nconst createEmptyResult = (): IUser => ({\n    _id: '',\n    number: '',\n    name: '',\n    age: 0,\n    gender: '',\n    mobileNo: '',\n    emailId: '',\n    type: '',\n    role: '',\n    image: '',\n    createdBy: '',\n    updatedBy: '',\n    homes: [],\n    client: {\n        _id: '',\n        name: '',\n        description: '',\n        address: '',\n        upi: {\n            id: '',\n            name: ''\n        },\n        rep: {\n            name: '',\n            mobileNo: '',\n            emailId: '',\n            repType: ''\n        }\n    }\n});\n\nexport const User = (state = createEmptyResult(), action: any) => {\n    switch (action.type) {\n        case actionTypes.LOAD_USER:\n            return handleResult(state, action.payload);\n        case actionTypes.RESET:\n            state = createEmptyResult();\n    }\n    return state;\n};\n\nconst handleResult = (state: IUser, payload: IUser): IUser => {\n    return {\n        ...state,\n        _id: payload._id,\n        number: payload.number,\n        name: payload.name,\n        age: payload.age,\n        gender: payload.gender,\n        mobileNo: payload.mobileNo,\n        emailId: payload.emailId,\n        type: payload.type,\n        role: payload.role,\n        image: payload.image,\n        createdBy: payload.createdBy,\n        updatedBy: payload.updatedBy,\n        homes: payload.homes,\n        client: payload.client\n    };\n};\n","import { actionTypes } from '../action-types';\nimport { IAds } from '../../models/store/ads';\n\nconst createEmptyResult = (): IAds => ({\n    data: [],\n    isUpToDate: false,\n    isError: false,\n    errorMessage: \"\"\n});\n\nexport const Ads = (state = createEmptyResult(), action: any) => {\n    switch (action.type) {\n        case actionTypes.LOAD_ADS:\n            return handleResult(state, action.payload);\n        case actionTypes.RESET:\n            state = createEmptyResult();\n    }\n    return state;\n};\n\nconst handleResult = (state: IAds, payload: IAds): IAds => {\n    return {\n        ...state,\n        data: payload.data,\n        isUpToDate: payload.isUpToDate,\n        isError: payload.isError,\n        errorMessage: payload.errorMessage\n    };\n};\n","import { actionTypes } from '../action-types';\nimport { IPolls } from '../../models/store/polls';\n\nconst createEmptyResult = (): IPolls => ({\n    data: [],\n    isUpToDate: false,\n    isError: false,\n    errorMessage: \"\"\n});\n\nexport const Polls = (state = createEmptyResult(), action: any) => {\n    switch (action.type) {\n        case actionTypes.LOAD_POLLS:\n            return handleResult(state, action.payload);\n        case actionTypes.RESET:\n            state = createEmptyResult();\n    }\n    return state;\n};\n\nconst handleResult = (state: IPolls, payload: IPolls): IPolls => {\n    return {\n        ...state,\n        data: payload.data,\n        isUpToDate: payload.isUpToDate,\n        isError: payload.isError,\n        errorMessage: payload.errorMessage\n    };\n};\n","import { actionTypes } from '../action-types';\nimport { IOutings } from '../../models/store/outings';\n\nconst createEmptyResult = (): IOutings => ({\n    data: [],\n    isUpToDate: false,\n    isError: false,\n    errorMessage: \"\"\n});\n\nexport const Outings = (state = createEmptyResult(), action: any) => {\n    switch (action.type) {\n        case actionTypes.LOAD_OUTINGS:\n            return handleResult(state, action.payload);\n        case actionTypes.RESET:\n            state = createEmptyResult();\n    }\n    return state;\n};\n\nconst handleResult = (state: IOutings, payload: IOutings): IOutings => {\n    return {\n        ...state,\n        data: payload.data,\n        isUpToDate: payload.isUpToDate,\n        isError: payload.isError,\n        errorMessage: payload.errorMessage\n    };\n};\n","import { actionTypes } from '../action-types';\nimport { IDocuments } from '../../models/store/documents';\n\nconst createEmptyResult = (): IDocuments => ({\n    data: [],\n    isUpToDate: false,\n    isError: false,\n    errorMessage: \"\"\n});\n\nexport const Documents = (state = createEmptyResult(), action: any) => {\n    switch (action.type) {\n        case actionTypes.LOAD_DOCUMENTS:\n            return handleResult(state, action.payload);\n        case actionTypes.RESET:\n            state = createEmptyResult();\n    }\n    return state;\n};\n\nconst handleResult = (state: IDocuments, payload: IDocuments): IDocuments => {\n    return {\n        ...state,\n        data: payload.data,\n        isUpToDate: payload.isUpToDate,\n        isError: payload.isError,\n        errorMessage: payload.errorMessage\n    };\n};\n","import { actionTypes } from '../action-types';\r\nimport { IUsers } from '../../models/store/users';\r\n\r\nconst createEmptyResult = (): IUsers => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Users = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUsers, payload: IUsers): IUsers => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IHomes } from '../../models/store/homes';\r\n\r\nconst createEmptyResult = (): IHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Homes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_HOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IHomes, payload: IHomes): IHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUserHomes } from '../../models/store/user-homes';\r\n\r\nconst createEmptyResult = (): IUserHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const UserHomes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERHOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUserHomes, payload: IUserHomes): IUserHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\n\r\nconst createEmptyResult = (): ITickets => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Tickets = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_TICKETS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: ITickets, payload: ITickets): ITickets => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\nimport { IBlocks } from '../../models/store/blocks';\n\nconst createEmptyResult = (): IBlocks => ({\n    data: [],\n    isUpToDate: false,\n    isError: false,\n    errorMessage: \"\"\n});\n\nexport const Blocks = (state = createEmptyResult(), action: any) => {\n    switch (action.type) {\n        case actionTypes.LOAD_BLOCKS:\n            return handleResult(state, action.payload);\n        case actionTypes.RESET:\n            state = createEmptyResult();\n    }\n    return state;\n};\n\nconst handleResult = (state: IBlocks, payload: IBlocks): IBlocks => {\n    return {\n        ...state,\n        data: payload.data,\n        isUpToDate: payload.isUpToDate,\n        isError: payload.isError,\n        errorMessage: payload.errorMessage\n    };\n};\n","import { actionTypes } from '../action-types';\r\n\r\nexport const GateNo = (state = '', action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_GATE_NO:\r\n            return handleResult(state, action.payload);\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: string, payload: string): string => {\r\n    return payload;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { IAppState } from '../../models/app-state';\r\nimport { AppUser } from './app-user';\r\nimport { User } from './user';\r\nimport { Ads } from './ads';\r\nimport { Polls } from './polls';\r\nimport { Outings } from './outings';\r\nimport { Documents } from './documents';\r\nimport { Users } from './users';\r\nimport { Homes } from './homes';\r\nimport { UserHomes } from './user-homes';\r\nimport { Tickets } from './tickets';\r\nimport { Blocks } from './blocks';\r\nimport { GateNo } from './gate-no';\r\n\r\nexport const State = combineReducers<IAppState>({\r\n    AppUser: AppUser,\r\n    User: User,\r\n    Ads: Ads,\r\n    Polls: Polls,\r\n    Outings: Outings,\r\n    Documents: Documents,\r\n    Users: Users,\r\n    Homes: Homes,\r\n    UserHomes: UserHomes,\r\n    Tickets: Tickets,\r\n    Blocks: Blocks,\r\n    GateNo: GateNo\r\n});\r\n","import { Store, createStore, compose, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { State } from './reducers/state';\nimport { IAppState } from '../models/app-state';\n\nexport const store: Store<IAppState> = createStore(\n  State,\n  compose(\n    applyMiddleware(reduxThunk),\n  )\n);","// const API_BASE_PATH = 'http://localhost:3001/';\r\nconst API_BASE_PATH = 'https://nestadmin.herokuapp.com/';\r\n\r\nexport const DEFAULT_DATE_FORMAT = 'DD/MMM/YYYY';\r\nexport const DEFAULT_DATE_TIME_FORMAT = 'DD/MMM/YYYY hh:mm A';\r\n// export const API_PATH = API_BASE_PATH + 'api/';\r\nexport const API_PATH = API_BASE_PATH;\r\nexport const IMAGE_BASE_PATH = API_BASE_PATH + 'image/';\r\nexport const FILE_BASE_PATH = API_BASE_PATH + 'file/';\r\nexport const COLOR = {\r\n    PRIMARY: '#0078d7',\r\n    SECONDARY: '#0067b9',\r\n    INVERSE: '#FFFFFF',\r\n    ERROR: '#FF0000',\r\n    SUCCESS: '#008000',\r\n    ICON_BTN_UNDERLAY: '#cce1f1',\r\n    CARD_UNDERLAY: '#cce1f1',\r\n    TAB_UNDERLAY: '#cce1f1',\r\n    SETTING_UNDERLAY: '#cce1f1',\r\n    HR_COLOR: '#e1e1e1',\r\n    FONT_COLOR1: '#8e8e93',\r\n    FONT_COLOR2: '#000000',\r\n    FONT_COLOR3: '#FFFFFF',\r\n    MODAL_BG: '#cce1f1'\r\n};\r\nexport const ROLE = {\r\n    USER: 'USER',\r\n    ADMIN: 'ADMIN',\r\n    GATEKEEPER: 'GATEKEEPER',\r\n    MANAGER: 'MANAGER'\r\n};\r\nexport const MONTH = [\r\n    {title: 'JAN', value: 0},\r\n    {title: 'FEB', value: 1},\r\n    {title: 'MAR', value: 2},\r\n    {title: 'APR', value: 3},\r\n    {title: 'MAY', value: 4},\r\n    {title: 'JUN', value: 5},\r\n    {title: 'JUL', value: 6},\r\n    {title: 'AUG', value: 7},\r\n    {title: 'SEP', value: 8},\r\n    {title: 'OCT', value: 9},\r\n    {title: 'NOV', value: 10},\r\n    {title: 'DEC', value: 11}\r\n]","//import { config as apiConfig } from '../store/api/config';\r\n\r\nexport function parseJSON(response: any) {\r\n     return response.json()\r\n};\r\n\r\nexport function isNN(_input: any) { \r\n  return (isNNObject(_input) && _input.length > 0) \r\n};\r\n\r\nexport function isNNObject(_input: any) { \r\n  return (_input !== null && _input !== undefined) \r\n};\r\n\r\nexport function str2Json(_input: string) { \r\n  try {\r\n    return JSON.parse(isNN(_input) ? _input : \"{}\"); \r\n  } catch (ex) { \r\n    jsError(ex, \"String2JSON\"); \r\n    return {}; \r\n  } \r\n};\r\n\r\nexport function json2Str(_input: any) { \r\n  try {\r\n    return (isNNObject(_input) ? JSON.stringify(_input) : \"\");\r\n  } catch (ex) { \r\n    jsError(ex, \"JSON2String\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function getBaseURL(_isApi: boolean) { \r\n  try {\r\n    let baseURL: string = \"\";\r\n    let arrURL = window.location.href.split(\"/\");\r\n    if(isNNObject(arrURL) && arrURL.length > 2){\r\n      if(_isApi){\r\n        //baseURL = arrURL[0] + \"//\" + arrURL[2] + apiConfig.baseURL;\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2];\r\n      }else{\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2] + \"/\";\r\n      }\r\n    }else{\r\n      baseURL = window.location.href;\r\n    }\r\n    return baseURL;\r\n  } catch (ex) { \r\n    jsError(ex, \"getBaseURL\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function generateUUID() { // Public Domain/MIT\r\n  var d = new Date().getTime();\r\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n      d += performance.now(); //use high-precision timer if available\r\n  }\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      var r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n}\r\n\r\nexport function jsError(_ex: any, _funName: string) {\r\n   //alert(\"Javascript Error\\n------------------\\nName: \" + _ex.name + \"\\nMessage: \" + _ex.message + \"\\nFunction: \" + _funName + \"\\nFile: \" + _ex.fileName + \"\\nLine Number: \" + _ex.lineNumber + \"\\nColumn Number: \" + _ex.columnNumber); \r\n   console.log(\"Error:\" + _funName + \":\" + _ex);\r\n};\r\n\r\nexport function onEnter(_e: any, _callback: Function) {\r\n  let code = (_e.keyCode ? _e.keyCode : _e.which);\r\n  if(code == 13 && typeof _callback === 'function') {\r\n    _callback();\r\n  }\r\n};","// import { AsyncStorage } from 'react-native';\r\nimport { API_PATH } from \"../../constants\";\r\nimport { isNNObject, json2Str, isNN } from \"../../util/index\";\r\n\r\nexport default class Api {\r\n    private url: string = API_PATH;\r\n     \r\n    // private url: string =  \"https://192.168.43.80:45456/api/\";\r\n    // private url: string =  \"http://192.168.43.80:45455/api/\";\r\n\r\n    /**\r\n    * HTTP GET operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public get = (url: string, callback: Function) => {\r\n        this.fetch(url, 'GET', callback);\r\n    };\r\n\r\n    /**\r\n    * HTTP POST operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public post = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'POST', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP DELETE operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public delete = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'DELETE', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PATCH operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public patch = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PATCH', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PUT operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public put = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PUT', callback, data);\r\n    };\r\n\r\n    public upload = async(url: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        \r\n        var formData = new FormData();\r\n        formData.append('file', data.file, data.name);\r\n        formData.append('name', data.name);\r\n\r\n        fetch(this.url + url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    // 'Content-Type': 'multipart/form-data',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: formData,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n\r\n/*\r\n    private fetch = (url: string, method: string, callback: Function, data?: any) => {\r\n        AsyncStorage.getItem('auth_token').then((token) => {\r\n            AsyncStorage.getItem('user_id').then((userId) => {\r\n                this.next(url, 'PUT', token, userId, callback, data);\r\n            }).catch(ex => {\r\n                this.next(url, 'PUT', token, '', callback, data);\r\n            }); \r\n        }).catch(ex => {\r\n            this.next(url, 'PUT', '', '', callback, data);\r\n        });\r\n    };\r\n    */\r\n\r\n    private getAS = async (key: string) => {\r\n        try {\r\n            // return await AsyncStorage.getItem(key);\r\n            return await sessionStorage.getItem(key);\r\n        } catch (error) {\r\n            return '';\r\n        }\r\n    };\r\n    \r\n    private fetch = async(url: string, method: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        fetch(this.url + url, \r\n            {\r\n                method: method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: isNNObject(data) ? json2Str(data) : null,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n    private callback = (callback: Function, data: any, message: any) => {\r\n        // console.log('message: '+ message);\r\n        if(isNNObject(callback) && typeof callback == \"function\"){\r\n            callback(data, message);\r\n        }\r\n    };\r\n\r\n    /*\r\n        private handleResult = (data: any) => {\r\n        if (data) {\r\n            if (data.message) {\r\n                return null;\r\n            } else {\r\n                return data;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private onBadRequest = () => {\r\n       \r\n    };\r\n    \r\n    private onError = () => {\r\n        \r\n        // alert('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n        // console.error('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n         \r\n    };\r\n    \r\n    private onUnAuthorized = () => {\r\n        // alert('UnAuthorized Request');\r\n                 \r\n    };\r\n    */\r\n};","// import { AsyncStorage, Platform } from 'react-native';\r\nimport { actionTypes } from '../action-types';\r\nimport Api from '../api/api';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IUsers } from '../../models/store/users';\r\n// import { IAd } from '../../models/ad/ad';\r\n// import { IAds } from '../../models/store/ads';\r\n// import { IPoll } from '../../models/poll/poll';\r\n// import { IPolls } from '../../models/store/polls';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IHomes } from '../../models/store/homes';\r\n// import { IUserHome } from '../../models/user-home/user-home';\r\n// import { IUserHomes } from '../../models/store/user-homes';\r\nimport { IMember } from '../../models/home';\r\n// import { ITicket } from '../../models/home/ticket';\r\n// import { ITickets } from '../../models/store/tickets';\r\nimport { IBlock } from '../../models/block';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'account/';\r\n\r\nexport const login = (userName: string, password: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  let fcm_token: string | null = localStorage.getItem('fcm_token');\r\n    new Api().post(controller + 'login', (result: any, message: string) => {\r\n      // console.log('OUT: ', result);\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.token) && isNN(result.data.userId))\r\n      {\r\n        // console.log('IN: ', result);\r\n        try {\r\n          // console.log(result.token);\r\n          sessionStorage.setItem('auth_token', result.data.token);\r\n          sessionStorage.setItem('client_id', result.data.clientId);\r\n          sessionStorage.setItem('user_id', result.data.userId);\r\n        } catch (error) {\r\n          // console.error('AsyncStorage error: ' + error.message);\r\n        }\r\n        dispatch(setLoginResult(true));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, {\r\n      userName: userName,\r\n      password: password,\r\n      rememberMe: false,\r\n      fcmToken: fcm_token,\r\n      os: 'web', // Platform.OS, ////TODO\r\n      osVersion: 'web' // Platform.Version ////TODO\r\n    });\r\n};\r\n\r\nexport const getProfile = (callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 'profile', (result: any, message: string) => {\r\n    // console.log('OUT: ', result);\r\n    if(isNNObject(result) && isNNObject(result.data) && isNN(result.data._id))\r\n    {\r\n      dispatch(getUserResult(result.data as IUser));\r\n      dispatch(setHomeIndexResult(isNN(result.data.homes) ? 0 : -1));\r\n      let roles = result.data.role.split(',');\r\n      if(isNN(roles)){\r\n        dispatch(setRoleResult(roles[0]));\r\n      }\r\n      // dispatch(getAdResult(((isNNObject(result.data.ad) && result.data.ad instanceof Array) ? result.data.ad as Array<IAd> : []), true, false, ''));\r\n      // dispatch(getPollResult(((isNNObject(result.data.poll) && result.data.poll instanceof Array) ? result.data.poll as Array<IPoll> : []), true, false, ''));\r\n    \r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0){\r\n        new Api().get('members', (mresult: any, message: string) => {\r\n          if (isNNObject(mresult) && isNN(mresult.data)) {\r\n            dispatch(getUsersResult(mresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(mresult.message) ? mresult.message : 'Failed to load Members.');\r\n          }\r\n        });\r\n        /*\r\n        loadAllMember(result.data.client._id, (members: Array<IMember>) => {\r\n          console.log('members: ', members)\r\n          dispatch(getUsersResult(members, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n        new Api().get('blocks/' + result.data.client._id, (bresult: any, message: string) => {\r\n          if (isNNObject(bresult) && isNN(bresult.data)) {\r\n            dispatch(getBlockResult(bresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n      }\r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0 || roles.indexOf(ROLE.GATEKEEPER) >= 0){\r\n        new Api().get('homes/' + result.data.client._id, (hresult: any, message: string) => {\r\n          if (isNNObject(hresult) && isNN(hresult.data)) {\r\n            hresult.data.forEach((h: any) => {\r\n              h.memberIds = h.members;\r\n              delete h.members;\r\n            });\r\n            dispatch(getHomesResult(hresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n        \r\n        /*\r\n        loadAllHome(result.data.client._id, (homes: Array<IHome>) => {\r\n          console.log('homes: ', homes)\r\n          dispatch(getHomesResult(homes, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n      }\r\n      \r\n      // dispatch(getUsersResult(((isNNObject(result.data.users) && result.data.users instanceof Array) ? result.data.users as Array<IUser> : []), true, false, ''));\r\n      // dispatch(getHomesResult(((isNNObject(result.data.homes) && result.data.homes instanceof Array) ? result.data.homes as Array<IHome> : []), true, false, ''));\r\n      // dispatch(getUserHomesResult(((isNNObject(result.data.userHomes) && result.data.userHomes instanceof Array) ? result.data.userHomes as Array<IUserHome> : []), true, false, ''));\r\n      \r\n      // dispatch(getHomesResult([], true, false, ''));\r\n      // dispatch(getUserHomesResult([], true, false, ''));\r\n      // dispatch(getTicketsResult(((isNNObject(result.data.tickets) && result.data.tickets instanceof Array) ? result.data.tickets as Array<ITicket> : []), true, false, ''));\r\n      //dispatch(setLoginResult(true));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const homeChange = (index: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(setHomeIndexResult(index));\r\n  callback(true);\r\n};\r\n\r\nexport const changePassword = (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'changepassword/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    password: password,\r\n    newPassword: newPassword\r\n  });\r\n};\r\n\r\nexport const forgetPassword = (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'resetpassword', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.data))\r\n    {\r\n      if(result.data.data === true){\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, result.data.message);\r\n      }\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    mobileNo: mobileNumber,\r\n    emailId: email\r\n  });\r\n};\r\n\r\nexport const updateProfile = (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  new Api().put(controller + 'profile/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.name = name;\r\n      user.mobileNo = mobileNo;\r\n      user.emailId = emailId;\r\n\r\n      dispatch(getUserResult(user));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    name: name,\r\n    mobileNo: mobileNo,\r\n    emailId: emailId\r\n  });\r\n};\r\n\r\nexport const updateRole = (role: string, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  dispatch(setRoleResult(role));\r\n  callback(true, '');\r\n};\r\n\r\nexport const logout = (callback: (result: boolean) => void) => (dispatch: any) => {\r\n  try {\r\n    sessionStorage.removeItem('auth_token');\r\n    sessionStorage.removeItem('user_id');\r\n    sessionStorage.removeItem('client_id');\r\n    dispatch(setLoginResult(false));\r\n    dispatch(setHomeIndexResult(-1));\r\n    dispatch(resetState());\r\n    callback(true);\r\n  } catch (error) {\r\n    // console.error('AsyncStorage error: ' + error.message);\r\n    callback(false);\r\n  }\r\n};\r\n\r\nexport const setLogin = (isLoggedIn: boolean) => (dispatch: any) => {\r\n  dispatch(setLoginResult(isLoggedIn));\r\n};\r\n\r\nexport const signup = (data: IMember, clientCode: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    clientCode: clientCode,\r\n    password: data.mobileNo\r\n  });\r\n  new Api().post(controller + 'signup', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const setGateNo = (gateNo: string) => (dispatch: any) => {\r\n  dispatch(setGateNoResult(gateNo));\r\n};\r\n\r\nconst setGateNoResult = (gateNo: string) => ({\r\n  type: actionTypes.SET_GATE_NO,\r\n  payload: gateNo\r\n});\r\nconst setLoginResult = (data: boolean) => ({\r\n  type: actionTypes.SET_LOGIN_STATUS,\r\n  payload: data\r\n});\r\nconst setRoleResult = (data: string) => ({\r\n  type: actionTypes.SET_ROLE,\r\n  payload: data\r\n});\r\nconst setHomeIndexResult = (data: number) => ({\r\n  type: actionTypes.SET_HOME_INDEX,\r\n  payload: data\r\n});\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n/*\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});\r\n*/\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});\r\n/*\r\nconst getUserHomesResult = (data: Array<IUserHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERHOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUserHomes\r\n});\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});\r\n*/\r\nconst resetState = () => ({\r\n  type: actionTypes.RESET\r\n});","import styled from 'styled-components';\r\n\r\nexport const View = styled.div`\r\n`;\r\n\r\nexport const ScrollView = styled.div`\r\noverflow: auto;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n`;\r\n\r\nexport const Picker = styled.select`\r\n`;\r\n\r\nexport const Text = styled.label`\r\n`;\r\n\r\nexport const TouchableHighlight = styled.span`\r\n`;\r\n\r\n// export const Button = styled.button`\r\n//   cursor: pointer;\r\n//   background: transparent;\r\n//   font-size: 16px;\r\n//   border-radius: 3px;\r\n//   color: ${props => (props.primary ? 'violet' : 'palevioletred')};\r\n//   border: ${props =>\r\n//     props.primary ? '2px solid violet' : '2px solid palevioletred'};\r\n//   margin: 0 1em;\r\n//   padding: 0.25em 1em;\r\n//   transition: 0.5s all ease-out;\r\n\r\n//   &:hover {\r\n//     color: white;\r\n//     background-color: ${props =>\r\n//       props.primary ? 'violet' : 'palevioletred'};\r\n//   }\r\n// `;","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  title: string,\r\n  onPress: () => void,\r\n  style? : {}\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Button extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    title: '',\r\n    onPress: () => {},\r\n    style: {}\r\n  }\r\n  render() {\r\n    return (\r\n      <input type='button' className='btn' value={this.props.title} onClick={() => this.props.onPress()} style={{...styles.btn, ...this.props.style}} />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  btn: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    borderColor: COLOR.PRIMARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    cursor: 'pointer',\r\n    // alignItems: 'center',\r\n    // paddingTop: 7,\r\n    // paddingBottom: 7,\r\n    // paddingLeft: 5,\r\n    // paddingRight: 5\r\n  }\r\n};","import { IMAGE_BASE_PATH } from '../constants/index';\n\nexport default class Images {\n    static readonly logo = IMAGE_BASE_PATH + 'logo.png';\n    static readonly logoInv = IMAGE_BASE_PATH + 'logo-inv.png';\n    static readonly icon = IMAGE_BASE_PATH + 'icon.png';\n    static readonly logout = IMAGE_BASE_PATH + 'logout.png';\n    static readonly homeIcon = IMAGE_BASE_PATH + 'home-icon.png';\n    static readonly homeIconInv = IMAGE_BASE_PATH + 'home-icon-inv.png';\n    static readonly homeIconWhite = IMAGE_BASE_PATH + 'home-icon-white.png';\n    static readonly notification = IMAGE_BASE_PATH + 'notification.png';\n    static readonly notificationInv = IMAGE_BASE_PATH + 'notification-inv.png';\n    static readonly notificationWhite = IMAGE_BASE_PATH + 'notification-white.png';\n    static readonly setting = IMAGE_BASE_PATH + 'setting.png';\n    static readonly settingInv = IMAGE_BASE_PATH + 'setting-inv.png';\n    static readonly settingWhite = IMAGE_BASE_PATH + 'setting-white.png';\n    static readonly info = IMAGE_BASE_PATH + 'info.png';\n    static readonly infoInv = IMAGE_BASE_PATH + 'info-inv.png';\n    static readonly infoWhite = IMAGE_BASE_PATH + 'info-white.png';\n    static readonly workInProgress = IMAGE_BASE_PATH + 'work-in-progress.png';\n    static readonly members = IMAGE_BASE_PATH + 'members.png';\n    static readonly membersInv = IMAGE_BASE_PATH + 'members-inv.png';\n    static readonly vehicle = IMAGE_BASE_PATH + 'vehicle.png';\n    static readonly vehicleInv = IMAGE_BASE_PATH + 'vehicle-inv.png';\n    static readonly username = IMAGE_BASE_PATH + 'username.png';\n    static readonly password = IMAGE_BASE_PATH + 'password.png';\n    static readonly support = IMAGE_BASE_PATH + 'support.png';\n    static readonly supportInv = IMAGE_BASE_PATH + 'support-inv.png';\n    static readonly visitors = IMAGE_BASE_PATH + 'visitors.png';\n    static readonly visitorsInv = IMAGE_BASE_PATH + 'visitors-inv.png';\n    static readonly visitorsWhite = IMAGE_BASE_PATH + 'visitors-white.png';\n    static readonly servent = IMAGE_BASE_PATH + 'servent.png';\n    static readonly serventInv = IMAGE_BASE_PATH + 'servent-inv.png';\n    static readonly add = IMAGE_BASE_PATH + 'add.png';\n    static readonly edit = IMAGE_BASE_PATH + 'edit.png';\n    static readonly delete = IMAGE_BASE_PATH + 'delete.png';\n    static readonly close = IMAGE_BASE_PATH + 'close.png';\n    static readonly tick = IMAGE_BASE_PATH + 'tick.png';    \n    static readonly cancel = IMAGE_BASE_PATH + 'cancel.png';\n    static readonly mobile = IMAGE_BASE_PATH + 'mobile.png';\n    static readonly email = IMAGE_BASE_PATH + 'email.png';\n    static readonly addvertise = IMAGE_BASE_PATH + 'addvertise.png';\n    static readonly reminder = IMAGE_BASE_PATH + 'reminder.png';\n    static readonly users = IMAGE_BASE_PATH + 'users.png';\n    static readonly homes = IMAGE_BASE_PATH + 'homes.png';\n    static readonly blocks = IMAGE_BASE_PATH + 'blocks.png';\n    static readonly search = IMAGE_BASE_PATH + 'search.png';\n    static readonly datePicker = IMAGE_BASE_PATH + 'date-picker.png';\n    static readonly money = IMAGE_BASE_PATH + 'money.png';\n    static readonly moneyInv = IMAGE_BASE_PATH + 'money-inv.png';\n    static readonly view = IMAGE_BASE_PATH + 'view.png';\n    static readonly document = IMAGE_BASE_PATH + 'document.png';\n    static readonly documentInv = IMAGE_BASE_PATH + 'document-inv.png';\n    static readonly menu = IMAGE_BASE_PATH + 'menu.png';\n    static readonly loading = IMAGE_BASE_PATH + 'loading.gif';\n};","import * as React from 'react';\r\nimport { View, Image } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\nimport Images from '../images';\r\n\r\ninterface IProps {\r\n  visible: boolean,\r\n  text?: string\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Spinner extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    visible: false,\r\n    text: 'Loading...'\r\n  }\r\n  render() {\r\n    return (\r\n      this.props.visible &&\r\n      <View>\r\n        <View className='loader-overlay'></View>\r\n        <View className='loader'>\r\n          <Image className='' src={Images.loading} style={{width: '50px', height: '50px'}} />\r\n          <View style={{color: COLOR.SECONDARY, fontWeight: 'bold', marginTop: 5}}>{this.props.text}</View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n// <AppSpinner visible={this.props.visible} textContent={this.props.text} textStyle={{color: COLOR.SECONDARY}} />\r\n","export const styles = {\r\n  textInput: {\r\n    // borderBottomWidth: 1,\r\n    // borderBottomColor: COLOR.FONT_COLOR2,\r\n    // paddingBottom: 5\r\n    }\r\n  };\r\n  ","import {ToastsStore as toast} from 'react-toasts';\r\n\r\n class Toast {\r\n   static success = (msg: string) => {\r\n       // Toast.show(msg, '#003300', '#FFFFFF');\r\n       toast.success(msg);\r\n    }\r\n    static fail = (msg: string) => {\r\n        // Toast.show(msg, '#b30000', '#FFFFFF');\r\n        toast.error(msg);\r\n    }\r\n    static warn = (msg: string) => {\r\n        // Toast.show(msg, '#e68a00', '#FFFFFF');\r\n        toast.warning(msg);\r\n    }\r\n    static info = (msg: string) => {\r\n        // Toast.show(msg, '#000080', '#FFFFFF');\r\n        toast.info(msg);\r\n    }\r\n    static show = (msg: string, bgColor: string, textColor: string) => {\r\n\r\n        toast.info(msg);\r\n        \r\n        /*\r\n        // Add a Toast on screen.\r\n        RNToast.show(msg, {\r\n            duration: RNToast.durations.SHORT,\r\n            position: RNToast.positions.TOP,\r\n            shadow: true,\r\n            animation: true,\r\n            hideOnPress: true,\r\n            delay: 0,\r\n            backgroundColor: bgColor,\r\n            textColor: textColor,\r\n            onShow: () => {\r\n                // calls on toast\\`s appear animation start\r\n            },\r\n            onShown: () => {\r\n                // calls on toast\\`s appear animation end.\r\n            },\r\n            onHide: () => {\r\n                // calls on toast\\`s hide animation start.\r\n            },\r\n            onHidden: () => {\r\n                // calls on toast\\`s hide animation end.\r\n            }\r\n        });\r\n        */\r\n    }\r\n};\r\n\r\nexport default Toast;","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  key: string,\r\n  onPress: () => void\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class RadioButton extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    isActive: false,\r\n    text: '',\r\n    key: '',\r\n    onPress: () => {}\r\n  }\r\n  render() {\r\n    return (\r\n      <span style={styles.container}>\r\n        <input type='radio' key={this.props.key} checked={this.props.isActive} onClick={this.props.onPress} />\r\n        {\r\n          isNN(this.props.text) &&\r\n          <label style={styles.text}>{this.props.text}</label>\r\n        }\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    // flexDirection: 'row',\r\n    marginRight: 10\r\n  },\r\n  circle: {\r\n    height: 24,\r\n    width: 24,\r\n    borderRadius: 12,\r\n    borderWidth: 2,\r\n    borderColor: COLOR.PRIMARY,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  dot: {\r\n    height: 12,\r\n    width: 12,\r\n    borderRadius: 6,\r\n    backgroundColor: COLOR.PRIMARY\r\n  },\r\n  text: {\r\n    marginLeft: 5\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    container: {\r\n    },\r\n    head: {\r\n      flexDirection: 'row',\r\n      alignContent: 'flex-start',\r\n      backgroundColor: COLOR.PRIMARY,\r\n      paddingLeft: 10,\r\n      paddingRight: 10,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    title: {\r\n      flex: 15,\r\n      alignSelf: 'flex-start',\r\n      width: 'auto',\r\n      'font-weight': 'bold',\r\n      fontSize: 20,\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    close: {\r\n      flex: 1,\r\n      alignSelf: 'flex-end',\r\n      marginBottom: 5\r\n    },\r\n    row: {\r\n      // flexDirection: 'row',\r\n      marginTop: 3,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    ele: {\r\n      flex: 1,\r\n      width: '100%'\r\n    },\r\n    radio: {\r\n      borderColor: COLOR.HR_COLOR,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioText: {\r\n      // 'font-weight': 'bold',\r\n      // color: COLOR.HR_COLOR\r\n    },\r\n    radioActive: {\r\n      backgroundColor: COLOR.PRIMARY,\r\n      borderColor: COLOR.PRIMARY,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioActiveText: {\r\n      // 'font-weight': 'bold',\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    saveBtn: {\r\n      marginTop: 5,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    }\r\n  };","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport { IMember } from '../../models/home';\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  onSignUp: (data: IMember, clientCode: string, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  id: string,\r\n  clientCode: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class SignUp extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      clientCode: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.clientCode) && isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.mobileNo) && isNN(this.state.emailId)){\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSignUp(member, this.state.clientCode, (result: boolean) => {\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              clientCode: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Submit.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View  style={{flex: 1}}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"App Code\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.clientCode} onChange={(event: any) => this.setState({clientCode: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Name\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' className='form-control' placeholder=\"Age\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Mobile Number\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Email ID\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TextInput, Image } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Images from '../images';\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, onEnter } from '../../util';\r\nimport Toast from  '../../util/toast';\r\nimport { IMember } from '../../models/home';\r\nimport SignUp from './sign-up'\r\n\r\ninterface IProps {\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => void,\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => void,\r\n    onSignUp: (data: IMember, clientCode: string, scallback: (result: boolean, message: string) => void) => void\r\n}\r\n\r\ninterface IState{\r\n    userName: string,\r\n    password: string,\r\n    message: string,\r\n    isLoading: boolean,\r\n    isForgetPass: boolean,\r\n    isSignUp: boolean,\r\n    mobileNumber: string,\r\n    email: string\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            message: '',\r\n            isLoading: false,\r\n            isForgetPass: false,\r\n            isSignUp: false,\r\n            mobileNumber: '',\r\n            email: ''\r\n        };\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onForgetPassword = this.onForgetPassword.bind(this);\r\n        this.onForgetPassSubmit = this.onForgetPassSubmit.bind(this);\r\n        this.onCreateAccount = this.onCreateAccount.bind(this);\r\n        this.onSignUp = this.onSignUp.bind(this);\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    onLogin = () =>{\r\n        if(isNN(this.state.userName) && isNN(this.state.password)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            this.props.onLogin(this.state.userName, this.state.password, (result: boolean, message: string) => {\r\n                if(result === true){                        \r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            // Toast.warn('Enter Mobile Number and Password to continue.');\r\n            Toast.warn('Enter Mobile Number and Password to continue.');\r\n        }\r\n    };\r\n    \r\n    onForgetPassword = () =>{\r\n        this.setState({\r\n            isForgetPass: true,\r\n            isSignUp: false,\r\n            mobileNumber: '',\r\n            email: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    onForgetPassSubmit = () => {\r\n        if(isNN(this.state.mobileNumber) && isNN(this.state.email)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            this.props.onForgetPassword(this.state.mobileNumber, this.state.email.toLowerCase(), (result: boolean, message: string) => {\r\n                if(result === true){\r\n                    Toast.success('Password reset success. Login with New password sent to your Email. Change password after login.');\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: '',\r\n                        isForgetPass: false,\r\n                        isSignUp: false,\r\n                        userName: '',\r\n                        password: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            Toast.warn('Enter Mobile Number and Email to continue.');\r\n        }\r\n    };\r\n\r\n    onCreateAccount = () =>{\r\n        this.setState({\r\n            isForgetPass: false,\r\n            isSignUp: true,\r\n            mobileNumber: '',\r\n            email: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    onSignUp = (data: IMember, clientCode: string, callback: (result: boolean) => void) => {\r\n        this.setState({\r\n            message: '',\r\n            isLoading: true\r\n        });\r\n        this.props.onSignUp(data, clientCode, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                  isForgetPass: false,\r\n                  isSignUp: false,\r\n                  message: ''\r\n              });\r\n              Toast.success('Sign Up success. Please wait till Manager approves then you can access your account.');\r\n              callback(true);\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to Sign Up.');\r\n              callback(false);\r\n            }\r\n          });\r\n    };\r\n\r\n  render() {\r\n    return (\r\n            <View className='container' style={{backgroundColor: COLOR.INVERSE, maxWidth: '270px'}}>\r\n                <View className='row' style={{flexDirection: 'row', alignItems: 'center', justifyContent:'center', marginBottom: 30, marginTop: 5}}>\r\n                    <Image src={Images.logo} style={{width: 150, height: 150}}/>\r\n                </View>\r\n                {this.state.isForgetPass &&\r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <Image className='absolute' src={Images.mobile} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control' placeholder='Registered Mobile Number' value={this.state.mobileNumber} style={{...CommonStyles.textInput, ...styles.txt}}\r\n                        onChange={(event: any) => this.setState({mobileNumber: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onForgetPassSubmit);\r\n                        }} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 40}}>\r\n                        <Image className='absolute' src={Images.email} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control' placeholder='Registered Email' value={this.state.email} style={{...CommonStyles.textInput, ...styles.txt}}\r\n                        onChange={(event: any) => this.setState({email: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onForgetPassSubmit);\r\n                        }} />\r\n                    </View>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"Reset my password\" : \"Loading...\"}\r\n                    onPress={this.onForgetPassSubmit}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View style={{marginTop: 15}}>\r\n                        <Text className='pointer' onClick={() => { \r\n                            this.setState({\r\n                                isForgetPass: false,\r\n                                isSignUp: false,\r\n                                mobileNumber: \"\",\r\n                                email: \"\",\r\n                                message: \"\"\r\n                            });\r\n                         }} style={{marginBottom: 5, textAlign: 'center', color: COLOR.SECONDARY}}>Go back to Login.</Text>\r\n                    </View>\r\n                </View>\r\n                }\r\n                {this.state.isSignUp && <>\r\n                    <SignUp onSignUp={this.onSignUp} />\r\n                    <View style={{marginTop: 15, textAlign: 'center'}}>\r\n                        <Text className='pointer' onClick={() => { \r\n                            this.setState({\r\n                                isForgetPass: false,\r\n                                isSignUp: false,\r\n                                mobileNumber: \"\",\r\n                                email: \"\",\r\n                                message: \"\"\r\n                            });\r\n                         }} style={{marginBottom: 5, textAlign: 'center', color: COLOR.SECONDARY}}>Go back to Login.</Text>\r\n                    </View>\r\n                    </>\r\n                }\r\n                {(!this.state.isForgetPass && !this.state.isSignUp) && \r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <Image className='absolute' src={Images.username} style={styles.txtIcon} />\r\n                        <TextInput type='text' className='form-control' placeholder='Mobile Number' style={{...CommonStyles.textInput, ...styles.txt}} value={this.state.userName} \r\n                        onChange={(event: any) => this.setState({userName: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onLogin);\r\n                        }} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 15}}>\r\n                        <Image className='absolute' src={Images.password} style={styles.txtIcon} />\r\n                        <TextInput type='password'  className='form-control' placeholder='Password' value={this.state.password} style={{...CommonStyles.textInput, ...styles.txt}}\r\n                        onChange={(event: any) => this.setState({password: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onLogin);\r\n                        }} />\r\n                    </View>\r\n                    <Text className='col-12 pointer' onClick={this.onForgetPassword} style={{marginBottom: 15, textAlign: 'right', color: COLOR.SECONDARY}}>Forgot Password?</Text>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"LOGIN\" : \"Loading...\"}\r\n                    onPress={this.onLogin}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View className='col-12' style={{marginTop: 15, alignItems: 'center', justifyContent:'center'}}>\r\n                        <Text className='col-12' style={{marginBottom: 5, textAlign: 'center'}}>Dont have an account?</Text>\r\n                        <View className='col' style={{float: 'left', alignItems: 'center', justifyContent:'center', borderWidth: 1, borderColor: '#000000', borderStyle: 'solid', borderRadius: 10}}>\r\n                            <Text style={{textAlign: 'center', margin: '7px', cursor: 'pointer'}} onClick={this.onCreateAccount}>CREATE / JOIN YOUR FLAT</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                }\r\n                <Spinner visible={this.state.isLoading} text={\"\"} />\r\n            </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n    row: {\r\n        // flexDirection: 'row',\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        marginBottom: 25\r\n    },     \r\n    txtIcon: {\r\n        marginLeft: 6,\r\n        // marginRight: -15,\r\n        height: 15,\r\n        width: 15,\r\n        resizeMode : 'stretch',\r\n        alignItems: 'center',\r\n        top: 11\r\n\r\n    },\r\n    txt: {\r\n        flex: 1,\r\n        paddingLeft: 25\r\n    }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IMember } from '../models/home';\r\nimport { login, forgetPassword, signup } from '../store/actions/account';\r\n\r\nimport Page from '../components/login/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => dispatch(login(userName, password, callback)),\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => dispatch(forgetPassword(mobileNumber, email, callback)),\r\n    onSignUp: (data: IMember, clientCode: string, callback: (result: boolean, message: string) => void) => dispatch(signup(data, clientCode, callback))\r\n});\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(Page);","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    container: {\r\n      // backgroundColor: COLOR.MODAL_BG,\r\n      height: '80%',\r\n      marginTop: 30,\r\n      marginBottom: 25,\r\n      marginLeft: 15,\r\n      marginRight: 15\r\n    },\r\n    head: {\r\n      // padding: 7,\r\n      // flexDirection: 'row'\r\n      alignContent: 'center'\r\n    },\r\n    title: {\r\n      flex: 1,\r\n      // flexDirection: 'row',\r\n      alignContent: 'center',\r\n      color: COLOR.FONT_COLOR2\r\n    },\r\n    close: {\r\n      width: 20,\r\n      flex: 1,\r\n      // flexDirection: 'row',\r\n      justifyContent: 'flex-end',\r\n      alignContent: 'flex-end',\r\n      alignSelf: 'flex-end'\r\n    },\r\n    content: {\r\n      // padding: 15\r\n    }\r\n  };","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { Link } from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text, Image } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Images from '../images';\r\nimport {styles as popupStyles} from '../../styles/popup';\r\nimport { ROLE } from '../../constants/index';\r\nimport { IHome } from '../../models/home';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{ \r\n  isShowHomeModel: boolean\r\n};\r\n\r\nexport default class TitleBar extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isShowHomeModel: false\r\n    };\r\n    this.onToggleHomeModel = this.onToggleHomeModel.bind(this);\r\n    this.onHomeChange = this.onHomeChange.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  onToggleHomeModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowHomeModel: isShow\r\n    });\r\n  }\r\n\r\n  onHomeChange = (index: number) => {\r\n    this.props.onHomeChange(index, (result: boolean) => {\r\n      if(result === true){\r\n        this.onToggleHomeModel(false);\r\n      }else{\r\n      }\r\n    });\r\n  }\r\n  \r\n  logout = () => {\r\n    confirmAlert({\r\n      title: 'Confirm to logout',\r\n      message: 'Are you sure you wish to logout?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.props.onLogout((result: boolean) => {\r\n              if(result === true){\r\n                Toast.success('Logout Success!');\r\n              }else{\r\n                Toast.fail('Failed to logout!');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className='center' style={styles.titleBar}>\r\n        <Link className='fl' to=''>\r\n          <Image src={Images.logoInv} className='' style={{ width: 22, height: 22}} />\r\n        </Link>\r\n          {/* <Image src={this.props.isMenuExpand ? Images.close : Images.menu} className='fl pointer' style={(this.props.isMenuExpand ? { width: 17, height: 17, marginLeft: 15, marginTop: 6} : { width: 22, height: 22, marginLeft: 15, marginTop: 4})} onClick={this.props.onToggleMenu} /> */}\r\n          {(this.props.appUser.role === ROLE.USER) ?\r\n          <Text className='pointer' style={styles.titleText} onClick={() => this.onToggleHomeModel(true)}>{((isNN(this.props.user.homes) && this.props.appUser.homeIndex >= 0) ? this.props.user.homes[this.props.appUser.homeIndex].number : \"\")}</Text>\r\n          :\r\n          <Text style={styles.titleText}>{(this.props.appUser.role === ROLE.ADMIN ? 'Admin' : (this.props.appUser.role === ROLE.MANAGER ? 'Manager' : (this.props.appUser.role === ROLE.GATEKEEPER ? 'Gate Keeper' : this.props.appUser.role)))}</Text>\r\n          }\r\n          <span className='fr pointer' onClick={this.logout} style={{flex: 1,}}>\r\n            <Image src={Images.logout} style={{ width: 20, height: 20}}  />\r\n          </span>\r\n        {isNN(this.props.user.homes) &&\r\n        <Modal\r\n          open={this.state.isShowHomeModel}\r\n          onClose={() => this.onToggleHomeModel(false)}>\r\n          <View style={popupStyles.container}>\r\n            {\r\n            this.props.user.homes.map((d: IHome, i: number) => {\r\n              return(\r\n                <Text className='col-12 pointer' key={'h' + i} onClick={() => this.onHomeChange(i)} style={(this.props.appUser.homeIndex === i ? {...styles.homeList, ...styles.activeHome} : {...styles.homeList, ...styles.inActiveHome})}>\r\n                {'' + d.number}\r\n                </Text>\r\n              )\r\n            })\r\n            }\r\n          </View>\r\n        </Modal>\r\n        }\r\n      </header>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  titleBar: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    // alignItems: 'flex-start',\r\n    // justifyContent: 'flex-start',\r\n    width: '100%',\r\n    // flexDirection: 'row',\r\n    padding: 7\r\n  },\r\n  titleText: {\r\n    flex: 15, \r\n    // textAlign: 'center', \r\n    color: COLOR.FONT_COLOR3, \r\n    // fontWeight: 'bold', \r\n    fontSize: 15\r\n  },\r\n  homeList: {\r\n    padding: 15, \r\n    borderBottomWidth: 1, \r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid'\r\n    // textAlign: 'center'\r\n  },\r\n  inActiveHome: {\r\n    color: COLOR.FONT_COLOR2\r\n  },\r\n  activeHome: {\r\n    color: COLOR.PRIMARY,\r\n    // fontWeight: 'bold',\r\n    fontSize: 20\r\n  }\r\n};","import { ROLE } from \".\";\r\n\r\nexport const NAV = [\r\n    {title: 'Home', image:'homeIconWhite', path: '/'},\r\n    {title: 'Manage', image:'visitorsWhite', roles: [ROLE.USER, ROLE.ADMIN, ROLE.MANAGER], child: [\r\n        {title: 'Members', path: 'members', roles: [ROLE.USER]},\r\n        {title: 'Vehicles', path: 'vehicles', roles: [ROLE.USER]},\r\n        {title: 'Servents', path: 'servents', roles: [ROLE.USER]},\r\n        {title: 'Tickets', path: 'tickets', roles: [ROLE.USER, ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Visitors', path: 'visitors', roles: [ROLE.USER]},\r\n        {title: 'Ads', path: 'ads', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Notification', path: 'notification', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Users', path: 'users', roles: [ROLE.ADMIN]},\r\n        {title: 'Homes', path: 'homes', roles: [ROLE.ADMIN]},\r\n        {title: 'Blocks', path: 'blocks', roles: [ROLE.ADMIN]},\r\n        {title: 'Visitors', path: 'all-visitors', roles: [ROLE.ADMIN, ROLE.MANAGER, ROLE.GATEKEEPER]},\r\n        {title: 'Payment', path: 'payment', roles: [ROLE.ADMIN, ROLE.MANAGER]}\r\n    ]},\r\n    {title: 'Notice', image:'notificationWhite', path: 'notice'},\r\n    {title: 'Settings', image:'settingWhite', child: [\r\n        {title: 'My Profile', path: 'my-profile'},\r\n        {title: 'My Role', path: 'my-role', isMRole: true},\r\n        {title: 'My Documents', path: 'my-documents'},\r\n        {title: 'Change Password', path: 'change-password'}\r\n    ]},\r\n    {title: 'Info', image:'infoWhite', path: 'info'}\r\n];","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport { NAV } from '../../constants/nav';\r\nimport { COLOR } from '../../constants';\r\nimport Images from '../images';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser\r\n};\r\n\r\ninterface IState{\r\n  isExpand: boolean,\r\n  activeMenu: string,\r\n  activeTopMenu: string\r\n};\r\n\r\nexport default class NavBar extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isExpand: false,\r\n      activeMenu: 'Home',\r\n      activeTopMenu: ''\r\n    };\r\n    this.loadNav = this.loadNav.bind(this);\r\n    this.onToggleMenu = this.onToggleMenu.bind(this);\r\n    this.getImage = this.getImage.bind(this);\r\n  }\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  getImage = (img: string) => {\r\n    switch(img){\r\n      case 'homeIconWhite':\r\n        return Images.homeIconWhite;\r\n      case 'visitorsWhite':\r\n        return Images.visitorsWhite;\r\n      case 'notificationWhite':\r\n        return Images.notificationWhite;\r\n      case 'settingWhite':\r\n        return Images.settingWhite;\r\n      case 'infoWhite':\r\n        return Images.infoWhite;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  loadNav = (nav: any, pTitle: string, isTopLevel: boolean = false) => {\r\n    let that = this;\r\n    return(\r\n      <ul className={'navbar-nav' + ((!isTopLevel && this.state.activeTopMenu !== pTitle) ? ' hide' : '')} style={!isTopLevel ? styles.inner : {}}>\r\n      {\r\n        nav.map((d: any, i: number) => {\r\n          if((isNN(d.path) || isNN(d.child)) && (!isNN(d.roles) || d.roles.indexOf(this.props.appUser.role) >= 0) && (!d.isMRole || this.props.user.role.split(',').length > 0)){\r\n          return(\r\n            <li key={'nav-item' + i } className='nav-item' title={d.title}>\r\n              <Link className={'nav-link' + (this.state.activeMenu === d.title || (d.child && isNN(d.child.filter((c: any) => c.title === this.state.activeMenu))) ? ' active' : '')} to={isNN(d.path) ? d.path : '#' } onClick={() => {\r\n                if(this.state.activeTopMenu === d.title){\r\n                  this.setState({\r\n                    activeTopMenu: ''\r\n                  });\r\n                }else if(isTopLevel){\r\n                  this.setState({\r\n                    activeTopMenu: d.title\r\n                  });\r\n                  if(isNN(d.child)){\r\n                    this.setState({\r\n                      isExpand: true\r\n                    });\r\n                  }\r\n                }\r\n                if(isNN(d.path)){\r\n                  this.setState({\r\n                    activeMenu: d.title,\r\n                    activeTopMenu: '',\r\n                    isExpand: false\r\n                  });\r\n                }\r\n              }}>\r\n                {(!this.state.isExpand && isNN(d.image)) ?\r\n                <Image src={this.getImage(d.image)} className='' style={{ width: 26, height: 22}} />\r\n                :\r\n                <span>{d.title}</span>\r\n                }\r\n                </Link>\r\n              {\r\n                isNN(d.child) && \r\n                that.loadNav(d.child, d.title)\r\n              }\r\n            </li>\r\n          )\r\n          }else{\r\n            return null;\r\n          }\r\n        })\r\n      }\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  onToggleMenu = () => {\r\n    this.setState({\r\n      isExpand: !this.state.isExpand\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav style={{...styles.nav, width: (this.state.isExpand ? '250px' : '44px')}}>\r\n        {\r\n          this.loadNav(NAV, '', true)\r\n        }\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  nav: {\r\n    backgroundColor: COLOR.SECONDARY,\r\n    color: COLOR.INVERSE\r\n  },\r\n  inner:{\r\n    backgroundColor: COLOR.PRIMARY,\r\n    paddingLeft: 20\r\n  }\r\n};","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class TabBar extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // }\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <footer style={styles.tabBar}>\r\n        <View className='center'>© Nest</View>\r\n      </footer>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {  \r\n  tabBar: {\r\n    flex: 1,\r\n    // backgroundColor: COLOR.HR_COLOR,\r\n    borderTopColor: COLOR.HR_COLOR,\r\n    borderTopWidth: 1,\r\n    'border-top-style': 'solid',\r\n    // alignItems: 'flex-start',\r\n    // justifyContent: 'flex-start',\r\n    width: '100%',\r\n    // flexDirection: 'row',\r\n    // position: 'absolute',\r\n    marginTop: 25,\r\n    paddingTop: 15,\r\n    paddingBottom: 15\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    alignItems: 'center'\r\n  },\r\n  tabImage: {\r\n    width: 20,\r\n    height: 20\r\n  },\r\n  activeTab: {\r\n    backgroundColor: COLOR.INVERSE\r\n  }\r\n};","import Api from '../api/api';\r\nimport { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'payment';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const search = (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const save = (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to save Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const updatePay = (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().put(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to update Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const upload = (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'upload', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.approvalid > 0)\r\n    {\r\n      /*\r\n      var homeIndex = user.homes.findIndex(d => d._id === homeId);\r\n      if(file.approvalid > 0)\r\n      {        \r\n        var paymentIndex = user.home[homeIndex].paymentApproval.findIndex(d => d.approvalid === file.approvalid);\r\n        user.home[homeIndex].paymentApproval[paymentIndex] = result.data;\r\n      }else{\r\n        user.home[homeIndex].paymentApproval.push(result.data);\r\n      }\r\n      */\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, file);\r\n};\r\n\r\nexport const update = (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/transaction/' + paymentId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      transaction._id = result.data;\r\n      // var homeIndex = user.homes.findIndex(d => d._id === params.homeid);\r\n      // if(paymentId.length > 0)\r\n      // {        \r\n        var paymentIndex = user.homes[homeIndex].payments.findIndex(d => d._id === paymentId);\r\n        if(!user.homes[homeIndex].payments[paymentIndex].transactions){\r\n          user.homes[homeIndex].payments[paymentIndex].transactions = [];\r\n        }\r\n        user.homes[homeIndex].payments[paymentIndex].transactions.push(transaction);\r\n      // }else{\r\n      //   user.homes[homeIndex].payments.push(result.data);\r\n      // }\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, transaction);\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","// import { actionTypes } from '../action-types';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants/index';\r\n// import { IHome } from '../../models/home';\r\n\r\nlet controller: string = 'visitor';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : '') + '/' + isActive, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // data.image = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          var foundIndex = visitors.findIndex(d => d._id === result.data);\r\n          visitors[foundIndex]._id = result.data;\r\n          visitors[foundIndex].name = name;\r\n          visitors[foundIndex].age = data.age;\r\n          visitors[foundIndex].gender = data.gender;\r\n          visitors[foundIndex].mobileNo = data.mobileNo;\r\n          visitors[foundIndex].emailId = data.emailId;\r\n          visitors[foundIndex].image = result.image;\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      } else {\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          data._id = result.data;\r\n          data.createdBy = user.name;\r\n          visitors.unshift(data);\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      } else {\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      /*\r\n      user.homes[homeIndex].visitors = user.homes[homeIndex].visitors.filter((d, i) => d._id != id);\r\n      dispatch(getUserResult(user as IUser));\r\n      */\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const enter = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/enter/' + id + '/' + gateNo, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const exit = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/exit/' + id + '/' + gateNo, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const approve = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/approve/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const reject = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/reject/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};","import Api from '../api/api';\r\nimport { isNNObject } from '../../util/index';\r\n\r\nlet controller: string = 'upload';\r\n\r\nexport const upload = (data: any, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().upload(controller, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};","import * as React from 'react';\r\nimport { ScrollView, View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNN, generateUUID } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\nimport { MONTH, COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome,\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  payment: {\r\n    paymentId: string,\r\n    amount: number,\r\n    transactionRef: string\r\n  }\r\n};\r\n\r\nexport default class MyDues extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      payment: {\r\n        paymentId: '',\r\n        amount: 0,\r\n        transactionRef: ''\r\n      }\r\n    }\r\n    this.getTotalDue = this.getTotalDue.bind(this);\r\n    this.payNow = this.payNow.bind(this);\r\n    this.clearTxn = this.clearTxn.bind(this);\r\n    this.txnFailure = this.txnFailure.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getTotalDue = () => {\r\n    let totalDue = 0;\r\n    this.props.home.payments.map((d: IPayment, i: number) => {\r\n      let amountPaid = 0;\r\n        d.transactions.filter((t, j) => t.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n      totalDue += d.amount - amountPaid;\r\n      return 1;\r\n    });\r\n    return totalDue;\r\n  };\r\n\r\n  payNow = (paymentId: string, amount: number) => {\r\n    if(paymentId && paymentId.length > 0 && amount && amount > 0){\r\n      if(isNN(this.props.user.client.upi.id) && isNN(this.props.user.client.upi.name)){\r\n        let transactionRef = generateUUID();\r\n        this.setState({\r\n          payment: {\r\n            paymentId: paymentId,\r\n            amount: amount,\r\n            transactionRef: transactionRef\r\n          }\r\n        });\r\n        \r\n        Toast.warn('Payment is in progress. Please contact administrator.');\r\n        // RNUpiPayment.initializePayment({\r\n        //   vpa: this.props.user.client.upi.id, // or can be john@ybl or mobileNo@upi\r\n        //   payeeName: this.props.user.client.upi.name,\r\n        //   amount: amount + '',\r\n        //   transactionRef: transactionRef,\r\n        //   transactionNote: ''\r\n        // }, this.successCallback, this.failureCallback);\r\n      }else{\r\n        Toast.warn('Please update UPI ID and UPI Name to app administrator to proceed further.');\r\n      }\r\n    }else{\r\n      Toast.warn('Amount should be more then 0 to proceed payment.');\r\n    }\r\n  };\r\n  \r\n  successCallback = (result: any) => {\r\n    console.log('Payment Success...', result);\r\n    if(result && result.Status)\r\n    {\r\n      if(result.Status === 'SUCCESS' && result.responseCode && result.responseCode === '00'){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let transaction = {\r\n          txnRef: result.txnRef,\r\n          txnId: result.txnId,\r\n          amount: this.state.payment.amount,\r\n          status: 'PAID',\r\n          isSuccess: true,\r\n          reason: ''\r\n        } as ITransaction;\r\n        this.props.onPaymentUpdate(this.state.payment.paymentId, transaction, (updateResult: boolean) => {\r\n          this.setState({\r\n            isLoading: false\r\n          });\r\n          this.clearTxn();\r\n          if(updateResult === true){\r\n            Toast.success('Payment success.');\r\n          }else{\r\n            Toast.fail('Payment failed.');\r\n          }\r\n        });\r\n      }else{\r\n        this.txnFailure(result);\r\n      }\r\n    }else{\r\n      this.txnFailure(result);\r\n    }\r\n  };\r\n   \r\n  failureCallback = (result: any) => {\r\n    this.txnFailure(result);\r\n  };\r\n\r\n  txnFailure = (result: any) => {\r\n    console.log('Payment Failure...', result);\r\n    let msg: string = '';\r\n    if(result && result.Status)\r\n    {\r\n      if(result.Status === 'FAILURE' && result.responseCode && result.responseCode === 'ZM'){\r\n        msg = 'Payment failed because of wrong pin.';\r\n      }\r\n      else if(result.Status === 'FAILURE' && result.message && result.message.length > 0){\r\n        msg = 'Payment failed because ' + result.message;\r\n      }else{\r\n        msg = 'Payment failed.';\r\n      }\r\n    }\r\n    else{\r\n      msg = 'Payment failed.';\r\n    }\r\n    Toast.fail(msg);\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    let transaction = {\r\n      txnRef: this.state.payment.transactionRef,\r\n      txnId: '',\r\n      amount: this.state.payment.amount,\r\n      status: 'FAIL',\r\n      isSuccess: false,\r\n      reason: msg\r\n    } as ITransaction;\r\n    this.props.onPaymentUpdate(this.state.payment.paymentId, transaction, (updateResult: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      this.clearTxn();\r\n      // if(updateResult === true){\r\n      //   Toast.success('Payment success.');\r\n      // }else{\r\n      //   Toast.fail('Payment failed.');\r\n      // }\r\n    });\r\n  };\r\n\r\n  clearTxn = () => {\r\n    this.setState({\r\n      payment: {\r\n        paymentId: '',\r\n        amount: 0,\r\n        transactionRef: ''\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <View style={{ margin: 5 }}>\r\n          <Text style={{ marginTop: 2, fontWeight: 'bold', fontSize: 17 }}>{'Total Due Amount: Rs ' + this.getTotalDue()}</Text>\r\n        </View>\r\n        <ScrollView>\r\n        {isNN(this.props.home.payments) ?\r\n        this.props.home.payments.filter((p: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          if (isNN(p.transactions)) {\r\n            p.transactions.filter(t => t.isSuccess === true).map((p, j) => amountPaid += p.amount);\r\n          }\r\n          return(amountPaid < p.amount);\r\n        }).map((d: IPayment, i: number) => {\r\n            let amountPaid = 0;\r\n            if (isNN(d.transactions)) {\r\n              d.transactions.filter(p => p.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n            }\r\n            if (amountPaid < d.amount) {\r\n              return (\r\n                <View key={'my-due' + i} style={(i === 0) ? styles.myDueFirst : styles.myDue }>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Text>{'Due for: ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + '/' + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%', marginTop: 4, marginBottom: 3 }}>\r\n                    <Text style={{ fontSize: 17 }}>{'Rs ' + (d.amount - amountPaid)}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%'}}>\r\n                    <Text>{'Due Date: 15/' + MONTH.filter(m => m.value === d.forMonth)[0].title + '/' + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Button \r\n                    title='PAY NOW'\r\n                    onPress={() => this.payNow(d._id, (d.amount - amountPaid))} \r\n                    />\r\n                  </View>\r\n                </View>\r\n              )\r\n            } else {\r\n              return null;\r\n            }\r\n          })\r\n          :<Text style={{ padding: 20 }}>No Dues found!!!</Text>\r\n        }\r\n        </ScrollView>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  myDue: {\r\n    margin: 7, \r\n    paddingLeft: 15,\r\n    borderLeftColor: COLOR.HR_COLOR, \r\n    borderLeftWidth: 1 \r\n  },\r\n  myDueFirst: {\r\n    margin: 7\r\n  }\r\n};","import moment from 'moment';\r\nimport { isNN, jsError, isNNObject } from './index';\r\nimport { DEFAULT_DATE_FORMAT, DEFAULT_DATE_TIME_FORMAT } from '../constants/index';\r\n\r\nexport function toDateString(_input: any, _format?: string) {\r\n  try {\r\n    if(isNNObject(_input)) {\r\n      if (typeof _input != 'string') {\r\n        _input.toString();\r\n      }\r\n      if (!isNN(_format)) {\r\n       _format = DEFAULT_DATE_FORMAT;\r\n      }\r\n      return moment(_input).format(_format);\r\n    } else {\r\n      return '';\r\n    }\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateString'); \r\n    return ''; \r\n  }\r\n};\r\n\r\nexport function toDateTimeString(_input: any, _format?: string) {\r\n  try {\r\n    return toDateString(_input, DEFAULT_DATE_TIME_FORMAT);\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateTimeString'); \r\n    return ''; \r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, ScrollView } from '../common/elements';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNN } from '../../util';\r\nimport { toDateString } from '../../util/convert';\r\nimport { MONTH, COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  home: IHome,\r\n};\r\n\r\ninterface IState {\r\n  activeTab: number\r\n};\r\n\r\nexport default class History extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <ScrollView style={{}}>\r\n        {isNN(this.props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true)))) ?\r\n        this.props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true))).slice(0, 3).map((d: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          let paidDate = null;\r\n          d.transactions.filter(t => t.isSuccess === true).map((t: ITransaction, j: number) => {\r\n            amountPaid += t.amount;\r\n            if(j === 0){\r\n              paidDate = t.createdAt;\r\n            }\r\n            return 1;\r\n          });\r\n              return (\r\n                <View key={'my-his' + i} style={(i === 0) ? styles.myDueFirst : styles.myDue }>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Text style={{}}>{\"Paid for: \" + MONTH.filter(m => m.value === d.forMonth)[0].title + \"/\" + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%', marginTop: 4, marginBottom: 3 }}>\r\n                    <Text style={{ fontSize: 17 }}>{\"Rs \" + amountPaid}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%'}}>\r\n                    <Text>{\"Paid On: \" + toDateString(paidDate)}</Text>\r\n                  </View>\r\n                </View>\r\n              )\r\n          })\r\n          :<Text style={{ padding: 20 }}>No History found</Text>\r\n        }\r\n        </ScrollView>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  myDue: {\r\n    margin: 7, \r\n    paddingLeft: 15,\r\n    borderLeftColor: COLOR.HR_COLOR, \r\n    borderLeftWidth: 1 \r\n  },\r\n  myDueFirst: {\r\n    margin: 7\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { Text, View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\n\r\ninterface IProps {\r\n  data: Array<object>,\r\n  message: string\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class CustomList extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n      return(\r\n        isNN(this.props.data) ?\r\n        this.props.data.map((d: any, i: number) => {\r\n          return(\r\n            <View style={{flex: 1, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid', paddingBottom: 3}}>\r\n              <View>\r\n                <Text key={i} style={{flex: 1, fontWeight: 'bold'}}>\r\n                  {d.title}\r\n                </Text>\r\n              </View>\r\n              <View>\r\n                <Text key={i} style={{flex: 1}}>\r\n                  {d.description}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text>{this.props.message}</Text>          \r\n      );\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  container: {\r\n    flex: 1, \r\n    // flexDirection: 'column',\r\n    width: '100%',\r\n    // backgroundColor: \"#CCCCCC\",\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    borderBottomWidth: 1,\r\n    'border-bottom-style': 'solid'\r\n  }, \r\n  row: {\r\n    flex: 1,\r\n    // flexDirection: 'row'\r\n  }, \r\n  card: {\r\n    flex: 1, \r\n    // flexDirection: 'column', \r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    // backgroundColor: '#DDDDDD', \r\n    borderRadius: 10,\r\n    padding: 5,\r\n    margin: 7\r\n  },\r\n  inner: {\r\n    // flex: 1, \r\n    // flexDirection: 'column', \r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    // textAlign: 'center',\r\n    // width: '150px',\r\n    margin: 5,\r\n    padding: '0px 10px'\r\n    // float: 'left'\r\n  },\r\n  txt:{\r\n    flex: 1, \r\n    // justifyContent: 'center', \r\n    // textAlign: 'center', \r\n    paddingTop: 7,\r\n    paddingBottom: 5,\r\n    fontSize: 14\r\n  },\r\n  img:{\r\n    width: '10vw',\r\n    height: '10vw',\r\n    maxWidth: '75px',\r\n    maxHeight: '75px',\r\n    margin: 5\r\n  }\r\n};\r\n  ","import * as React from 'react';\r\nimport { View, TouchableHighlight, Image } from '../common/elements';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport MyDues from './my-dues';\r\nimport History from './history';\r\nimport Images from '../images';\r\nimport CustomList from './custom-list';\r\nimport { styles as cardStyles } from '../../styles/card';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  activeTab: number\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        {/*<View style={{flex: 1, flexDirection: 'row', marginTop: 1, marginBottom: 2}}>\r\n          <Text style={{flex: 1, justifyContent: 'flex-start', padding: 5}}>{new Date().toLocaleDateString()}</Text>\r\n          <Text style={{flex: 1, justifyContent: 'flex-end', alignItems:'flex-end', textAlign: \"right\", padding: 5}}>{new Date().toLocaleTimeString()}</Text>\r\n        </View>*/}\r\n        <View className='fl' style={cardStyles.container}>\r\n            <View style={cardStyles.row}>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('members')}>\r\n                  <Image src={Images.members} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  {(this.props.home.members ? this.props.home.members.length + '' : '') + ' MEMBER' + ((this.props.home.members.length === 0 || this.props.home.members.length > 1) ? 'S' : '')}\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('vehicles')}>\r\n                  <Image src={Images.vehicle} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  {(this.props.home.vehicles ?  this.props.home.vehicles.length + '' : '') + ' VEHICLE' + ((this.props.home.vehicles.length === 0 || this.props.home.vehicles.length > 1) ? 'S' : '')}\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('servents')}>\r\n                  <Image src={Images.servent} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  {(this.props.home.servents ? this.props.home.servents.length + '' : '') + ' SERVANT' + ((this.props.home.servents.length === 0 || this.props.home.servents.length > 1) ? 'S' : '')}\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('tickets')}>\r\n                  <Image src={Images.support} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.tickets ? this.props.home.tickets.length + '' : '') + ' TICKET' + ((this.props.home.tickets.length === 0 || this.props.home.tickets.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>TICKET(S)</View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('visitors')}>\r\n                  <Image src={Images.visitors} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.visitors ? this.props.home.visitors.length + '' : '') + ' VISITOR' + ((this.props.home.visitors.length === 0 || this.props.home.visitors.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>VISITOR(S)</View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab}: styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              MY DUES\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>\r\n              ADVANCE\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              HISTORY\r\n            </TouchableHighlight>\r\n            {/* <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.activeTab)} onClick={() => this.setState({activeTab: 4})}>\r\n              DEPOSITS\r\n            </TouchableHighlight> */}\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n          {this.state.activeTab === 1 ?\r\n              <MyDues history={this.props.history} user={this.props.user} home={this.props.home} onPaymentUpload={this.props.onPaymentUpload} onPaymentUpdate={this.props.onPaymentUpdate} />\r\n            :\r\n            this.state.activeTab === 2 ?\r\n              <CustomList data={[]} message=\"No advance found!\" />\r\n              :\r\n              this.state.activeTab === 3 ?\r\n              <History history={this.props.history} home={this.props.home} />\r\n              :\r\n              this.state.activeTab === 4 ?\r\n              <CustomList data={[]} message=\"Work in progress\" />\r\n              :\r\n              []\r\n            }\r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%',\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Image } from '../../common/elements';\r\nimport Images from '../../images';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles as cardStyles } from '../../../styles/card';\r\nimport { ROLE } from '../../../constants';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { ITickets } from '../../../models/store/tickets';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  tickets: ITickets\r\n  blocks: IBlocks\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View className='fl' style={cardStyles.container}>\r\n            <View style={cardStyles.row}>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('tickets')}>\r\n                  <Image src={Images.support} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {/* {this.props.tickets.isUpToDate ?\r\n                    ((!this.props.tickets.isError) ? this.props.tickets.data.length : 0) + \" TICKET\" + ((this.props.tickets.isError || this.props.tickets.data.length === 0 || this.props.tickets.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    } */}\r\n                    TICKET\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('ads')}>\r\n                  <Image src={Images.addvertise} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {/* {this.props.ads.isUpToDate ?\r\n                    ((!this.props.ads.isError) ? this.props.ads.data.length : 0) + \" AD\" + ((this.props.ads.isError || this.props.ads.data.length === 0 || this.props.ads.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    } */}\r\n                    ADS\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('notification')}>\r\n                  <Image src={Images.reminder} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>NOTIFICATION</View>\r\n                </View>\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('users')}>\r\n                  <Image src={Images.users} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.users.isUpToDate ?\r\n                    ((!this.props.users.isError) ? this.props.users.data.length : 0) + \" USER\" + ((this.props.users.isError || this.props.users.data.length === 0 || this.props.users.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('homes')}>\r\n                  <Image src={Images.homes} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.homes.isUpToDate ?\r\n                    ((!this.props.homes.isError) ? this.props.homes.data.length : 0) + \" HOME\" + ((this.props.homes.isError || this.props.homes.data.length === 0 || this.props.homes.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('blocks')}>\r\n                  <Image src={Images.blocks} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.blocks.isUpToDate ?\r\n                    ((!this.props.blocks.isError) ? this.props.blocks.data.length : 0) + \" BLOCK\" + ((this.props.blocks.isError || this.props.blocks.data.length === 0 || this.props.blocks.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('all-visitors')}>\r\n                  <Image src={Images.visitors} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.visitors ? this.props.home.visitors.length + '' : '') + ' VISITOR' + ((this.props.home.visitors.length === 0 || this.props.home.visitors.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>VISITOR(S)</View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('payment')}>\r\n                  <Image src={Images.money} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>PAYMENT</View>\r\n                </View>\r\n            </View>\r\n        </View>     \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%',\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, ScrollView, TextInput, Text } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN, generateUUID } from '../../../util/index';\r\nimport { COLOR } from '../../../constants';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHome, IVisitor } from '../../../models/home';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  homeId: string,\r\n  id: string,\r\n  type: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  fileName: string,\r\n  showHomes: boolean,\r\n  homeSearchText: string\r\n};\r\n\r\nexport default class NewVisitor extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      homeId: '',\r\n      id: '',\r\n      type: 'VISITOR',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      fileName: '',\r\n      showHomes: false,\r\n      homeSearchText: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onImageSelect = this.onImageSelect.bind(this);\r\n    this.viewAll = this.viewAll.bind(this);\r\n  };\r\n  \r\n  onImageSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        this.setState({\r\n          fileName: fileName\r\n        });\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        this.props.onUpload(data, (result: boolean, message: string) => {\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.props.gateNo) && this.state.showHomes === false && this.state.homeId.length > 0 && isNN(this.state.name) && isNN(this.state.fileName)){\r\n      // this.props.onToggleLoading(true);\r\n      let visitor = {\r\n        _id: '',\r\n        type: this.state.type,\r\n        name: this.state.name,\r\n        age: this.state.age,\r\n        gender: this.state.gender,\r\n        mobileNo: this.state.mobileNo,\r\n        emailId: '',\r\n        image: this.state.fileName,\r\n        passCode: '',\r\n        gateNo: this.props.gateNo\r\n      } as IVisitor;\r\n      this.props.onSave(this.state.homeId, visitor, this.props.user, this.props.appUser, (result: boolean) => {          \r\n        // this.props.onToggleLoading(false);\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          // Toast.success('Visitor ' + name + ' saved successfully.');\r\n        }else{\r\n          Toast.fail('Failed to save visitor ' + this.state.name + '.');\r\n        }\r\n      });\r\n      this.setState({\r\n        homeId: '',\r\n        id: '',\r\n        type: 'VISITOR',\r\n        name: '',\r\n        age: 0,\r\n        gender: '',\r\n        mobileNo: '',\r\n        fileName: '',\r\n        showHomes: false,\r\n        homeSearchText: ''\r\n      });\r\n      Toast.info('Visitor will be saved and notified to the home.');\r\n    }else{\r\n      Toast.warn('Please fill Gate Number, Home and Image before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({ \r\n      homeId: '',\r\n      id: '',\r\n      type: 'VISITOR',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      fileName: '',\r\n      showHomes: false,\r\n      homeSearchText: ''\r\n    });\r\n  };\r\n\r\n  viewAll = () => {\r\n    if(isNN(this.props.gateNo)) {\r\n      this.props.history.push('all-visitors')\r\n    } else {\r\n      Toast.warn('Please enter Gate Number to view this page.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          <View style={modelStyles.row}>\r\n            <Text className='fr pointer' onClick={this.viewAll} style={{...styles.ele, color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right'}}>View all Active Visitors</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder='Enter Home Number' className='form-control'\r\n          style={{...modelStyles.ele, ...styles.ele,\r\n            flexDirection: 'row',\r\n            padding: 12,\r\n            borderWidth: 1,\r\n            borderColor: COLOR.HR_COLOR,\r\n            borderRadius: 5\r\n          }} \r\n          value={this.state.homeSearchText} \r\n          onChange={(event: any) => this.setState({showHomes: true, homeSearchText: event.target.value})} />\r\n          </View>\r\n          {\r\n            (this.state.showHomes && isNN(this.state.homeSearchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n              {\r\n                this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.homeSearchText.toLowerCase()) >= 0).map((d: IHome, i: number) => {\r\n                  return(\r\n                    <Text \r\n                    className='pointer'\r\n                    key={'ho' + i}\r\n                    style={{...styles.ele, flexDirection: 'column', margin: 3, padding: 6, backgroundColor: COLOR.CARD_UNDERLAY}}\r\n                    onClick={() => {\r\n                      this.setState({homeSearchText: d.number, homeId: d._id, showHomes: false});\r\n                    }}>{d.number}</Text>\r\n                  )\r\n                })\r\n              }\r\n            </ScrollView>\r\n          }\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'VISITOR'} text='Visitor' onPress={() => this.setState({type: 'VISITOR'})} />\r\n            <RadioButton isActive={this.state.type === 'DELIVERY'} text='Delivery' onPress={() => this.setState({type: 'DELIVERY'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder='Age' className='form-control' maxLength={3} style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder='Mobile Number' className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>    \r\n          <View style={modelStyles.row}>\r\n              <input type='file' name='image' placeholder='SELECT IMAGE' onChange={this.onImageSelect}/>\r\n              {isNN(this.state.fileName) &&\r\n              <Text style={{...styles.ele, marginLeft: 15}}>{this.state.fileName}</Text>\r\n              }\r\n          </View>\r\n          <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              style={{...styles.ele, marginRight: 10}}\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={this.onClear}\r\n              style={styles.ele}\r\n              />\r\n          </View>\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  },\r\n  ele: {\r\n    fontSize: 17\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, TextInput } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home';\r\nimport NewVisitor from './new-visitor';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onGateNoChanged: (gateNo: string) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  gateNo: string,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      gateNo: '',\r\n      isLoading: false\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      gateNo: this.props.gateNo\r\n    })\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder='Gate Number' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, width: 'auto'}} value={this.state.gateNo} onChange={(event: any) => this.setState({gateNo: event.target.value})} onBlur={() => this.props.onGateNoChanged(this.state.gateNo)} />\r\n        </View>\r\n        <NewVisitor history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} gateNo={this.state.gateNo} onToggleLoading={(isLoading) => this.setState({ isLoading: isLoading })} onSave={this.props.onSaveVisitor} onUpload={this.props.onUpload} />\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { Text } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { IVisitor } from '../../models/home';\r\nimport Home from './home';\r\nimport AMHome from './manager/home';\r\nimport GKHome from './gatekeeper/home';\r\nimport { ROLE } from '../../constants/index';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  outings: IOutings,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  tickets: ITickets,\r\n  blocks: IBlocks,\r\n  gateNo: string,\r\n  onGateNoChanged: (gateNo: string) => void,\r\n  onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n};\r\n\r\nexport default class Dashboard extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    if(this.props.appUser.role === ROLE.USER) {\r\n      if(this.props.appUser.homeIndex >= 0 && isNN(this.props.user.homes)) {\r\n        return(<Home history={this.props.history} user={this.props.user} home={this.props.user.homes[this.props.appUser.homeIndex]} onPaymentUpload={(file: any, homeId: string, callback: (result: boolean) => void) => this.props.onPaymentUpload(file, homeId, this.props.user, callback)} onPaymentUpdate={(paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => this.props.onPaymentUpdate(paymentId, transaction, this.props.appUser.homeIndex, this.props.user, callback)} />);\r\n      }else{\r\n        return(<Text style={{margin: 20}}>No home assigned to you. Please contact administrator/manager.</Text>);\r\n      }\r\n    }\r\n    else if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      return(<AMHome history={this.props.history} appUser={this.props.appUser} user={this.props.user} ads={this.props.ads} users={this.props.users} homes={this.props.homes} tickets={this.props.tickets} blocks={this.props.blocks} />);\r\n    }\r\n    else if(this.props.appUser.role === ROLE.GATEKEEPER) {\r\n      return(<GKHome history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} gateNo={this.props.gateNo} onGateNoChanged={this.props.onGateNoChanged} onSaveVisitor={this.props.onSaveVisitor} onUpload={this.props.onUpload} />);\r\n    }else{\r\n      return(<Text style={{margin: 20}}>No role assigned to you. Please contact administrator/manager.</Text>);\r\n    }\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { ITransaction } from '../models/home/transaction';\r\nimport { IVisitor } from '../models/home';\r\nimport { setGateNo } from '../store/actions/account';\r\nimport { upload, update } from '../store/actions/payment';\r\nimport { save as saveVisitor } from '../store/actions/visitor';\r\nimport { upload as fileUpload } from '../store/actions/file';\r\nimport Page from '../components/home/dashboard';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    outings: state.Outings,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    tickets: state.Tickets,\r\n    blocks: state.Blocks,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onGateNoChanged: (gateNo: string) => dispatch(setGateNo(gateNo)),\r\n    onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => dispatch(upload(file, homeId, user, callback)),\r\n    onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => dispatch(update(paymentId, transaction, homeIndex, user, callback)),\r\n    onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => dispatch(saveVisitor(homeId, data, user, appUser, scallback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(fileUpload(data, callback))\r\n});\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IMember } from '../../models/home/member';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n////import { number } from 'prop-types';\r\n////import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'member';\r\nlet accountController: string = 'account';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.member) && isNN(result.data.member._id)) {\r\n      sCallback(result.data.member, result.data.homeIds ? result.data.homeIds : []);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Member.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IMember, user: IUser, homeIndex: number, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        let members = user.homes[homeIndex].members;\r\n        var foundIndex = members.findIndex(d => d._id === result.data);\r\n        members[foundIndex]._id = result.data;\r\n        members[foundIndex].number = data.number;\r\n        members[foundIndex].name = data.name;\r\n        members[foundIndex].age = data.age;\r\n        members[foundIndex].gender = data.gender;\r\n        members[foundIndex].mobileNo = data.mobileNo;\r\n        members[foundIndex].emailId = data.emailId;\r\n        members[foundIndex].type = data.type;\r\n        \r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    data = Object.assign(data, {\r\n      password: data.mobileNo\r\n    });\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        let members = user.homes[homeIndex].members;\r\n        members.push(data);\r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const saveByAM = (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    isAM: true,\r\n    homeIds: homeIds,\r\n    isApprove: isApprove\r\n  });\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          var foundIndex = users.data.findIndex(d => d._id === result.data);\r\n          if(foundIndex >= 0){\r\n            users.data[foundIndex]._id = result.data;\r\n            users.data[foundIndex].name = data.name;\r\n          } else {\r\n            users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          }\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const removeByAM = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadWFAUsers = (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(accountController + '/wfausers', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNNObject(result) && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const reject = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(accountController + '/rejectuser/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  data: Array<{title: string, link: string}>\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Breadcrum extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    data: []\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={styles.cnr}>\r\n        <Link to='' style={styles.link}>Home</Link>\r\n        {this.props.data.map((d, i) => {\r\n          return(<>\r\n          <span key={'bd' + i} style={styles.sep}>/</span>\r\n          {(i === this.props.data.length - 1) ?\r\n          <span key={'bc' + i} style={styles.link}>{d.title}</span>\r\n          :\r\n          <Link key={'bc' + i} to={'/' + d.link}>{d.title}</Link>\r\n          }\r\n          </>);\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  cnr: {\r\n    width: '100%',\r\n    MarginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n  sep:{\r\n    marginRight: 10,\r\n    marginLeft: 10\r\n  },\r\n  link: {\r\n\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    content: {\r\n      backgroundColor: COLOR.INVERSE\r\n    },\r\n    row: {\r\n      // flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n      // backgroundColor: COLOR.INVERSE,\r\n      borderBottomColor: COLOR.HR_COLOR,\r\n      borderBottomWidth: 1,\r\n      'border-bottom-style': 'solid',\r\n      marginTop: 5,\r\n      // marginBottom: 10,\r\n      // paddingLeft: 10,\r\n      // paddingRight: 10,\r\n      // borderRadius: 10\r\n    },\r\n    ele: {\r\n      // flexDirection: 'row',\r\n      alignItems: 'flex-start',\r\n      marginTop: 1,\r\n      marginBottom: 3,\r\n      padding: 2\r\n    }\r\n  };","export const styles = {   \n  addIcon: {\n    width: 20,\n    height: 20,\n    cursor: 'pointer'\n  },  \n  editIcon: {\n      width: 20,\n      height: 20,\n      cursor: 'pointer'\n    }, \n    deleteIcon: {\n      width: 18,\n      height: 20,\n      cursor: 'pointer'\n    },\n    closeIcon: {\n      width: 17,\n      height: 17,\n      cursor: 'pointer'\n    },\n    datePicker: {\n      width: 20,\n      height: 23,\n      cursor: 'pointer'\n    }\n  };\n  ","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport RadioButton from '../common/radio-button';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IMember } from '../../models/home/member';\r\nimport { styles } from '../../styles/page';\r\nimport { styles as iconStyles } from '../../styles/icon';\r\nimport { styles as modelStyles } from '../../styles/model';\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => void,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class Members extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSave(member, this.props.user, this.props.homeIndex, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n            Toast.success('Member saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n          }\r\n        });\r\n    }else{\r\n      // Toast.warn('Please fill all the required fields before '+ (this.state.id > 0 ? 'Update' : 'Save') + '.');\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.homeIndex, this.props.user, this.props.users, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Member removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove member.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Members', link: 'members'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-member')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n      {isNN(this.props.user.homes[this.props.homeIndex].members) ?\r\n        this.props.user.homes[this.props.homeIndex].members.map((d: IMember, i: number) => {\r\n          return(\r\n            (this.state.isEdit === true && this.state.id === d._id) ?\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n                <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n                <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                  <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: false,\r\n                    id: '',\r\n                    number: '',\r\n                    name: '',\r\n                    age: 0,\r\n                    gender: '',\r\n                    mobileNo: '',\r\n                    emailId: '',\r\n                    type: 'OWNER',\r\n                    role: 'USER'\r\n                  });\r\n                }}>\r\n                  <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n            :\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                <Text>{d.name}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n              </View>\r\n              {isNN(d.mobileNo) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.emailId) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.emailId}</Text>\r\n              </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                <Text>{d.type}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d._id,\r\n                    number: d.number,\r\n                    name: d.name,\r\n                    age: d.age,\r\n                    gender: d.gender,\r\n                    mobileNo: d.mobileNo,\r\n                    emailId: d.emailId,\r\n                    type: d.type,\r\n                    role: d.role\r\n                  });\r\n                }}>\r\n                  <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Member found!!!</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\nimport { IAppState } from '../models/app-state';\nimport { IUsers } from '../models/store/users';\nimport { IUser } from '../models/user/user';\nimport { IMember } from '../models/home';\nimport { save, remove } from '../store/actions/member';\nimport Page from '../components/home/members';\n\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\n    user: state.User,\n    users: state.Users,\n    homeIndex: state.AppUser.homeIndex\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, scallback)),\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, scallback: (result: boolean) => void) => dispatch(remove(id, homeIndex, user, users, scallback))\n});\n\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\n// import { CheckBox  } from 'react-native-elements';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IMember } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class NewMember extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSave(member, this.props.user, this.props.homeIndex, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Member saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Members', link: 'members'}, {title: 'New Member', link: 'new-member'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\nimport { IAppState } from '../models/app-state';\nimport { IUser } from '../models/user/user';\nimport { IMember } from '../models/home';\nimport { save } from '../store/actions/member';\nimport Page from '../components/home/new-member';\n////import { number } from 'prop-types';\n\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\n    user: state.User,\n    homeIndex: state.AppUser.homeIndex\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, scallback))\n});\n\nexport const NewMember = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'vehicle';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IVehicle, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let vehicles = user.homes[homeIndex].vehicles;\r\n        var foundIndex = vehicles.findIndex(d => d._id === result.data);\r\n        vehicles[foundIndex]._id = result.data;\r\n        vehicles[foundIndex].number = data.number;\r\n        vehicles[foundIndex].type = data.type;\r\n        user.homes[homeIndex].vehicles = vehicles;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n  new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      data._id = result.data;\r\n      data.createdBy = user.name;\r\n      let vehicles = user.homes[homeIndex].vehicles;\r\n      vehicles.push(data);\r\n      user.homes[homeIndex].vehicles = vehicles;\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].vehicles = user.homes[homeIndex].vehicles.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Text, Image, TextInput, } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN } from '../../util/index';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string, \r\n  number: string, \r\n  type: string\r\n};\r\n\r\nexport default class Vehicles extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '', \r\n      number: '', \r\n      type: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.number) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let vehicle = {\r\n          _id: this.state.id,\r\n          number: this.state.number,\r\n          type: this.state.type\r\n        } as IVehicle;\r\n        this.props.onSave(vehicle, this.props.user, this.props.homeIndex, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              number: '',\r\n              type: ''\r\n            });\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Vehicle removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove vehicle.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Vehicles', link: 'vehicles'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-vehicle')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n        {isNN(this.props.user.homes[this.props.homeIndex].vehicles) ?\r\n          this.props.user.homes[this.props.homeIndex].vehicles.map((d: IVehicle, i: number) => {\r\n            return(\r\n              (this.state.isEdit === true && this.state.id === d._id) ?\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <RadioButton isActive={this.state.type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => this.setState({type: 'TWO WHEELER'})} />\r\n                  <RadioButton isActive={this.state.type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => this.setState({type: 'FOUR WHEELER'})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      number: '', \r\n                      type: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>                  \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.number}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      number: d.number,\r\n                      type: d.type\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No Vehicle found!!!</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\nimport { IAppState } from '../models/app-state';\nimport { IUser } from '../models/user/user';\nimport { IVehicle } from '../models/home';\nimport { save, remove } from '../store/actions/vehicle';\nimport Page from '../components/home/vehicles';\n\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\n    user: state.User,\n    homeIndex: state.AppUser.homeIndex\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback)),\n    onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, scallback))\n});\n\nexport const Vehicles = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string, \r\n  number: string, \r\n  type: string\r\n};\r\n\r\nexport default class NewVehicle extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '', \r\n      number: '', \r\n      type: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.number) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let vehicle = {\r\n          _id: this.state.id,\r\n          number: this.state.number,\r\n          type: this.state.type\r\n        } as IVehicle;\r\n        this.props.onSave(vehicle, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              type: ''\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Vehicles', link: 'vehicles'}, {title: 'New Vehicle', link: 'new-vehicle' }]} />  \r\n        <View style={modelStyles.container}>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => this.setState({type: 'TWO WHEELER'})} />\r\n            <RadioButton isActive={this.state.type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => this.setState({type: 'FOUR WHEELER'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\nimport { IAppState } from '../models/app-state';\nimport { IUser } from '../models/user/user';\nimport { IVehicle } from '../models/home';\nimport { save } from '../store/actions/vehicle';\nimport Page from '../components/home/new-vehicle';\n\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\n    user: state.User,\n    homeIndex: state.AppUser.homeIndex\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback))\n});\n\nexport const NewVehicle = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IServent } from '../../models/home/servent';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'servent';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IServent, user: IUser, homeIndex:number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let servents = user.homes[homeIndex].servents;\r\n        var foundIndex = servents.findIndex(d => d._id === result.data);\r\n        servents[foundIndex]._id = result.data;\r\n        servents[foundIndex].name = data.name;\r\n        servents[foundIndex].age = data.age;\r\n        servents[foundIndex].gender = data.gender;\r\n        servents[foundIndex].mobileNo = data.mobileNo;\r\n        servents[foundIndex].emailId = data.emailId;\r\n           \r\n        user.homes[homeIndex].servents = servents;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        let servents = user.homes[homeIndex].servents;\r\n        servents.push(data);\r\n        user.homes[homeIndex].servents = servents;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].servents = user.homes[homeIndex].servents.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Text, Image, TextInput } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServent } from '../../models/home/servent';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN } from '../../util/index';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class Servents extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let servent = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : ''\r\n        } as IServent;\r\n        this.props.onSave(servent, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: ''\r\n            });\r\n            Toast.success('Servent saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servent.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Servent removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove servent.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Servents', link: 'servents'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-servent')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n        {isNN(this.props.user.homes[this.props.homeIndex].servents) ?\r\n          this.props.user.homes[this.props.homeIndex].servents.map((d: IServent, i: number) => {\r\n            return(\r\n              (this.state.isEdit === true && this.state.id === d._id) ?\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n                  <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      name: '',\r\n                      age: 0,\r\n                      gender: '',\r\n                      mobileNo: '',\r\n                      emailId: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>          \r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      name: d.name,\r\n                      age: d.age,\r\n                      gender: d.gender,\r\n                      mobileNo: d.mobileNo,\r\n                      emailId: d.emailId\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No Servent found!!!</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\nimport { IAppState } from '../models/app-state';\nimport { IUser } from '../models/user/user';\nimport { IServent } from '../models/home';\nimport { save, remove } from '../store/actions/servent';\nimport Page from '../components/home/servents';\n\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\n    user: state.User,\n    homeIndex: state.AppUser.homeIndex\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback)),\n    onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, scallback))\n});\n\nexport const Servents = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServent } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class NewServent extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let servent = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : ''\r\n        } as IServent;\r\n        this.props.onSave(servent, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: ''\r\n            });\r\n            // this.props..navigation.goBack(null)\r\n            Toast.success('Servent saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servent.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Servents', link: 'servents'}, {title: 'New Servent', link: 'new-servent' }]} />  \r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={3} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\nimport { IAppState } from '../models/app-state';\nimport { IUser } from '../models/user/user';\nimport { IServent } from '../models/home';\nimport { save } from '../store/actions/servent';\nimport Page from '../components/home/new-servent';\n\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\n    user: state.User,\n    homeIndex: state.AppUser.homeIndex\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback))\n});\n\nexport const NewServent = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\n\r\nlet controller: string = 'ticket';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getTicketsResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      dispatch(getTicketsResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Tickets.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n            arrTickets[foundIndex]._id = result.data;\r\n            arrTickets[foundIndex].title = data.title;\r\n            arrTickets[foundIndex].description = data.description;\r\n            arrTickets[foundIndex].status = data.status;\r\n            arrTickets[foundIndex].updatedBy = user.name;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n          arrTickets[foundIndex]._id = result.data;\r\n          arrTickets[foundIndex].title = data.title;\r\n          arrTickets[foundIndex].description = data.description;\r\n          arrTickets[foundIndex].status = data.status;\r\n          arrTickets[foundIndex].updatedBy = user.name;\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              _homeId: user.homes[homeIndex].number,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      // }\r\n      // if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n      //   user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n      //   dispatch(getUserResult(user as IUser));\r\n      // }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const resolve = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/resolve/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const start = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  let newStatus = 'IN-PROGRESS';\r\n  new Api().put(controller + '/start/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          arrTickets = tickets.data;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n          arrTickets[foundIndex].status = newStatus;\r\n          dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        let arrTickets = user.homes[homeIndex].tickets;\r\n        var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n        arrTickets[foundIndex].status = newStatus;\r\n        user.homes[homeIndex].tickets = arrTickets;\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  },{\r\n    status: newStatus\r\n  });\r\n};\r\n\r\nexport const addComment = (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(isNN(comment._id)){\r\n    new Api().put(controller + '/comment/' + comment._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n            var commentIndex = arrTickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n            // arrTickets[ticketIndex].comments[commentIndex] = result.data;\r\n            arrTickets[ticketIndex].comments[commentIndex] = comment;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n          var commentIndex = user.homes[appUser.homeIndex].tickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n          user.homes[appUser.homeIndex].tickets[ticketIndex].comments[commentIndex] = comment;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }else{\r\n    new Api().post(controller + '/comment/' + ticketId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment._id = result.data;\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n              // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n              //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n              // }\r\n              arrTickets[ticketIndex].comments.unshift(comment);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n            // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n            //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n            // }\r\n            user.homes[appUser.homeIndex].tickets[ticketIndex].comments.unshift(comment);\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }\r\n};\r\n\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateString } from '../../util/convert';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  data: Array<ITicket>,\r\n  isEdit: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string,\r\n  status: string,\r\n  viewId: string,\r\n  comments: Array<ITicketComment>,\r\n  comment: string\r\n};\r\n\r\nexport default class Tickets extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      data: [],\r\n      isEdit: false,\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      status: 'INIT',\r\n      viewId: '',\r\n      comments: [],\r\n      comment: ''\r\n    }\r\n    // this.getTickets = this.getTickets.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onResolve = this.onResolve.bind(this);\r\n    this.onStart = this.onStart.bind(this);\r\n    this.onView = this.onView.bind(this);\r\n    this.onAddComment = this.onAddComment.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) ? '' : this.props.user.homes[this.props.appUser.homeIndex]._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        // data: this.getTickets()\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Tickets.');\r\n      }\r\n    });\r\n    /*\r\n    if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoadAll(this.props.user.client._id, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          data: this.getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoadAllByHome(this.props.user, this.props.appUser.homeIndex, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          data: this.getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }\r\n    */\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  /*\r\n  getTickets = () => {\r\n    if(this.props.appUser.role === ROLE.USER) {\r\n      return isNN(this.props.user.homes[this.props.appUser.homeIndex].tickets) ? this.props.user.homes[this.props.appUser.homeIndex].tickets : [];\r\n    }else if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      return (this.props.tickets.isUpToDate && !this.props.tickets.isError && isNN(this.props.tickets.data)) ? this.props.tickets.data : [];\r\n    }else{\r\n      return [];\r\n    }\r\n  };\r\n  */\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ticket = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          status: this.state.status\r\n        } as ITicket;\r\n        this.props.onSave(ticket, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              title: '',\r\n              description: '',\r\n              status: 'INIT',\r\n              viewId: '',\r\n              comments: [],\r\n              comment: ''\r\n            });\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onResolve = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to resolve ticket',\r\n      message: 'Are you sure you wish to resolve this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onResolve(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket resolved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to resolve ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onStart = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to start ticket',\r\n      message: 'Are you sure you wish to start this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onStart(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket started successfully.');\r\n              }else{\r\n                Toast.fail('Failed to start ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        comments: [],\r\n        comment: ''\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        comments: comments,\r\n        comment: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  onAddComment = (id: string) => {\r\n    if(isNN(this.state.comment)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onAddComment(id, {\r\n        _id: '',\r\n        // ticketId: id, \r\n        comment: this.state.comment,\r\n        createdBy: this.props.user.name,\r\n        createdAt: new Date()\r\n      } as ITicketComment, this.props.appUser, this.props.user, this.props.tickets, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          this.setState({\r\n            comment: ''\r\n          });\r\n          Toast.success('Comment added successfully.');\r\n        }else{\r\n          Toast.fail('Failed to add comment.');\r\n        }\r\n      });\r\n  }else{\r\n    Toast.warn('Please fill comment before Add.');\r\n  }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Tickets', link: 'tickets'}]} />\r\n        {\r\n          this.props.appUser.role === ROLE.USER &&\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('new-ticket')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n        }\r\n        {(isNNObject(this.props.tickets) && this.props.tickets.isUpToDate && !this.props.tickets.isError && isNN(this.props.tickets.data)) ?\r\n        this.props.tickets.data.map((d: ITicket, i: number) => {\r\n            return(\r\n              <View key={'tkt' + i} style={styles.row}>\r\n               <View style={styles.ele}>\r\n                  <Text>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  {(this.state.isEdit && this.state.id === d._id) ?\r\n                    <TextInput type='text' placeholder='Title' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n                    :\r\n                    <Text>{d.title}</Text>\r\n                  }\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  {(this.state.isEdit && this.state.id === d._id) ?\r\n                    <TextArea placeholder='Description' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n                    :\r\n                    <Text>{d.description}</Text>\r\n                  }\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.status}</Text>\r\n                </View>\r\n                {(this.state.isEdit && this.state.id === d._id) ?\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      title: '',\r\n                      description: '',\r\n                      status: 'INIT',\r\n                      viewId: '',\r\n                      comments: [],\r\n                      comment: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n                :\r\n                <View style={styles.ele}>\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      title: d.title,\r\n                      description: d.description,\r\n                      status: 'INIT',\r\n                      viewId: '',\r\n                      comments: [],\r\n                      comment: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                }\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                }\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.onResolve(d._id);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>RESOLVE</Text>\r\n                  </TouchableHighlight>\r\n                }\r\n                {((this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) && d.status === 'INIT') &&\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.onStart(d._id);\r\n                }}>\r\n                  <Text className='pointer' style={{color: COLOR.SECONDARY}}>START</Text>\r\n                </TouchableHighlight>\r\n                }\r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onView(d._id, d.comments);\r\n                }}>\r\n                  <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n                </TouchableHighlight>\r\n                </View>\r\n                }\r\n                {this.state.viewId === d._id &&\r\n                <View style={myStyles.cmntsCnr}>\r\n                  <View style={myStyles.cmntsHdr}>\r\n                    <Text style={myStyles.cmntsHdrTxt}>Comments</Text>\r\n                  </View>\r\n                  <View style={myStyles.cmntsCnt}>\r\n                    {isNN(this.state.comments) ?\r\n                      this.state.comments.map((e, j) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? myStyles.cmntCnrFst : myStyles.cmntCnr}>\r\n                          <View style={myStyles.cmntHdr}>\r\n                            <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{e.comment}</Text>\r\n                          </View>\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No Comments found!!!</Text>\r\n                    }\r\n                    <View style={myStyles.addCmntCnt}>\r\n                      <TextArea placeholder='Comment Text' className='form-control' style={{...CommonStyles.textInput, ...myStyles.newCmnt}} value={this.state.comment} onChange={(event: any) => this.setState({comment: event.target.value})} />\r\n                      <View style={myStyles.saveBtn}>\r\n                        <Button\r\n                          title='ADD COMMENT'\r\n                          onPress={() => this.onAddComment(d._id)}\r\n                          />\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>{(this.props.tickets.isUpToDate ? (this.props.tickets.isError ? this.props.tickets.errorMessage : \"No Ticket found!!!\") : \"Loading...\")}</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst myStyles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    marginTop: 3,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  },\r\n  addCmntCnt: {\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  newCmnt:{\r\n    width: '100%',\r\n    borderWidth: 1,\r\n    borderColor: COLOR.HR_COLOR\r\n  },\r\n  saveBtn:{\r\n    marginTop: 5\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { ITicketComment } from '../models/home/ticket-comment';\r\nimport { loadAll, save, remove, resolve, start, addComment } from '../store/actions/ticket';\r\nimport Page from '../components/home/tickets';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, homeId, callback)),\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, scallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, tickets, scallback)),\r\n    onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(resolve(id, user, homeIndex, tickets, scallback)),\r\n    onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(start(id, user, homeIndex, tickets, scallback)),\r\n    onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) =>  dispatch(addComment(ticketId, comment, appUser, user, tickets, callback))\r\n});\r\n\r\nexport const Tickets = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, Text, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string,\r\n  status: string\r\n};\r\n\r\nexport default class NewTicket extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      status: 'INIT'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ticket = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          status: this.state.status\r\n        } as ITicket;\r\n        this.props.onSave(ticket, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              title: '',\r\n              description: '',\r\n              status: 'INIT'\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Tickets', link: 'tickets'}, {title: 'New Ticket', link: 'new-ticket' }]} />  \r\n        {this.props.appUser.role === ROLE.USER ?\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, this.onSave);\r\n              }} />\r\n            </View>\r\n            {/* <View style={modelStyles.row}>\r\n              <Text>{this.state.status}</Text>\r\n            </View> */}\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <Text>Only User can Add New Ticket. If you have USER role and you want to add new ticket change your role to User from settings->My Role and try again.</Text>\r\n            </View>\r\n          </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { save } from '../store/actions/ticket';\r\nimport Page from '../components/home/new-ticket';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, scallback))\r\n});\r\n\r\nexport const NewTicket = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  key: string,\r\n  className: string,\r\n  onPress: () => void\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Checkbox extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    isActive: false,\r\n    text: '',\r\n    key: '',\r\n    className: '',\r\n    onPress: () => {}\r\n  }\r\n  render() {\r\n    return (\r\n      <span className={this.props.className} style={styles.container}>\r\n        <input type='checkbox' key={this.props.key} checked={this.props.isActive} onClick={this.props.onPress} />\r\n        <label style={styles.text}>{this.props.text}</label>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    // flexDirection: 'row',\r\n    marginRight: 10\r\n  },\r\n  circle: {\r\n    height: 24,\r\n    width: 24,\r\n    // borderRadius: 12,\r\n    borderWidth: 2,\r\n    borderColor: COLOR.PRIMARY,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  dot: {\r\n    height: 12,\r\n    width: 12,\r\n    // borderRadius: 6,\r\n    backgroundColor: COLOR.PRIMARY\r\n  },\r\n  text: {\r\n    marginLeft: 5\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Image, Text } from '../../common/elements';\r\nimport Checkbox from '../../common/checkbox';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport { isNN } from '../../../util/index';\r\nimport { FILE_BASE_PATH, ROLE } from '../../../constants';\r\nimport Button from '../../common/button';\r\nimport { toDateTimeString } from '../../../util/convert';\r\nimport { COLOR } from '../../../constants';\r\n\r\ninterface IProps {\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onActiveChange: () => void,\r\n  onEnter: (id: string) => void,\r\n  onExit: (id: string) => void,\r\n  onApprove: (id: string) => void,\r\n  onReject: (id: string) => void\r\n};\r\n\r\ninterface IState{\r\n  isZoomImage: boolean,\r\n  zoomImage: string\r\n};\r\n\r\nexport default class VisitorsView extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isZoomImage: false,\r\n      zoomImage: '',\r\n    }\r\n    this.onToggleZoomImage = this.onToggleZoomImage.bind(this);\r\n  };\r\n  static defaultProps = {\r\n    onEnter: () => {},\r\n    onExit: () => {},\r\n    onApprove: () => {},\r\n    onReject: () => {}\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onToggleZoomImage = (isZoom: boolean) => {\r\n    this.setState({\r\n      isZoomImage: isZoom\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(<>\r\n      <View style={pageStyles.row}>\r\n        <Text>{'No of ' + (this.props.isActive ? 'Active' : '') + ' Visitors: ' + this.props.data.length}</Text>\r\n        {this.props.appUser.role !== ROLE.GATEKEEPER &&\r\n        <Checkbox isActive={this.props.isActive} text='Only Active Visitors' onPress={this.props.onActiveChange} className='fr' />\r\n        }\r\n      </View>\r\n      <View className='fl' style={styles.cardContainer}>\r\n        {isNN(this.props.data) ?\r\n        this.props.data.map((d: IVisitor, i: number) => {\r\n          return(\r\n            <View key={i} className='fl' style={styles.card}>\r\n              {isNN(d.image) &&\r\n              <View className='center'>\r\n                <Image src={FILE_BASE_PATH + d.image} className='pointer' style={styles.img} onClick={() => this.setState({isZoomImage: true, zoomImage: d.image})} />\r\n              </View>  \r\n              }\r\n              <View style={styles.content}>\r\n                <View style={pageStyles.ele}>\r\n                  <Text className='bold'>{d.name + ' [' + d.type + ']'}</Text>\r\n                </View>\r\n                {(d.age > 0 || isNN(d.gender)) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : 'Female') : '')}</Text>\r\n                </View>\r\n                }\r\n                <View style={pageStyles.ele}>\r\n                  To <Text className='bold'>{d.homeNumber}</Text> on <Text className='bold'>{toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                {(!d.isEntered && !d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <Text>{((d.gateNo) ? 'In gate ' + d.gateNo + ' by ': 'By ') + d.createdBy}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.mobileNo) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                {(!d.isApproved && !d.isRejected && !d.isEntered) && \r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.PRIMARY}}>WAITING FOR APPROVAL</View>\r\n                </View>\r\n                }\r\n                {(d.isApproved || d.isRejected ) && \r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: (d.isApproved ? COLOR.SUCCESS : COLOR.ERROR)}}>{d.isApproved ? 'APPROVED' : 'REJECTED'}</View>\r\n                  <View>{'By ' + d.approvedBy}</View>\r\n                  <View>{'On ' + toDateTimeString(d.approvedAt)}</View>\r\n                </View>\r\n                }\r\n                {d.isEntered &&\r\n                <View style={pageStyles.ele}>\r\n                  <View>{'Entry By ' + d.enteredBy + ' in gate ' + d.gateNo}</View>\r\n                  <View>{'On ' + toDateTimeString(d.enteredAt)}</View>\r\n                </View>\r\n                }\r\n                {(d.isApproved && !d.isEntered) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.ERROR}}>NOT ENTERED</View>\r\n                </View>\r\n                }\r\n                {(!d.isRejected && d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View>{'Exit By ' + d.exitBy + ' in gate ' +  d.exitGateNo}</View>\r\n                  <View>{'On ' + toDateTimeString(d.exitAt)}</View>\r\n                </View>\r\n                }\r\n                {(d.isEntered && !d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.ERROR}}>STAYING IN</View>\r\n                </View>\r\n                }\r\n                {this.props.appUser.role === ROLE.GATEKEEPER &&\r\n                <View style={pageStyles.ele} className='center'>\r\n                  {(!d.isEntered && !d.isRejected) && <Button title='Enter' onPress={() => { this.props.onEnter(d._id) }} />}\r\n                  {((d.isEntered || d.isRejected) && !d.isExit) && <Button title={d.isRejected ? 'Remove' : 'Exit'} onPress={() => { this.props.onExit(d._id) }} />}\r\n                </View>\r\n                }\r\n                {(this.props.appUser.role === ROLE.USER && !d.isApproved && !d.isRejected && !d.isEntered) &&\r\n                <View style={pageStyles.ele} className='center'>\r\n                  <Button title='Approve' style={{marginRight: '10px'}} onPress={() => { this.props.onApprove(d._id) }} />\r\n                  <Button title='Reject' onPress={() => { this.props.onReject(d._id) }} />\r\n                </View>\r\n                }\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Visitor found!!!</Text>\r\n      }\r\n      </View>\r\n      <Modal\r\n          open={this.state.isZoomImage}\r\n          onClose={() => this.onToggleZoomImage(false)}>\r\n          <View className='center'>\r\n            <Image src={FILE_BASE_PATH + this.state.zoomImage} style={{ height: '50%', width: '50%' }} />\r\n          </View>\r\n        </Modal>\r\n    </>\r\n    );\r\n  }\r\n};\r\n\r\nexport const styles = {\r\n  cardContainer: {\r\n    flex: 1, \r\n    width: '100%',\r\n    padding: 10,\r\n    marginBottom: 10\r\n  },\r\n  card: {\r\n    flex: 1, \r\n    margin: 15\r\n  },\r\n  img:{\r\n    // width: 25,\r\n    height: '25vh',\r\n    margin: 0,\r\n    borderRadius: '50%',\r\n    marginBottom: '-25px'\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 10,\r\n    paddingTop: '25px',\r\n    borderColor: COLOR.HR_COLOR,\r\n    borderWidth: 1,\r\n    'border-style': 'solid',\r\n    borderRadius: 10,\r\n  }\r\n};","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../styles/page\";\r\nimport Toast from  '../../util/toast';\r\nimport VisitorsView from './gatekeeper/visitors-view'\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  void,\r\n  onApprove: (id: string, callback: (result: boolean) => void) => void,\r\n  onReject: (id: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true,\r\n      isLoading: false\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n    this.onApprove = this.onApprove.bind(this);\r\n    this.onReject = this.onReject.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, this.props.user.homes[this.props.appUser.homeIndex]._id, this.state.isActive, (result: Array<IVisitor>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n  \r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n  \r\n  onApprove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Approve Visitor Entry',\r\n      message: 'Are you sure you wish to Approve the visitor to Enter?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onApprove(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isApproved = true;\r\n                this.state.data[foundIndex].approvedBy = this.props.user.name;\r\n                this.state.data[foundIndex].approvedAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor approved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to approve the entry of visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onReject = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Reject Visitor Entry',\r\n      message: 'Are you sure you wish to reject visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReject(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isRejected = true;\r\n                this.state.data[foundIndex].approvedBy = this.props.user.name;\r\n                this.state.data[foundIndex].approvedAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor rejected successfully.');\r\n              }else{\r\n                Toast.fail('Failed to reject visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={pageStyles.content}>\r\n        <Breadcrum data={[{title: 'Visitors', link: 'visitors'}]} />\r\n        <VisitorsView data={this.state.data} isActive={this.state.isActive} user={this.props.user} appUser={this.props.appUser} onActiveChange={this.onActiveChange} onApprove={this.onApprove} onReject={this.onReject} />\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { loadAll, approve, reject } from '../store/actions/visitor';\r\n\r\nimport { IVisitor } from '../models/home';\r\nimport Page from '../components/home/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, isActive, sCallback, fCallback)),\r\n    onApprove: (id: string, callback: (result: boolean) => void) => dispatch(approve(id, callback)),\r\n    onReject: (id: string, callback: (result: boolean) => void) => dispatch(reject(id, callback))\r\n});\r\n\r\nexport const Visitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, password: string, newPassword: string, scallback: (result: boolean, message: string) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  password: string,\r\n  newPassword: string,\r\n  confirmNewPassword: string\r\n};\r\n\r\nexport default class ChangePassword extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      password: '',\r\n      newPassword: '',\r\n      confirmNewPassword: ''\r\n    }\r\n    this.passwordPolicyCheck = this.passwordPolicyCheck.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  passwordPolicyCheck = (p: string) => {\r\n    let anUpperCase = /[A-Z]/;\r\n    let aLowerCase = /[a-z]/; \r\n    let aNumber = /[0-9]/;\r\n    let aSpecial = /[!|@|#|$|%|^|&|*|(|)|-|_]/;\r\n    let result = \"\";\r\n\r\n    if(p.length < 6){\r\n      result=\"New Password not long enough!\"\r\n        return result;\r\n    }\r\n\r\n    var numUpper = 0;\r\n    var numLower = 0;\r\n    var numNums = 0;\r\n    var numSpecials = 0;\r\n    for(var i=0; i<p.length; i++){\r\n        if(anUpperCase.test(p[i]))\r\n            numUpper++;\r\n        else if(aLowerCase.test(p[i]))\r\n            numLower++;\r\n        else if(aNumber.test(p[i]))\r\n            numNums++;\r\n        else if(aSpecial.test(p[i]))\r\n            numSpecials++;\r\n    }\r\n\r\n    if(numUpper < 1 || numLower < 1 || numNums < 1 || numSpecials < 1){\r\n      result=\"New Password dose not match with password policy!\";\r\n        return result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onUpdate = () => {\r\n    if(isNN(this.state.password) && isNN(this.state.newPassword) && isNN(this.state.confirmNewPassword)){\r\n      if(this.state.newPassword === this.state.confirmNewPassword){\r\n        let policyResult = this.passwordPolicyCheck(this.state.newPassword);\r\n        if(policyResult.length < 1){\r\n          this.setState({\r\n            isLoading: true\r\n          });\r\n          this.props.onUpdate(this.props.user._id, this.state.password, this.state.newPassword, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              Toast.success('Password updated successfully. Please login with your new password.');\r\n              this.props.onLogout((result: boolean) => {\r\n              });\r\n            }else{\r\n              Toast.fail(message);\r\n            }\r\n          });\r\n        }else{\r\n          Toast.warn(policyResult);\r\n        }\r\n      }else{\r\n        Toast.warn('New Password and Confirm New Password not matchs.');\r\n      }\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n          <Breadcrum data={[{title: 'Change Password', link: 'change-password'}]} />\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.password} onChange={(event: any) => this.setState({password: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='New Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.newPassword} onChange={(event: any) => this.setState({newPassword: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='Confirm New Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.confirmNewPassword} onChange={(event: any) => this.setState({confirmNewPassword: event.target.value})}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, this.onUpdate);\r\n              }} />\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={this.onUpdate}\r\n              />\r\n            </View>\r\n            <View style={{ marginTop: 7 }}>\r\n              <Text>Note: Password should contain adleast one uppercase, one lowercase, one number and one special character.</Text>\r\n            </View>\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\nimport { IAppState } from '../models/app-state';\nimport { changePassword, logout } from '../store/actions/account';\n\nimport Page from '../components/home/change-password';\n\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\n    user: state.User\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onUpdate: (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => dispatch(changePassword(userId, password, newPassword, callback)),\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\n});\n\nexport const ChangePassword = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  name: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class MyProfile extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      name: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.user.name,\r\n      mobileNo: this.props.user.mobileNo,\r\n      emailId: this.props.user.emailId\r\n    });\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onUpdate = () => {\r\n    if(isNN(this.state.name) && isNN(this.state.mobileNo) && isNN(this.state.emailId)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.props.user._id, this.state.name, this.state.mobileNo, (this.state.emailId ? this.state.emailId.toLowerCase() : ''), this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          Toast.success('Profile updated successfully.');\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n          <Breadcrum data={[{title: 'My Profile', link: 'my-profile'}]} />\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, this.onUpdate);\r\n              }} />\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={this.onUpdate}\r\n              />\r\n            </View>\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { updateProfile } from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-profile';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updateProfile(userId, name, mobileNo, emailId, user, callback))\r\n});\r\n\r\nexport const MyProfile = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Picker } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onUpdate: (role: string, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  role: string\r\n};\r\n\r\nexport default class MyRole extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      role: ''\r\n    }\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      role: this.props.appUser.role,\r\n    });\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onUpdate = () => {\r\n    if(isNN(this.state.role)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.state.role, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          Toast.success('Role updated successfully.');\r\n          this.props.history.push('my-role')\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select role before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n          <Breadcrum data={[{title: 'My Role', link: 'my-role'}]} />\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <Picker\r\n                className='form-control'\r\n                value={this.state.role}\r\n                style={modelStyles.ele}\r\n                onChange={(event: any) => this.setState({role: event.target.value})}>\r\n                  {\r\n                  this.props.user.role.split(',').map((d: string, i: number) => {\r\n                    return(<option key={'role' + i} value={d}>{d}</option>);\r\n                  })\r\n                  }\r\n              </Picker>\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={this.onUpdate}\r\n              />\r\n            </View>\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { updateRole} from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-role';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (role: string, callback: (result: boolean, message: string) => void) => dispatch(updateRole(role, callback))\r\n});\r\n\r\nexport const MyRole = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IUser } from '../../models/user';\r\nimport { IAd } from '../../models/ad';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'ad';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getAdResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getAdResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let foundIndex = ads.findIndex(d => d._id === result.data);\r\n        ads[foundIndex]._id = result.data;\r\n        ads[foundIndex].title = data.title;\r\n        ads[foundIndex].description = data.description;\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          ads.unshift({\r\n            _id: result.data,\r\n            title: data.title,\r\n            description: data.description,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IAd);\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      ads = ads.filter((d, i) => d._id !== id);\r\n      dispatch(getAdResult(ads, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onLoad: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string\r\n};\r\n\r\nexport default class Ads extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      title: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ad = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description\r\n        } as IAd;\r\n        this.props.onSave(this.props.user.client._id, ad, this.props.user, this.props.ads.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              title: '',\r\n              description: ''\r\n            });\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.ads.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ad removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ad.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Ads', link: 'ads'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-ad')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n      {(this.props.ads.isUpToDate && !this.props.ads.isError && isNN(this.props.ads.data)) ?\r\n        this.props.ads.data.map((d: IAd, i: number) => {\r\n          return(\r\n            (this.state.isEdit === true && this.state.id === d._id) ?\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                  <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: false,\r\n                    id: '',\r\n                    title: '',\r\n                    description: ''\r\n                  });\r\n                }}>\r\n                  <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n            :\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.title}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d._id,\r\n                    title: d.title,\r\n                    description: d.description\r\n                  });\r\n                }}>\r\n                  <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{(this.props.ads.isUpToDate ? (this.props.ads.isError ? this.props.ads.errorMessage : \"No Ad found!!!\") : \"Loading...\")}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { loadAll, save, remove } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/ads';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, callback)),\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback)),\r\n    onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(remove(id, ads, callback))\r\n});\r\n\r\nexport const Ads = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string\r\n};\r\n\r\nexport default class NewAd extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      title: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ad = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description\r\n        } as IAd;\r\n        this.props.onSave(this.props.user.client._id, ad, this.props.user, this.props.ads.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              title: '',\r\n              description: ''\r\n            });\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Ads', link: 'ads'}, {title: 'New Ad', link: 'new-ad'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { save } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/new-ad';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback))\r\n});\r\n\r\nexport const NewAd = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IUserHome } from '../../../models/user-home';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IMember>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Users extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.getHomes = this.getHomes.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getHomes = (userId: string) => {\r\n    let homes = '';\r\n    if((this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)) && (this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data))){\r\n      let homeIds = [] as Array<string>;\r\n      this.props.userHomes.data.filter(uh => uh.userId === userId).map((uh: IUserHome, i: number) => homeIds.push(uh.homeId));\r\n      this.props.homes.data.filter(d => homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n    }\r\n    return homes;\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      let homes = this.props.homes.data.filter(h => h.number.toLocaleLowerCase() === searchText);\r\n      this.setState({\r\n        searchResult: this.props.users.data.filter(d => (d.name + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.mobileNo + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.emailId + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.number + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (isNN(homes.filter(h => h.memberIds.indexOf(d._id) >= 0)))),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.appUser.homeIndex, this.props.user, this.props.users, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('User removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove user.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Users', link: 'users'}]} />\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-user/0/false')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('approve-users')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right', marginRight: 15}}>View Users Waiting for Approval</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search User\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSearch);\r\n            }} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IMember, i: number) => {\r\n            return(\r\n              <View key={'usr' + i} style={styles.row}>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'User Id: ' + (isNN(d.number) ? d.number : '')}</Text>                  \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Mobile No: ' + (isNN(d.mobileNo) ? d.mobileNo : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Email: ' + (isNN(d.emailId) ? d.emailId : '')}</Text>         \r\n                </View> */}\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Owner Name: ' + (isNN(d.ownername) ? d.ownername : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Owner Mobile No: ' + (d.ownermobile > 0 ? d.ownermobile : '')}</Text>         \r\n                </View> */}\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Role: ' + (isNN(d.type) ? d.type.replace(/,/g, ', ') : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Home(s): ' + this.getHomes(d._id)}</Text>         \r\n                </View> */}\r\n                {(d._id !== this.props.user._id) &&\r\n                  <View style={styles.ele}>\r\n                    <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                      this.props.history.push('edit-user/' + d._id + '/false');////TODO\r\n                      // this.props.navigation.navigate('EditUser', {id: d._id});\r\n                      // this.setState({\r\n                      //   isEdit: true,\r\n                      //   id: d.id\r\n                      // });\r\n                    }}>\r\n                      <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                    </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                  </View>\r\n                }\r\n              </View>\r\n              \r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No user match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IUsers } from '../models/store/users';\r\nimport { removeByAM } from '../store/actions/member';\r\n\r\nimport Page from '../components/home/manager/users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => dispatch(removeByAM(id, homeIndex, user, users, callback))\r\n});\r\n\r\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'home';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IHome>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      result.data.forEach((h: any) => {\r\n        h.memberIds = h.members;\r\n        delete h.members;\r\n      });\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Homes.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNN(result.data._id)) {\r\n      result.data.memberIds = result.data.members;\r\n      delete result.data.members;\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Home.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n          var foundIndex = homes.data.findIndex(d => d._id === result.data);\r\n          homes.data[foundIndex]._id = result.data;\r\n          homes.data[foundIndex].number = data.number;\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n            homes.data.push({\r\n              _id: result.data,\r\n              // name: name,\r\n              number: data.number\r\n            } as IHome);\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const checkNumberAvail = (id: string, number: string, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().get(controller + '/checkno/' + number, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes = user.homes.filter((d, i) => d._id !== id);\r\n      homes.data = homes.data.filter((d, i) => d._id !== id);\r\n      ////userHomes.data = userHomes.data.filter((d, i) => d.homeId !== id);\r\n      dispatch(getUserResult(user));\r\n      dispatch(getHomesResult(homes.data, true, false, \"\"));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IUserHome } from '../../../models/user-home';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IHome>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Users extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.getUsers = this.getUsers.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getUsers = (homeId: string) => {\r\n    let users = '';\r\n    if((this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)) && (this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data))){\r\n      let userIds = [] as Array<string>;\r\n      this.props.userHomes.data.filter(uh => uh.homeId === homeId).map((uh: IUserHome, i: number) => userIds.push(uh.userId));\r\n      this.props.users.data.filter(d => userIds.indexOf(d._id) >= 0).map((u: IMember, i: number) => users += (users.length > 0 ? ', ' : '') + u.name);\r\n    }\r\n    return users;\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      this.setState({\r\n        searchResult: this.props.homes.data.filter(d => (d.number + '').toLocaleLowerCase().indexOf(searchText) >= 0),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homes, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('Home removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove home.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Homes', link: 'homes'}]} />\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-home/0')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search Home\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSearch);\r\n            }} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IHome, i: number) => {\r\n            return(\r\n              <View key={'home' + i} style={styles.row}>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <Text>{'Number: ' + d.number}</Text>         \r\n                </View>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Address: ' + (isNN(d.address) ? d.address : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'User(s): ' + this.getUsers(d._id)}</Text>         \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('view-home/' + d._id);\r\n                    // this.props.navigation.navigate('ViewHome', {id: d._id});\r\n                  }}>\r\n                    <Image src={Images.view} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('edit-home/' + d._id);\r\n                    // this.props.navigation.navigate('EditHome', {id: d._id});\r\n                    // this.setState({\r\n                    //   isEdit: true,\r\n                    //   id: d.id\r\n                    // });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No home match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { remove } from '../store/actions/home';\r\n\r\nimport Page from '../components/home/manager/homes';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => dispatch(remove(id, user, homes, callback))\r\n});\r\n\r\nexport const Homes = connect(mapStateToProps, mapDispatchToProps)(Page);","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  mListCnr: {\r\n    borderColor: COLOR.SECONDARY, \r\n    borderWidth: 1,\r\n    height: '50%'\r\n  },\r\n  mListActiveRow: {\r\n    padding: 3,\r\n    backgroundColor: COLOR.SECONDARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid',\r\n    width: '100%',\r\n    marginBottom: '1px'\r\n  },\r\n  mListRow: {\r\n    padding: 3,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid',\r\n    width: '100%',\r\n    marginBottom: '1px'\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { ScrollView, TouchableHighlight, View, TextInput, Text, Image } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport { styles as commonStyles} from '../../../styles/common';\r\nimport { styles as mlistStyles} from '../../../styles/mlist';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR, ROLE } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Images from '../../images';\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  homeIds: Array<string>,\r\n  role: {\r\n    isAdmin: boolean,\r\n    isManager: boolean,\r\n    isGatekeeper: boolean,\r\n    isUser: boolean\r\n  },\r\n  isShowHomes: boolean\r\n};\r\n\r\nexport default class EditUser extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      homeIds: [],\r\n      role: {\r\n        isAdmin: false,\r\n        isManager: false,\r\n        isGatekeeper: false,\r\n        isUser: false\r\n      },\r\n      isShowHomes: false\r\n    }\r\n    this.getHomes = this.getHomes.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onToggleHomeModel = this.onToggleHomeModel.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let userId = this.props.match.params.id;\r\n    if(userId.length > 0 && userId !== '0'){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(userId, (result: IMember, homeIds: Array<string>) => {\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            isLoading: false,\r\n            id: result._id,\r\n            number: result.number,\r\n            name: result.name,\r\n            age: result.age,\r\n            gender: result.gender,\r\n            mobileNo: result.mobileNo,\r\n            emailId: result.emailId,\r\n            type: result.type,\r\n            homeIds: homeIds,\r\n            role: {\r\n              isAdmin: (',' + result.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n              isManager: (',' + result.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n              isGatekeeper: (',' + result.role + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n              isUser: (',' + result.role + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n            }\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load User.');\r\n        }\r\n      }, (message: string) => {\r\n        Toast.fail(isNN(message) ? message : 'Failed to load User.');\r\n      });\r\n    }\r\n\r\n    /*\r\n    if(userId > 0 && (this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data))){\r\n      let users = this.props.users.data.filter((u: IUser, i: number) => u._id === userId);\r\n      if(isNNObject(users) && users.length > 0){\r\n        let homeIds = [] as Array<string>;\r\n        if(this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data)){\r\n          this.props.userHomes.data.filter((uh: IUserHome, i: number) => uh.userId === userId).map(uh => {\r\n            homeIds.push(uh.homeId);\r\n          });\r\n        }\r\n        this.setState({\r\n          id: users[0]._id,\r\n          name: users[0].name,\r\n          mobileNo: users[0].mobileNo,\r\n          emailId: users[0].emailId,\r\n          ////ownername: users[0].ownername,\r\n          ////ownermobile: users[0].ownermobile,\r\n          homeIds: homeIds,\r\n          role: {\r\n            isAdmin: (',' + users[0].type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n            isManager: (',' + users[0].type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n            isGatekeeper: (',' + users[0].type + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n            isUser: (',' + users[0].type + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n          }\r\n        });\r\n      }\r\n    }\r\n    */\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getHomes = () => {\r\n    let homes = '';\r\n    if(isNN(this.state.homeIds) && (this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data))){\r\n      this.props.homes.data.filter(d => this.state.homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n    }\r\n    return homes;\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n      let role = '';\r\n      if(this.state.role.isAdmin){\r\n        role = ROLE.ADMIN\r\n      }\r\n      if(this.state.role.isManager){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.MANAGER\r\n      }\r\n      if(this.state.role.isGatekeeper){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.GATEKEEPER\r\n      }\r\n      if(this.state.role.isUser){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.USER\r\n      }\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: role\r\n        } as IMember;\r\n        this.props.onSave(member, this.state.homeIds, this.props.user, this.props.users, this.props.match.params.isApprove === 'true', (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              homeIds: [],\r\n              role: {\r\n                isAdmin: false,\r\n                isManager: false,\r\n                isGatekeeper: false,\r\n                isUser: false\r\n              }\r\n            });\r\n            Toast.success('User saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save user.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onToggleHomeModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowHomes: isShow\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Users', link: 'users'}, {title: 'Edit User', link: 'edit-user/0'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>Role: </Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Checkbox isActive={this.state.role.isAdmin} text={ROLE.ADMIN} onPress={() => {\r\n              this.state.role.isAdmin = !this.state.role.isAdmin;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isManager} text={ROLE.MANAGER} onPress={() => {\r\n              this.state.role.isManager = !this.state.role.isManager;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isGatekeeper} text={ROLE.GATEKEEPER} onPress={() => {\r\n              this.state.role.isGatekeeper = !this.state.role.isGatekeeper;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isUser} text={ROLE.USER} onPress={() => {\r\n              this.state.role.isUser = !this.state.role.isUser;\r\n              this.setState({});\r\n            }} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Home(s): ' + this.getHomes()}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isShowHomes: true\r\n              });\r\n             }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          {(this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)) &&\r\n          <Modal\r\n          open={this.state.isShowHomes}\r\n          onClose={() => this.onToggleHomeModel(false)}>\r\n            <View style={popupStyles.container}>\r\n              <ScrollView style={{...mlistStyles.mListCnr, maxHeight: '50%'}}>\r\n                {\r\n                  this.props.homes.data.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text key={'home' + i} style={(this.state.homeIds.indexOf(d._id) >= 0 ? mlistStyles.mListActiveRow : mlistStyles.mListRow)} onClick={() => {\r\n                        if(this.state.homeIds.indexOf(d._id) >= 0){\r\n                          this.setState({\r\n                            homeIds: this.state.homeIds.filter(e => e !== d._id)\r\n                          });\r\n                        }else{\r\n                          this.state.homeIds.push(d._id);\r\n                          this.setState({});\r\n                        }\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n                </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title={this.props.match.params.isApprove === 'true' ? 'Approve' : 'SAVE'}\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IMember } from '../models/home';\r\nimport { IUsers } from '../models/store/users';\r\nimport { load, saveByAM } from '../store/actions/member';\r\nimport Page from '../components/home/manager/edit-user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => dispatch(saveByAM(data, homeIds, user, users, isApprove, callback))\r\n});\r\n\r\nexport const EditUser = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport Spinner from '../../common/spinner';\r\nimport { IMember } from '../../../models/home/member';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport Toast from  '../../../util/toast';\r\nimport { isNN } from '../../../util';\r\nimport { toDateTimeString } from '../../../util/convert';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  onLoad: (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onReject: (id: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IMember>,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class ApproveUsers extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoading: false\r\n    }\r\n    this.onApprove = this.onApprove.bind(this);\r\n    this.onReject = this.onReject.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad((result: Array<IMember>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  onApprove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Approve',\r\n      message: 'You want to Approve the user?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.props.history.push('edit-user/' + id + '/true');\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onReject = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Reject',\r\n      message: 'You want to Reject the user?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReject(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                this.setState({\r\n                  data: this.state.data.filter(v => v._id !== id)\r\n                });\r\n                Toast.success('User rejected successfully.');\r\n              }else{\r\n                Toast.fail('Failed to reject the user.');\r\n              }\r\n            }); \r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Users', link: 'users'}, {title: 'Users Waiting for Approval', link: 'approve-users'}]} />\r\n        {isNN(this.state.data) ?\r\n        this.state.data.map((d: IMember, i: number) => {\r\n          return(\r\n            <View key={i} style={pageStyles.row}>\r\n              <View style={pageStyles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.name}</Text>\r\n              </View>\r\n              {(d.age > 0 || isNN(d.gender)) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : 'Female') : '')}</Text>\r\n              </View>\r\n              }\r\n              <View style={pageStyles.ele}>\r\n                On <Text style={{fontWeight: 'bold'}}>{toDateTimeString(d.createdAt)}</Text>\r\n              </View>\r\n              {isNN(d.mobileNo) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.emailId) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n              }\r\n              <View style={pageStyles.ele}>\r\n                <Button title='Approve' style={{marginRight: '10px'}} onPress={() => { this.onApprove(d._id); }} />\r\n                <Button title='Reject' onPress={() => { this.onReject(d._id); }} />\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No users found!!!</Text>\r\n      }\r\n      <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { loadWFAUsers, reject } from '../store/actions/member';\r\nimport { IMember } from '../models/home';\r\n\r\nimport Page from '../components/home/manager/approve-users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadWFAUsers(sCallback, fCallback)),\r\n    onReject: (id: string, callback: (result: boolean) => void) => dispatch(reject(id, callback))\r\n});\r\n\r\nexport const ApproveUsers = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { TouchableHighlight, ScrollView, View, TextInput, Text, Image, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from '../../../styles/page';\r\nimport { styles as modelStyles } from '../../../styles/model';\r\nimport {styles as commonStyles} from '../../../styles/common';\r\nimport { styles as mlistStyles} from '../../../styles/mlist';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Images from '../../images';\r\nimport { styles as iconStyles } from '../../../styles/icon';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => void,\r\n  onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n\tblockId: string,\r\n\tnumber: string,\r\n\taddress: string,\r\n  bedRoom: number,\r\n  parking: string,\r\n  description: string,\r\n  members: Array<string>,\r\n  isShowUsers: boolean\r\n};\r\n\r\nexport default class EditHome extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      blockId: '',\r\n      number: '',\r\n      address: '',\r\n      bedRoom: 1,\r\n      parking: '',\r\n      description: '',\r\n      members: [],\r\n      isShowUsers: false\r\n    }\r\n    this.getUsers = this.getUsers.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onToggleUserModel = this.onToggleUserModel.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let homeId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    if(homeId.length > 0 && homeId !== '0'){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(homeId, (result: IHome) => {\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            isLoading: false,\r\n            id: result._id,\r\n            blockId: result._blockId,\r\n            number: result.number,\r\n            address: result.address,\r\n            bedRoom: result.bedRoom,\r\n            parking: result.parking,\r\n            description: result.description,\r\n            members: result.memberIds\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load Home.');\r\n        }\r\n      }, (message: string) => {\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Home.');\r\n      });\r\n    }\r\n    \r\n    /*\r\n    if(homeId > 0 && (this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data))){\r\n      let homes = this.props.homes.data.filter((u: IHome, i: number) => u._id === homeId);\r\n      if(isNNObject(homes) && homes.length > 0){\r\n        let members = [] as Array<string>;\r\n        if(this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data)){\r\n          this.props.userHomes.data.filter((uh: IUserHome, i: number) => uh.homeId === homeId).map(uh => {\r\n            members.push(uh.userId);\r\n          });\r\n        }\r\n        this.setState({\r\n          id: homes[0]._id,\r\n          blockId: homes[0]._blockId,\r\n          number: homes[0].number,\r\n          address: homes[0].address,\r\n          bedRoom: homes[0].bedRoom,\r\n          parking: homes[0].parking,\r\n          description: homes[0].description,\r\n          members: members\r\n        });\r\n      }\r\n    }\r\n    */\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getUsers = () => {\r\n    let users = '';\r\n    if(isNN(this.state.members) && (this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data))){\r\n      this.props.users.data.filter(d => this.state.members.indexOf(d._id) >= 0).map((u: IMember, i: number) => \r\n        users += (users.length > 0 ? ', ' : '') + u.name + (isNN(u.number) ? '(' + u.number + ')' : '')\r\n      );\r\n    }\r\n    return users;\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.blockId) && isNN(this.state.number)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      /*\r\n      this.props.onCheckNumberAvail(this.state.id, this.state.number, (result: boolean) => {\r\n        if(result === true){\r\n          */\r\n         let home = {\r\n           _id: this.state.id,\r\n           _blockId: this.state.blockId,\r\n           number: this.state.number,\r\n           address: this.state.address,\r\n           bedRoom: this.state.bedRoom,\r\n           parking: this.state.parking,\r\n           description: this.state.description,\r\n           memberIds: this.state.members\r\n         } as IHome;\r\n          this.props.onSave(home, this.props.user, this.props.homes, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                id: '',\r\n                blockId: '',\r\n                number: '',\r\n                address: '',\r\n                bedRoom: 1,\r\n                parking: '',\r\n                description: '',\r\n                members: []\r\n              });\r\n              Toast.success('Home saved successfully.');\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to save home.');\r\n            }\r\n          });\r\n          /*\r\n        }else{\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          Toast.warn('Home with same Number already available. Please change the home number.');\r\n        }\r\n      });\r\n      */\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onToggleUserModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowUsers: isShow\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Homes', link: 'homes'}, {title: 'Edit Home', link: 'edit-home/0'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <Picker\r\n            className='form-control'\r\n            value={this.state.blockId}\r\n            style={modelStyles.ele}\r\n            onChange={(event: any) => this.setState({blockId: event.target.value})}>\r\n              <option key={'block0'} value=''>Select Block</option>\r\n              {(this.props.blocks && this.props.blocks.isUpToDate && !this.props.blocks.isError && isNN(this.props.blocks.data)) &&\r\n                this.props.blocks.data.map((d: IBlock, i: number) => {\r\n                  return(<option key={'block' + i} value={d._id}>{d.name}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Address\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.address} onChange={(event: any) => this.setState({address: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>No of bed rooms: </Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.bedRoom === 1} text='1' onPress={() => this.setState({bedRoom: 1})} />\r\n            <RadioButton isActive={this.state.bedRoom === 2} text='2' onPress={() => this.setState({bedRoom: 2})} />\r\n            <RadioButton isActive={this.state.bedRoom === 3} text='3' onPress={() => this.setState({bedRoom: 3})} />\r\n            <RadioButton isActive={this.state.bedRoom === 4} text='4' onPress={() => this.setState({bedRoom: 4})} />\r\n            <RadioButton isActive={this.state.bedRoom === 5} text='5' onPress={() => this.setState({bedRoom: 5})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Parking\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.parking} onChange={(event: any) => this.setState({parking: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Description\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'User(s): ' + this.getUsers()}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isShowUsers: true\r\n              });\r\n             }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          {(this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)) &&\r\n          <Modal\r\n          open={this.state.isShowUsers}\r\n          onClose={() => this.onToggleUserModel(false)}>\r\n            <View style={popupStyles.container}>\r\n              <ScrollView style={{...mlistStyles.mListCnr, maxHeight: '50%'}}>\r\n              {\r\n                this.props.users.data.map((d: IMember, i: number) => {\r\n                  return(\r\n                    <Text key={'user' + i} style={(this.state.members.indexOf(d._id) >= 0 ? mlistStyles.mListActiveRow : mlistStyles.mListRow)} onClick={() => {\r\n                      if(this.state.members.indexOf(d._id) >= 0){\r\n                        this.setState({\r\n                          members: this.state.members.filter(e => e !== d._id)\r\n                        });\r\n                      }else{\r\n                        this.state.members.push(d._id);\r\n                        this.setState({});\r\n                      }\r\n                    }}>{d.name + (d.number ? '(' + d.number + ')' : '')}</Text>\r\n                  )\r\n                })\r\n              }\r\n              </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { IHome } from '../models/home';\r\nimport { IUser } from '../models/user';\r\nimport { load, save, checkNumberAvail } from '../store/actions/home';\r\nimport Page from '../components/home/manager/edit-home';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => dispatch(save(data, user, homes, callback)),\r\n    onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => dispatch(checkNumberAvail(id, number, callback))\r\n});\r\n\r\nexport const EditHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport Toast from  '../../../util/toast';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport VisitorsView from './visitors-view'\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onEnter: (id: string, gateNo: string, callback: (result: boolean) => void) => void,\r\n  onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true,\r\n      isLoading: false\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n    this.onEnter = this.onEnter.bind(this);\r\n    this.onExit = this.onExit.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, '', this.state.isActive, (result: Array<IVisitor>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n\r\n  onEnter = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Allow Visitor Entry',\r\n      message: 'Are you sure you wish to Allow the visitor to Enter?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onEnter(id, this.props.gateNo, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isEntered = true;\r\n                this.state.data[foundIndex].enteredBy = this.props.user.name;\r\n                this.state.data[foundIndex].enteredAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor entered successfully.');\r\n              }else{\r\n                Toast.fail('Failed to allow the entry of visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onExit = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Exit Visitor',\r\n      message: 'Are you sure you wish to exit visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onExit(id, this.props.gateNo, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                this.setState({\r\n                  data: this.state.data.filter(v => v._id !== id)\r\n                });\r\n                Toast.success('Visitor exit successfully.');\r\n              }else{\r\n                Toast.fail('Failed to exit visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={pageStyles.content}>\r\n        <Breadcrum data={[{title: 'Visitors', link: 'all-visitors'}]} />\r\n        <VisitorsView data={this.state.data} isActive={this.state.isActive} user={this.props.user} appUser={this.props.appUser} onActiveChange={this.onActiveChange} onEnter={this.onEnter} onExit={this.onExit} />\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IVisitor } from '../models/home';\r\nimport { loadAll, enter, exit } from '../store/actions/visitor';\r\n\r\nimport Page from '../components/home/gatekeeper/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    homes: state.Homes,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, isActive, sCallback, fCallback)),\r\n    onEnter: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(enter(id, gateNo, callback)),\r\n    onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(exit(id, gateNo, callback))\r\n});\r\n\r\nexport const AllVisitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { INotification } from '../../../models/notification';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN, isNNObject, onEnter } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => void,\r\n  onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  data: Array<INotification>,\r\n  title: string,\r\n  body: string\r\n};\r\n\r\nexport default class Notification extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      data: [],\r\n      title: '',\r\n      body: ''\r\n    }\r\n    this.onPush = this.onPush.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (result: Array<INotification>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onPush = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.body)){\r\n      confirmAlert({\r\n        title: 'Confirm to send push notification',\r\n        message: 'Are you sure? This notification will send to all users using this app in your Appartment. Are you sure you want to Push?',\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n              this.setState({\r\n                isLoading: true\r\n              });\r\n              let notification = {\r\n                title: this.state.title,\r\n                body: this.state.body\r\n              } as INotification;\r\n              this.props.onPush(this.props.user.client._id, notification, this.props.user, (result: INotification | null) => {\r\n                this.setState({\r\n                  isLoading: false,\r\n                });\r\n                if(isNNObject(result)){\r\n                  let data = this.state.data;\r\n                  data.unshift(result as INotification);\r\n                  this.setState({\r\n                    data: data,\r\n                    title: '',\r\n                    body: ''\r\n                  });\r\n                  Toast.success('Notification pushed successfully.');\r\n                }else{\r\n                  Toast.fail('Failed to push Notification.');\r\n                }\r\n              });\r\n            }\r\n          },\r\n          {\r\n            label: 'No',\r\n            onClick: () => {}\r\n          }\r\n        ]\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Push.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Notification', link: 'notification'}]} />\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n        </View>\r\n        <View style={modelStyles.row}>\r\n          <TextArea placeholder=\"Body\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.body} onChange={(event: any) => this.setState({body: event.target.value})}\r\n          onKeyPress={(e) => {\r\n            onEnter(e, this.onPush);\r\n          }} />\r\n        </View>\r\n        <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n            <Button\r\n            style={{marginRight: 10}}\r\n            title=\"PUSH\"\r\n            onPress={this.onPush}\r\n            />\r\n            <Button\r\n            title=\"CLEAR\"\r\n            onPress={() => {\r\n              this.setState({\r\n                title: '',\r\n                body: ''\r\n              });\r\n            }}\r\n            />\r\n        </View>\r\n      {(isNN(this.state.data)) ?\r\n        this.state.data.map((d: INotification, i: number) => {\r\n          return(\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.body}</Text>\r\n              </View>\r\n              <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                <Button title=\"Duplicate\" onPress={() => {\r\n                  this.setState({\r\n                    title: d.title,\r\n                    body: d.body\r\n                  });\r\n                }} />\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Nofification found!!!</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { INotification } from '../models/notification';\r\nimport { loadAll, push } from '../store/actions/notification';\r\nimport Page from '../components/home/manager/notification';\r\nimport { IUser } from '../models/user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, sCallback, fCallback)),\r\n    onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => dispatch(push(appClientId, data, user, callback))\r\n});\r\n\r\nexport const Notification = connect(mapStateToProps, mapDispatchToProps)(Page);","import { INotification } from '../../models/notification';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { IUser } from '../../models/user';\r\n\r\nlet controller: string = 'notification';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Notification.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const push = (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => (dispatch: any) => {  \r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback({\r\n        _id: result.data,\r\n        title: data.title,\r\n        body: data.body,\r\n        createdBy: user.name,\r\n        createdAt: new Date()\r\n      } as INotification);\r\n    }else{\r\n      callback(null);\r\n    }\r\n  }, data);\r\n};","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'outing';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getOutingResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getOutingResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    // Not Implemented\r\n        callback(false);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      console.log('result:', result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        outings.data.unshift(data);\r\n        dispatch(getOutingResult(outings.data, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    },data);\r\n  }\r\n};\r\n\r\nexport const retunBack = (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().delete(controller + '/return/' + id, (result: any, message: string) => {\r\n    debugger;\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      var foundIndex = outings.data.findIndex(d => d._id === id);\r\n      outings.data[foundIndex].isReturned = true;\r\n      outings.data[foundIndex].returnedAt = new Date();\r\n      dispatch(getOutingResult(outings.data, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getOutingResult = (data: Array<IOuting>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_OUTINGS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IOutings\r\n});","import * as React from 'react';\r\nimport { View, TextInput, TextArea } from '../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, isNNObject, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  outings: IOutings,\r\n  onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  place: string,\r\n  address: string,\r\n  datePickerType: string,\r\n  datePickerDate: Date\r\n};\r\n\r\nexport default class NewOuting extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      fromDate: '',\r\n      toDate: '',\r\n      place: '',\r\n      address: '',\r\n      datePickerType: '',\r\n      datePickerDate: new Date()\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNNObject(this.state.fromDate) && isNNObject(this.state.toDate) && isNN(this.state.place) && isNN(this.state.address)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let outing = {\r\n          ////homeId: this.props.user.home[this.props.appUser.homeIndex].id,\r\n          _homeId: this.props.user.homes[this.props.appUser.homeIndex].number,\r\n          fromDate: this.state.fromDate,\r\n          toDate : this.state.toDate,\r\n          place: this.state.place,\r\n          address: this.state.address,\r\n          isReturned: false,\r\n          createdBy: this.props.user.name,\r\n          createdAt: new Date()\r\n        } as IOuting;\r\n        this.props.onSave(outing, this.props.user.homes[this.props.appUser.homeIndex]._id, this.props.user, this.props.outings, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              fromDate: '',\r\n              toDate: '',\r\n              place: '',\r\n              address: '',\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Outing submitted successfully.');\r\n          }else{\r\n            Toast.fail('Failed to submit Outing.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before submit Outing.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Notice', link: 'notice'}, {title: 'New Outing', link: 'new-outing' }]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Place\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.place} onChange={(event: any) => this.setState({place: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Address\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.address} onChange={(event: any) => this.setState({address: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { IOuting } from '../models/outing';\r\nimport { save } from '../store/actions/outing';\r\nimport Page from '../components/home/new-outing';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    outings: state.Outings\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(save(data, homeId, user, outings, callback))\r\n});\r\n\r\nexport const NewOuting = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user';\r\nimport { IDocument } from '../../models/document';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants';\r\n\r\nlet controller: string = 'document';\r\n\r\nexport const loadAll = (homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getDocumentResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getDocumentResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Documents.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // document.file = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          var foundIndex = documents.findIndex(d => d._id === result.data._id);\r\n          documents[foundIndex]._id = result.data._id;\r\n          ////documents[foundIndex].userId = data.userId;\r\n          ////documents[foundIndex].homeId = data.homeId;\r\n          documents[foundIndex].title = data.title;\r\n          documents[foundIndex].description = data.description;\r\n          documents[foundIndex].file = data.file;\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          documents.unshift({\r\n            _id: result.data._id,\r\n            ////userId: data.userId,\r\n            ////homeId: data.homeId,\r\n            title: data.title,\r\n            description: data.description,\r\n            file: data.file,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IDocument);\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      documents = documents.filter((d, i) => d._id !== id);\r\n      dispatch(getDocumentResult(documents, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getDocumentResult = (data: Array<IDocument>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_DOCUMENTS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IDocuments\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IDocument } from '../../models/document';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { FILE_BASE_PATH } from '../../constants';\r\nimport { isNN, generateUUID } from '../../util/index';\r\nimport { toDateString } from '../../util/convert';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  homeIndex: number,\r\n  user: IUser,\r\n  documents: IDocuments,\r\n  onLoad: (homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  homeId: string,\r\n  title: string,\r\n  description: string,\r\n  fileName: string\r\n};\r\n\r\nexport default class MyDocuments extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onFileSelect = this.onFileSelect.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.homes[this.props.homeIndex]._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Documents.');\r\n      }\r\n    });\r\n  };\r\n\r\n  onFileSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        // upload file to api.\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        this.props.onUpload(data, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false\r\n          });\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }else{\r\n            this.setState({\r\n              fileName: fileName\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.fileName)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        /*\r\n        let data = this.state.data;\r\n        data.id = this.state.id,\r\n        data.userId = this.props.user._id,\r\n        data.homeId = this.state.homeId;\r\n        data.title = this.state.title;\r\n        data.description = this.state.description;\r\n        data.createdBy = this.props.user._id;\r\n        data.createdOn = new Date();\r\n        */\r\n        \r\n        let document = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          file: this.state.fileName,\r\n          createdBy: this.props.user.name,\r\n          createdAt: new Date()\r\n        } as IDocument;\r\n        this.props.onSave(this.state.homeId, document, this.props.homeIndex, this.props.user, this.props.documents.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n              title: '',\r\n              description: '',\r\n              fileName: ''\r\n            });\r\n            Toast.success('Document saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save document.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      id: '',\r\n      homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n    });\r\n  };\r\n  \r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.documents.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Document removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove document.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'My Documents', link: 'my-documents'}]} />\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n        </View>\r\n        <View style={modelStyles.row}>\r\n          <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n        </View>\r\n        {isNN(this.props.user.homes) &&\r\n        <View style={modelStyles.row}>\r\n        <Text style={{marginRight: 10}}>Home:</Text>\r\n        {this.props.user.homes.map((h: IHome, i: number) => {\r\n          return(\r\n            <RadioButton isActive={h._id === this.state.homeId} text={h.number} key={'home' + i} onPress={() => this.setState({homeId: h._id})} />\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n        }\r\n        <View style={modelStyles.row}>\r\n          {/* <Button\r\n              title='Select Document'\r\n              onPress={this.onImageSelect}\r\n              /> */}\r\n              <input type='file' name='file' placeholder='Select Document' onChange={this.onFileSelect}/>\r\n              {isNN(this.state.fileName) &&\r\n              <Text style={{marginLeft: 15}}>{this.state.fileName}</Text>\r\n              }\r\n        </View>\r\n        <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n            <Button\r\n            style={{marginRight: 10}}\r\n            title='SAVE'\r\n            onPress={this.onSave}\r\n            />\r\n            <Button\r\n            title='CLEAR'\r\n            onPress={this.onClear}\r\n            />\r\n        </View>\r\n      {(this.props.documents.isUpToDate && !this.props.documents.isError && isNN(this.props.documents.data)) ?\r\n        this.props.documents.data.map((d: IDocument, i: number) => {\r\n          return(\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n              </View>\r\n              {isNN(d.description) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              }\r\n              {isNN(this.props.user.homes.filter(ho => ho._id === d._id)) &&\r\n              <View style={styles.ele}>\r\n                <Text>{'Home: ' + this.props.user.homes.filter(ho => ho._id === d._id)[0].number}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.file) &&\r\n              <View style={styles.ele}>\r\n                <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n              </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                {/* <TouchableHighlight underlayColor={COLOR.ICON_BTN_UNDERLAY} style={{marginRight: 25}} onPress={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d.id,\r\n                    homeId: d.homeId,\r\n                    title: d.title,\r\n                    description: d.description,\r\n                  });\r\n                }}>\r\n                  <Image source={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight> */}\r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{this.props.documents.isUpToDate ? 'No Documents found!!!' : (this.props.documents.isError ?  this.props.documents.errorMessage : 'No Documents found!!!')}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IDocument } from '../models/document';\r\nimport { loadAll, save, remove } from '../store/actions/documents';\r\nimport { upload } from '../store/actions/file';\r\nimport Page from '../components/home/my-documents';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    homeIndex: state.AppUser.homeIndex,\r\n    user: state.User,\r\n    documents: state.Documents\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(homeId, callback)),\r\n    onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(save(homeId, data, homeIndex, user, documents, callback)),\r\n    onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(remove(id, documents, callback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(upload(data, callback))\r\n});\r\n\r\nexport const MyDocuments = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { IBlock } from '../../models/block/block';\r\nimport { IUser } from '../../models/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util';\r\n\r\nlet controller: string = 'block';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getBlockResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getBlockResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = blocks.findIndex(d => d._id === result.data);\r\n        blocks[foundIndex]._id = result.data;\r\n        blocks[foundIndex].name = data.name;\r\n        blocks[foundIndex].description = data.description;\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        blocks.unshift({\r\n            _id: result.data,\r\n            name: data.name,\r\n            description: data.description,\r\n            createdBy: user.name\r\n          } as IBlock);\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      blocks = blocks.filter((d, i) => d._id !== id);\r\n      dispatch(getBlockResult(blocks, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IBlock>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Blocks extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.blocks.isUpToDate && !this.props.blocks.isError && isNN(this.props.blocks.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      this.setState({\r\n        searchResult: this.props.blocks.data.filter(d => (d.name + '').toLocaleLowerCase().indexOf(searchText) >= 0),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.blocks.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('Home removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove home.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Blocks', link: 'blocks'}]} />\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-block/0')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search Block\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSearch);\r\n            }} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IBlock, i: number) => {\r\n            return(\r\n              <View key={'block' + i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Name: ' + d.name}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Description: ' + (isNN(d.description) ? d.description : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('edit-block/' + d._id);////TODO\r\n                    // this.props.navigation.navigate('EditBlock', {id: d._id});\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No block match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { remove } from '../store/actions/block';\r\nimport Page from '../components/home/manager/blocks';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => dispatch(remove(id, blocks, callback))\r\n});\r\n\r\nexport const Blocks = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as commonStyles} from '../../../styles/common';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n\tname: string,\r\n\tdescription: string\r\n};\r\n\r\nexport default class EditBlock extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      name: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let blockId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    if(blockId.length > 0 && blockId !== '0' && this.props.blocks && isNN(this.props.blocks.data)){\r\n      let block = this.props.blocks.data.filter((d, i) => {\r\n        return d._id === blockId\r\n      });\r\n      if(isNN(block)){\r\n        this.setState({\r\n          id: block[0]._id,\r\n          name: block[0].name,\r\n          description: block[0].description\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n         let block = {\r\n           _id: this.state.id,\r\n           name: this.state.name,\r\n           description: this.state.description\r\n         } as IBlock;\r\n          this.props.onSave(this.props.user.client._id, block, this.props.user, (this.props.blocks && this.props.blocks.data) ? this.props.blocks.data : [], (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                id: '',\r\n                name: '',\r\n                description: ''\r\n              });\r\n              Toast.success('Block saved successfully.');\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to save block.');\r\n            }\r\n          });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Blocks', link: 'blocks'}, {title: 'Edit Block', link: 'edit-block/0'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Description\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View>\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { IUser } from '../models/user';\r\nimport { save } from '../store/actions/block';\r\nimport Page from '../components/home/manager/edit-block';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, blocks, callback))\r\n});\r\n\r\nexport const EditBlock = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, ScrollView, TextInput, Text, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome } from '../../../models/home';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\nimport { COLOR, MONTH } from '../../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  amount: number,\r\n  description: string,\r\n  month: number,\r\n  year: number,\r\n  searchText: string,\r\n  showHomes: boolean,\r\n  isAllHome: boolean,\r\n  homes: Array<IHome>\r\n};\r\n\r\nexport default class PaymentForm extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      amount: 0,\r\n      description: '',\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n      searchText: '',\r\n      showHomes: false,\r\n      isAllHome: false,\r\n      homes: []\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n  };\r\n\r\n  onSave = () => {\r\n    if(this.state.amount > 0 && (this.state.isAllHome || this.state.homes.length > 0)){\r\n      let homeIds = [] as any;\r\n      this.state.homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        amount: this.state.amount,\r\n        description: this.state.description,\r\n        month: this.state.month,\r\n        year: this.state.year,\r\n        isAllHome: this.state.isAllHome,\r\n        homes: homeIds\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onSave(this.props.user.client._id, data, this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          this.setState({\r\n            amount: 0,\r\n            description: '',\r\n            month: new Date().getMonth(),\r\n            year: new Date().getFullYear(),\r\n            searchText: '',\r\n            showHomes: false,\r\n            isAllHome: false,\r\n            homes: []\r\n          });\r\n          Toast.success('Payment saved successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to save payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Save.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({ \r\n      amount: 0,\r\n      description: '',\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n      searchText: '',\r\n      showHomes: false,\r\n      isAllHome: false,\r\n      homes: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Amount\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.amount > 0 ? this.state.amount + '' : ''} onChange={(event: any) => this.setState({amount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={{marginTop: 15}}>{'Payment for ' + this.state.year + ' '}</Text>\r\n            <Picker\r\n              className='form-control'\r\n              value={this.state.month}\r\n              style={ modelStyles.ele}\r\n              onChange={(event: any) => this.setState({month: event.target.value})}>\r\n              {\r\n                MONTH.filter((m, i) => m.value <= new Date().getMonth()).map((m: any, i: number) => {\r\n                  return(<option key={'month' + i} value={m.value}>{m.title}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={{marginRight: 15}}>{'Apply to Home(s): ' + (this.state.isAllHome ? '' : this.state.homes.length)}</Text>\r\n            <Checkbox isActive={this.state.isAllHome} text='All Homes' onPress={() => this.setState({isAllHome: !this.state.isAllHome})} />\r\n          </View>\r\n          {!this.state.isAllHome &&\r\n          <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.state.homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6, color: COLOR.SECONDARY }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          homes: this.state.homes.filter((h, i) => h._id !== d._id)\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n          }\r\n          {!this.state.isAllHome &&\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Enter Home Number\" className='form-control'\r\n            style={{...modelStyles.ele,\r\n              flexDirection: 'row',\r\n              padding: 6,\r\n              borderWidth: 1,\r\n              borderColor: COLOR.HR_COLOR,\r\n              borderRadius: 5\r\n            }}\r\n            value={this.state.searchText} \r\n            onChange={(event: any) => this.setState({showHomes: true, searchText: event.target.value})} />\r\n          </View>\r\n          }\r\n            {(!this.state.isAllHome && this.state.showHomes && isNN(this.state.searchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n              <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.searchText.toLowerCase()) >= 0 && (this.state.homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6}}\r\n                      onClick={() => {\r\n                        let homes = this.state.homes;\r\n                        homes.push(d);\r\n                        this.setState({\r\n                          homes: homes\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n              </ScrollView>\r\n            }\r\n          <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n              <Button\r\n              style={{marginRight: 10}}\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={this.onClear}\r\n              />\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Text, TextInput, ScrollView, TextArea } from '../../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IPayment } from '../../../models/home';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR, MONTH } from '../../../constants';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN } from '../../../util';\r\nimport Toast from '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  isShowSearch: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  datePickerType: string,\r\n  datePickerDate: Date,\r\n  homes: Array<IHome>,\r\n  searchText: string,\r\n  showHomes: boolean,\r\n  data: Array<IPayment>,\r\n  isShowUpdateModel: boolean,\r\n  uPaymentId: string,\r\n  uAmount: number,\r\n  uDescription: string\r\n};\r\n\r\nexport default class PaymentHistory extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isShowSearch: true,\r\n      fromDate: '',\r\n      toDate: '',\r\n      datePickerType: '',\r\n      datePickerDate: new Date(),\r\n      homes: [],\r\n      searchText: '',\r\n      showHomes: false,\r\n      data: [],\r\n      isShowUpdateModel: false,\r\n      uPaymentId: '',\r\n      uAmount: 0,\r\n      uDescription: ''\r\n    };\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(this.state.fromDate && this.state.toDate){\r\n      let homeIds = [] as any;\r\n      this.state.homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        fromDate: this.state.fromDate,\r\n        toDate: this.state.toDate,\r\n        homes: homeIds\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onSearch(this.props.user.client._id, data, this.props.user, (result: Array<IPayment>) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          isShowSearch: false,\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        Toast.fail(message ? message : 'Failed to load payment.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Search.');\r\n    }\r\n  };\r\n\r\n  onUpdate = () => {\r\n    if(isNN(this.state.uPaymentId) && this.state.uAmount > 0){\r\n      let data = {\r\n        amount: this.state.uAmount,\r\n        description: this.state.uDescription,\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.state.uPaymentId, data, this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          let pData = this.state.data;\r\n          var foundIndex = pData.findIndex(d => d._id === this.state.uPaymentId);\r\n          pData[foundIndex].amount = this.state.uAmount;\r\n          pData[foundIndex].description = this.state.uDescription;\r\n          this.setState({\r\n            isShowUpdateModel: false,\r\n            uPaymentId: '',\r\n            uAmount: 0,\r\n            uDescription: '',\r\n            data: pData\r\n          });\r\n          Toast.success('Payment updated successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to update payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          {this.state.isShowSearch ?\r\n          <View>\r\n            <View style={modelStyles.row}>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                this.setState({\r\n                  fromDate: date\r\n                });\r\n              }}\r\n              value={this.state.fromDate}\r\n              />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                this.setState({\r\n                  toDate: date\r\n                });\r\n              }}\r\n              value={this.state.toDate}\r\n              />\r\n          </View>\r\n            <View style={modelStyles.row}>\r\n            <Text style={{marginRight: 15}}>{'Home(s): ' + (this.state.homes.length > 0 ? this.state.homes.length : 'All')}</Text>\r\n          </View>\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.state.homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6, color: COLOR.SECONDARY }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          homes: this.state.homes.filter((h, i) => h._id !== d._id)\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Enter Home Number\" className='form-control'\r\n            style={{...modelStyles.ele,\r\n              flexDirection: 'row',\r\n              padding: 6,\r\n              borderWidth: 1,\r\n              borderColor: COLOR.HR_COLOR,\r\n              borderRadius: 5\r\n            }}\r\n            value={this.state.searchText} \r\n            onChange={(event: any) => this.setState({showHomes: true, searchText: event.target.value})} />\r\n          </View>\r\n            {(this.state.showHomes && isNN(this.state.searchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.searchText.toLowerCase()) >= 0 && (this.state.homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6}}\r\n                      onClick={() => {\r\n                        let homes = this.state.homes;\r\n                        homes.push(d);\r\n                        this.setState({\r\n                          homes: homes\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            }\r\n            <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                <Button\r\n                title=\"SEARCH\"\r\n                onPress={this.onSearch}\r\n                />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View>\r\n             <Text \r\n             className='fr pointer'\r\n             style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right'}}\r\n             onClick={() => {\r\n               this.setState({\r\n                 isShowSearch: true\r\n               });\r\n             }}>Show Search</Text>\r\n          </View>\r\n          }\r\n          <View>\r\n            {(isNN(this.state.data)) ?\r\n              this.state.data.map((d: IPayment, i: number) => {\r\n                return(\r\n                  <View key={i} style={pageStyles.row}>\r\n                    <View style={pageStyles.ele}>\r\n                        <Text style={{fontWeight: 'bold'}}>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text style={{fontWeight: 'bold'}}>{'Rs.' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                    </View>\r\n                    {isNN(d.description) &&\r\n                      <View style={pageStyles.ele}>\r\n                        <Text>{d.description}</Text>\r\n                      </View>\r\n                    }\r\n                    <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                      <Button title=\"Update\" onPress={() => {\r\n                        this.setState({\r\n                          isShowUpdateModel: true,\r\n                          uPaymentId: d._id,\r\n                          uAmount: d.amount,\r\n                          uDescription: d.description\r\n                        });\r\n                      }} />\r\n                    </View>\r\n                  </View>\r\n                )\r\n              })\r\n              :\r\n              <Text style={{padding: 20}}>No Payment found!!!</Text>\r\n            }\r\n          </View>\r\n          <Modal\r\n          open={this.state.isShowUpdateModel}\r\n          onClose={() => {\r\n            this.setState({\r\n              isShowUpdateModel: false,\r\n              uPaymentId: '',\r\n              uAmount: 0,\r\n              uDescription: ''\r\n            });\r\n          }}>\r\n          <View style={popupStyles.container}>\r\n            <View style={popupStyles.content}>\r\n              <View style={modelStyles.row}>\r\n                <TextInput type='text' placeholder=\"Amount\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.uAmount > 0 ? this.state.uAmount + '' : ''} onChange={(event: any) => this.setState({uAmount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View style={modelStyles.row}>\r\n                <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.uDescription} onChange={(event: any) => this.setState({uDescription: event.target.value})} />\r\n              </View>\r\n              <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Button\r\n                  style={{marginRight: 10}}\r\n                  title=\"SAVE\"\r\n                  onPress={this.onUpdate}\r\n                  />\r\n                  <Button\r\n                  title=\"CLEAR\"\r\n                  onPress={() => {\r\n                    this.setState({\r\n                      uAmount: 0,\r\n                      uDescription: ''\r\n                    });\r\n                  }}\r\n                  />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  }\r\n};","import * as React from 'react';\r\nimport { TouchableHighlight, View } from '../../common/elements';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IPayment } from '../../../models/home';\r\nimport { COLOR } from '../../../constants';\r\nimport PaymentForm from './payment-form';\r\nimport PaymentHistory from './payment-history';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  activeTab: number,\r\n  history: Array<IPayment>\r\n};\r\n\r\nexport default class Payment extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1,\r\n      history: []\r\n    }\r\n  };\r\n  \r\n  componentDidMount(){\r\n    /*\r\n    this.props.onLoad(this.props.user.client._id, '', (result: Array<IPayment>) => {\r\n      if(isNN(result)){\r\n        this.setState({\r\n          history: result\r\n        });\r\n      }\r\n    }, (message: string) => {\r\n      Toast.fail(message ? message : 'Failed to load Payments.');\r\n    });\r\n    */\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Payment', link: 'payment'}]} />\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              NEW\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>          \r\n              HISTORY\r\n            </TouchableHighlight>\r\n          </View>\r\n          <View className='tab-content' style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              this.state.activeTab === 1 ? \r\n                <PaymentForm history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} onSave={this.props.onSave} />\r\n              :\r\n                <PaymentHistory history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} onSearch={this.props.onSearch} onUpdate={this.props.onUpdate} />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IPayment } from '../models/home';\r\nimport { loadAll, save, search, updatePay } from '../store/actions/payment';\r\nimport Page from '../components/home/manager/payment';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, homeId, sCallback, fCallback)),\r\n    onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, callback)),\r\n    onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(search(appClientId, data, user, sCallback, fCallback)),\r\n    onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updatePay(id, data, user, callback))\r\n});\r\n\r\nexport const Payment = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { styles as modelStyles } from '../../../../styles/model';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IBlock } from '../../../../models/block';\r\nimport { IHome } from '../../../../models/home';\r\n\r\ninterface IProps {\r\n  blocks: IBlocks,\r\n  data: IHome\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Info extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      homeId: '',\r\n      data: {} as IHome\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { blocks, data } = this.props;\r\n    let blockName = '';\r\n    if(data && isNN(data._id) && blocks && blocks.isUpToDate && !blocks.isError && blocks.data){\r\n      let block = blocks.data.filter((d: IBlock, i: number) => d._id === data._blockId);\r\n      if(block && block.length > 0){\r\n        blockName = block[0].name;\r\n      }\r\n    }\r\n    if(data && isNN(data._id)){\r\n    return(\r\n        <View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Block: ' + blockName}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Number: ' + data.number}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Address: ' + data.address}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'No of bed room(s): ' + data.bedRoom}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Parking: ' + data.parking}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Description: ' + data.description}</Text>\r\n          </View>\r\n        </View>\r\n    );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IMember } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IMember>\r\n};\r\n\r\nexport default class Members extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IMember>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Members.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Members</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IMember, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{(isNN(d.createdBy) ? d.createdBy : '') + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>\r\n                </View>\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IVehicle } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVehicle>\r\n};\r\n\r\nexport default class Vehicles extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IVehicle>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Vehicles</Text>\r\n        </View>\r\n          {isNN(data) ? \r\n            data.map((d: IVehicle, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>                  \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.number}</Text>\r\n                </View>\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IServent } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IServent>\r\n};\r\n\r\nexport default class Servents extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IServent>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Servents.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Servents</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IServent, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TouchableHighlight } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { ITicket } from '../../../../models/home';\r\nimport { ITicketComment } from '../../../../models/home/ticket-comment';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<ITicket>,\r\n  viewId: string,\r\n  comments: Array<ITicketComment>\r\n};\r\n\r\nexport default class Tickets extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      viewId: '',\r\n      comments: []\r\n    }\r\n    this.onView = this.onView.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<ITicket>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        comments: []\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        comments: comments\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Tickets</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: ITicket, i: number) => {\r\n            return(\r\n              <View key={'tkt' + i} style={styles.row}>\r\n               <View style={styles.ele}>\r\n                  <Text>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                    <Text>{d.title}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                    <Text>{d.description}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.status}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onView(d._id, d.comments);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n                  </TouchableHighlight>\r\n                </View>\r\n                {this.state.viewId === d._id &&\r\n                <View style={myStyles.cmntsCnr}>\r\n                  <View style={myStyles.cmntsHdr}>\r\n                    <Text style={myStyles.cmntsHdrTxt}>Comments</Text>\r\n                  </View>\r\n                  <View style={myStyles.cmntsCnt}>\r\n                    {isNN(this.state.comments) ?\r\n                      this.state.comments.map((e: ITicketComment, j: number) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? myStyles.cmntCnrFst : myStyles.cmntCnr}>\r\n                          <View style={myStyles.cmntHdr}>\r\n                            <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{e.comment}</Text>\r\n                          </View>\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No Comments found!!!</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};\r\n\r\n\r\nconst myStyles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    marginTop: 3,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  }\r\n};","import * as React from 'react';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IVisitor } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUser } from '../../../../models/user';\r\nimport VisitorsView from '../../gatekeeper/visitors-view';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { COLOR } from '../../../../constants';\r\nimport { styles } from '../../../../styles/page';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, this.state.isActive, (result: Array<IVisitor>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Visitors.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Visitors</Text>\r\n        </View>\r\n        <VisitorsView data={this.state.data} isActive={this.state.isActive} user={this.props.user} appUser={this.props.appUser} onActiveChange={this.onActiveChange} />\r\n      </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TouchableHighlight } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles as pageStyles } from '../../../../styles/page';\r\nimport { IPayment } from '../../../../models/home';\r\nimport { ITransaction } from '../../../../models/home/transaction';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { MONTH, COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IPayment>,\r\n  viewId: string,\r\n  transactions: Array<ITransaction>\r\n};\r\n\r\nexport default class Payments extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      viewId: '',\r\n      transactions: []\r\n    }\r\n    this.onView = this.onView.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IPayment>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Payments.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onView = (id: string, transactions: Array<ITransaction>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        transactions: []\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        transactions: transactions\r\n      });\r\n    }\r\n  };\r\n\r\n  getAmountPaid = (transactions: Array<ITransaction>) => {\r\n    let amount = 0;\r\n    if(isNN(transactions)){\r\n      transactions.filter((d: ITransaction, i: number) => d.isSuccess === true).map((d:ITransaction, i: number) => amount += d.amount);\r\n    }\r\n    return amount;\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={pageStyles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Payments</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IPayment, i: number) => {\r\n            return(\r\n              <View key={i} style={pageStyles.row}>\r\n                    <View style={pageStyles.ele}>\r\n                        <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text>{'Rs. ' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text>{'Amount Paid Rs. ' + this.getAmountPaid(d.transactions)}</Text>\r\n                    </View>\r\n                    {isNN(d.description) &&\r\n                      <View style={pageStyles.ele}>\r\n                        <Text>{d.description}</Text>\r\n                      </View>\r\n                    }\r\n                    <View style={pageStyles.ele}>\r\n                      <TouchableHighlight style={{}} onClick={() => {\r\n                        this.onView(d._id, d.transactions);\r\n                      }}>\r\n                        <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Transactions'}</Text>\r\n                      </TouchableHighlight>\r\n                    </View>\r\n                    {this.state.viewId === d._id &&\r\n                    <View style={myStyles.cmntsCnr}>\r\n                  <View style={myStyles.cmntsHdr}>\r\n                    <Text style={myStyles.cmntsHdrTxt}>Transactions</Text>\r\n                  </View>\r\n                  <View style={myStyles.cmntsCnt}>\r\n                    {isNN(this.state.transactions) ?\r\n                      this.state.transactions.map((e: ITransaction, j: number) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? myStyles.cmntCnrFst : myStyles.cmntCnr}>\r\n                          <View style={myStyles.cmntHdr}>\r\n                            <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Ref Id: ' + e.txnRef}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Txn Id: ' + e.txnId}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Amount: ' + e.amount}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Status: ' + (e.isSuccess ? 'SUCCESS' : 'FAILED')}</Text>\r\n                          </View>\r\n                          {\r\n                            isNN(e.reason) &&\r\n                            <View style={myStyles.cmntCnt}>\r\n                              <Text>{'Reason: ' + e.reason}</Text>\r\n                            </View>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No transactions found!!!</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                  </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};\r\n\r\nconst myStyles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR, \r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    marginTop: 3,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { FILE_BASE_PATH, COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IDocument>\r\n};\r\n\r\nexport default class Documents extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IDocument>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Documents</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IDocument, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n                </View>\r\n                {isNN(d.description) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.description}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.file) &&\r\n                <View style={styles.ele}>\r\n                <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, TouchableHighlight, Image } from '../../../common/elements';\r\nimport Spinner from '../../../common/spinner';\r\nimport Breadcrum from '../../../common/breadcrum';\r\nimport { IUser } from '../../../../models/user/user';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUsers } from '../../../../models/store/users';\r\nimport { IHomes } from '../../../../models/store/homes';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IHome, IMember, IVehicle, IServent, ITicket, IVisitor, IPayment } from '../../../../models/home';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from  '../../../../util/toast';\r\nimport Images from '../../../images';\r\nimport { COLOR } from '../../../../constants';\r\nimport { isNN } from '../../../../util/index';\r\nimport Info from './info';\r\nimport Members from './members';\r\nimport Vehicles from './vehicles';\r\nimport Servents from './servents';\r\nimport Tickets from './tickets';\r\nimport Visitors from './visitors';\r\nimport Payments from './payments';\r\nimport Documents from './documents';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadServents: (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVisitors: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  homeId: string,\r\n  activeTab: number,\r\n  data: IHome\r\n};\r\n\r\nexport default class ViewHome extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      homeId: '',\r\n      activeTab: 1,\r\n      data: {} as IHome\r\n    }\r\n    this.toggleLoading = this.toggleLoading.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let homeId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    this.setState({\r\n      homeId: homeId\r\n    });\r\n    if(homeId.length > 0){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(homeId, (result: IHome) => {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            data: result\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load Home.');\r\n        }\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Home.');\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleLoading = (isLoading: boolean) => {\r\n    this.setState({\r\n      isLoading: isLoading\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { activeTab } = this.state;\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Homes', link: 'homes'}, {title: 'View Home', link: 'view-home'}]} />\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              <Image src={activeTab === 1 ? Images.infoInv : Images.info} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>          \r\n              <Image src={activeTab === 2 ? Images.membersInv : Images.members} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              <Image src={activeTab === 3 ? Images.vehicleInv : Images.vehicle} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 4})}>\r\n              <Image src={activeTab === 4 ? Images.serventInv : Images.servent} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 5 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 5})}>\r\n              <Image src={activeTab === 5 ? Images.supportInv : Images.support} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 6 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 6})}>\r\n              <Image src={activeTab === 6 ? Images.visitorsInv : Images.visitors} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 7 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 7})}>\r\n              <Image src={activeTab === 7 ? Images.moneyInv : Images.money} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 8 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 8})}>\r\n              <Image src={activeTab === 8 ? Images.documentInv : Images.document} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              activeTab === 1 ?\r\n                  <Info blocks={this.props.blocks} data={this.state.data} />\r\n              :\r\n                activeTab === 2 ?\r\n                  <Members homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadMembers} />\r\n                :\r\n                  activeTab === 3 ?\r\n                    <Vehicles homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadVehicles} />\r\n                  :\r\n                    activeTab === 4 ?\r\n                      <Servents homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadServents} />\r\n                    :\r\n                      activeTab === 5 ?\r\n                        <Tickets homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadTickets} />\r\n                      :\r\n                        activeTab === 6 ?\r\n                          <Visitors appUser={this.props.appUser} user={this.props.user} homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadVisitors} />\r\n                        :\r\n                          activeTab === 7 ?\r\n                            <Payments homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadPayments} />\r\n                          :\r\n                            <Documents homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadDocuments} />\r\n            }            \r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  },\r\n  tabImage: {\r\n    width: 20,\r\n    height: 20\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHome, IMember, IVehicle, IServent, ITicket, IPayment } from '../models/home';\r\nimport { IDocument } from '../models/document';\r\nimport { load } from '../store/actions/home';\r\nimport { loadAllByHome as loadMembers} from '../store/actions/member';\r\nimport { loadAllByHome as loadVehicles } from '../store/actions/vehicle';\r\nimport { loadAllByHome as loadServents } from '../store/actions/servent';\r\nimport { loadAllByHome as loadTickets } from '../store/actions/ticket';\r\nimport { loadAll as loadVisitors } from '../store/actions/visitor';\r\nimport { loadAll as loadPayments } from '../store/actions/payment';\r\nimport { loadAllByHome as loadDocuments } from '../store/actions/documents';\r\nimport Page from '../components/home/manager/view-home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadMembers(homeId, sCallback, fCallback)),\r\n    onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => dispatch(loadVehicles(homeId, sCallback, fCallback)),\r\n    onLoadServents: (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => dispatch(loadServents(homeId, sCallback, fCallback)),\r\n    onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => dispatch(loadTickets(homeId, sCallback, fCallback)),\r\n    onLoadVisitors: (homeId: string, isActive: boolean, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => dispatch(loadVisitors('', homeId, isActive, sCallback, fCallback)),\r\n    onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadPayments('', homeId, sCallback, fCallback)),\r\n    onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => dispatch(loadDocuments(homeId, sCallback, fCallback))\r\n});\r\n\r\nexport const ViewHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IUser } from '../../models/user';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n//import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'poll';\r\n\r\nexport const loadAll = (appClientId: string, userRole: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getPollResult([], false, false, ''));\r\n  // new Api().get(controller + 'loadall/?appClientId=' + appClientId + '&userRole=' + userRole, (result: any, message: string) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getPollResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = polls.findIndex(d => d._id === result.data);\r\n        polls[foundIndex]._id = result.data;\r\n        polls[foundIndex].topic = data.topic;\r\n        polls[foundIndex].description = data.description;\r\n        polls[foundIndex].isAllowMultiple = data.isAllowMultiple;\r\n        polls[foundIndex].isOneVotePerFlat = data.isOneVotePerFlat;\r\n        polls[foundIndex].isAnonymous = data.isAnonymous;\r\n        polls[foundIndex].fromDate = data.fromDate;\r\n        polls[foundIndex].toDate = data.toDate;\r\n        polls[foundIndex].options = data.options;\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        scallback(true);\r\n      }else{\r\n        scallback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      // console.log(\"OUT: \" + result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        polls.unshift(data);\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        scallback(true);\r\n      }else{\r\n        scallback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, polls: Array<IPoll>, userId: string, scallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      polls = polls.filter((d, i) => d._id !== id);\r\n      dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n      scallback(true);\r\n    }else{\r\n      scallback(false);\r\n    }\r\n  }, {\r\n    Id: id,\r\n    UserId: userId\r\n  });\r\n};\r\n\r\nexport const vote = (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/vote/' + pollId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      var foundIndex = polls.data.findIndex(d => d._id === pollId);\r\n      polls.data[foundIndex].votes = result.data;\r\n      dispatch(getPollResult(polls.data, true, false, ''));\r\n\r\n      /*\r\n      // Update home\r\n      if(!isNN(user.homes[appUser.homeIndex].votes)){\r\n        user.home[appUser.homeIndex].vote = [];\r\n      }\r\n      result.data.map((v: IVote, vi: number) => {\r\n        user.home[appUser.homeIndex].vote.push(v);\r\n      });\r\n      dispatch(getUserResult(user));\r\n      */\r\n      // Update polls\r\n      // if(polls.isUpToDate && !polls.isError && isNN(polls.data) && ((',' + user.type + ',').indexOf(ROLE.ADMIN) >= 0 || (',' + user.type + ',').indexOf(ROLE.MANAGER) >= 0)){\r\n        if(polls.isUpToDate && !polls.isError && isNN(polls.data)){\r\n        let lstPoll = polls.data;\r\n        let pollIndex = lstPoll.findIndex(p => p._id === pollId);\r\n        lstPoll[pollIndex].votes = result.data;\r\n        /*\r\n        if(!isNN(lstPoll[pollIndex].votes)){\r\n          lstPoll[pollIndex].vote = [];\r\n        }\r\n        result.data.map((v: IVote, vi: number) => {\r\n          lstPoll[pollIndex].vote.unshift(v);\r\n        });\r\n        */\r\n        dispatch(getPollResult(lstPoll, true, false, \"\"));\r\n      }\r\n     // dispatch(getUserResult(user));\r\n      \r\n      scallback(true);\r\n    }else{\r\n      scallback(false);\r\n    }\r\n  }, {\r\n    votes: votes\r\n  });\r\n};\r\n\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});","import { jsError } from \"./index\";\r\n\r\nexport function percentage(_partialValue: number, _totalValue: number) {\r\n    try{\r\n        if(_totalValue > 0){\r\n            return (100 * _partialValue) / _totalValue;\r\n        }else{\r\n            return 0;\r\n        }\r\n    } catch (ex) {\r\n    jsError(ex, 'calc.percentage'); \r\n    return 0; \r\n  }\r\n };","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Text, Image, TextInput, TextArea } from '../../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IPolls } from '../../../models/store/polls';\r\nimport { IPoll } from '../../../models/poll/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN, isNNObject } from '../../../util/index';\r\nimport { percentage } from '../../../util/calc';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onSave: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, polls: Array<IPoll>, userID: string, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isEdit: boolean,\r\n  isLoading: boolean,\r\n  id: string,\r\n  topic: string,\r\n  description: string,\r\n  isAllowMultiple: boolean,\r\n  isOneVotePerFlat: boolean,\r\n  isAnonymous: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  pollOption: Array<string>,\r\n  showVotePoll: IPoll,\r\n  datePickerType: string,\r\n  datePickerDate: Date\r\n};\r\n\r\nexport default class Poll extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      isLoading: false,\r\n      id: '',\r\n      topic: '',\r\n      description: '',\r\n      isAllowMultiple: false,\r\n      isOneVotePerFlat: false,\r\n      isAnonymous: false,\r\n      fromDate: new Date(),\r\n      toDate: new Date(),\r\n      pollOption: [],\r\n      showVotePoll: { _id: '' } as IPoll,\r\n      datePickerType: '',\r\n      datePickerDate: new Date()\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n   onSave = () => {\r\n    if(isNN(this.state.topic) && isNN(this.state.description) && isNNObject(this.state.fromDate) && isNNObject(this.state.toDate) && isNN(this.state.pollOption.filter(po => isNN(po)))){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let poll = {\r\n          _id: this.state.id,\r\n          topic: this.state.topic,\r\n          description: this.state.description,\r\n          isAllowMultiple: this.state.isAllowMultiple,\r\n          isOneVotePerFlat: this.state.isOneVotePerFlat,\r\n          isAnonymous: this.state.isAnonymous,\r\n          fromDate: this.state.fromDate,\r\n          toDate: this.state.toDate,\r\n          options: this.state.pollOption.filter(po => isNN(po))\r\n        } as IPoll;\r\n        this.props.onSave(this.props.user.client._id, poll, this.props.polls.data, this.props.user, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              topic: '',\r\n              description: '',\r\n              isAllowMultiple: false,\r\n              isOneVotePerFlat: false,\r\n              isAnonymous: false,\r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              pollOption: [],\r\n              showVotePoll: { _id: '' } as IPoll,\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Poll saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save pol.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.polls.data, this.props.user._id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Poll removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove poll.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  loadVotes = () => {\r\n    if(isNNObject(this.state.showVotePoll) && this.state.showVotePoll._id.length > 0){\r\n      let votes = [] as any;\r\n      this.state.showVotePoll.options.map((po: string, poi: number) => \r\n        votes.push({\r\n          option: po,\r\n          votes: this.state.showVotePoll.votes.filter(v => v.option === poi).length\r\n        })\r\n      );\r\n      return(\r\n        <View style={{padding: 15}}>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{this.state.showVotePoll.topic}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{this.state.showVotePoll.description}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{'Votes: ' + this.state.showVotePoll.votes.length}</Text>\r\n          </View>\r\n        {\r\n        votes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n          return(\r\n            <View key={'pvo' + voi} style={styles.ele}>\r\n              <Text>\r\n                {vo.votes + ' (' + percentage(vo.votes, this.state.showVotePoll.votes.length) +  '%) - ' + vo.option}\r\n              </Text>\r\n            </View>\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n      )\r\n    }else{\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n        {this.state.isEdit === false &&\r\n        <View style={styles.row}>\r\n          <Button\r\n          title=\"ADD NEW\"\r\n          onPress={() => {\r\n            this.setState({\r\n              isEdit: true,\r\n              id: '',\r\n              topic: '',\r\n              description: '',\r\n              isAllowMultiple: false,\r\n              isOneVotePerFlat: false,\r\n              isAnonymous: false,\r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              pollOption: [],\r\n              showVotePoll: { _id: '' } as IPoll,\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n             });\r\n          }}\r\n          />\r\n        </View>\r\n        }\r\n        {\r\n         (this.state.isEdit === true && this.state.id.length === 0)  ?\r\n         <View key={\"p0\"} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.topic} onChange={(event: any) => this.setState({topic: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => this.setState({isAllowMultiple: !this.state.isAllowMultiple})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => this.setState({isOneVotePerFlat: !this.state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAnonymous} text='Anonymous Voting' onPress={() => this.setState({isAnonymous: !this.state.isAnonymous})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(this.state.pollOption) ?\r\n            this.state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} style={styles.ele}>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={e} onChange={(event: any) => {\r\n                    let newOptions = this.state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    this.setState({pollOption: newOptions});\r\n                  }} />\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    let newOptions = this.state.pollOption;\r\n                    delete newOptions[j];\r\n                    this.setState({pollOption: newOptions});\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text>No Option found!!!</Text>\r\n            </View>\r\n          }\r\n            <View style={styles.ele}>\r\n              <TouchableHighlight\r\n              onClick={() => {\r\n                if(!isNN(this.state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = this.state.pollOption;\r\n                  newOptions.push('');\r\n                  this.setState({pollOption: newOptions});\r\n                }\r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          <View style={styles.ele}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n              <Image src={Images.tick} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight style={{}} onClick={() => {\r\n              this.setState({\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n        :\r\n        []\r\n        }\r\n      {\r\n      (isNNObject(this.props.polls) && this.props.polls.isUpToDate && !this.props.polls.isError && isNN(this.props.polls.data)) ?      \r\n      this.props.polls.data.map((d: IPoll, i: number) => {\r\n      return(\r\n        (this.state.isEdit === true && this.state.id === d._id) ?\r\n        <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.topic} onChange={(event: any) => this.setState({topic: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => this.setState({isAllowMultiple: !this.state.isAllowMultiple})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => this.setState({isOneVotePerFlat: !this.state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAnonymous} text='Anonymous Voting' onPress={() => this.setState({isAnonymous: !this.state.isAnonymous})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(this.state.pollOption) ?\r\n            this.state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} style={styles.ele}>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={e} onChange={(event: any) => {\r\n                    let newOptions = this.state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    this.setState({pollOption: newOptions});\r\n                  }} />\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    let newOptions = this.state.pollOption;\r\n                    delete newOptions[j];\r\n                    this.setState({pollOption: newOptions});\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text>No Option found!!!</Text>\r\n            </View>\r\n          }\r\n            <View style={styles.ele}>\r\n              <TouchableHighlight\r\n              onClick={() => {\r\n                if(!isNN(this.state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = this.state.pollOption;\r\n                  newOptions.push('');\r\n                  this.setState({pollOption: newOptions});\r\n                }            \r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          <View style={styles.ele}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n              <Image src={Images.tick} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>                \r\n            <TouchableHighlight style={{}} onClick={() => {\r\n              this.setState({\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>        \r\n          </View>\r\n        </View>\r\n        :\r\n        <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{d.topic}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{d.description}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{toDateString(d.fromDate) + \" to \" + toDateString(d.toDate)}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isAllowMultiple === true ? modelStyles.radioActive : {...modelStyles.radio, marginLeft: 5})}\r\n            >\r\n              <Text style={(d.isAllowMultiple === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>Allow Multiple Votes</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isOneVotePerFlat === true ? {...modelStyles.radioActive} : {...modelStyles.radio, marginLeft: 5})}\r\n             >\r\n              <Text style={(d.isOneVotePerFlat === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>One Vote per Flat</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isAnonymous === true ? {...modelStyles.radioActive} : {...modelStyles.radio, marginLeft: 5})}\r\n             >\r\n              <Text style={(d.isAnonymous === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>Anonymous Voting</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(d.options) ?\r\n            d.options.map((e: string, j: number) => {\r\n              return(\r\n                <View key={\"po\" + j} style={styles.ele}>\r\n                  <Text key={\"pot\" + j} style={{width: '100%'}}>{e}</Text>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text style={{padding: 10}}>No Option found!!!</Text> \r\n            </View>           \r\n          }\r\n          <View style={styles.ele}>\r\n          {(d.fromDate > new Date()) &&\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isEdit: true,\r\n                id: d._id,\r\n                topic: d.topic,\r\n                description: d.description,\r\n                isAllowMultiple: d.isAllowMultiple,\r\n                isOneVotePerFlat: d.isOneVotePerFlat,\r\n                isAnonymous: d.isAnonymous,\r\n                fromDate: d.fromDate,\r\n                toDate: d.toDate,\r\n                pollOption: (isNN(d.options) ? d.options : [])\r\n              });\r\n            }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          }\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.onRemove(d._id);\r\n            }}>\r\n              <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>\r\n            <Text className='pointer' style={{color: COLOR.SECONDARY}} onClick={() => {\r\n              this.setState({showVotePoll: d})\r\n            }}>View Votes</Text>\r\n          </View>\r\n        </View>\r\n      )\r\n      })\r\n      :\r\n      <Text style={{padding: 20}}>{(this.props.polls.isUpToDate ? (this.props.polls.isError ? this.props.polls.errorMessage : \"No poll found!!!\") : \"Loading...\")}</Text>\r\n    }\r\n    <Modal\r\n      open={(isNNObject(this.state.showVotePoll) && this.state.showVotePoll._id.length > 0)}\r\n      onClose={() => this.setState({showVotePoll : { _id: '' } as IPoll})}>\r\n      <View style={popupStyles.container}>\r\n        <View style={popupStyles.content}>\r\n        {\r\n          this.loadVotes()\r\n        }\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n    <Spinner visible={this.state.isLoading} />\r\n    </View>  \r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Checkbox from '../common/checkbox';\r\nimport Spinner from '../common/spinner';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { styles } from \"../../styles/page\";\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { percentage } from '../../util/calc';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  votePollId: string,\r\n  votes: Array<IVote>,\r\n  currentDate: Date\r\n};\r\n\r\nexport default class Poll extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    let currentDate = new Date();\r\n    this.state = {\r\n      isLoading: false,\r\n      votePollId: '',\r\n      votes: [],\r\n      currentDate: new Date((currentDate.getMonth() + 1) + '/' + currentDate.getDate() + '/' + currentDate.getFullYear())\r\n    }\r\n    this.loadVotes = this.loadVotes.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  loadVotes = (poll: IPoll) => {\r\n    let votes = [] as any;\r\n    poll.options.map((po: string, poi: number) => \r\n      votes.push({\r\n        option: po,\r\n        votes: poll.votes.filter(v => v.option === poi).length\r\n      })\r\n    );\r\n    return(\r\n    votes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n      return(\r\n        <View key={'pvo' + voi} style={styles.ele}>\r\n          <Text>\r\n            {vo.votes + ' (' + percentage(vo.votes, poll.votes.length) +  '%) - ' + vo.option}\r\n          </Text>\r\n        </View>\r\n      )\r\n    })\r\n    )\r\n  };\r\n\r\n  onSelectOption = (poll: IPoll, optionId: number) => {\r\n    if(this.state.votePollId === poll._id){\r\n      if(isNN(this.state.votes.filter(v => v.option === optionId))){\r\n        this.setState({\r\n          votes: this.state.votes.filter(v => v.option !== optionId)\r\n        });\r\n      }else{\r\n        let votes = [] as Array<IVote>;\r\n        if(poll.isAllowMultiple){\r\n          votes = this.state.votes;\r\n        }\r\n          votes.push({\r\n            _homeId: this.props.user.homes[this.props.appUser.homeIndex]._id,\r\n            _memberId: this.props.user._id,\r\n            option: optionId,\r\n            isActive: true,\r\n            createdBy: this.props.user._id\r\n          } as IVote);\r\n          this.setState({\r\n            votes: votes\r\n          });\r\n        // if(poll.isAllowMultiple || !isNN(this.state.votes.filter(v => v.pollId === poll.id))){\r\n\r\n        // }\r\n      }\r\n    }else{\r\n      let votes = [] as Array<IVote>;\r\n      votes.push({\r\n        _homeId: this.props.user.homes[this.props.appUser.homeIndex]._id,\r\n        _memberId: this.props.user._id,\r\n        option: optionId,\r\n        isActive: true,\r\n        createdBy: this.props.user._id\r\n      } as IVote);\r\n      this.setState({\r\n        votePollId: poll._id,\r\n        votes: votes\r\n      });\r\n    }\r\n  };\r\n\r\n  onVote = (pollId: string) => {\r\n    if(this.state.votePollId === pollId &&  isNN(this.state.votes)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onVote(pollId, this.state.votes, this.props.polls, this.props.user, this.props.appUser, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          this.setState({\r\n            votePollId: '',\r\n            votes: []\r\n          });\r\n          Toast.success('Your vote saved successfully.');\r\n        }else{\r\n          Toast.fail('Failed to save your vote.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select any option to vote.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n      {\r\n        (isNNObject(this.props.polls) && this.props.polls.isUpToDate && !this.props.polls.isError && isNN(this.props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= this.state.currentDate))) ?\r\n        this.props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= this.state.currentDate).map((d: IPoll, i: number) => {\r\n          return(\r\n            <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.topic}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === this.props.user.homes[this.props.appUser.homeIndex]._id))) &&\r\n                d.options.map((o: string, oi: number) => {\r\n                  return(\r\n                    <View key={\"popt\" + oi} style={styles.ele}>\r\n                      <Checkbox isActive={(this.state.votePollId === d._id && isNN(this.state.votes.filter(v => v.option === oi)))} text={o} onPress={() => this.onSelectOption(d, oi)} />\r\n                    </View>\r\n                  )\r\n                })\r\n              }\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === this.props.user.homes[this.props.appUser.homeIndex]._id))) &&\r\n                <View style={{marginTop: 5, width: '100%'}}>\r\n                  <Button title=\"Vote\" onPress={() => this.onVote(d._id)} style={{width: '100%'}} />\r\n                </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>Your Votes:</Text>\r\n              </View>\r\n              {isNN(d.options) &&\r\n                this.loadVotes(d)\r\n              }\r\n            </View>\r\n          )\r\n      })\r\n      :\r\n      <Text style={{padding: 20}}>{(this.props.polls.isUpToDate ? (this.props.polls.isError ? this.props.polls.errorMessage : \"No active poll found!!!\") : \"Loading...\")}</Text>\r\n    }\r\n    <Spinner visible={this.state.isLoading} />\r\n    </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Button from '../common/button';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateTimeString } from '../../util/convert';\r\nimport { ROLE, COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  outings: IOutings,\r\n  onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Outing extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false\r\n    }\r\n    this.onReturnBack = this.onReturnBack.bind(this);\r\n  };\r\n\r\n  componentDidMount(){};\r\n  \r\n  componentWillUnmount(){};\r\n  \r\n  onReturnBack = (outingId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to return back from outing',\r\n      message: 'Are you sure? You return back from this outing?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReturnBack(outingId, this.props.user, this.props.outings, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result){\r\n                Toast.success('Successfully returned back.');\r\n              }else{\r\n                Toast.fail('Failed to Return back.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n      {(this.props.appUser.role === ROLE.USER && (!isNNObject(this.props.outings) || !isNN(this.props.outings.data.filter(o => o.isReturned !== true)))) &&\r\n        <View style={styles.row}>\r\n          <Button\r\n          title=\"Go Outing\"\r\n          onPress={() => {\r\n            this.props.history.push('new-outing')\r\n          }}\r\n          />\r\n        </View>\r\n      }\r\n      {\r\n        (isNNObject(this.props.outings) && this.props.outings.isUpToDate && !this.props.outings.isError && isNN(this.props.outings.data)) ?\r\n        this.props.outings.data.map((d: IOuting, i: number) => {\r\n          return(\r\n            <View key={\"o\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{toDateTimeString(d.fromDate) + \" to \" + toDateTimeString(d.toDate)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.place}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.address}</Text>\r\n              </View>\r\n              {d.isReturned &&\r\n              <View style={styles.ele}>\r\n                <Text>{'Returned on ' + toDateTimeString(d.returnedAt)}</Text>\r\n              </View>\r\n              }\r\n              {this.props.appUser.role !== ROLE.USER && \r\n                <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Text>No one in the home</Text>\r\n                </View>\r\n              }\r\n              {(this.props.appUser.role === ROLE.USER && d.isReturned !== true) &&\r\n                <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Button title=\"Return to Home\" onPress={() => {\r\n                    this.onReturnBack(d._id);\r\n                  }} />\r\n                </View>\r\n              }\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{(this.props.outings.isUpToDate ? (this.props.outings.isError ? this.props.outings.errorMessage : \"No Outings found!!!\") : \"Loading...\")}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { TouchableHighlight, View } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IComplaint, IRemainder } from '../../models/home/index';\r\nimport AMPoll from './manager/poll';\r\nimport UserPoll from './poll';\r\nimport Outing from './outing';\r\nimport CustomList from './custom-list';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  polls: IPolls,\r\n  outings: IOutings,\r\n  remainders: Array<IRemainder>,\r\n  complaints: Array<IComplaint>,\r\n  onLoadAds: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => void,\r\n  onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => void,\r\n  onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, scallback: (result: boolean) => void) => void,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onLoadOuting: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  activeTab: number,\r\n  isShowPoll: boolean\r\n};\r\n\r\nexport default class Notification extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: (isNNObject(this.props.user) && (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER)) ? 1 : 2,\r\n      isShowPoll: isNNObject(this.props.user) && (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER || (this.props.appUser.role === ROLE.USER && this.props.appUser.homeIndex >= 0))\r\n    }\r\n  };\r\n  \r\n  componentDidMount(){\r\n    this.props.onLoadAds(this.props.user.client._id, (result: boolean) => {\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n    if(this.state.isShowPoll){\r\n      this.props.onLoadPoll(this.props.user.client._id, this.props.appUser.role, (result: boolean) => {\r\n        if(!result){\r\n          Toast.fail('Failed to load Poll.');\r\n        }\r\n      });\r\n    }\r\n    this.props.onLoadOuting(this.props.user.client._id, this.props.appUser.role === ROLE.USER ? this.props.user.homes[this.props.appUser.homeIndex]._id : '', (result: boolean) => {\r\n      if(!result){\r\n        Toast.fail('Failed to load Outing.');\r\n      }\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Notice', link: 'notice'}]} />\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n          {this.state.isShowPoll &&\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>\r\n              POLL\r\n            </TouchableHighlight>\r\n          }\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>\r\n              ADS\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              OUTING\r\n            </TouchableHighlight>\r\n            {/* <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 4})}>\r\n              REMINDERS\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 5 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 5})}>\r\n            COMPLAINTS\r\n            </TouchableHighlight> */}\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              this.state.activeTab === 1 ? \r\n                (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) ? \r\n                  <AMPoll appUser={this.props.appUser} user={this.props.user} polls={this.props.polls} onSave={this.props.onSavePoll} onRemove={this.props.onRemovePoll} />\r\n                :\r\n                  <UserPoll appUser={this.props.appUser} user={this.props.user} polls={this.props.polls} onVote={this.props.onVote} />\r\n              :\r\n                this.state.activeTab === 2 ?\r\n                  <CustomList data={(this.props.ads.isUpToDate ? this.props.ads.data : [])} message={(this.props.ads.isUpToDate ? (this.props.ads.isError ? this.props.ads.errorMessage : \"No data found!!!\") : \"Loading...\")} />\r\n                :\r\n                this.state.activeTab === 3 ?\r\n                  <Outing history={this.props.history} appUser={this.props.appUser} user={this.props.user} outings={this.props.outings} onReturnBack={this.props.onReturnBack} />\r\n                :\r\n                  <CustomList data={this.state.activeTab === 4 ? this.props.remainders : this.props.complaints} message=\"No data found!!!\" />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { IPolls } from '../models/store/polls';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { IPoll, IVote } from '../models/poll/index';\r\nimport { loadAll as loadAllAds } from '../store/actions/ad';\r\nimport { loadAll as loadAllPools, save, remove, vote } from '../store/actions/poll';\r\nimport { loadAll as loadAllOutings, retunBack } from '../store/actions/outing';\r\nimport Page from '../components/home/notification';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    polls: state.Polls,\r\n    outings: state.Outings,\r\n    remainders: [],\r\n    complaints: []\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoadAds: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAllAds(appClientId, callback)),\r\n    onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => dispatch(loadAllPools(appClientId, userRole, callback)),\r\n    onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => dispatch(save(appClientId, data, polls, user, scallback)),\r\n    onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, scallback: (result: boolean) => void) => dispatch(remove(id, polls, userId, scallback)),\r\n    onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => dispatch(vote(pollId, votes, polls, user, appUser, scallback)),\r\n    onLoadOuting: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAllOutings(appClientId, homeId, callback)),\r\n    onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(retunBack(id, user, outings, callback))\r\n});\r\n\r\nexport const Notice = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user';\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Help extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Info', link: 'info'}]} />\r\n          {/* <Image source={Images.workInProgress} style={{width: 50, height: 45, marginTop: 35}} />\r\n          <Text>Work in progress!!!</Text> */}\r\n          <View style={{...modelStyles.container, paddingLeft: 10, paddingRight: 10}}>\r\n            <View className='center' style={modelStyles.row}>\r\n              <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'center'}}>{this.props.user.client.name}</Text>\r\n            </View>\r\n            <View className='center' style={modelStyles.row}>\r\n                <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'center'}}>{this.props.user.client.description}</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>\r\n                {\"Apartment Residents & Apartment Owners need a common platform through which they can connect with association, get to know & discuss common issues of the neighborhood\"}\r\n              </Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>Home users</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Maintenance Admin Payment</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Receive real-time notifications</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Visitor management</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Lodge any complaint related to your apartment and track</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>Admin Users</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Create polls and gather the opinion of all Apartment residents</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>All details of your flat, staff who work in your flat, visitors coming to your flat</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Accounts  and much more...</Text>\r\n            </View>\r\n          </View>\r\n        </main>\r\n      );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  listItem: {\r\n    marginLeft: 15\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport Page from '../components/home/help';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n});\r\n\r\nexport const Help = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    render() {\r\n    return (\r\n            <View style={{flex: 1, backgroundColor: COLOR.INVERSE, padding: 40}}>\r\n                <Text>Page not found!!!</Text>\r\n            </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport TitleBar from './title-bar';\r\nimport NavBar from './nav-bar';\r\nimport TabBar from './tab-bar';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNNObject, isNN } from '../../util';\r\nimport Toast from  '../../util/toast';\r\n\r\nimport { Dashboard as CDashboard} from '../../containers/dashboard';\r\nimport { Members as CMembers } from '../../containers/members';\r\nimport { NewMember as CNewMember } from '../../containers/new-member';\r\nimport { Vehicles as CVehicles } from '../../containers/vehicles';\r\nimport { NewVehicle as CNewVehicle } from '../../containers/new-vehicle';\r\nimport { Servents as CServents } from '../../containers/servents';\r\nimport { NewServent as CNewServent } from '../../containers/new-servent';\r\nimport { Tickets as CTickets } from '../../containers/tickets';\r\nimport { NewTicket as CNewTicket } from '../../containers/new-ticket';\r\nimport { Visitors as CVisitors } from '../../containers/visitors';\r\n// import { NewVisitor as CNewVisitor } from '../../containers/new-visitor';\r\nimport { ChangePassword as CChangePassword } from '../../containers/change-password';\r\nimport { MyProfile as CMyProfile } from '../../containers/my-profile';\r\nimport { MyRole as CMyRole } from '../../containers/my-role';\r\nimport { Ads as CAds } from '../../containers/ads';\r\nimport { NewAd as CNewAd } from '../../containers/new-ad';\r\nimport { Users as CUsers } from '../../containers/users';\r\nimport { Homes as CHomes } from '../../containers/homes';\r\nimport { EditUser as CEditUser } from '../../containers/edit-user';\r\nimport { ApproveUsers as CApproveUsers } from '../../containers/approve-users';\r\n\r\nimport { EditHome as CEditHome } from '../../containers/edit-home';\r\nimport { AllVisitors as CAllVisitors } from '../../containers/all-visitors';\r\nimport { Notification as CNotification } from '../../containers/notification';\r\nimport { NewOuting as CNewOuting } from '../../containers/new-outing';\r\nimport { MyDocuments as CMyDocuments } from '../../containers/my-documents';\r\nimport { Blocks as CBlocks } from '../../containers/blocks';\r\nimport { EditBlock as CEditBlock } from '../../containers/edit-block';\r\nimport { Payment as CPayment } from '../../containers/payment';\r\nimport { ViewHome as CViewHome } from '../../containers/view-home';\r\nimport { Notice as CNotice } from '../../containers/notice';\r\nimport { Help as CHelp } from '../../containers/help';\r\nimport NotFound from '../../components/not-found';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  getProfile: (callback: (result: boolean, message: string) => void) => void,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false\r\n    }\r\n    this.isUser = this.isUser.bind(this);\r\n    this.isAdmin = this.isAdmin.bind(this);\r\n    this.isManager = this.isManager.bind(this);\r\n    this.isGateKeeper = this.isGateKeeper.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(!isNNObject(this.props.user) || !isNN(this.props.user._id)){\r\n      this.setState({\r\n          isLoading: true\r\n      });\r\n      this.props.getProfile( (result: boolean, message: string) => {\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n        if(result !== true){\r\n          Toast.fail('Failed to load Profile: ' + message);\r\n        }\r\n      });\r\n    }\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  isUser = () => {\r\n    return this.props.appUser.role === ROLE.USER;\r\n  };\r\n\r\n  isAdmin = () => {\r\n    return this.props.appUser.role === ROLE.ADMIN;\r\n  };\r\n  \r\n  isManager = () => {\r\n    return this.props.appUser.role === ROLE.MANAGER;\r\n  };\r\n\r\n  isGateKeeper = () => {\r\n    return this.props.appUser.role === ROLE.GATEKEEPER;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      !this.state.isLoading &&\r\n        <View style={styles.container}>\r\n          <TitleBar appUser={this.props.appUser} user={this.props.user} onHomeChange={this.props.onHomeChange} onLogout={this.props.onLogout}/>\r\n          <NavBar appUser={this.props.appUser} user={this.props.user} />\r\n            {((isNN(this.props.appUser.role) && !this.isUser()) || isNN(this.props.user.homes)) ?\r\n            <Switch>\r\n              <Route path={'/'} exact component={CDashboard} />\r\n              {/* <Route path={'/login'} exact component={CLogin} /> */}\r\n              {this.isUser() && <Route path={'/members'} exact component={CMembers} />}\r\n              {this.isUser() && <Route path={'/new-member'} exact component={CNewMember} />}\r\n              {this.isUser() && <Route path={'/vehicles'} exact component={CVehicles} />}\r\n              {this.isUser() && <Route path={'/new-vehicle'} exact component={CNewVehicle} />}\r\n              {this.isUser() && <Route path={'/servents'} exact component={CServents} />}\r\n              {this.isUser() && <Route path={'/new-servent'} exact component={CNewServent} />}\r\n              {(this.isUser() || this.isAdmin() || this.isManager()) && <Route path={'/tickets'} exact component={CTickets} />}\r\n              {this.isUser() && <Route path={'/new-ticket'} exact component={CNewTicket} />}\r\n              {this.isUser() && <Route path={'/visitors'} exact component={CVisitors} />}\r\n              {/* {this.isUser() && <Route path={'/new-visitor'} exact component={CNewVisitor} />} */}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/ads'} exact component={CAds} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/new-ad'} exact component={CNewAd} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/notification'} exact component={CNotification} />}\r\n              {this.isAdmin() && <Route path={'/users'} exact component={CUsers} />}\r\n              {this.isAdmin() && <Route path={'/edit-user/:id/:isApprove'} exact component={CEditUser} />}\r\n              {this.isAdmin() && <Route path={'/approve-users'} exact component={CApproveUsers} />}\r\n              {this.isAdmin() && <Route path={'/homes'} exact component={CHomes} />}\r\n              {this.isAdmin() && <Route path={'/view-home/:id'} exact component={CViewHome} />}\r\n              {this.isAdmin() && <Route path={'/edit-home/:id'} exact component={CEditHome} />}\r\n              {this.isAdmin() && <Route path={'/blocks'} exact component={CBlocks} />}\r\n              {this.isAdmin() && <Route path={'/edit-block/:id'} exact component={CEditBlock} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/payment'} exact component={CPayment} />}\r\n              {(this.isAdmin() || this.isManager() || this.isGateKeeper()) && <Route path={'/all-visitors'} exact component={CAllVisitors} />}\r\n              <Route path={'/notice'} exact component={CNotice} />\r\n              {this.isUser() && <Route path={'/new-outing'} exact component={CNewOuting} />}\r\n              <Route path={'/my-profile'} exact component={CMyProfile} />\r\n              {this.props.user.role.split(',').length > 0 && <Route path={'/my-role'} exact component={CMyRole} />}\r\n              <Route path={'/my-documents'} exact component={CMyDocuments} />\r\n              <Route path={'/change-password'} exact component={CChangePassword} />\r\n              <Route path={'/info'} exact component={CHelp} />              \r\n              <Route component={NotFound} />\r\n            </Switch>\r\n            :\r\n            <Text style={{margin: 20}}>No home assigned to you. Please contact administrator/manager.</Text>\r\n            }\r\n          {(isNNObject(this.props.user) && isNN(this.props.user._id)) &&\r\n          <TabBar />\r\n          }\r\n          <Spinner visible={this.state.isLoading} text={\"Loading...\"} />\r\n        </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLOR.INVERSE,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start'\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { getProfile, homeChange, logout } from '../store/actions/account';\r\nimport Page from '../components/home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    getProfile: (callback: (result: boolean, message: string) => void) => dispatch(getProfile(callback)),\r\n    onHomeChange: (index: number, callback: (result: boolean) => void) => dispatch(homeChange(index, callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Login } from '../containers/login';\r\nimport { Home } from '../containers/home';\r\nimport { IAppUser } from '../models/app-user/app-user';\r\nimport { isNN } from '../util';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  setLogin: (isLoggedIn: boolean) => void\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class AppContainer extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // };\r\n\r\n  componentDidMount() {\r\n    let token: string | null = sessionStorage.getItem('auth_token');\r\n    if(isNN(token)){\r\n      this.props.setLogin(true);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n        this.props.appUser.isLoggedIn ? \r\n          <HashRouter>\r\n            <Home />\r\n          </HashRouter>\r\n        :\r\n          <Login />\r\n    )\r\n  }\r\n};","import { connect } from 'react-redux';\nimport { IAppState } from '../models/app-state';\nimport { setLogin } from '../store/actions/account';\nimport Page from '../components/app-container';\n\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\n   appUser: state.AppUser\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n   setLogin: (isLoggedIn: boolean) => dispatch(setLogin(isLoggedIn))\n});\n\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(Page);","\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\r\nimport { store } from './store/app-store';\r\nimport { AppContainer } from './containers/app-container';\r\nimport { init as fcmInit } from './services/init-fcm';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './css/bootstrap.min.css';\r\nimport './css/common.scss';\r\n\r\nexport default class App extends React.Component {\r\n    componentDidMount() {\r\n      fcmInit();\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        // FCM.notificationDisplayedListener();\r\n        // FCM.notificationListener();\r\n        // FCM.notificationOpenedListener();\r\n    };\r\n  \r\n    render() {\r\n        return(\r\n          <Provider store={store}>\r\n            <AppContainer />\r\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_RIGHT} />\r\n          </Provider>      \r\n        )\r\n    }\r\n};","import * as firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n\r\nexport const init = () => {\r\n  try{\r\n  const initializedFirebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCrGumtbn2McvNXzZdhShhLaW0QsIFZxOk\",\r\n    authDomain: \"nest-df0a7.firebaseapp.com\",\r\n    databaseURL: \"https://nest-df0a7.firebaseio.com\",\r\n    projectId: \"nest-df0a7\",\r\n    storageBucket: \"nest-df0a7.appspot.com\",\r\n    messagingSenderId: \"422026408390\",\r\n    appId: \"1:422026408390:web:cf0e6a945e7f1ec0d602c7\"\r\n  });\r\n  \r\n  const messaging = initializedFirebaseApp.messaging();\r\n  \r\n  messaging.usePublicVapidKey(\r\n    \"BExnmgKfYLBd44lIqI5xRAD55I5Qhsaa7sI_wJ19zcIuq05y2Z1AtuaNBChU--UhjFxpA2XLR2lI02otUje4Rkk\"\r\n  );\r\n  \r\n  messaging\r\n  .requestPermission()\r\n  .then(async function() {\r\n    const token = await messaging.getToken();\r\n    localStorage.setItem('fcm_token', token);\r\n  })\r\n  .catch(function(err) {\r\n    console.log(\"Unable to get permission to notify.\", err);\r\n  });\r\n}catch(ex){\r\n  console.log('FCM ERROR: ', ex);\r\n}\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const registerServiceWorker = () => {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker\r\n      .register(\"./firebase-messaging-sw.js\")\r\n      .then(function(registration) {\r\n        console.log(\"Registration successful, scope is:\", registration.scope);\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Service worker registration failed, error:\", err);\r\n      });\r\n  }\r\n};\r\n\r\nexport { registerServiceWorker };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { registerServiceWorker } from './services/register-sw';\r\n\r\nregisterServiceWorker();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}