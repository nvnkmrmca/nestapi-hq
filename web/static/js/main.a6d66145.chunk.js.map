{"version":3,"sources":["store/action-types.ts","store/reducers/app-user.ts","store/reducers/user.ts","store/reducers/ads.ts","store/reducers/polls.ts","store/reducers/outings.ts","store/reducers/documents.ts","store/reducers/users.ts","store/reducers/homes.ts","store/reducers/user-homes.ts","store/reducers/tickets.ts","store/reducers/blocks.ts","store/reducers/gate-no.ts","store/reducers/state.ts","store/app-store.ts","constants/index.ts","util/index.ts","store/api/api.ts","store/actions/account.ts","components/common/elements.tsx","components/common/button.tsx","components/common/spinner.tsx","components/images.ts","util/toast.ts","components/common/radio-button.tsx","components/login/sign-up.tsx","components/login/index.tsx","containers/login.tsx","components/home/title-bar.tsx","constants/nav.ts","components/home/nav-bar.tsx","components/home/footer.tsx","store/actions/payment.ts","store/actions/ad.ts","store/actions/ticket.ts","store/actions/visitor.ts","store/actions/file.ts","components/home/my-dues.tsx","util/convert.ts","components/home/history.tsx","components/home/custom-list.tsx","components/common/banner.tsx","components/common/block-spinner.tsx","components/common/ads.tsx","components/common/tickets.tsx","components/common/visitors.tsx","components/home/home.tsx","components/home/manager/home.tsx","components/common/checkbox.tsx","components/home/gatekeeper/visitors-view.tsx","components/home/gatekeeper/new-visitor.tsx","components/home/gatekeeper/home.tsx","containers/dashboard.tsx","components/home/dashboard.tsx","store/actions/member.ts","components/common/breadcrum.tsx","containers/members.tsx","components/home/members.tsx","containers/new-member.tsx","components/home/new-member.tsx","store/actions/vehicle.ts","containers/vehicles.tsx","components/home/vehicles.tsx","containers/new-vehicle.tsx","components/home/new-vehicle.tsx","store/actions/servant.ts","containers/servants.tsx","components/home/servants.tsx","containers/all-servants.tsx","components/home/gatekeeper/servants.tsx","containers/all-takeaways.tsx","components/home/gatekeeper/takeaways.tsx","containers/new-servant.tsx","components/home/new-servant.tsx","containers/tickets.tsx","components/home/tickets.tsx","containers/new-ticket.tsx","components/home/new-ticket.tsx","containers/visitors.tsx","components/home/visitors.tsx","containers/change-password.tsx","components/home/change-password.tsx","containers/my-profile.tsx","components/home/my-profile.tsx","containers/my-role.tsx","components/home/my-role.tsx","containers/ads.tsx","components/home/manager/ads.tsx","containers/new-ad.tsx","components/home/manager/new-ad.tsx","containers/users.tsx","components/home/manager/users.tsx","store/actions/home.ts","containers/homes.tsx","components/home/manager/homes.tsx","containers/edit-user.tsx","components/home/manager/edit-user.tsx","containers/approve-users.tsx","components/home/manager/approve-users.tsx","containers/edit-home.tsx","components/home/manager/edit-home.tsx","containers/all-visitors.tsx","components/home/gatekeeper/visitors.tsx","containers/notification.tsx","store/actions/notification.ts","components/home/manager/notification.tsx","store/actions/outing.ts","containers/outings.tsx","components/home/outings.tsx","containers/new-outing.tsx","components/home/new-outing.tsx","store/actions/documents.ts","containers/my-documents.tsx","components/home/my-documents.tsx","store/actions/block.ts","containers/blocks.tsx","components/home/manager/blocks.tsx","containers/edit-block.tsx","components/home/manager/edit-block.tsx","components/home/manager/payment-form.tsx","components/home/manager/payment-history.tsx","containers/payment.tsx","components/home/manager/payment.tsx","components/home/manager/view-home/info.tsx","components/home/manager/view-home/members.tsx","components/home/manager/view-home/vehicles.tsx","components/home/manager/view-home/servants.tsx","components/home/manager/view-home/tickets.tsx","components/home/manager/view-home/visitors.tsx","components/home/manager/view-home/payments.tsx","components/home/manager/view-home/documents.tsx","containers/view-home.tsx","components/home/manager/view-home/index.tsx","store/actions/poll.ts","util/calc.ts","components/home/manager/poll.tsx","components/home/poll.tsx","containers/notice.tsx","components/home/notification.tsx","containers/help.tsx","components/home/help.tsx","components/not-found/index.tsx","theme/scripts/sidebar/index.js","theme/scripts/scrollbar/index.js","theme/scripts/popover/index.js","containers/home.tsx","components/home/index.tsx","containers/app-container.tsx","components/app-container.tsx","theme/scripts/utils/index.js","serviceWorker.js","services/register-sw.js","index.tsx","App.tsx","services/init-fcm.js"],"names":["actionTypes","handleLoginResult","state","payload","Object","objectSpread2","isLoggedIn","handleRoleResult","role","handleHomeIndexResult","homeIndex","handleResult","_id","number","name","age","gender","mobileNo","emailId","type","image","relationship","otherRelationship","createdBy","updatedBy","homes","client","data","isUpToDate","isError","errorMessage","State","combineReducers","AppUser","arguments","length","undefined","action","SET_LOGIN_STATUS","SET_ROLE","SET_HOME_INDEX","RESET","User","isApproved","isPrimary","hasOwnAccess","isOwnAccessRequested","description","address","upi","id","rep","repType","config","appType","hasOtherGender","hasPayment","ticketCategories","notificationTypes","memberRelationships","LOAD_USER","Ads","LOAD_ADS","Polls","LOAD_POLLS","Outings","LOAD_OUTINGS","Documents","LOAD_DOCUMENTS","Users","LOAD_USERS","Homes","LOAD_HOMES","UserHomes","LOAD_USERHOMES","Tickets","LOAD_TICKETS","Blocks","LOAD_BLOCKS","GateNo","SET_GATE_NO","store","createStore","compose","applyMiddleware","reduxThunk","IMAGE_BASE_PATH","API_BASE_PATH","FILE_BASE_PATH","DEFAULT_DATE_FORMAT","DEFAULT_DATE_TIME_FORMAT","ROLE","APPTYPE","MONTH","title","value","isNN","_input","isNNObject","json2Str","JSON","stringify","ex","jsError","generateUUID","d","Date","getTime","performance","now","replace","c","r","Math","random","floor","toString","_ex","_funName","console","log","onEnter","_e","_callback","keyCode","which","Api","url","get","callback","_this","fetch","post","delete","patch","put","upload","_callee","token","clientId","userId","formData","regenerator_default","a","wrap","_context","prev","next","getAS","sent","FormData","append","file","method","headers","Accept","x-access-token","client-id","user-id","body","then","response","status","sessionStorage","removeItem","window","location","reload","json","message","catch","error","stop","_callee2","key","_context2","getItem","abrupt","t0","_callee3","_context3","Content-Type","logout","dispatch","setLoginResult","setHomeIndexResult","resetState","setGateNoResult","gateNo","setRoleResult","getUserResult","getUsersResult","getHomesResult","getBlockResult","View","styled","div","_templateObject","ScrollView","_templateObject2","Image","img","_templateObject3","TextInput","input","_templateObject4","TextArea","textarea","_templateObject5","Picker","select","_templateObject6","Text","label","_templateObject7","common_button","props","onPress","className","style","react","onClick","spinner","visible","Images","logo","workInProgress","username","password","mobile","email","loading","avatarMale","avatarFemale","Toast","success","msg","toast","fail","warn","warning","info","show","bgColor","textColor","radio_button","isActive","text","checked","htmlFor","sign_up","_useState","useState","_useState2","slicedToArray","setId","_useState3","_useState4","clientCode","setClientCode","_useState5","_useState6","setNumber","_useState7","_useState8","setName","_useState9","_useState10","setAge","_useState11","_useState12","setGender","_useState13","_useState14","setMobileNo","_useState15","_useState16","setEmailId","_useState17","_useState18","setType","_useState19","_useState20","setRole","react_default","createElement","placeholder","onChange","event","target","member","toLowerCase","onSignUp","result","styles","txtIcon","marginLeft","height","width","resizeMode","alignItems","top","Login","connect","ownProps","onLogin","userName","fcm_token","localStorage","controller","setItem","rememberMe","fcmToken","os","osVersion","login","onForgetPassword","mobileNumber","forgetPassword","assign","signup","isLoading","setIsLoading","setUserName","setPassword","setMessage","isForgetPass","setIsForgetPass","isSignUp","setIsSignUp","setMobileNumber","setEmail","rMessage","onForgetPassSubmit","maxWidth","src","onKeyPress","e","Fragment","borderRadius","title_bar","href","appUser","user","data-toggle","map","i","index","onHomeChange","indexOf","split","react_router_dom","to","toLocaleUpperCase","alt","confirmAlert","buttons","onLogout","NAV","icon","path","roles","child","hasMRole","nav_bar","padding","footer","loadAll","appClientId","homeId","sCallback","fCallback","getAdResult","save","ads","foundIndex","findIndex","unshift","createdAt","getTicketsResult","tickets","arrTickets","category","_homeId","comments","search","isProfile","my_dues","paymentId","amount","transactionRef","setPayment","totalDue","home","payments","amountPaid","transactions","filter","t","j","isSuccess","getTotalDue","p","m","forMonth","forYear","payNow","toDateString","_format","moment","format","toDateTimeString","home_history","slice","paidDate","custom_list","banner","color","hasCount","count","block_spinner","common_ads","data-role","common_tickets","getBatchColor","date","toUpperCase","getFullYear","getMonth","getDate","visitors","setData","useEffect","onLoad","isRejected","isEntered","isExit","home_home","activeTab","setActiveTab","members","history","push","vehicles","onPaymentUpload","onPaymentUpdate","onLoadVisitors","manager_home","blocks","users","common_checkbox","visitors_view","isZoomImage","setIsZoomImage","zoomImage","setZoomImage","searchText","setSearchText","tSearchText","homeNumber","passCode","isSearch","onActiveChange","personCount","vehicleType","vehicleNo","approvedBy","approvedAt","enteredBy","enteredAt","exitBy","exitGateNo","exitAt","arriveAt","toDate","onExit","onApprove","onReject","onRemove","onSelect","index_es","open","onClose","new_visitor","setHomeId","arriveAtTime","fileName","setFormData","showHomes","setShowHomes","homeSearchText","setHomeSearchText","searchResult","setSearchResult","isShowSearch","setIsShowSearch","onClear","onSearch","onToggleLoading","entry_default","minDate","maxDate","add","dist_entry_default","time","maxLength","accept","files","arrFileName","onUpload","setHours","parseInt","visitor","isUser","onSave","gatekeeper_home","setGateNo","onBlur","onGateNoChanged","onSaveVisitor","onSearchVisitor","Dashboard","outings","approvalid","transaction","paymentIndex","update","saveVisitor","fileUpload","searchVisitor","onLoadAds","loadAllAds","onLoadTickets","loadAllTickets","loadAllVisitors","breadcrum","link","Members","remove","isEdit","setIsEdit","setState","NewMember","Vehicles","vehicle","NewVehicle","loadAllByHome","loadClockings","pn","rc","Servants","onCreateTakeaway","createTakeaway","onRemoveTakeaway","removeTakeaway","onLoadClockings","viewId","takeaways","takeawayTitle","takeawayDesc","editTakeawayId","editTakeawayTitle","editTakeawayDesc","viewClockingId","clockings","clockingPN","clockingRC","servant","tData","lastClocking","at","updatedAt","takeawayIndex","servantId","apply","toConsumableArray","AllServants","onClocking","clocking","setViewId","setTakeaways","setClocking","v","dData","AllTakeaways","loadActiveTakeaways","exitTakeaway","NewServant","onResolve","resolve","onStart","start","onAddComment","ticketId","comment","ticketIndex","commentIndex","addComment","onRemoveComment","removeComment","editCommentId","editComment","ticket","createdByName","NewTicket","setCategory","setTitle","setDescription","setStatus","Visitors","approve","reject","setIsActive","isRequestNew","setIsRequestNew","setPassCode","loadData","vData","concat","fontSize","ChangePassword","onUpdate","newPassword","changePassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","policyResult","anUpperCase","aLowerCase","aNumber","aSpecial","numUpper","numLower","numNums","numSpecials","test","passwordPolicyCheck","MyProfile","updateProfile","MyRole","updateRole","ad","NewAd","userHomes","removeByAM","searchResultIndex","setSearchResultIndex","tempSearchText","h","memberIds","load","toLocaleLowerCase","EditUser","homeIds","isApprove","isAM","saveByAM","onAllowOwnAccess","isAllow","allowOwnAccess","isShowHomes","setIsShowHomes","isAdmin","isManager","isGatekeeper","isMaintenanceSupervisor","isSecuritySupervisor","isMaintenanceManager","isSecurityManager","match","params","tRole","getHomes","maxHeight","tHomeIds","ApproveUsers","accountController","loadWFAUsers","EditHome","onCheckNumberAvail","checkNumberAvail","isShowUsers","setIsShowUsers","blockId","bedRoom","parking","_blockId","u","getUsers","tMembers","AllVisitors","enter","exit","Notification","onPush","setBody","notification","disabled","getOutingResult","onReturnBack","isReturned","returnedAt","retunBack","o","fromDate","place","outingId","NewOuting","datePickerType","datePickerDate","outing","minHeight","getDocumentResult","MyDocuments","documents","document","ho","rel","EditBlock","forEach","homeCount","setHomeCount","block","b","payment_form","setAmount","month","setMonth","year","setYear","isAllHome","setIsAllHome","setHomes","tHomes","payment_history","isShowUpdateModel","uPaymentId","uAmount","uDescription","mode","pData","Payment","updatePay","blockName","view_home_members","view_home_vehicles","view_home_servants","view_home_tickets","setComments","view_home_visitors","setTransactions","getAmountPaid","txnRef","txnId","reason","view_home_documents","ViewHome","onLoadMembers","loadMembers","onLoadVehicles","loadVehicles","onLoadServants","loadServants","loadTickets","loadVisitors","onLoadPayments","loadPayments","onLoadDocuments","loadDocuments","toggleLoading","getPollResult","percentage","_partialValue","_totalValue","manager_poll","topic","isAllowMultiple","isOneVotePerFlat","isAnonymous","pollOption","showVotePoll","po","poll","options","polls","newOptions","votes","poi","option","sort","vo","voi","loadVotes","home_poll","curDate","votePollId","setVotePollId","setVotes","currentDate","oi","optionId","tVotes","_memberId","onSelectOption","pollId","onVote","Notice","remainders","complaints","onLoadPoll","userRole","loadAllPools","onSavePoll","onRemovePoll","Id","UserId","lstPoll","pollIndex","vote","isShowPoll","Help","not_found","initSideBar","$","on","$this","this","parent","hasClass","children","slideUp","removeClass","slideDown","addClass","find","each","el","attr","substr","pathname","toggleClass","preventDefault","click","setTimeout","dispatchEvent","EVENT","initScrollBar","scrollables","PerfectScrollbar","initPopover","popover","tooltip","Home","getProfile","mresult","bresult","hresult","homeChange","isGateKeeper","react_router","exact","component","CDashboard","CMembers","CNewMember","CVehicles","CNewVehicle","CServants","CAllServants","CNewServant","CTickets","CNewTicket","CVisitors","COutings","CNewOuting","CAds","CNewAd","CNotification","CUsers","CEditUser","CApproveUsers","CHomes","CViewHome","CEditHome","CBlocks","CEditBlock","CPayment","CAllVisitors","CAllTakeaways","CNotice","CMyProfile","CMyRole","CMyDocuments","CChangePassword","CHelp","NotFound","AppContainer","setLogin","createEvent","initUIEvent","addEventListener","not","host","Boolean","hostname","navigator","serviceWorker","register","registration","scope","err","ReactDOM","render","messaging","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","usePublicVapidKey","requestPermission","asyncToGenerator","mark","getToken","fcmInit","es","lib","ToastsStore","position","ToastsContainerPosition","TOP_RIGHT","getElementById","ready","unregister"],"mappings":"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","file":"static/js/main.a6d66145.chunk.js","sourcesContent":["export enum actionTypes{\r\n    SET_LOGIN_STATUS,\r\n    SET_ROLE,\r\n    SET_HOME_INDEX,\r\n    LOAD_USER,\r\n    LOAD_ADS,\r\n    LOAD_POLLS,\r\n    LOAD_OUTINGS,\r\n    LOAD_DOCUMENTS,\r\n    LOAD_USERS,\r\n    LOAD_HOMES,\r\n    LOAD_USERHOMES,\r\n    LOAD_TICKETS,\r\n    SAVE_MEMBER,\r\n    LOAD_BLOCKS,\r\n    SET_GATE_NO,\r\n    RESET\r\n};","import { actionTypes } from '../action-types';\r\nimport { IAppUser } from '../../models/app-user/app-user';\r\n\r\nconst createEmptyResult = (): IAppUser => ({\r\n    isLoggedIn: false,\r\n    role: '',\r\n    homeIndex: -1\r\n});\r\n\r\nexport const AppUser = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_LOGIN_STATUS:\r\n            return handleLoginResult(state, action.payload);\r\n        case actionTypes.SET_ROLE:\r\n            return handleRoleResult(state, action.payload);\r\n        case actionTypes.SET_HOME_INDEX:\r\n            return handleHomeIndexResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleLoginResult = (state: IAppUser, payload: boolean): IAppUser => {\r\n    return {\r\n        ...state,\r\n        isLoggedIn: payload\r\n    };\r\n};\r\n\r\nconst handleRoleResult = (state: IAppUser, payload: string): IAppUser => {\r\n    return {\r\n        ...state,\r\n        role: payload\r\n    };\r\n};\r\n\r\nconst handleHomeIndexResult = (state: IAppUser, payload: number): IAppUser => {\r\n    return {\r\n        ...state,\r\n        homeIndex: payload\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\n\r\nconst createEmptyResult = (): IUser => ({\r\n    _id: '',\r\n    number: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    type: '',\r\n    role: '',\r\n    image: '',\r\n    relationship: '',\r\n    otherRelationship: '',\r\n    isApproved: null,\r\n    isPrimary: false,\r\n    hasOwnAccess: false,\r\n    isOwnAccessRequested: false,\r\n    createdBy: '',\r\n    updatedBy: '',\r\n    homes: [],\r\n    client: {\r\n        _id: '',\r\n        name: '',\r\n        description: '',\r\n        address: '',\r\n        upi: {\r\n            id: '',\r\n            name: ''\r\n        },\r\n        rep: {\r\n            name: '',\r\n            mobileNo: '',\r\n            emailId: '',\r\n            repType: ''\r\n        },\r\n        config: {\r\n            appType: '',\r\n            hasOtherGender: false,\r\n            hasPayment: false,\r\n            ticketCategories: [],\r\n            notificationTypes: [],\r\n            memberRelationships: []\r\n        }\r\n    }\r\n});\r\n\r\nexport const User = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USER:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUser, payload: IUser): IUser => {\r\n    return {\r\n        ...state,\r\n        _id: payload._id,\r\n        number: payload.number,\r\n        name: payload.name,\r\n        age: payload.age,\r\n        gender: payload.gender,\r\n        mobileNo: payload.mobileNo,\r\n        emailId: payload.emailId,\r\n        type: payload.type,\r\n        role: payload.role,\r\n        image: payload.image,\r\n        relationship: payload.relationship,\r\n        otherRelationship: payload.otherRelationship,\r\n        createdBy: payload.createdBy,\r\n        updatedBy: payload.updatedBy,\r\n        homes: payload.homes,\r\n        client: payload.client\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\nimport { IAds } from '../../models/store/ads';\n\nconst createEmptyResult = (): IAds => ({\n    data: [],\n    isUpToDate: false,\n    isError: false,\n    errorMessage: \"\"\n});\n\nexport const Ads = (state = createEmptyResult(), action: any) => {\n    switch (action.type) {\n        case actionTypes.LOAD_ADS:\n            return handleResult(state, action.payload);\n        case actionTypes.RESET:\n            state = createEmptyResult();\n    }\n    return state;\n};\n\nconst handleResult = (state: IAds, payload: IAds): IAds => {\n    return {\n        ...state,\n        data: payload.data,\n        isUpToDate: payload.isUpToDate,\n        isError: payload.isError,\n        errorMessage: payload.errorMessage\n    };\n};\n","import { actionTypes } from '../action-types';\nimport { IPolls } from '../../models/store/polls';\n\nconst createEmptyResult = (): IPolls => ({\n    data: [],\n    isUpToDate: false,\n    isError: false,\n    errorMessage: \"\"\n});\n\nexport const Polls = (state = createEmptyResult(), action: any) => {\n    switch (action.type) {\n        case actionTypes.LOAD_POLLS:\n            return handleResult(state, action.payload);\n        case actionTypes.RESET:\n            state = createEmptyResult();\n    }\n    return state;\n};\n\nconst handleResult = (state: IPolls, payload: IPolls): IPolls => {\n    return {\n        ...state,\n        data: payload.data,\n        isUpToDate: payload.isUpToDate,\n        isError: payload.isError,\n        errorMessage: payload.errorMessage\n    };\n};\n","import { actionTypes } from '../action-types';\nimport { IOutings } from '../../models/store/outings';\n\nconst createEmptyResult = (): IOutings => ({\n    data: [],\n    isUpToDate: false,\n    isError: false,\n    errorMessage: \"\"\n});\n\nexport const Outings = (state = createEmptyResult(), action: any) => {\n    switch (action.type) {\n        case actionTypes.LOAD_OUTINGS:\n            return handleResult(state, action.payload);\n        case actionTypes.RESET:\n            state = createEmptyResult();\n    }\n    return state;\n};\n\nconst handleResult = (state: IOutings, payload: IOutings): IOutings => {\n    return {\n        ...state,\n        data: payload.data,\n        isUpToDate: payload.isUpToDate,\n        isError: payload.isError,\n        errorMessage: payload.errorMessage\n    };\n};\n","import { actionTypes } from '../action-types';\nimport { IDocuments } from '../../models/store/documents';\n\nconst createEmptyResult = (): IDocuments => ({\n    data: [],\n    isUpToDate: false,\n    isError: false,\n    errorMessage: \"\"\n});\n\nexport const Documents = (state = createEmptyResult(), action: any) => {\n    switch (action.type) {\n        case actionTypes.LOAD_DOCUMENTS:\n            return handleResult(state, action.payload);\n        case actionTypes.RESET:\n            state = createEmptyResult();\n    }\n    return state;\n};\n\nconst handleResult = (state: IDocuments, payload: IDocuments): IDocuments => {\n    return {\n        ...state,\n        data: payload.data,\n        isUpToDate: payload.isUpToDate,\n        isError: payload.isError,\n        errorMessage: payload.errorMessage\n    };\n};\n","import { actionTypes } from '../action-types';\r\nimport { IUsers } from '../../models/store/users';\r\n\r\nconst createEmptyResult = (): IUsers => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Users = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUsers, payload: IUsers): IUsers => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IHomes } from '../../models/store/homes';\r\n\r\nconst createEmptyResult = (): IHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Homes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_HOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IHomes, payload: IHomes): IHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUserHomes } from '../../models/store/user-homes';\r\n\r\nconst createEmptyResult = (): IUserHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const UserHomes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERHOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUserHomes, payload: IUserHomes): IUserHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\n\r\nconst createEmptyResult = (): ITickets => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Tickets = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_TICKETS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: ITickets, payload: ITickets): ITickets => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\nimport { IBlocks } from '../../models/store/blocks';\n\nconst createEmptyResult = (): IBlocks => ({\n    data: [],\n    isUpToDate: false,\n    isError: false,\n    errorMessage: \"\"\n});\n\nexport const Blocks = (state = createEmptyResult(), action: any) => {\n    switch (action.type) {\n        case actionTypes.LOAD_BLOCKS:\n            return handleResult(state, action.payload);\n        case actionTypes.RESET:\n            state = createEmptyResult();\n    }\n    return state;\n};\n\nconst handleResult = (state: IBlocks, payload: IBlocks): IBlocks => {\n    return {\n        ...state,\n        data: payload.data,\n        isUpToDate: payload.isUpToDate,\n        isError: payload.isError,\n        errorMessage: payload.errorMessage\n    };\n};\n","import { actionTypes } from '../action-types';\r\n\r\nexport const GateNo = (state = '', action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_GATE_NO:\r\n            return handleResult(state, action.payload);\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: string, payload: string): string => {\r\n    return payload;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { IAppState } from '../../models/app-state';\r\nimport { AppUser } from './app-user';\r\nimport { User } from './user';\r\nimport { Ads } from './ads';\r\nimport { Polls } from './polls';\r\nimport { Outings } from './outings';\r\nimport { Documents } from './documents';\r\nimport { Users } from './users';\r\nimport { Homes } from './homes';\r\nimport { UserHomes } from './user-homes';\r\nimport { Tickets } from './tickets';\r\nimport { Blocks } from './blocks';\r\nimport { GateNo } from './gate-no';\r\n\r\nexport const State = combineReducers<IAppState>({\r\n    AppUser: AppUser,\r\n    User: User,\r\n    Ads: Ads,\r\n    Polls: Polls,\r\n    Outings: Outings,\r\n    Documents: Documents,\r\n    Users: Users,\r\n    Homes: Homes,\r\n    UserHomes: UserHomes,\r\n    Tickets: Tickets,\r\n    Blocks: Blocks,\r\n    GateNo: GateNo\r\n});\r\n","import { Store, createStore, compose, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport { State } from './reducers/state';\nimport { IAppState } from '../models/app-state';\n\nexport const store: Store<IAppState> = createStore(\n  State,\n  compose(\n    applyMiddleware(reduxThunk),\n  )\n);","const API_BASE_PATH = 'http://localhost:3001/';\r\n// const API_BASE_PATH = 'https://nestadmin.herokuapp.com/';\r\n\r\nexport const API_PATH = API_BASE_PATH + 'api/';\r\nexport const IMAGE_BASE_PATH = API_BASE_PATH + 'image/';\r\nexport const FILE_BASE_PATH = API_BASE_PATH + 'file/';\r\nexport const DEFAULT_DATE_FORMAT = 'DD/MMM/YYYY';\r\nexport const DEFAULT_DATE_TIME_FORMAT = 'DD/MMM/YYYY hh:mm A';\r\nexport const ROLE = {\r\n    USER: 'USER',\r\n    ADMIN: 'ADMIN',\r\n    GATEKEEPER: 'GATEKEEPER',\r\n    MANAGER: 'MANAGER',\r\n    MAINTENANCE_SUPERVISOR: 'MAINTENANCE SUPERVISOR',\r\n    SECURITY_SUPERVISOR: 'SECURITY SUPERVISOR',\r\n    MAINTENANCE_MANAGER: 'MAINTENANCE MANAGER',\r\n    SECURITY_MANAGER: 'SECURITY MANAGER'\r\n};\r\nexport const APPTYPE = {\r\n    APARTMENT: 'A',\r\n    QUARTERS: 'Q'\r\n};\r\nexport const MONTH = [\r\n    {title: 'JAN', value: 0},\r\n    {title: 'FEB', value: 1},\r\n    {title: 'MAR', value: 2},\r\n    {title: 'APR', value: 3},\r\n    {title: 'MAY', value: 4},\r\n    {title: 'JUN', value: 5},\r\n    {title: 'JUL', value: 6},\r\n    {title: 'AUG', value: 7},\r\n    {title: 'SEP', value: 8},\r\n    {title: 'OCT', value: 9},\r\n    {title: 'NOV', value: 10},\r\n    {title: 'DEC', value: 11}\r\n];","//import { config as apiConfig } from '../store/api/config';\r\n\r\nexport function parseJSON(response: any) {\r\n     return response.json()\r\n};\r\n\r\nexport function isNN(_input: any) { \r\n  return (isNNObject(_input) && _input.length > 0) \r\n};\r\n\r\nexport function isNNObject(_input: any) { \r\n  return (_input !== null && _input !== undefined) \r\n};\r\n\r\nexport function str2Json(_input: string) { \r\n  try {\r\n    return JSON.parse(isNN(_input) ? _input : \"{}\"); \r\n  } catch (ex) { \r\n    jsError(ex, \"String2JSON\"); \r\n    return {}; \r\n  } \r\n};\r\n\r\nexport function json2Str(_input: any) { \r\n  try {\r\n    return (isNNObject(_input) ? JSON.stringify(_input) : \"\");\r\n  } catch (ex) { \r\n    jsError(ex, \"JSON2String\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function getBaseURL(_isApi: boolean) { \r\n  try {\r\n    let baseURL: string = \"\";\r\n    let arrURL = window.location.href.split(\"/\");\r\n    if(isNNObject(arrURL) && arrURL.length > 2){\r\n      if(_isApi){\r\n        //baseURL = arrURL[0] + \"//\" + arrURL[2] + apiConfig.baseURL;\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2];\r\n      }else{\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2] + \"/\";\r\n      }\r\n    }else{\r\n      baseURL = window.location.href;\r\n    }\r\n    return baseURL;\r\n  } catch (ex) { \r\n    jsError(ex, \"getBaseURL\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function generateUUID() { // Public Domain/MIT\r\n  var d = new Date().getTime();\r\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n      d += performance.now(); //use high-precision timer if available\r\n  }\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      var r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n}\r\n\r\nexport function jsError(_ex: any, _funName: string) {\r\n   //alert(\"Javascript Error\\n------------------\\nName: \" + _ex.name + \"\\nMessage: \" + _ex.message + \"\\nFunction: \" + _funName + \"\\nFile: \" + _ex.fileName + \"\\nLine Number: \" + _ex.lineNumber + \"\\nColumn Number: \" + _ex.columnNumber); \r\n   console.log(\"Error:\" + _funName + \":\" + _ex);\r\n};\r\n\r\nexport function onEnter(_e: any, _callback: Function) {\r\n  let code = (_e.keyCode ? _e.keyCode : _e.which);\r\n  if(code === 13 && typeof _callback === 'function') {\r\n    _callback();\r\n  }\r\n};","// import { AsyncStorage } from 'react-native';\r\nimport { API_PATH } from \"../../constants\";\r\nimport { isNNObject, json2Str, isNN } from \"../../util/index\";\r\n\r\nexport default class Api {\r\n    private url: string = API_PATH;\r\n     \r\n    // private url: string =  \"https://192.168.43.80:45456/api/\";\r\n    // private url: string =  \"http://192.168.43.80:45455/api/\";\r\n\r\n    /**\r\n    * HTTP GET operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public get = (url: string, callback: Function) => {\r\n        this.fetch(url, 'GET', callback);\r\n    };\r\n\r\n    /**\r\n    * HTTP POST operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public post = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'POST', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP DELETE operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public delete = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'DELETE', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PATCH operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public patch = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PATCH', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PUT operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public put = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PUT', callback, data);\r\n    };\r\n\r\n    public upload = async(url: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        \r\n        var formData = new FormData();\r\n        formData.append('file', data.file, data.name);\r\n        formData.append('name', data.name);\r\n\r\n        fetch(this.url + url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    // 'Content-Type': 'multipart/form-data',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: formData,\r\n            }).then(response => {\r\n                if(response && response.status && response.status === 401){\r\n                    sessionStorage.removeItem('auth_token');\r\n                    sessionStorage.removeItem('user_id');\r\n                    sessionStorage.removeItem('client_id');\r\n                    window.location.reload();\r\n                }\r\n                return response.json();\r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n\r\n/*\r\n    private fetch = (url: string, method: string, callback: Function, data?: any) => {\r\n        AsyncStorage.getItem('auth_token').then((token) => {\r\n            AsyncStorage.getItem('user_id').then((userId) => {\r\n                this.next(url, 'PUT', token, userId, callback, data);\r\n            }).catch(ex => {\r\n                this.next(url, 'PUT', token, '', callback, data);\r\n            }); \r\n        }).catch(ex => {\r\n            this.next(url, 'PUT', '', '', callback, data);\r\n        });\r\n    };\r\n    */\r\n\r\n    private getAS = async (key: string) => {\r\n        try {\r\n            // return await AsyncStorage.getItem(key);\r\n            return await sessionStorage.getItem(key);\r\n        } catch (error) {\r\n            return '';\r\n        }\r\n    };\r\n    \r\n    private fetch = async(url: string, method: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        fetch(this.url + url, \r\n            {\r\n                method: method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: isNNObject(data) ? json2Str(data) : null,\r\n            }).then(response => {\r\n                if(response && response.status && response.status === 401){\r\n                    sessionStorage.removeItem('auth_token');\r\n                    sessionStorage.removeItem('user_id');\r\n                    sessionStorage.removeItem('client_id');\r\n                    window.location.reload();\r\n                }\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n    private callback = (callback: Function, data: any, message: any) => {\r\n        // console.log('message: '+ message);\r\n        if(isNNObject(callback) && typeof callback == \"function\"){\r\n            callback(data, message);\r\n        }\r\n    };\r\n\r\n    /*\r\n        private handleResult = (data: any) => {\r\n        if (data) {\r\n            if (data.message) {\r\n                return null;\r\n            } else {\r\n                return data;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private onBadRequest = () => {\r\n       \r\n    };\r\n    \r\n    private onError = () => {\r\n        \r\n        // alert('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n        // console.error('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n         \r\n    };\r\n    \r\n    private onUnAuthorized = () => {\r\n        // alert('UnAuthorized Request');\r\n                 \r\n    };\r\n    */\r\n};","// import { AsyncStorage, Platform } from 'react-native';\r\nimport { actionTypes } from '../action-types';\r\nimport Api from '../api/api';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IUsers } from '../../models/store/users';\r\n// import { IAd } from '../../models/ad/ad';\r\n// import { IAds } from '../../models/store/ads';\r\n// import { IPoll } from '../../models/poll/poll';\r\n// import { IPolls } from '../../models/store/polls';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IHomes } from '../../models/store/homes';\r\n// import { IUserHome } from '../../models/user-home/user-home';\r\n// import { IUserHomes } from '../../models/store/user-homes';\r\nimport { IMember } from '../../models/home';\r\n// import { ITicket } from '../../models/home/ticket';\r\n// import { ITickets } from '../../models/store/tickets';\r\nimport { IBlock } from '../../models/block';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'account/';\r\n\r\nexport const login = (userName: string, password: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  let fcm_token: string | null = localStorage.getItem('fcm_token');\r\n    new Api().post(controller + 'login', (result: any, message: string) => {\r\n      // console.log('OUT: ', result);\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.token) && isNN(result.data.userId))\r\n      {\r\n        // console.log('IN: ', result);\r\n        try {\r\n          // console.log(result.token);\r\n          sessionStorage.setItem('auth_token', result.data.token);\r\n          sessionStorage.setItem('client_id', result.data.clientId);\r\n          sessionStorage.setItem('user_id', result.data.userId);\r\n        } catch (error) {\r\n          // console.error('AsyncStorage error: ' + error.message);\r\n        }\r\n        dispatch(setLoginResult(true));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, {\r\n      userName: userName,\r\n      password: password,\r\n      rememberMe: false,\r\n      fcmToken: fcm_token,\r\n      os: 'web', // Platform.OS, ////TODO\r\n      osVersion: 'web' // Platform.Version ////TODO\r\n    });\r\n};\r\n\r\nexport const getProfile = (callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 'profile', (result: any, message: string) => {\r\n    // console.log('OUT: ', result);\r\n    if(isNNObject(result) && isNNObject(result.data) && isNN(result.data._id))\r\n    {\r\n      dispatch(getUserResult(result.data as IUser));\r\n      dispatch(setHomeIndexResult(isNN(result.data.homes) ? 0 : -1));\r\n      let roles = result.data.role.split(',');\r\n      if(isNN(roles)){\r\n        dispatch(setRoleResult(roles[0]));\r\n      }\r\n      // dispatch(getAdResult(((isNNObject(result.data.ad) && result.data.ad instanceof Array) ? result.data.ad as Array<IAd> : []), true, false, ''));\r\n      // dispatch(getPollResult(((isNNObject(result.data.poll) && result.data.poll instanceof Array) ? result.data.poll as Array<IPoll> : []), true, false, ''));\r\n    \r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0){\r\n        new Api().get('members', (mresult: any, message: string) => {\r\n          if (isNNObject(mresult) && isNN(mresult.data)) {\r\n            dispatch(getUsersResult(mresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(mresult.message) ? mresult.message : 'Failed to load Members.');\r\n          }\r\n        });\r\n        /*\r\n        loadAllMember(result.data.client._id, (members: Array<IMember>) => {\r\n          console.log('members: ', members)\r\n          dispatch(getUsersResult(members, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n        new Api().get('blocks/' + result.data.client._id, (bresult: any, message: string) => {\r\n          if (isNNObject(bresult) && isNN(bresult.data)) {\r\n            dispatch(getBlockResult(bresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n      }\r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0 || roles.indexOf(ROLE.GATEKEEPER) >= 0){\r\n        new Api().get('homes/' + result.data.client._id, (hresult: any, message: string) => {\r\n          if (isNNObject(hresult) && isNN(hresult.data)) {\r\n            hresult.data.forEach((h: any) => {\r\n              h.memberIds = h.members;\r\n              delete h.members;\r\n            });\r\n            dispatch(getHomesResult(hresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n        \r\n        /*\r\n        loadAllHome(result.data.client._id, (homes: Array<IHome>) => {\r\n          console.log('homes: ', homes)\r\n          dispatch(getHomesResult(homes, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n      }\r\n      \r\n      // dispatch(getUsersResult(((isNNObject(result.data.users) && result.data.users instanceof Array) ? result.data.users as Array<IUser> : []), true, false, ''));\r\n      // dispatch(getHomesResult(((isNNObject(result.data.homes) && result.data.homes instanceof Array) ? result.data.homes as Array<IHome> : []), true, false, ''));\r\n      // dispatch(getUserHomesResult(((isNNObject(result.data.userHomes) && result.data.userHomes instanceof Array) ? result.data.userHomes as Array<IUserHome> : []), true, false, ''));\r\n      \r\n      // dispatch(getHomesResult([], true, false, ''));\r\n      // dispatch(getUserHomesResult([], true, false, ''));\r\n      // dispatch(getTicketsResult(((isNNObject(result.data.tickets) && result.data.tickets instanceof Array) ? result.data.tickets as Array<ITicket> : []), true, false, ''));\r\n      //dispatch(setLoginResult(true));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const homeChange = (index: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(setHomeIndexResult(index));\r\n  callback(true);\r\n};\r\n\r\nexport const changePassword = (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'changepassword/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, (result && result.message) ? result.message : message);\r\n    }\r\n  }, {\r\n    password: password,\r\n    newPassword: newPassword\r\n  });\r\n};\r\n\r\nexport const forgetPassword = (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'resetpassword', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.data))\r\n    {\r\n      if(result.data.data === true){\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, result.data.message);\r\n      }\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    mobileNo: mobileNumber,\r\n    emailId: email\r\n  });\r\n};\r\n\r\nexport const updateProfile = (userId: string, name: string, mobileNo: string, emailId: string, image: string, user: IUser, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  new Api().put(controller + 'profile/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.name = name;\r\n      user.mobileNo = mobileNo;\r\n      user.emailId = emailId;\r\n\r\n      dispatch(getUserResult(user));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    name: name,\r\n    mobileNo: mobileNo,\r\n    emailId: emailId,\r\n    image: image\r\n  });\r\n};\r\n\r\nexport const updateRole = (role: string, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  dispatch(setRoleResult(role));\r\n  callback(true, '');\r\n};\r\n\r\nexport const logout = (callback: (result: boolean) => void) => (dispatch: any) => {\r\n  try {\r\n    sessionStorage.removeItem('auth_token');\r\n    sessionStorage.removeItem('user_id');\r\n    sessionStorage.removeItem('client_id');\r\n    dispatch(setLoginResult(false));\r\n    dispatch(setHomeIndexResult(-1));\r\n    dispatch(resetState());\r\n    callback(true);\r\n  } catch (error) {\r\n    // console.error('AsyncStorage error: ' + error.message);\r\n    callback(false);\r\n  }\r\n};\r\n\r\nexport const setLogin = (isLoggedIn: boolean) => (dispatch: any) => {\r\n  dispatch(setLoginResult(isLoggedIn));\r\n};\r\n\r\nexport const signup = (data: IMember, clientCode: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    clientCode: clientCode,\r\n    password: data.mobileNo\r\n  });\r\n  new Api().post(controller + 'signup', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const setGateNo = (gateNo: string) => (dispatch: any) => {\r\n  dispatch(setGateNoResult(gateNo));\r\n};\r\n\r\nconst setGateNoResult = (gateNo: string) => ({\r\n  type: actionTypes.SET_GATE_NO,\r\n  payload: gateNo\r\n});\r\nconst setLoginResult = (data: boolean) => ({\r\n  type: actionTypes.SET_LOGIN_STATUS,\r\n  payload: data\r\n});\r\nconst setRoleResult = (data: string) => ({\r\n  type: actionTypes.SET_ROLE,\r\n  payload: data\r\n});\r\nconst setHomeIndexResult = (data: number) => ({\r\n  type: actionTypes.SET_HOME_INDEX,\r\n  payload: data\r\n});\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n/*\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});\r\n*/\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});\r\n/*\r\nconst getUserHomesResult = (data: Array<IUserHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERHOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUserHomes\r\n});\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});\r\n*/\r\nconst resetState = () => ({\r\n  type: actionTypes.RESET\r\n});","import styled from 'styled-components';\r\n\r\nexport const View = styled.div`\r\n`;\r\n\r\nexport const ScrollView = styled.div`\r\noverflow: auto;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n`;\r\n\r\nexport const Picker = styled.select`\r\n`;\r\n\r\nexport const Text = styled.label`\r\n`;","import * as React from 'react';\r\n\r\ninterface IProps {\r\n  title: string,\r\n  onPress: () => void,\r\n  type?: string,\r\n  className?: string,\r\n  style? : {}\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const {title, onPress, type, className, style} = props;\r\n  return (\r\n    <input type='button' className={'btn ' + (type ? type : 'btn-primary') + (className ? ' ' + className : '')} value={title} onClick={() => onPress()} style={{...style}} />\r\n  );\r\n}","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\n\r\ninterface IProps {\r\n  visible: boolean,\r\n  text?: string\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return (\r\n    props.visible ?\r\n    <View id='loader'>\r\n      <View className=\"bg\"></View>\r\n      <View className=\"spinner\"></View>\r\n    </View>\r\n    :\r\n    null\r\n  );\r\n};","import { IMAGE_BASE_PATH } from '../constants/index';\r\n\r\nexport default class Images {\r\n    static readonly logo = IMAGE_BASE_PATH + 'logo.png';\r\n    static readonly workInProgress = IMAGE_BASE_PATH + 'work-in-progress.png';\r\n    static readonly username = IMAGE_BASE_PATH + 'username.png';\r\n    static readonly password = IMAGE_BASE_PATH + 'password.png';\r\n    static readonly mobile = IMAGE_BASE_PATH + 'mobile.png';\r\n    static readonly email = IMAGE_BASE_PATH + 'email.png';\r\n    static readonly loading = IMAGE_BASE_PATH + 'loading.gif';\r\n    static readonly avatarMale = IMAGE_BASE_PATH + 'avatar-male.png';\r\n    static readonly avatarFemale = IMAGE_BASE_PATH + 'avatar-female.gif';\r\n};","import {ToastsStore as toast} from 'react-toasts';\r\n\r\n class Toast {\r\n   static success = (msg: string) => {\r\n       // Toast.show(msg, '#003300', '#FFFFFF');\r\n       toast.success(msg);\r\n    }\r\n    static fail = (msg: string) => {\r\n        // Toast.show(msg, '#b30000', '#FFFFFF');\r\n        toast.error(msg);\r\n    }\r\n    static warn = (msg: string) => {\r\n        // Toast.show(msg, '#e68a00', '#FFFFFF');\r\n        toast.warning(msg);\r\n    }\r\n    static info = (msg: string) => {\r\n        // Toast.show(msg, '#000080', '#FFFFFF');\r\n        toast.info(msg);\r\n    }\r\n    static show = (msg: string, bgColor: string, textColor: string) => {\r\n\r\n        toast.info(msg);\r\n        \r\n        /*\r\n        // Add a Toast on screen.\r\n        RNToast.show(msg, {\r\n            duration: RNToast.durations.SHORT,\r\n            position: RNToast.positions.TOP,\r\n            shadow: true,\r\n            animation: true,\r\n            hideOnPress: true,\r\n            delay: 0,\r\n            backgroundColor: bgColor,\r\n            textColor: textColor,\r\n            onShow: () => {\r\n                // calls on toast\\`s appear animation start\r\n            },\r\n            onShown: () => {\r\n                // calls on toast\\`s appear animation end.\r\n            },\r\n            onHide: () => {\r\n                // calls on toast\\`s hide animation start.\r\n            },\r\n            onHidden: () => {\r\n                // calls on toast\\`s hide animation end.\r\n            }\r\n        });\r\n        */\r\n    }\r\n};\r\n\r\nexport default Toast;","import * as React from 'react';\r\nimport { isNN, generateUUID } from '../../util';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  onPress?: () => void,\r\n  key?: string,\r\n  className?: string\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const {isActive, text, onPress, key, className} = props;\r\n  let id = generateUUID();\r\n  return (\r\n    <span className={'mR-10 ' + (className ? className : '')}>\r\n      <input type='radio' id={id} key={key} checked={isActive} onClick={onPress ? onPress : () => {}} />\r\n      {isNN(text) &&\r\n        <label htmlFor={id} className='mL-5 va-m'>{text}</label>\r\n      }\r\n    </span>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport { IMember } from '../../models/home';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  onSignUp: (data: IMember, clientCode: string, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [id, setId] = useState('');\r\n  const [clientCode, setClientCode] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [age, setAge] = useState(0);\r\n  const [gender, setGender] = useState('');\r\n  const [mobileNo, setMobileNo] = useState('');\r\n  const [emailId, setEmailId] = useState('');\r\n  const [type, setType] = useState('TENANT');\r\n  const [role, setRole] = useState('USER');\r\n  \r\n  const onSave = () => {\r\n    if(isNN(clientCode) && isNN(number) && isNN(name) && age > 0 && isNN(gender) && isNN(mobileNo) && isNN(emailId)){\r\n        let member = {\r\n          _id: id,\r\n          number: number,\r\n          name: name,\r\n          age: age,\r\n          gender: gender,\r\n          mobileNo: mobileNo,\r\n          emailId: emailId ? emailId.toLowerCase() : '',\r\n          type: type,\r\n          role: role\r\n        } as IMember;\r\n        props.onSignUp(member, clientCode, (result: boolean) => {\r\n          if(result === true){\r\n            setId('');\r\n            setClientCode('');\r\n            setNumber('');\r\n            setName('');\r\n            setAge(0);\r\n            setGender('');\r\n            setMobileNo('');\r\n            setEmailId('');\r\n            setType('TENANT');\r\n            setRole('USER');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Submit.');\r\n    }\r\n  };\r\n\r\n    return(\r\n        <View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' className='form-control' placeholder=\"App Code\" value={clientCode} onChange={(event: any) => setClientCode(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' className='form-control' placeholder=\"User Id / Number\" value={number} onChange={(event: any) => setNumber(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' className='form-control' placeholder=\"Name\" value={name} onChange={(event: any) => setName(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='number' className='form-control' placeholder=\"Age\" value={age > 0 ? age + '' : ''} onChange={(event: any) => setAge(+(event.target.value.replace(/[^0-9]/g, '')))} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={gender === 'M'} text='Male' onPress={() => setGender('M')} />\r\n            <RadioButton isActive={gender === 'F'} text='Female' onPress={() => setGender('F')} />\r\n            <RadioButton isActive={gender === 'O'} text='Other' onPress={() => setGender('O')} />\r\n          </View>            \r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' className='form-control' placeholder=\"Mobile Number\" value={mobileNo} onChange={(event: any) => setMobileNo(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' className='form-control' placeholder=\"Email ID\" value={emailId} onChange={(event: any) => setEmailId(event.target.value)} />\r\n          </View>\r\n          {/* <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={type === 'OWNER'} text='Owner' onPress={() => setType('OWNER')} />\r\n            <RadioButton isActive={type === 'TENANT'} text='Tenant' onPress={() => setType('TENANT')} />\r\n          </View> */}\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n    );\r\n};","import React, {useState} from 'react';\r\nimport { View, Text, TextInput, Image } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Images from '../images';\r\nimport { isNN, onEnter } from '../../util';\r\nimport Toast from  '../../util/toast';\r\nimport { IMember } from '../../models/home';\r\nimport SignUp from './sign-up';\r\n\r\ninterface IProps {\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => void,\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => void,\r\n    onSignUp: (data: IMember, clientCode: string, sCallback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [isForgetPass, setIsForgetPass] = useState(false);\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n    const [mobileNumber, setMobileNumber] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const onLogin = () =>{\r\n        if(isNN(userName) && isNN(password)){\r\n            setMessage('');\r\n            setIsLoading(true);\r\n            props.onLogin(userName, password, (result: boolean, rMessage: string) => {       \r\n                setIsLoading(false);\r\n                if(result === true){\r\n                    setMessage('');\r\n                }else{\r\n                    setMessage(rMessage);\r\n                }\r\n            });\r\n        }else{\r\n            // Toast.warn('Enter Mobile Number and Password to continue.');\r\n            Toast.warn('Enter Mobile Number and Password to continue.');\r\n        }\r\n    };\r\n    \r\n    const onForgetPassword = () =>{\r\n        setIsForgetPass(true);\r\n        setIsSignUp(false);\r\n        setMobileNumber('');\r\n        setEmail('');\r\n        setMessage('');\r\n    };\r\n\r\n    const onForgetPassSubmit = () => {\r\n        if(isNN(mobileNumber) && isNN(email)){\r\n            setMessage('');\r\n            setIsLoading(true);\r\n            props.onForgetPassword(mobileNumber, email.toLowerCase(), (result: boolean, rMessage: string) => {\r\n                setIsLoading(false);\r\n                if(result === true){\r\n                    Toast.success('Password reset success. Login with New password sent to your Email. Change password after login.');\r\n                    setMessage('');\r\n                    setIsForgetPass(false);\r\n                    setIsSignUp(false);\r\n                    setUserName('');\r\n                    setPassword('');\r\n                }else{\r\n                    setMessage(rMessage);\r\n                }\r\n            });\r\n        }else{\r\n            Toast.warn('Enter Mobile Number and Email to continue.');\r\n        }\r\n    };\r\n\r\n    const onCreateAccount = () =>{\r\n        setIsForgetPass(false);\r\n        setIsSignUp(true);\r\n        setMobileNumber('');\r\n        setEmail('');\r\n        setMessage('');\r\n    };\r\n\r\n    const onSignUp = (data: IMember, clientCode: string, callback: (result: boolean) => void) => {\r\n        setMessage('');\r\n        setIsLoading(true);\r\n        props.onSignUp(data, clientCode, (result: boolean, message: string) => {\r\n            setIsLoading(false);\r\n            if(result === true){\r\n              setIsForgetPass(false);\r\n              setIsSignUp(false);\r\n              setMessage('');\r\n              Toast.success('Sign Up success. Please wait till Manager approves then you can access your account.');\r\n              callback(true);\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to Sign Up.');\r\n              callback(false);\r\n            }\r\n          });\r\n    };\r\n\r\n    return (\r\n            <View className='container' style={{maxWidth: '270px'}}>\r\n                <View className='ta-c ai-c jc-c mB-30 mT-5'>\r\n                    <Image src={Images.logo} style={{width: 100, height: 100}}/>\r\n                </View>\r\n                {isForgetPass &&\r\n                <View className='ai-c jc-c'>\r\n                    <View className='col-12 mB-25'>\r\n                        <Image className='pos-a' src={Images.mobile} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control pL-25' placeholder='Registered Mobile Number' value={mobileNumber}\r\n                        onChange={(event: any) => setMobileNumber(event.target.value)}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, onForgetPassSubmit);\r\n                        }} />\r\n                    </View>\r\n                    <View className='col-12 mB-25'>\r\n                        <Image className='pos-a' src={Images.email} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control pL-25' placeholder='Registered Email' value={email}\r\n                        onChange={(event: any) => setEmail(event.target.value)}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, onForgetPassSubmit);\r\n                        }} />\r\n                    </View>\r\n                    <View className='ta-c'>\r\n                    <Button\r\n                    title={isLoading === false ? \"Reset my password\" : \"Loading...\"}\r\n                    onPress={onForgetPassSubmit}\r\n                    />\r\n                    <Text className={'col-12 ta-c mT-5' + (isLoading ? '' : ' c-red-600')}>{message}</Text>\r\n                    </View>\r\n                    <View className='mT-5 ta-c'>\r\n                        <Text className='cur-p mB-5 ta-c c-blue-500' onClick={() => { \r\n                            setIsForgetPass(false);\r\n                            setIsSignUp(false);\r\n                            setMobileNumber('');\r\n                            setEmail('');\r\n                            setMessage('');\r\n                         }}>Go back to Login.</Text>\r\n                    </View>\r\n                </View>\r\n                }\r\n                {isSignUp && <>\r\n                    <SignUp onSignUp={onSignUp} />\r\n                    <View className='mT-15 ta-c'>\r\n                        <Text className='cur-p mB-5 ta-c c-blue-500' onClick={() => { \r\n                            setIsForgetPass(false);\r\n                            setIsSignUp(false);\r\n                            setMobileNumber('');\r\n                            setEmail('');\r\n                            setMessage('');\r\n                         }}>Go back to Login.</Text>\r\n                    </View>\r\n                    </>\r\n                }\r\n                {(!isForgetPass && !isSignUp) && \r\n                <View className='ai-c jc-c'>\r\n                    <View className='col-12 mB-25'>\r\n                        <Image className='pos-a' src={Images.username} style={styles.txtIcon} />\r\n                        <TextInput type='text' className='form-control pL-25' placeholder='Mobile Number' value={userName} \r\n                        onChange={(event: any) => setUserName(event.target.value)}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, onLogin);\r\n                        }} />\r\n                    </View>\r\n                    <View className='col-12 mB-15'>\r\n                        <Image className='pos-a' src={Images.password} style={styles.txtIcon} />\r\n                        <TextInput type='password'  className='form-control pL-25' placeholder='Password' value={password}\r\n                        onChange={(event: any) => setPassword(event.target.value)}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, onLogin);\r\n                        }} />\r\n                    </View>\r\n                    <View className='ta-c'>\r\n                    <Text className='col-12 cur-p mB-15 ta-r c-blue-500' onClick={onForgetPassword}>Forgot Password?</Text>\r\n                    <Button\r\n                    title={isLoading === false ? \"LOGIN\" : \"Loading...\"}\r\n                    onPress={onLogin}\r\n                    />\r\n                    <Text className={'col-12 ta-c mT-5' + (isLoading ? '' : ' c-red-600')}>{message}</Text>\r\n                    </View>\r\n                    <View className='col-12 mT-5 ai-c jc-c'>\r\n                        <Text className='col-12 mB-5 ta-c'>Dont have an account?</Text>\r\n                        <View className='col ai-c jc-c cur-p bd p-0 bdc-blue-500 c-blue-500' style={{borderRadius: '15px'}}>\r\n                            <Text className='ta-c m-0 p-15 cur-p' onClick={onCreateAccount}>CREATE / JOIN YOUR FLAT</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                }\r\n                <Spinner visible={isLoading} text={\"\"} />\r\n            </View>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    txtIcon: {\r\n        marginLeft: 6,\r\n        // marginRight: -15,\r\n        height: 15,\r\n        width: 15,\r\n        resizeMode : 'stretch',\r\n        alignItems: 'center',\r\n        top: 11\r\n    }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IMember } from '../models/home';\r\nimport { login, forgetPassword, signup } from '../store/actions/account';\r\n\r\nimport Page from '../components/login/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => dispatch(login(userName, password, callback)),\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => dispatch(forgetPassword(mobileNumber, email, callback)),\r\n    onSignUp: (data: IMember, clientCode: string, callback: (result: boolean, message: string) => void) => dispatch(signup(data, clientCode, callback))\r\n});\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { Image } from '../common/elements';\r\nimport { isNN } from '../../util/index';\r\nimport Images from '../images';\r\nimport { ROLE, FILE_BASE_PATH } from '../../constants/index';\r\nimport { IHome } from '../../models/home';\r\nimport Toast from  '../../util/toast';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const onHomeChange = (index: number) => {\r\n    props.onHomeChange(index, (result: boolean) => {\r\n      if(result === true){\r\n        \r\n      }else{\r\n      }\r\n    });\r\n  }\r\n  \r\n  const logout = () => {\r\n    confirmAlert({\r\n      title: 'Confirm to logout',\r\n      message: 'Are you sure you wish to logout?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            props.onLogout((result: boolean) => {\r\n              if(result === true){\r\n                Toast.success('Logout Success!');\r\n              }else{\r\n                Toast.fail('Failed to logout!');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return (\r\n  <div className=\"header navbar\">\r\n    <div className=\"header-container\">\r\n      <ul className=\"nav-left\">\r\n        <li>\r\n          <a id='sidebar-toggle' className=\"sidebar-toggle\" href=\"javascript:void(0);\">\r\n            <i className=\"ti-menu\"></i>\r\n          </a>\r\n        </li>\r\n        <li className=\"search-box\">\r\n          <a className=\"search-toggle no-pdd-right\" href=\"javascript:void(0);\">\r\n            <i className=\"search-icon ti-search pdd-right-10\"></i>\r\n            <i className=\"search-icon-close ti-close pdd-right-10\"></i>\r\n          </a>\r\n        </li>\r\n        <li className=\"search-input\">\r\n          <input className=\"form-control\" type=\"text\" placeholder=\"Search...\" />\r\n        </li>\r\n      </ul>\r\n      <ul className=\"nav-right\">\r\n        {(props.appUser.role === ROLE.USER) &&\r\n        <li className=\"notifications dropdown\">\r\n          <span className=\"counter bgc-red\">{props.user.homes.length}</span>\r\n          <a href=\"\" className=\"dropdown-toggle no-after\" data-toggle=\"dropdown\">\r\n            <i className=\"fa fa-home\"></i>\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n            <li className=\"pX-20 pY-15 bdB\">\r\n              <i className=\"fa fa-home pR-10\"></i>\r\n              <span className=\"fsz-sm fw-600 c-grey-900\">House(s)</span>\r\n            </li>\r\n            <li>\r\n              <ul className=\"ovY-a pos-r scrollable lis-n p-0 m-0 fsz-sm\">\r\n              {\r\n                props.user.homes.map((d: IHome, i: number) => {\r\n                  return(\r\n                    <li key={'h' + i}>\r\n                      <a href=\"javascript:void(0);\" className='peers fxw-nw td-n p-20 bdB c-grey-800 cH-blue bgcH-grey-100'>\r\n                        <div className=\"peer peer-greed\" onClick={() => onHomeChange(i)}>\r\n                          <span>\r\n                            <span className={(props.appUser.homeIndex === i ? 'fw-500' : 'c-grey-600')}>{'' + d.number}</span>\r\n                          </span>\r\n                        </div>\r\n                      </a>\r\n                    </li>\r\n                  )\r\n                })\r\n                }\r\n                </ul>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        }\r\n        {(props.user.role.indexOf(',') > 0) &&\r\n        <li className=\"notifications dropdown\">\r\n        <span className=\"counter bgc-red\">{props.user.role.split(',').length}</span>\r\n        <a href=\"\" className=\"dropdown-toggle no-after\" data-toggle=\"dropdown\">\r\n          <i className=\"ti-user\"></i>\r\n        </a>\r\n        <ul className=\"dropdown-menu\">\r\n          <li className=\"pX-20 pY-15 bdB\">\r\n            <i className=\"ti-user pR-10\"></i>\r\n            <span className=\"fsz-sm fw-600 c-grey-900\">Role(s)</span>\r\n          </li>\r\n          <li>\r\n            <ul className=\"ovY-a pos-r scrollable lis-n p-0 m-0 fsz-sm\">\r\n            {\r\n              props.user.role.split(',').map((d: string, i: number) => {\r\n                return(\r\n                  <li key={'r' + i}>\r\n                    <a href=\"javascript:void(0);\" className='peers fxw-nw td-n p-20 bdB c-grey-800 cH-blue bgcH-grey-100'>\r\n                      <div className=\"peer peer-greed\">\r\n                        <span>\r\n                          <span className={'tt-c ' + (props.appUser.role === d ? 'fw-500' : 'c-grey-600')}>{'' + d.toLowerCase()}</span>\r\n                        </span>\r\n                      </div>\r\n                    </a>\r\n                  </li>\r\n                )\r\n              })\r\n              }\r\n              </ul>\r\n          </li>\r\n          <li className=\"pX-20 pY-15 ta-c bdT\">\r\n            <span>\r\n              <Link className=\"c-grey-600 cH-blue fsz-sm td-n\" to='my-role'>Change Role <i className=\"ti-angle-right fsz-xs mL-10\"></i></Link>\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </li>\r\n        }\r\n\r\n        <li className=\"notifications dropdown\">\r\n          <span className=\"counter bgc-red\">0</span>\r\n          <a href=\"\" className=\"dropdown-toggle no-after\" data-toggle=\"dropdown\">\r\n            <i className=\"ti-bell\"></i>\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n            <li className=\"pX-20 pY-15 bdB\">\r\n              <i className=\"ti-bell pR-10\"></i>\r\n              <span className=\"fsz-sm fw-600 c-grey-900\">Notification(s)</span>\r\n            </li>\r\n            <li>\r\n              <ul className=\"ovY-a pos-r scrollable lis-n p-0 m-0 fsz-sm\">\r\n                <li>\r\n                  <a href=\"\" className='peers fxw-nw td-n p-20 bdB c-grey-800 cH-blue bgcH-grey-100'>\r\n                    <div className=\"peer peer-greed\">\r\n                      <span>\r\n                        <span className=\"c-grey-600\">No notification found.</span>\r\n                        </span>\r\n                    </div>\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        \r\n        <li className=\"dropdown\">\r\n          <a href=\"\" className=\"dropdown-toggle no-after peers fxw-nw ai-c lh-1\" data-toggle=\"dropdown\">\r\n            <div className=\"peer mR-10\">\r\n              <Image className=\"w-2r bdrs-50p\" src={isNN(props.user.image) ? FILE_BASE_PATH + props.user.image : (props.user.gender.toLocaleUpperCase() === 'F' ? Images.avatarFemale : Images.avatarMale)} alt='' />\r\n            </div>\r\n            <div className=\"peer\">\r\n              <span className=\"fsz-sm c-grey-900\">{props.user.name}</span>\r\n            </div>\r\n          </a>\r\n          <ul className=\"dropdown-menu fsz-sm\">\r\n            <li>\r\n              <Link className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" to='/my-profile'>\r\n                <i className=\"fa fa-user mR-10\"></i>\r\n                <span>Profile</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" to='/my-documents'>\r\n                <i className=\"fa fa-file-text mR-10\"></i>\r\n                <span>Documents</span>\r\n              </Link>\r\n            </li>\r\n            {props.user.role.indexOf(',') > 0 &&\r\n            <li>\r\n              <Link className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" to='/my-role'>\r\n                <i className=\"ti-user mR-10\"></i>\r\n                <span>Role</span>\r\n              </Link>\r\n            </li>\r\n            }\r\n            <li>\r\n              <Link className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" to='/change-password'>\r\n                <i className=\"fa fa-key mR-10\"></i>\r\n                <span>Password</span>\r\n              </Link>\r\n            </li>\r\n            <li role=\"separator\" className=\"divider\"></li>\r\n            <li>\r\n              <a href=\"#\" className=\"d-b td-n pY-5 bgcH-grey-100 c-grey-700\" onClick={logout}>\r\n                <i className=\"ti-power-off mR-10\"></i>\r\n                <span>Logout</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  );\r\n};","import { ROLE } from \".\";\r\n\r\nexport const NAV = [\r\n    {title: 'Dashboard', icon:'c-blue-500 ti-home', path: '/'},\r\n    {title: 'Blocks', icon:'c-brown-500 fa fa-building', path: '/blocks', roles: [ROLE.ADMIN]},\r\n    {title: 'Houses', icon:'c-blue-700 fa fa-home',path: '/homes', roles: [ROLE.ADMIN]},\r\n    {title: 'Users', icon:'c-deep-purple-500 fa fa-users', path: '/users', roles: [ROLE.ADMIN]},\r\n    {title: 'Members', icon:'c-brown-500 fa fa-users', path: '/members', roles: [ROLE.USER]},\r\n    {title: 'Servants', icon:'c-deep-purple-500 fa fa-female', path: '/servants', roles: [ROLE.USER]},\r\n    {title: 'Vehicles', icon:'c-blue-700 fa fa-car', path: '/vehicles', roles: [ROLE.USER]},\r\n    {title: 'Tickets', icon:'c-orange-500 ti-headphone-alt', path: '/tickets', roles: [ROLE.USER, ROLE.ADMIN, ROLE.MANAGER, ROLE.MAINTENANCE_SUPERVISOR, ROLE.MAINTENANCE_MANAGER]},\r\n    {title: 'Visitors', icon:'c-pink-500 fa fa-id-card-o', path: '/visitors', roles: [ROLE.USER]},\r\n    {title: 'Visitors', icon:'c-pink-500 fa fa-id-card-o', path: '/all-visitors', roles: [ROLE.ADMIN, ROLE.MANAGER, ROLE.GATEKEEPER, ROLE.SECURITY_SUPERVISOR, ROLE.SECURITY_MANAGER]},\r\n    {title: 'Servants', icon:'c-deep-purple-500 fa fa-female', path: '/all-servants', roles: [ROLE.ADMIN, ROLE.MANAGER, ROLE.GATEKEEPER, ROLE.SECURITY_SUPERVISOR, ROLE.SECURITY_MANAGER]},\r\n    {title: 'Door Locks', icon:'c-indigo-800 ti-lock', path: '/outings', roles: [ROLE.USER, ROLE.ADMIN, ROLE.MANAGER, ROLE.GATEKEEPER, ROLE.SECURITY_SUPERVISOR, ROLE.SECURITY_MANAGER]},\r\n    {title: 'Takeaways ', icon:'c-yellow-600 fa fa-share', path: '/all-takeways', roles: [ROLE.ADMIN, ROLE.MANAGER, ROLE.GATEKEEPER, ROLE.SECURITY_SUPERVISOR, ROLE.SECURITY_MANAGER]},\r\n    {title: 'Notification', icon:'c-red-500 ti-bell', path: '/notification', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n    {title: 'Ads', icon:'c-teal-500 fa fa-bullhorn', path: '/ads', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n    {title: 'Payment', icon:'c-indigo-500 fa fa-credit-card', path: '/payment', hasPayment: true, roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n    {title: 'Notice', icon:'c-blue-a400 ti-notepad', path: '/notice'},\r\n    {title: 'Settings', icon:'c-deep-orange-500 ti-settings', child: [\r\n        {title: 'My Profile', path: '/my-profile'},\r\n        {title: 'My Role', path: '/my-role', hasMRole: true},\r\n        {title: 'My Documents', path: '/my-documents'},\r\n        {title: 'Change Password', path: '/change-password'}\r\n    ]},\r\n    {title: 'Info', icon:'c-deep-purple-a700 ti-info-alt', path: '/info'}\r\n];","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image } from '../common/elements';\r\nimport { isNN } from '../../util/index';\r\nimport { NAV } from '../../constants/nav';\r\nimport Images from '../images';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar-inner\">\r\n        <div className=\"sidebar-logo\">\r\n          <div className=\"peers ai-c fxw-nw\">\r\n            <div className=\"peer peer-greed\">\r\n              <Link className=\"sidebar-link td-n\" to='/'>\r\n                <div className=\"peers ai-c fxw-nw\">\r\n                  <div className=\"peer\">\r\n                    <div className=\"logo\">\r\n                      <Image src={Images.logo} className='' style={{ width: 70, height: 65, padding: '13px 15px'}} alt='' />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"peer peer-greed\">\r\n                    <h5 className=\"lh-1 mB-0 logo-text\">Nest</h5>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"peer\">\r\n              <div className=\"mobile-toggle sidebar-toggle\">\r\n                <a href=\"\" className=\"td-n\">\r\n                  <i className=\"ti-arrow-circle-left\"></i>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {(NAV && NAV.length > 0) &&\r\n        <ul className=\"sidebar-menu scrollable pos-r\">\r\n          {\r\n            NAV.map((d: any, i: number) => {\r\n              if((isNN(d.path) || isNN(d.child)) && (!isNN(d.roles) || d.roles.indexOf(props.appUser.role) >= 0) && (!d.hasMRole || props.user.role.indexOf(',') > 0) && (!d.hasPayment || props.user.client.config.hasPayment)){\r\n                return(\r\n                  <li key={'nav-item-' + i} className={'nav-item' + (isNN(d.child) ? ' dropdown' : '') + (i === 0 ? ' mT-30' : '')}>\r\n                    <Link className={(isNN(d.child) ? 'dropdown-toggle' : 'sidebar-link')} to={isNN(d.path) ? d.path : '#' }>\r\n                    <span className=\"icon-holder\">\r\n                      <i className={d.icon}></i>\r\n                    </span>\r\n                    <span className=\"title\">{d.title}</span>\r\n                    {isNN(d.child) &&\r\n                    <span className=\"arrow\">\r\n                      <i className=\"ti-angle-right\"></i>\r\n                    </span>\r\n                    }\r\n                  </Link>\r\n                    {isNN(d.child) &&\r\n                    <ul className=\"dropdown-menu\">\r\n                      {\r\n                        d.child.map((d: any, i: number) => {\r\n                          return(\r\n                            <li key={'sub-nav-item-' + i}>\r\n                              <Link className='sidebar-link' to={isNN(d.path) ? d.path : '#'}>{d.title}</Link>\r\n                            </li>\r\n                          )\r\n                        })\r\n                      }\r\n                    </ul>\r\n                    }\r\n                  </li>\r\n                )\r\n              }\r\n            })\r\n          }\r\n        </ul>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n};","import * as React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <footer className=\"bdT ta-c p-30 lh-0 fsz-sm c-grey-600 bgc-white\">\r\n      <span>Copyright © Nest. All rights reserved.</span>\r\n    </footer>\r\n  );\r\n};","import Api from '../api/api';\r\nimport { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'payment';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const search = (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const save = (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to save Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const updatePay = (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().put(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to update Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const upload = (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'upload', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.approvalid > 0)\r\n    {\r\n      /*\r\n      var homeIndex = user.homes.findIndex(d => d._id === homeId);\r\n      if(file.approvalid > 0)\r\n      {        \r\n        var paymentIndex = user.home[homeIndex].paymentApproval.findIndex(d => d.approvalid === file.approvalid);\r\n        user.home[homeIndex].paymentApproval[paymentIndex] = result.data;\r\n      }else{\r\n        user.home[homeIndex].paymentApproval.push(result.data);\r\n      }\r\n      */\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, file);\r\n};\r\n\r\nexport const update = (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/transaction/' + paymentId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      transaction._id = result.data;\r\n      // var homeIndex = user.homes.findIndex(d => d._id === params.homeid);\r\n      // if(paymentId.length > 0)\r\n      // {        \r\n        var paymentIndex = user.homes[homeIndex].payments.findIndex(d => d._id === paymentId);\r\n        if(!user.homes[homeIndex].payments[paymentIndex].transactions){\r\n          user.homes[homeIndex].payments[paymentIndex].transactions = [];\r\n        }\r\n        user.homes[homeIndex].payments[paymentIndex].transactions.push(transaction);\r\n      // }else{\r\n      //   user.homes[homeIndex].payments.push(result.data);\r\n      // }\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, transaction);\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","import { actionTypes } from '../action-types';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IUser } from '../../models/user';\r\nimport { IAd } from '../../models/ad';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'ad';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getAdResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getAdResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let foundIndex = ads.findIndex(d => d._id === result.data);\r\n        ads[foundIndex]._id = result.data;\r\n        ads[foundIndex].title = data.title;\r\n        ads[foundIndex].description = data.description;\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          ads.unshift({\r\n            _id: result.data,\r\n            title: data.title,\r\n            description: data.description,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IAd);\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      ads = ads.filter((d, i) => d._id !== id);\r\n      dispatch(getAdResult(ads, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\n\r\nlet controller: string = 'ticket';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getTicketsResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      dispatch(getTicketsResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Tickets.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          if(isNN(tickets.data)) {\r\n            let arrTickets = [] as Array<ITicket>;\r\n            arrTickets = tickets.data;\r\n            var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n            arrTickets[foundIndex]._id = result.data;\r\n            arrTickets[foundIndex].category = data.category\r\n            arrTickets[foundIndex].title = data.title;\r\n            arrTickets[foundIndex].description = data.description;\r\n            arrTickets[foundIndex].status = data.status;\r\n            arrTickets[foundIndex].updatedBy = user.name;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n          arrTickets[foundIndex]._id = result.data;\r\n          arrTickets[foundIndex].title = data.title;\r\n          arrTickets[foundIndex].description = data.description;\r\n          arrTickets[foundIndex].status = data.status;\r\n          arrTickets[foundIndex].updatedBy = user.name;\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              _homeId: user.homes[homeIndex].number,\r\n              category: data.category,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      // }\r\n      // if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n      //   user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n      //   dispatch(getUserResult(user as IUser));\r\n      // }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const resolve = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/resolve/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const start = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  let newStatus = 'IN-PROGRESS';\r\n  new Api().put(controller + '/start/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          arrTickets = tickets.data;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n          arrTickets[foundIndex].status = newStatus;\r\n          dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        let arrTickets = user.homes[homeIndex].tickets;\r\n        var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n        arrTickets[foundIndex].status = newStatus;\r\n        user.homes[homeIndex].tickets = arrTickets;\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  },{\r\n    status: newStatus\r\n  });\r\n};\r\n\r\nexport const addComment = (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(isNN(comment._id)){\r\n    new Api().put(controller + '/comment/' + comment._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n            var commentIndex = arrTickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n            // arrTickets[ticketIndex].comments[commentIndex] = result.data;\r\n            arrTickets[ticketIndex].comments[commentIndex].comment = comment.comment;\r\n            arrTickets[ticketIndex].comments[commentIndex].updatedBy = comment.updatedBy;\r\n            arrTickets[ticketIndex].comments[commentIndex].updatedAt = comment.updatedAt;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n          var commentIndex = user.homes[appUser.homeIndex].tickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n          user.homes[appUser.homeIndex].tickets[ticketIndex].comments[commentIndex] = comment;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }else{\r\n    new Api().post(controller + '/comment/' + ticketId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment._id = result.data;\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n              // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n              //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n              // }\r\n              arrTickets[ticketIndex].comments.unshift(comment);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n            // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n            //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n            // }\r\n            user.homes[appUser.homeIndex].tickets[ticketIndex].comments.unshift(comment);\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }\r\n};\r\n\r\nexport const removeComment = (id: string, ticketId: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/comment/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n        if(isNN(tickets.data)) {\r\n          var foundIndex = tickets.data.findIndex(d => d._id === ticketId);\r\n          tickets.data[foundIndex].comments = tickets.data[foundIndex].comments.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});","// import { actionTypes } from '../action-types';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants/index';\r\n// import { IHome } from '../../models/home';\r\n\r\nlet controller: string = 'visitor';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : '') + '/' + isActive, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  // data.image = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data._id.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          var foundIndex = visitors.findIndex(d => d._id === result.data);\r\n          visitors[foundIndex]._id = result.data;\r\n          visitors[foundIndex].name = name;\r\n          visitors[foundIndex].age = data.age;\r\n          visitors[foundIndex].gender = data.gender;\r\n          visitors[foundIndex].mobileNo = data.mobileNo;\r\n          visitors[foundIndex].emailId = data.emailId;\r\n          visitors[foundIndex].image = result.image;\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        sCallback(result.data as IVisitor);\r\n      } else {\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data._id.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          data._id = result.data;\r\n          data.createdBy = user.name;\r\n          visitors.unshift(data);\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        sCallback(result.data as IVisitor);\r\n      } else {\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      /*\r\n      user.homes[homeIndex].visitors = user.homes[homeIndex].visitors.filter((d, i) => d._id != id);\r\n      dispatch(getUserResult(user as IUser));\r\n      */\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const enter = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/enter/' + id + '/' + gateNo, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const exit = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/exit/' + id + '/' + gateNo, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const approve = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/approve/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const reject = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/reject/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const search = (text: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/search/' + text, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n    }\r\n  });\r\n};","import { actionTypes } from '../action-types';\r\nimport Api from '../api/api';\r\nimport { isNNObject } from '../../util/index';\r\nimport { IUser } from '../../models/user';\r\n\r\nlet controller: string = 'upload';\r\n\r\nexport const upload = (data: any, callback: (result: boolean, message: string) => void, user?: IUser) => (dispatch: any) => {\r\n  new Api().upload(controller, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      if(data && data.isProfile && data.isProfile == true && user){\r\n        user.image = data.name;\r\n        dispatch(getUserResult(user));\r\n      }\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","import React, {useState} from 'react';\r\nimport {ScrollView, View, Text} from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport {IUser} from '../../models/user/user';\r\nimport {IHome} from '../../models/home/home';\r\nimport {IPayment} from '../../models/home';\r\nimport {ITransaction} from '../../models/home/transaction';\r\nimport {isNN, generateUUID} from '../../util/index';\r\nimport Toast from '../../util/toast';\r\nimport {MONTH} from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome,\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [payment, setPayment] = useState({\r\n    paymentId: '',\r\n    amount: 0,\r\n    transactionRef: '',\r\n  });\r\n\r\n  const getTotalDue = () => {\r\n    let totalDue = 0;\r\n    props.home.payments.map((d: IPayment, i: number) => {\r\n      let amountPaid = 0;\r\n      d.transactions.filter((t, j) => t.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n      totalDue += d.amount - amountPaid;\r\n      return 1;\r\n    });\r\n    return totalDue;\r\n  };\r\n\r\n  const payNow = (paymentId: string, amount: number) => {\r\n    if (paymentId && paymentId.length > 0 && amount && amount > 0) {\r\n      if (isNN(props.user.client.upi.id) && isNN(props.user.client.upi.name)) {\r\n        const transactionRef = generateUUID();\r\n        setPayment({\r\n            paymentId: paymentId,\r\n            amount: amount,\r\n            transactionRef: transactionRef\r\n          });\r\n        Toast.warn('Payment is in progress. Please contact administrator.');\r\n        // RNUpiPayment.initializePayment({\r\n        //   vpa: props.user.client.upi.id, // or can be john@ybl or mobileNo@upi\r\n        //   payeeName: props.user.client.upi.name,\r\n        //   amount: amount + '',\r\n        //   transactionRef: transactionRef,\r\n        //   transactionNote: ''\r\n        // }, successCallback, failureCallback);\r\n      } else {\r\n        Toast.warn('Please update UPI ID and UPI Name to app administrator to proceed further.');\r\n      }\r\n    } else {\r\n      Toast.warn('Amount should be more then 0 to proceed payment.');\r\n    }\r\n  };\r\n\r\n  const successCallback = (result: any) => {\r\n    console.log('Payment Success...', result);\r\n    if (result && result.Status) {\r\n      if (result.Status === 'SUCCESS' && result.responseCode && result.responseCode === '00') {\r\n        setIsLoading(true);\r\n        const transaction = {\r\n          txnRef: result.txnRef,\r\n          txnId: result.txnId,\r\n          amount: payment.amount,\r\n          status: 'PAID',\r\n          isSuccess: true,\r\n          reason: '',\r\n        } as ITransaction;\r\n        props.onPaymentUpdate(payment.paymentId, transaction, (updateResult: boolean) => {\r\n          setIsLoading(false);\r\n          clearTxn();\r\n          if (updateResult === true) {\r\n            Toast.success('Payment success.');\r\n          } else {\r\n            Toast.fail('Payment failed.');\r\n          }\r\n        });\r\n      } else {\r\n        txnFailure(result);\r\n      }\r\n    } else {\r\n      txnFailure(result);\r\n    }\r\n  };\r\n\r\n  const failureCallback = (result: any) => {\r\n    txnFailure(result);\r\n  };\r\n\r\n  const txnFailure = (result: any) => {\r\n    console.log('Payment Failure...', result);\r\n    let msg: string = '';\r\n    if (result && result.Status) {\r\n      if (result.Status === 'FAILURE' && result.responseCode && result.responseCode === 'ZM') {\r\n        msg = 'Payment failed because of wrong pin.';\r\n      } else if (result.Status === 'FAILURE' && result.message && result.message.length > 0) {\r\n        msg = 'Payment failed because ' + result.message;\r\n      } else {\r\n        msg = 'Payment failed.';\r\n      }\r\n    } else {\r\n      msg = 'Payment failed.';\r\n    }\r\n    Toast.fail(msg);\r\n    setIsLoading(true);\r\n    const transaction = {\r\n      txnRef: payment.transactionRef,\r\n      txnId: '',\r\n      amount: payment.amount,\r\n      status: 'FAIL',\r\n      isSuccess: false,\r\n      reason: msg,\r\n    } as ITransaction;\r\n    props.onPaymentUpdate(payment.paymentId, transaction, (updateResult: boolean) => {\r\n      setIsLoading(false);\r\n      clearTxn();\r\n      // if(updateResult === true){\r\n      //   Toast.success('Payment success.');\r\n      // }else{\r\n      //   Toast.fail('Payment failed.');\r\n      // }\r\n    });\r\n  };\r\n\r\n  const clearTxn = () => {\r\n    setPayment({\r\n        paymentId: '',\r\n        amount: 0,\r\n        transactionRef: ''\r\n      });\r\n  };\r\n\r\n    return (\r\n      <View>\r\n        <View className='m-5'>\r\n          <Text className='mT-2 fw-600'>{'Total Due Amount: Rs ' + getTotalDue()}</Text>\r\n        </View>\r\n        <ScrollView>\r\n          {isNN(props.home.payments) ?\r\n        props.home.payments.filter((p: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          if (isNN(p.transactions)) {\r\n            p.transactions.filter((t) => t.isSuccess === true).map((p, j) => amountPaid += p.amount);\r\n          }\r\n          return (amountPaid < p.amount);\r\n        }).map((d: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          if (isNN(d.transactions)) {\r\n            d.transactions.filter((p) => p.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n          }\r\n          if (amountPaid < d.amount) {\r\n            return (\r\n              <View key={'my-due' + i} className={'m-7' + (i === 0 ? '' : ' pL-15 bdL' )}>\r\n                <View className='mT-4'>\r\n                  <Text>{'Due for: ' + MONTH.filter((m) => m.value === d.forMonth)[0].title + '/' + d.forYear}</Text>\r\n                </View>\r\n                <View className='mT-4 mB-3'>\r\n                  <Text>{'Rs ' + (d.amount - amountPaid)}</Text>\r\n                </View>\r\n                <View>\r\n                  <Text>{'Due Date: 15/' + MONTH.filter((m) => m.value === d.forMonth)[0].title + '/' + d.forYear}</Text>\r\n                </View>\r\n                <View className='mT-4'>\r\n                  <Button\r\n                    title='PAY NOW'\r\n                    onPress={() => payNow(d._id, (d.amount - amountPaid))}\r\n                  />\r\n                </View>\r\n              </View>\r\n            );\r\n          } else {\r\n            return null;\r\n          }\r\n        }):\r\n          <Text className='p-20'>No due found.</Text>\r\n          }\r\n        </ScrollView>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n    );\r\n};","import moment from 'moment';\r\nimport { isNN, jsError, isNNObject } from './index';\r\nimport { DEFAULT_DATE_FORMAT, DEFAULT_DATE_TIME_FORMAT } from '../constants/index';\r\n\r\nexport function toDateString(_input: any, _format?: string) {\r\n  try {\r\n    if(isNNObject(_input)) {\r\n      if (typeof _input != 'string') {\r\n        _input.toString();\r\n      }\r\n      if (!isNN(_format)) {\r\n       _format = DEFAULT_DATE_FORMAT;\r\n      }\r\n      return moment(_input).format(_format);\r\n    } else {\r\n      return '';\r\n    }\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateString'); \r\n    return ''; \r\n  }\r\n};\r\n\r\nexport function toDateTimeString(_input: any, _format?: string) {\r\n  try {\r\n    return toDateString(_input, DEFAULT_DATE_TIME_FORMAT);\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateTimeString'); \r\n    return ''; \r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, ScrollView } from '../common/elements';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNN } from '../../util';\r\nimport { toDateString } from '../../util/convert';\r\nimport { MONTH } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  home: IHome,\r\n};\r\n\r\nexport default (props: IProps) => {\r\n    return (\r\n      <ScrollView>\r\n        {isNN(props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true)))) ?\r\n        props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true))).slice(0, 3).map((d: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          let paidDate = null;\r\n          d.transactions.filter(t => t.isSuccess === true).map((t: ITransaction, j: number) => {\r\n            amountPaid += t.amount;\r\n            if(j === 0){\r\n              paidDate = t.createdAt;\r\n            }\r\n            return 1;\r\n          });\r\n              return (\r\n                <View key={'my-his' + i} className={'m-7' + (i === 0 ? '' : ' pL-15 bdL') }>\r\n                  <View className='mT-4'>\r\n                    <Text>{\"Paid for: \" + MONTH.filter(m => m.value === d.forMonth)[0].title + \"/\" + d.forYear}</Text>\r\n                  </View>\r\n                  <View className='mT-4 mB-3'>\r\n                    <Text>{\"Rs \" + amountPaid}</Text>\r\n                  </View>\r\n                  <View>\r\n                    <Text>{\"Paid On: \" + toDateString(paidDate)}</Text>\r\n                  </View>\r\n                </View>\r\n              )\r\n          })\r\n          :<Text>No history found!</Text>\r\n        }\r\n        </ScrollView>\r\n    );\r\n};","import * as React from 'react';\r\nimport { Text, View } from '../common/elements';\r\nimport { isNN } from '../../util/index';\r\n\r\nexport default (props: any) => {\r\n  const {data, message} = props;\r\n  return(\r\n    isNN(data) ?\r\n    data.map((d: any, i: number) => {\r\n      return(\r\n        <View className='bdB pB-3'>\r\n          <View>\r\n            <Text key={i} className='fw-600'>\r\n              {d.title}\r\n            </Text>\r\n          </View>\r\n          <View>\r\n            <Text key={i}>\r\n              {d.description}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      )\r\n    })\r\n    :\r\n    isNN(message) ? <Text>{message}</Text> : null\r\n  );\r\n};","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\n\r\ninterface IProps {\r\n  title: string,\r\n  icon: string,\r\n  color: string,\r\n  onClick: () => void,\r\n  bgColor?: string,\r\n  hasCount?: boolean,\r\n  count?: string\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return (\r\n    <View className='col-md-3'>\r\n      <View className={'layers bd p-20 cur-p c-white bg' + props.color} onClick={props.onClick}>\r\n        <View className=\"layer w-100 mB-10\">\r\n          <h6 className=\"lh-1\">{props.title}</h6>\r\n        </View>\r\n        <View className=\"layer w-100\">\r\n          <View className=\"peers ai-sb fxw-nw\">\r\n            <View className=\"peer peer-greed\">\r\n              <span className=\"icon-holder\">\r\n                <i className={props.icon + ' fa-2x'}></i>\r\n              </span>\r\n            </View>\r\n            <View className=\"peer\">\r\n              {props.hasCount ?\r\n              <span className={'d-ib lh-0 va-m fw-600 bdrs-10em pX-15 pY-15 ' + props.color + ' ' + props.bgColor}>{props.count}</span>\r\n              :\r\n              <span className='d-ib lh-0 va-m'>View all</span>\r\n              }\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\n\r\ninterface IProps {\r\n  visible: boolean,\r\n  text?: string\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return (\r\n    props.visible ?\r\n    <View className=\"spinner\"></View>\r\n    :\r\n    null\r\n  );\r\n};","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\nimport BlockSpinner from '../common/block-spinner';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IAd } from '../../models/ad';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  data: IAds\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return (\r\n    <View className=\"masonry-item col-md-6\">\r\n      <View className=\"bd bgc-white p-20\">\r\n        <View className=\"layers\">\r\n          <View className=\"layer w-100 mB-10\">\r\n            <h6 className=\"lh-1\">Advertisement</h6>\r\n          </View>\r\n          <View className=\"layer w-100\">\r\n            <ul className=\"list-task list-group\" data-role=\"tasklist\">\r\n            {props.data.isUpToDate ?\r\n            (!props.data.isError && isNN(props.data.data)) ?\r\n            props.data.data.map((d: IAd, i: number) => {\r\n              return(\r\n                <li className=\"list-group-item bdw-0\" data-role=\"task\">\r\n                <View className=\"peers ai-c\">\r\n                  <label className=\" peers peer-greed js-sb ai-c\">\r\n                    {d.title && <span className=\"peer peer-greed fw-600\">{d.title}</span>}\r\n                    {d.description && <span className=\"peer peer-greed\">{d.description}</span>}\r\n                  </label>\r\n                </View>\r\n              </li>\r\n              );\r\n            })\r\n            :\r\n            <li className=\"list-group-item bdw-0\" data-role=\"task\">\r\n                <View className=\"peers ai-c\">\r\n                  <label className=\" peers peer-greed js-sb ai-c\">\r\n                    <span className=\"peer peer-greed\">No advertisement found !!!</span>\r\n                  </label>\r\n                </View>\r\n              </li>\r\n            :\r\n            <BlockSpinner visible={true} />\r\n            }\r\n            </ul>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\nimport BlockSpinner from '../common/block-spinner';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home';\r\nimport { ROLE } from '../../constants';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  data: ITickets,\r\n  role: string\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  \r\n  const getBatchColor = (status: string, createdAt: Date) => {\r\n    let date = new Date();\r\n    createdAt = new Date(createdAt);\r\n    switch(status.toUpperCase()){\r\n      case \"INIT\":\r\n      return (createdAt.getFullYear() < date.getFullYear() || createdAt.getMonth() !== date.getMonth() || date.getDate() - createdAt.getDate() > 2) ? \"badge-danger\" : \"badge-warning\";\r\n      case \"IN-PROGRESS\":\r\n      return \"badge-info\";\r\n      case \"RESOLVED\":\r\n      return \"badge-success\";\r\n      default:\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View className=\"masonry-item col-md-6\">\r\n      <View className=\"bd bgc-white p-20\">\r\n        <View className=\"layers\">\r\n          <View className=\"layer w-100 mB-10\">\r\n            <h6 className=\"lh-1\">Tickets</h6>\r\n          </View>\r\n          <View className=\"layer w-100\">\r\n            <ul className=\"list-task list-group\" data-role=\"tasklist\">\r\n            {props.data.isUpToDate ?\r\n            (!props.data.isError && isNN(props.data.data)) ?\r\n            props.data.data.map((d: ITicket, i: number) => {\r\n              return(\r\n                <li className=\"list-group-item bdw-0\" data-role=\"task\">\r\n                <View className=\"peers ai-c\">\r\n                  <label className=\" peers peer-greed js-sb ai-c\">\r\n                    <span className=\"peer peer-greed\">{(props.role !== ROLE.USER ? d._homeId + ': ' : '') +  d.title}</span>\r\n                    <span className=\"peer\">\r\n                      <span className={\"badge badge-pill fl-r lh-0 p-10 \" + getBatchColor(d.status, d.createdAt)}>{d.status}</span>\r\n                    </span>\r\n                  </label>\r\n                </View>\r\n              </li>\r\n              );\r\n            })\r\n            :\r\n            <li className=\"list-group-item bdw-0\" data-role=\"task\">\r\n                <View className=\"peers ai-c\">\r\n                  <label className=\" peers peer-greed js-sb ai-c\">\r\n                    <span className=\"peer peer-greed\">No ticket found !!!</span>\r\n                  </label>\r\n                </View>\r\n              </li>\r\n            :\r\n            <BlockSpinner visible={true} />\r\n            }\r\n            </ul>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { View, Image } from '../common/elements';\r\nimport BlockSpinner from '../common/block-spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user';\r\nimport { IVisitor } from '../../models/home';\r\nimport { ROLE, FILE_BASE_PATH } from '../../constants';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [data, setData] = useState([] as Array<IVisitor>);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, (props.appUser.role === ROLE.USER ? props.user.homes[props.appUser.homeIndex]._id : ''), true, (result: Array<IVisitor>) => {\r\n      setIsLoading(false);\r\n      setData((result && result.length > 0) ? result : []);\r\n    }, (message: string) => {\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <View className=\"masonry-item col-md-6\">\r\n    <View className=\"bd bgc-white\">\r\n      <View className=\"layers\">\r\n        <View className=\"layer w-100 p-20\">\r\n          <h6 className=\"lh-1\">Active Visitors</h6>\r\n        </View>\r\n        {isLoading ?\r\n          <BlockSpinner visible={true} />\r\n          :\r\n        <View className=\"layer w-100\">\r\n          <View className=\"bgc-light-blue-500 c-white p-20\">\r\n            <View className=\"peers ai-c jc-sb gap-40\">\r\n              <View className=\"peer peer-greed\">\r\n                <h5>Active Visitors</h5>\r\n                <p className=\"mB-0\">{props.user.homes[props.appUser.homeIndex].number}</p>\r\n              </View>\r\n              <View className=\"peer\">\r\n                <h3 className=\"text-right\">{data.length}</h3>\r\n              </View>\r\n            </View>\r\n          </View>\r\n          <View className=\"table-responsive p-20\">\r\n            {isNN(data) ?\r\n              <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\" bdwT-0\">Photo</th>\r\n                  <th className=\" bdwT-0\">Name</th>\r\n                  <th className=\" bdwT-0\">Type</th>\r\n                  <th className=\" bdwT-0\">Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  data.map((d: IVisitor, i: number) => {\r\n                    return(\r\n                      <tr>\r\n                        <td className='va-m'>\r\n                          <Image src={FILE_BASE_PATH + d.image} className='m-0' style={{height: '7vh', borderRadius: '50%'}} />\r\n                        </td>\r\n                        <td className='fw-600 va-m'>{d.name}</td>\r\n                        <td className='va-m'>{d.type}</td>\r\n                        <td className='va-m'>\r\n                          {(!d.isApproved && !d.isRejected && !d.isEntered) && \r\n                          <span className=\"badge bgc-blue-50 c-blue-500 p-10 lh-0 tt-c badge-pill\">WAITING FOR APPROVAL</span>\r\n                          }\r\n                          {(d.isApproved || d.isRejected ) && \r\n                          <span className={\"badge p-10 lh-0 tt-c badge-pill\" + (d.isApproved ? 'bgc-green-50 c-green-600' : 'bgc-red-50 c-red-600')}>{d.isApproved ? 'APPROVED' : 'REJECTED'}</span>\r\n                          }\r\n                          {d.isEntered &&\r\n                          <span className=\"badge bgc-deep-purple-50 c-deep-purple-700 p-10 lh-0 tt-c badge-pill\">ENTERED</span>\r\n                          }\r\n                          {(d.isApproved && !d.isEntered) &&\r\n                          <span className=\"badge bgc-red-50 c-red-600 p-10 lh-0 tt-c badge-pill\">NOT ENTERED</span>\r\n                          }\r\n                          {(!d.isRejected && d.isExit) &&\r\n                          <span className=\"badge bgc-orange-50 c-orange-700 p-10 lh-0 tt-c badge-pill\">EXIT</span>\r\n                          }\r\n                          {(d.isEntered && !d.isExit) &&\r\n                          <span className=\"badge bgc-red-50 c-red-700 p-10 lh-0 tt-c badge-pill\">STAYING IN</span>\r\n                          }\r\n                        </td>\r\n                      </tr>\r\n                    )\r\n                  })\r\n                }\r\n              </tbody>\r\n            </table>\r\n             :\r\n             <View className=\"peers ai-c\">\r\n           <label className=\" peers peer-greed js-sb ai-c\">\r\n             <span className=\"peer peer-greed\">No visitors found !!!</span>\r\n           </label>\r\n         </View>\r\n            }\r\n          </View>\r\n        </View>\r\n        }\r\n      </View>\r\n      {isNN(data) &&\r\n      <View className=\"ta-c bdT w-100 p-20\">\r\n        <Link to={props.appUser.role === ROLE.USER ? '/visitors' : '/all-visitors'}>View all visitors</Link>\r\n      </View>\r\n      }\r\n    </View>\r\n  </View>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport { View } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { IVisitor } from '../../models/home';\r\nimport MyDues from './my-dues';\r\nimport History from './history';\r\nimport CustomList from './custom-list';\r\nimport Banner from '../common/banner';\r\nimport Ads from '../common/ads';\r\nimport Tickets from '../common/tickets';\r\nimport Visitors from '../common/visitors';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  home: IHome,\r\n  ads: IAds,\r\n  tickets: ITickets,\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void,\r\n  onLoadVisitors: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  \r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          {/* <View className='fw-600'>Dashboard</View> */}\r\n          <View className=\"masonry-item w-100\">\r\n            <View className=\"row gap-20\">\r\n              <Banner title='Member(s)' icon='fa fa-users' color='c-brown-400' bgColor='bgc-brown-50' hasCount={true} count={props.home.members ? props.home.members.length + '' : '0'} onClick={() => props.history.push('members')} />\r\n              <Banner title='Servant(s)' icon='fa fa-female' color='c-deep-purple-400' onClick={() => props.history.push('servants')} />\r\n              <Banner title='Vehicle(s)' icon='fa fa-car' color='c-blue-600' bgColor='bgc-blue-50' hasCount={true} count={props.home.vehicles ? props.home.vehicles.length + '' : '0'} onClick={() => props.history.push('vehicles')} />\r\n              <Banner title='Ticket(s)' icon='ti-headphone-alt' color='c-orange-400' bgColor='bgc-orange-50' hasCount={true} count={props.tickets.isUpToDate ? (!props.tickets.isError ? props.tickets.data.length + '' : '0') :'Loading'} onClick={() => props.history.push('tickets')} />\r\n            </View>\r\n            <View className=\"row gap-20\">\r\n              <Banner title='Visitor(s)' icon='fa fa-id-card-o' color='c-pink-400' onClick={() => props.history.push('visitors')} />\r\n              <Banner title='Door Lock(s)' icon='ti-lock' color='c-indigo-700' onClick={() => props.history.push('outings')} />\r\n            </View>\r\n          </View>\r\n          {props.user.client.config.hasPayment &&\r\n          <View className=\"masonry-item col-12\">\r\n            <View className='tab-bar bgc-white p-20'>\r\n              <span className={'tab' + (activeTab === 1 ? ' active': '')} onClick={() => setActiveTab(1)}>\r\n                MY DUES\r\n                </span>\r\n              <span className={'tab' + (activeTab === 2 ? ' active': '')} onClick={() => setActiveTab(2)}>\r\n                ADVANCE\r\n              </span>\r\n              <span className={'tab' + (activeTab === 3 ? ' active' : '')} onClick={() => setActiveTab(3)}>\r\n                HISTORY\r\n              </span>\r\n              {/* <span className={'tab' + (activeTab === 4 ? ' active' : ')} onClick={() => setActiveTab(4)}>\r\n                DEPOSITS\r\n              </span> */}\r\n            </View>\r\n            <View className='bgc-white p-20'>\r\n            {activeTab === 1 ?\r\n                <MyDues history={props.history} user={props.user} home={props.home} onPaymentUpload={props.onPaymentUpload} onPaymentUpdate={props.onPaymentUpdate} />\r\n              :\r\n              activeTab === 2 ?\r\n                <CustomList data={[]} message='No advance found!' />\r\n                :\r\n                activeTab === 3 ?\r\n                <History history={props.history} home={props.home} />\r\n                :\r\n                activeTab === 4 ?\r\n                <CustomList data={[]} message=\"Work in progress\" />\r\n                :\r\n                []\r\n              }\r\n            </View>\r\n          </View>\r\n          }\r\n          <Tickets data={props.tickets} role={props.appUser.role} />\r\n          <Ads data={props.ads} />\r\n          <Visitors appUser={props.appUser} user={props.user} onLoad={props.onLoadVisitors} />\r\n        </View>\r\n      </View>\r\n    );\r\n};","import * as React from 'react';\r\nimport { View } from '../../common/elements';\r\nimport { ROLE } from '../../../constants';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { ITickets } from '../../../models/store/tickets';\r\nimport { IVisitor } from '../../../models/home';\r\nimport Banner from '../../common/banner';\r\nimport Ads from '../../common/ads';\r\nimport Tickets from '../../common/tickets';\r\nimport Visitors from '../../common/visitors';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  ads: IAds,\r\n  tickets: ITickets,\r\n  onLoadVisitors: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        {/* <View className='fw-600'>Dashboard</View> */}\r\n        {(props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER) &&\r\n        <View className=\"masonry-item w-100\">\r\n          <View className=\"row gap-20\">\r\n            <Banner title='Ticket(s)' icon='ti-headphone-alt' color='c-orange-400' bgColor='bgc-orange-50' hasCount={true} count={props.tickets.isUpToDate ? (!props.tickets.isError ? props.tickets.data.length + '' : '0') :'Loading'} onClick={() => props.history.push('tickets')} />\r\n            <Banner title='Visitor(s)' icon='fa fa-id-card-o' color='c-pink-400' onClick={() => props.history.push('all-visitors')} />\r\n            <Banner title='ads' icon='fa fa-bullhorn' color='c-teal-400' bgColor='bgc-teal-50' hasCount={true} count={props.ads.isUpToDate ? (!props.ads.isError ? props.ads.data.length + '' : '0') :'Loading'} onClick={() => props.history.push('ads')} />\r\n            <Banner title='Notification' icon='ti-bell' color='c-red-400' onClick={() => props.history.push('notification')} />\r\n          </View>\r\n          <View className=\"row gap-20\">\r\n            <Banner title='Door Lock(s)' icon='ti-lock' color='c-indigo-700' onClick={() => props.history.push('outings')} />\r\n            {props.appUser.role === ROLE.ADMIN &&\r\n            <>\r\n              <Banner title='Block(s)' icon='fa fa-building' color='c-brown-400' bgColor='bgc-brown-50' hasCount={true} count={props.blocks.isUpToDate ? (!props.blocks.isError ? props.blocks.data.length + '' : '0') :'Loading'} onClick={() => props.history.push('blocks')} />\r\n              <Banner title='House(s)' icon='fa fa-home' color='c-blue-600' bgColor='bgc-blue-50' hasCount={true} count={props.homes.isUpToDate ? (!props.homes.isError ? props.homes.data.length + '' : '0') :'Loading'} onClick={() => props.history.push('homes')} />\r\n              <Banner title='User(s)' icon='fa fa-users' color='c-deep-purple-400' bgColor='bgc-deep-purple-50' hasCount={true} count={props.users.isUpToDate ? (!props.users.isError ? props.users.data.length + '' : '0') :'Loading'} onClick={() => props.history.push('users')} />\r\n            </>\r\n            }\r\n            {(props.appUser.role !== ROLE.ADMIN && props.user.client.config.hasPayment) &&\r\n            <Banner title='Payment' icon='fa fa-credit-card' color='c-indigo-400' onClick={() => props.history.push('payment')} />\r\n            }\r\n          </View>\r\n          {(props.appUser.role === ROLE.ADMIN && props.user.client.config.hasPayment) &&\r\n          <View className=\"row gap-20\">\r\n            <Banner title='Payment' icon='fa fa-credit-card' color='c-indigo-400' onClick={() => props.history.push('payment')} />\r\n          </View>\r\n          }\r\n        </View>\r\n        }\r\n        {(props.appUser.role === ROLE.MAINTENANCE_SUPERVISOR || props.appUser.role === ROLE.MAINTENANCE_MANAGER) &&\r\n        <View className=\"masonry-item w-100\">\r\n          <View className=\"row gap-20\">\r\n            <Banner title='Ticket(s)' icon='ti-headphone-alt' color='c-orange-400' onClick={() => props.history.push('tickets')} />\r\n          </View>\r\n        </View>\r\n        }\r\n        {(props.appUser.role === ROLE.SECURITY_SUPERVISOR || props.appUser.role === ROLE.SECURITY_MANAGER) &&\r\n        <View className=\"masonry-item w-100\">\r\n          <View className=\"row gap-20\">\r\n            <Banner title='Visitor(s)' icon='fa fa-id-card-o' color='c-pink-400' onClick={() => props.history.push('all-visitors')} />\r\n            <Banner title='Door Lock(s)' icon='ti-lock' color='c-indigo-700' onClick={() => props.history.push('outings')} />\r\n          </View>\r\n        </View>\r\n        }\r\n        {(props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER || props.appUser.role === ROLE.MAINTENANCE_SUPERVISOR || props.appUser.role === ROLE.MAINTENANCE_MANAGER) &&\r\n        <Tickets data={props.tickets} role={props.appUser.role} />\r\n        }\r\n        <Ads data={props.ads} />\r\n        {(props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER || props.appUser.role === ROLE.SECURITY_SUPERVISOR || props.appUser.role === ROLE.SECURITY_MANAGER) &&\r\n        <Visitors appUser={props.appUser} user={props.user} onLoad={props.onLoadVisitors} />\r\n        }\r\n      </View>\r\n    </View>\r\n  );\r\n};","import * as React from 'react';\r\nimport { generateUUID } from '../../util';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  onPress?: () => void,\r\n  key?: string,\r\n  className?: string\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const {isActive, text, onPress, key, className} = props;\r\n  let id = generateUUID();\r\n  return (\r\n    <span className={'mR-10 ' + (className ? className : '')}>\r\n      <input type='checkbox' id={id} key={key ? key : id} checked={isActive} className='va-m' onClick={onPress ? onPress : () =>{}} />\r\n      <label htmlFor={id} className='mL-5 va-m mB-0'>{text}</label>\r\n    </span>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport moment from 'moment';\r\nimport { View, Image, Text, TextInput } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport { isNN } from '../../../util/index';\r\nimport { FILE_BASE_PATH, ROLE } from '../../../constants';\r\nimport { toDateTimeString } from '../../../util/convert';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  isSearch?: boolean,\r\n  onActiveChange?: () => void,\r\n  onEnter?: (id: string) => void,\r\n  onExit?: (id: string) => void,\r\n  onApprove?: (id: string) => void,\r\n  onReject?: (id: string) => void,\r\n  onSelect?: (data: IVisitor) => void,\r\n  onRemove?: (id: string) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isZoomImage, setIsZoomImage] = useState(false);\r\n  const [zoomImage, setZoomImage] = useState('');\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  const onToggleZoomImage = (isZoom: boolean) => {\r\n    setIsZoomImage(isZoom);\r\n  };\r\n  \r\n  let tSearchText = isNN(searchText) ? searchText.toLowerCase() : searchText;\r\n  let data = ((isNN(tSearchText) && isNN(props.data)) ? props.data.filter((d, i) => d.homeNumber.toLowerCase().indexOf(tSearchText) >= 0 || d.passCode.toLowerCase().indexOf(tSearchText) >= 0 || d.name.toLowerCase().indexOf(tSearchText) >= 0) : props.data);\r\n    return(<>\r\n      <View className='bdB mT-5'>\r\n        <Text>{'No of ' + (props.isActive ? 'Active' : '') + ' Visitors: ' + props.data.length}</Text>\r\n        {(!props.isSearch && props.appUser.role !== ROLE.GATEKEEPER) &&\r\n        <Checkbox isActive={props.isActive} text='Only Active Visitors' onPress={props.onActiveChange} className='fl-r' />\r\n        }\r\n      </View>\r\n      {isNN(props.data) &&\r\n      <View className='mT-10 mB-5'>\r\n        <TextInput type='text' placeholder=\"Enter passcode to search\" className='form-control' value={searchText} onChange={(event: any) => setSearchText(event.target.value)} />\r\n      </View>\r\n      }\r\n      <View className='p-10 mB-10'>\r\n        {isNN(data) ?\r\n        data.map((d: IVisitor, i: number) => {\r\n          return(\r\n            <View key={i} className='card m-1 d-ib'>\r\n              {isNN(d.image) &&\r\n              <View className='ta-c mB-5'>\r\n                <Image src={FILE_BASE_PATH + d.image} className='cur-p m-0' style={{height: '25vh', borderRadius: '50%'}} onClick={() => {\r\n                  setIsZoomImage(true);\r\n                  setZoomImage(d.image);\r\n                  }} />\r\n              </View>\r\n              }\r\n              <View className='container'>\r\n                {isNN(d.passCode) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text className='fw-600'>{d.passCode}</Text>\r\n                </View>\r\n                }\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text className='fw-600'>{d.name + ' [' + d.type + ']'}</Text>\r\n                </View>\r\n                {(d.age > 0 || isNN(d.gender)) && \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other')) : '')}</Text>\r\n                </View>\r\n                }\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  To <Text className='fw-600'>{d.homeNumber}</Text> on <Text className='fw-600'>{toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                {(!d.isEntered && !d.isExit) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{((d.gateNo) ? 'In gate ' + d.gateNo + ' by ': 'By ') + d.createdBy}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.mobileNo) && \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) && \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                {d.personCount > 0 && \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.personCount + ' Person' + (d.personCount > 1 ? 's' : '') + (d.vehicleType === 'WALK' ? ' by WALK' : ' in ' + d.vehicleType + (isNN(d.vehicleNo) ? ' ' + d.vehicleNo : ''))}</Text>\r\n                </View>\r\n                }\r\n                {(!d.isApproved && !d.isRejected && !d.isEntered) && \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <View className='c-blue-500'>WAITING FOR APPROVAL</View>\r\n                </View>\r\n                }\r\n                {(d.isApproved || d.isRejected ) && \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <View className={(d.isApproved ? 'c-green-600' : 'c-red-600')}>{d.isApproved ? 'APPROVED' : 'REJECTED'}</View>\r\n                  <View>{'By ' + d.approvedBy}</View>\r\n                  <View>{'On ' + toDateTimeString(d.approvedAt)}</View>\r\n                </View>\r\n                }\r\n                {d.isEntered &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <View>{'Entry By ' + d.enteredBy + ' in gate ' + d.gateNo}</View>\r\n                  <View>{'On ' + toDateTimeString(d.enteredAt)}</View>\r\n                </View>\r\n                }\r\n                {(d.isApproved && !d.isEntered) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <View className='c-red-600'>NOT ENTERED</View>\r\n                </View>\r\n                }\r\n                {(!d.isRejected && d.isExit) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <View>{'Exit By ' + d.exitBy + ' in gate ' +  d.exitGateNo}</View>\r\n                  <View>{'On ' + toDateTimeString(d.exitAt)}</View>\r\n                </View>\r\n                }\r\n                {(d.isEntered && !d.isExit) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <View className='c-red-600'>STAYING IN</View>\r\n                </View>\r\n                }\r\n                {(!d.isEntered && d.passCode && d.arriveAt) && \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text className='fw-600 c-red-600'>{'Expected Arrival ' + toDateTimeString(d.arriveAt)}</Text>\r\n                </View>\r\n                }\r\n                {(!props.isSearch && props.appUser.role === ROLE.GATEKEEPER) &&\r\n                <View className='mT-1 mB-3 p-2 ta-c'>\r\n                  {(!d.isEntered && !d.isRejected && (!d.arriveAt || new Date(d.arriveAt).getDate() === moment().toDate().getDate())) && <Button title='Enter' onPress={() => { props.onEnter && props.onEnter(d._id) }} />}\r\n                  {((d.isEntered || d.isRejected) && !d.isExit) && <Button title={d.isRejected ? 'Remove' : 'Exit'} onPress={() => { props.onExit && props.onExit(d._id) }} />}\r\n                </View>\r\n                }\r\n                {(!props.isSearch && props.appUser.role === ROLE.USER && !d.isApproved && !d.isRejected && !d.isEntered) &&\r\n                <View className='mT-1 mB-3 p-2 ta-c'>\r\n                  <Button title='Approve' className='mR-10' onPress={() => { props.onApprove && props.onApprove(d._id) }} />\r\n                  <Button title='Reject' onPress={() => { props.onReject && props.onReject(d._id) }} />\r\n                </View>\r\n                }\r\n                {(!props.isSearch && props.appUser.role === ROLE.USER && isNN(d.passCode) && !d.isEntered && !d.isRejected) &&\r\n                <View className='mT-1 mB-3 p-2 ta-c'>\r\n                  <Button title='Remove' onPress={() => { props.onRemove && props.onRemove(d._id) }} />\r\n                </View>\r\n                }\r\n                {props.isSearch &&\r\n                <View className='mT-1 mB-3 p-2 ta-c'>\r\n                  <Button title='Select' onPress={() => { props.onSelect && props.onSelect(d) }} />\r\n                </View>\r\n                }\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text className='p-20'>No visitor found.</Text>\r\n      }\r\n      </View>\r\n      <Modal\r\n          open={isZoomImage}\r\n          onClose={() => onToggleZoomImage(false)}>\r\n          <View className='ta-c'>\r\n            <Image src={FILE_BASE_PATH + zoomImage} style={{ height: '50%', width: '50%' }} />\r\n          </View>\r\n        </Modal>\r\n    </>\r\n    );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport DatePicker from 'react-date-picker';\r\nimport TimePicker from 'react-time-picker';\r\nimport moment from 'moment';\r\nimport { View, ScrollView, TextInput, Text, Picker } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { isNN, generateUUID, onEnter, isNNObject } from '../../../util/index';\r\nimport { ROLE } from '../../../constants';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHome, IVisitor } from '../../../models/home';\r\nimport VisitorsView from './visitors-view';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [homeId, setHomeId] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    id: '',\r\n    type: 'VISITOR',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    arriveAt: new Date(),\r\n    arriveAtTime: '',\r\n    personCount: 1,\r\n    vehicleType: 'BIKE',\r\n    vehicleNo: '',\r\n    fileName: '',\r\n  });\r\n  const [showHomes, setShowHomes] = useState(false);\r\n  const [homeSearchText, setHomeSearchText] = useState('');\r\n  const [searchResult, setSearchResult] = useState([] as Array<IVisitor>);\r\n  const [isShowSearch, setIsShowSearch] = useState(false);\r\n   \r\n  useEffect(() => {\r\n    if(props.appUser.role === ROLE.USER){\r\n      setHomeId(props.user.homes[props.appUser.homeIndex]._id)\r\n    } \r\n  }, []);\r\n\r\n  const onImageSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName: string = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        setFormData({\r\n          ...formData,\r\n          fileName: fileName\r\n        });\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        props.onUpload(data, (result: boolean, message: string) => {\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSave = () => {\r\n    if((props.appUser.role === ROLE.USER || isNN(props.gateNo)) && (props.appUser.role !== ROLE.USER || isNNObject(formData.arriveAt)) && showHomes === false && homeId.length > 0 && isNN(formData.name) && formData.personCount > 0 && isNN(formData.fileName)){\r\n      let arriveAt = formData.arriveAt;\r\n      if(isNNObject(arriveAt)){\r\n        let arriveAtTime: Array<string> = [];\r\n        if(isNNObject(formData.arriveAt) && isNN(formData.arriveAtTime)){\r\n          arriveAtTime = formData.arriveAtTime.split(':');\r\n        }\r\n        if(isNN(arriveAtTime) && arriveAtTime.length > 1){\r\n          arriveAt.setHours(parseInt(arriveAtTime[0]), parseInt(arriveAtTime[1]), 0,0);\r\n        }else{\r\n          arriveAt.setHours(0, 0, 0, 0);\r\n        }\r\n      }\r\n      let visitor = {\r\n        _id: '',\r\n        type: formData.type,\r\n        name: formData.name,\r\n        age: formData.age,\r\n        gender: formData.gender,\r\n        mobileNo: formData.mobileNo,\r\n        emailId: '',\r\n        arriveAt: arriveAt,\r\n        personCount: formData.personCount,\r\n        vehicleType: formData.vehicleType,\r\n        vehicleNo: formData.vehicleNo,\r\n        image: formData.fileName,\r\n        passCode: '',\r\n        gateNo: props.gateNo\r\n      } as IVisitor;\r\n      visitor = Object.assign(visitor, {\r\n        isUser: (props.appUser.role === ROLE.USER)\r\n      });\r\n      props.onToggleLoading(true);\r\n      props.onSave(homeId, visitor, props.user, props.appUser, (result: IVisitor) => {\r\n          // props.navigation.navigation.goBack(null);\r\n          onClear();\r\n          props.onToggleLoading(false);\r\n          if(props.appUser.role === ROLE.USER){\r\n            Toast.success('Visitor Request created successfully. Please share the passcode(' + result.passCode + ') to yor visitor and ask him/her to show it to the security in the gate while entering.');\r\n          }else{\r\n            Toast.success('Visitor created successfully. Notification sent to the house members for approval. If this visitor got approved from house member then allow him/her inside.')\r\n          }\r\n      }, (message: string) => {\r\n          props.onToggleLoading(false);\r\n          Toast.fail('Failed to save visitor ' + visitor.name + '.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill Gate Number, House, Name, People count and Image before '+ (formData.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onClear = () => {\r\n    setHomeId((props.appUser.role === ROLE.USER) ? homeId : '');\r\n    setFormData({\r\n      ...formData,\r\n      id: '',\r\n      type: 'VISITOR',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      arriveAt: new Date(),\r\n      arriveAtTime: '',\r\n      personCount: 1,\r\n      vehicleType: 'BIKE',\r\n      vehicleNo: '',\r\n      fileName: ''\r\n    });\r\n    setShowHomes(false);\r\n    setHomeSearchText('');\r\n    setSearchResult([]);\r\n    setIsShowSearch(false);\r\n  };\r\n  \r\n  const onSearch = () => {\r\n    if(formData.mobileNo.length > 2){\r\n      props.onToggleLoading(true);\r\n      props.onSearch(formData.mobileNo, (result: Array<IVisitor>) => {\r\n        props.onToggleLoading(false);\r\n        setIsShowSearch(true);\r\n        setSearchResult(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(message);\r\n        setIsShowSearch(false);\r\n        setSearchResult([]);\r\n      });\r\n    }\r\n  };\r\n\r\n    return(\r\n        <View>\r\n          {props.appUser.role === ROLE.GATEKEEPER &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder='Enter House Number' className='form-control'\r\n            value={homeSearchText} \r\n            onChange={(event: any) => {\r\n              setShowHomes(true);\r\n              setHomeSearchText(event.target.value)\r\n              }} />\r\n          </View>\r\n          }\r\n          {\r\n            (props.appUser.role === ROLE.GATEKEEPER && showHomes && isNN(homeSearchText) && props.homes && props.homes.data.length > 0 ) &&\r\n            <ScrollView className='mT-3 mB-3 pT-5 pB-5 ov-s'>\r\n              {\r\n                props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(homeSearchText.toLowerCase()) >= 0).map((d: IHome, i: number) => {\r\n                  return(\r\n                    <Text \r\n                    className='cur-p m-3 p-5 bgc-blue-50'\r\n                    key={'ho' + i}\r\n                    onClick={() => {\r\n                      setHomeSearchText(d.number);\r\n                      setHomeId(d._id);\r\n                      setShowHomes(false);\r\n                    }}>{d.number}</Text>\r\n                  )\r\n                })\r\n              }\r\n            </ScrollView>\r\n          }\r\n          {props.appUser.role === ROLE.GATEKEEPER &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={formData.type === 'VISITOR'} text='Visitor' onPress={() => setFormData({...formData, type: 'VISITOR'})} />\r\n            <RadioButton isActive={formData.type === 'DELIVERY'} text='Delivery' onPress={() => setFormData({...formData, type: 'DELIVERY'})} />\r\n            <RadioButton isActive={formData.type === 'SERVICE'} text='Service' onPress={() => setFormData({...formData, type: 'SERVICE'})} />\r\n          </View>\r\n          }\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder='Mobile Number' className='form-control mR-10 d-i' style={{width: 'calc(100% - 40px)'}} value={formData.mobileNo} onChange={(event: any) => setFormData({...formData, mobileNo: event.target.value})} \r\n            onKeyPress={(e) => {\r\n              onEnter(e, onSearch);\r\n            }} />\r\n            <span className='icon-holder cur-p' onClick={onSearch}>\r\n              <i className='ti-search pdd-right-10 fw-900'></i>\r\n            </span>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' value={formData.name} onChange={(event: any) => setFormData({...formData, name: event.target.value})} />\r\n          </View>\r\n          {props.appUser.role === ROLE.USER &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text>Arrival At &nbsp;</Text>\r\n            <DatePicker minDate={moment().toDate()} maxDate={moment().add(2,'d').toDate()}\r\n            onChange={(date : any) => {\r\n              setFormData({\r\n                ...formData,\r\n                arriveAt: date\r\n              });\r\n            }}\r\n            value={formData.arriveAt}\r\n            />\r\n            <Text>&nbsp;</Text>\r\n            <TimePicker\r\n            value={formData.arriveAtTime}\r\n            // minTime={(isNN(this.state.arriveAt) && this.state.arriveAt.getDate() === moment().toDate().getDate()) ? moment().toDate() : null}\r\n            onChange={(time: any) => {\r\n              setFormData({\r\n                ...formData,\r\n                arriveAtTime: time\r\n              });\r\n            }}\r\n            />\r\n          </View>\r\n          }\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='number' placeholder='Age' className='form-control w-a d-ib mR-10' maxLength={3} value={formData.age > 0 ? formData.age + '' : ''} onChange={(event: any) => setFormData({...formData, age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n            <View className='d-ib w-a'>\r\n              <RadioButton isActive={formData.gender === 'M'} text='Male' onPress={() => setFormData({...formData, gender: 'M'})} />\r\n              <RadioButton isActive={formData.gender === 'F'} text='Female' onPress={() => setFormData({...formData, gender: 'F'})} />\r\n              {props.user.client.config.hasOtherGender &&\r\n              <RadioButton isActive={formData.gender === 'O'} text='Other' onPress={() => setFormData({...formData, gender: 'O'})} />\r\n              }\r\n            </View>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='number' placeholder='People Count' className='form-control w-a d-ib mR-10' value={formData.personCount > 0 ? formData.personCount + '' : ''} onChange={(event: any) => setFormData({...formData, personCount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n            <Picker className='form-control w-a d-ib mR-10' value={formData.vehicleType}\r\n            onChange={(event: any) => setFormData({...formData, vehicleType: event.target.value})}>\r\n              <option value='WALK'>WALK</option>\r\n              <option value='CYCLE'>CYCLE</option>\r\n              <option value='BIKE'>BIKE</option>\r\n              <option value='CAR'>CAR</option>\r\n              <option value='VAN'>VAN</option>\r\n              <option value='JEEP'>JEEP</option>\r\n              <option value='TEMPO'>TEMPO</option>\r\n              <option value='BUS'>BUS</option>\r\n              <option value='TRUCK'>TRUCK</option>\r\n            </Picker>\r\n            <TextInput type='text' placeholder='Vehicle No' className='form-control w-a d-ib' value={formData.vehicleNo} onChange={(event: any) => setFormData({...formData, vehicleNo: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <input type='file' accept='image/*' name='image' placeholder='SELECT IMAGE' onChange={onImageSelect}/>\r\n              {isNN(formData.fileName) &&\r\n              <Text className='mL-15'>{formData.fileName}</Text>\r\n              }\r\n          </View>\r\n          <View className='ta-c mT-5 mB-3 pT-5 pB-5'>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={onSave}\r\n              className='mR-10'\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={onClear}\r\n              />\r\n          </View>\r\n          {isShowSearch &&\r\n          <Modal\r\n          open={isShowSearch}\r\n          onClose={() => setIsShowSearch(false)}>\r\n            <View className='mT-30 mB-25 mL-15 mR-15' style={{height: '80%'}}>\r\n              <VisitorsView user={props.user} appUser={props.appUser} data={searchResult} isActive={false} isSearch={true} onSelect={(data: IVisitor) => {\r\n                setIsShowSearch(false);\r\n                setSearchResult([]);\r\n                setFormData({\r\n                  ...formData,\r\n                  name: data.name,\r\n                  age: data.age,\r\n                  gender: data.gender,\r\n                  mobileNo: data.mobileNo,\r\n                  vehicleType: data.vehicleType,\r\n                  vehicleNo: data.vehicleNo,\r\n                  fileName: data.image\r\n                });\r\n                }} />\r\n            </View>\r\n          </Modal>\r\n          }\r\n        </View>\r\n    );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { View, TextInput, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home';\r\nimport NewVisitor from './new-visitor';\r\nimport { isNN } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onGateNoChanged: (gateNo: string) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearchVisitor: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [gateNo, setGateNo] = useState('');\r\n\r\n  useEffect(() => {\r\n    setGateNo(props.gateNo);\r\n  }, [props.gateNo]);\r\n\r\n  const viewAllVisitors = () => {\r\n    if(isNN(gateNo)) {\r\n      props.history.push('all-visitors')\r\n    } else {\r\n      Toast.warn('Please enter Gate Number to view this page.');\r\n    }\r\n  };\r\n  \r\n  const viewAllTakeaways = () => {\r\n    if(isNN(gateNo)) {\r\n      props.history.push('all-takeways')\r\n    } else {\r\n      Toast.warn('Please enter Gate Number to view this page.');\r\n    }\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <View className='bgc-white p-20'>\r\n            <View className=\"\">\r\n              <TextInput type='text' placeholder='Gate Number' className='form-control w-a' value={gateNo} onChange={(event: any) => setGateNo(event.target.value)} onBlur={() => props.onGateNoChanged(gateNo)} />\r\n              <Text className='fl-r c-blue-700 fw-600 cur-p' onClick={viewAllTakeaways}>View all Active Takeaways</Text>\r\n              <Text className='fl-r c-blue-700 fw-600 cur-p mR-20' onClick={viewAllVisitors}>View all Active Visitors</Text>\r\n            </View>\r\n            <NewVisitor appUser={props.appUser} user={props.user} homes={props.homes} gateNo={gateNo} onToggleLoading={(isLoading) => setIsLoading(isLoading)} onSave={props.onSaveVisitor} onUpload={props.onUpload} onSearch={props.onSearchVisitor} />\r\n            <Spinner visible={isLoading} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { ITransaction } from '../models/home/transaction';\r\nimport { IVisitor } from '../models/home';\r\nimport { setGateNo } from '../store/actions/account';\r\nimport { upload, update } from '../store/actions/payment';\r\nimport { loadAll as loadAllAds } from '../store/actions/ad';\r\nimport { loadAll as loadAllTickets } from '../store/actions/ticket';\r\nimport { loadAll as loadAllVisitors } from '../store/actions/visitor';\r\nimport { save as saveVisitor, search as searchVisitor } from '../store/actions/visitor';\r\nimport { upload as fileUpload } from '../store/actions/file';\r\nimport Page from '../components/home/dashboard';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    outings: state.Outings,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    tickets: state.Tickets,\r\n    blocks: state.Blocks,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onGateNoChanged: (gateNo: string) => dispatch(setGateNo(gateNo)),\r\n    onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => dispatch(upload(file, homeId, user, callback)),\r\n    onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => dispatch(update(paymentId, transaction, homeIndex, user, callback)),\r\n    onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => dispatch(saveVisitor(homeId, data, user, appUser, sCallback, fCallback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(fileUpload(data, callback)),\r\n    onSearchVisitor: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => dispatch(searchVisitor(searchText, sCallback, fCallback)),\r\n    onLoadAds: (appClientId: string, callback: (result: boolean) => void) =>  dispatch(loadAllAds(appClientId, callback)),\r\n    onLoadTickets: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAllTickets(appClientId, homeId, callback)),\r\n    onLoadVisitors: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAllVisitors(appClientId, homeId, isActive, sCallback, fCallback))\r\n});\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useEffect} from 'react';\r\nimport {Text, View} from '../common/elements';\r\nimport {IAppUser} from '../../models/app-user';\r\nimport {IUser} from '../../models/user/user';\r\nimport {IAds} from '../../models/store/ads';\r\nimport {IUsers} from '../../models/store/users';\r\nimport {IHomes} from '../../models/store/homes';\r\nimport {IBlocks} from '../../models/store/blocks';\r\nimport {IOutings} from '../../models/store/outings';\r\nimport {ITransaction} from '../../models/home/transaction';\r\nimport {ITickets} from '../../models/store/tickets';\r\nimport {IVisitor} from '../../models/home';\r\nimport Home from './home';\r\nimport AMHome from './manager/home';\r\nimport GKHome from './gatekeeper/home';\r\nimport {ROLE} from '../../constants/index';\r\nimport {isNN} from '../../util';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  outings: IOutings,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  tickets: ITickets,\r\n  blocks: IBlocks,\r\n  gateNo: string,\r\n  onGateNoChanged: (gateNo: string) => void,\r\n  onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearchVisitor: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadAds: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onLoadTickets: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onLoadVisitors: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  useEffect(() => {\r\n    if(!props.ads.isUpToDate){\r\n      props.onLoadAds(props.user.client._id, (result: boolean) => { \r\n        \r\n      });\r\n    }\r\n    if(!props.ads.isUpToDate){\r\n      props.onLoadTickets(props.user.client._id, (props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER) ? '' : props.user.homes[props.appUser.homeIndex]._id, (result: boolean) => {\r\n     \r\n      });\r\n    }\r\n  }, []);\r\n  \r\n  if (props.appUser.role === ROLE.USER) {\r\n    if (props.appUser.homeIndex >= 0 && isNN(props.user.homes)) {\r\n      return (<Home history={props.history} appUser={props.appUser} user={props.user} home={props.user.homes[props.appUser.homeIndex]} onPaymentUpload={(file: any, homeId: string, callback: (result: boolean) => void) => props.onPaymentUpload(file, homeId, props.user, callback)} onPaymentUpdate={(paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => props.onPaymentUpdate(paymentId, transaction, props.appUser.homeIndex, props.user, callback)} ads={props.ads} tickets={props.tickets} onLoadVisitors={props.onLoadVisitors} />);\r\n    } else {\r\n      return (<View id='mainContent'><Text className='m-20'>No house assigned to you. Please contact administrator/manager.</Text></View>);\r\n    }\r\n  } else if (props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER || props.appUser.role === ROLE.MAINTENANCE_SUPERVISOR || props.appUser.role === ROLE.MAINTENANCE_MANAGER || props.appUser.role === ROLE.SECURITY_SUPERVISOR || props.appUser.role === ROLE.SECURITY_MANAGER) {\r\n    return (<AMHome history={props.history} appUser={props.appUser} user={props.user} users={props.users} homes={props.homes} blocks={props.blocks} ads={props.ads} tickets={props.tickets} onLoadVisitors={props.onLoadVisitors} />);\r\n  } else if (props.appUser.role === ROLE.GATEKEEPER) {\r\n    return (<GKHome history={props.history} appUser={props.appUser} user={props.user} homes={props.homes} gateNo={props.gateNo} onGateNoChanged={props.onGateNoChanged} onSaveVisitor={props.onSaveVisitor} onUpload={props.onUpload} onSearchVisitor={props.onSearchVisitor} />);\r\n  } else {\r\n    return (<View id='mainContent'><Text className='m-20'>No role assigned to you. Please contact administrator/manager.</Text></View>);\r\n  }\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IMember } from '../../models/home/member';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n////import { number } from 'prop-types';\r\n////import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'member';\r\nlet accountController: string = 'account';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.member) && isNN(result.data.member._id)) {\r\n      sCallback(result.data.member, result.data.homeIds ? result.data.homeIds : []);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Member.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IMember, user: IUser, homeIndex: number, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        let members = user.homes[homeIndex].members;\r\n        var foundIndex = members.findIndex(d => d._id === result.data);\r\n        members[foundIndex]._id = result.data;\r\n        members[foundIndex].number = data.number;\r\n        members[foundIndex].name = data.name;\r\n        members[foundIndex].age = data.age;\r\n        members[foundIndex].gender = data.gender;\r\n        members[foundIndex].mobileNo = data.mobileNo;\r\n        members[foundIndex].emailId = data.emailId;\r\n        members[foundIndex].type = data.type;\r\n        members[foundIndex].relationship = data.relationship;\r\n        members[foundIndex].otherRelationship = data.otherRelationship;\r\n\r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    data = Object.assign(data, {\r\n      password: data.mobileNo\r\n    });\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        data.isApproved = true;\r\n        let members = user.homes[homeIndex].members;\r\n        members.push(data);\r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const saveByAM = (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    isAM: true,\r\n    homeIds: homeIds,\r\n    isApprove: isApprove\r\n  });\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          var foundIndex = users.data.findIndex(d => d._id === result.data);\r\n          if(foundIndex >= 0){\r\n            users.data[foundIndex]._id = result.data;\r\n            users.data[foundIndex].name = data.name;\r\n          } else {\r\n            users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          }\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const removeByAM = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadWFAUsers = (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(accountController + '/wfausers', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNNObject(result) && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const reject = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(accountController + '/rejectuser/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const allowOwnAccess = (id: string, isAllow: boolean, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().put(controller + '/allow/' + id + '/' + isAllow, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  data: Array<{title: string, link: string}>\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return (\r\n    <div className='mB-10'>\r\n      <Link to=''>Dashboard</Link>\r\n      {props.data.map((d, i) => {\r\n        return(<>\r\n        <span key={'bd' + i} className='mL-10 mR-10'>/</span>\r\n        {(i === props.data.length - 1) ?\r\n        <span key={'bc' + i}>{d.title}</span>\r\n        :\r\n        <Link key={'bc' + i} to={'/' + d.link}>{d.title}</Link>\r\n        }\r\n        </>);\r\n      })}\r\n    </div>\r\n  );\r\n}","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUsers } from '../models/store/users';\r\nimport { IUser } from '../models/user/user';\r\nimport { IMember } from '../models/home';\r\nimport { save, remove } from '../store/actions/member';\r\nimport Page from '../components/home/members';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    users: state.Users,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, sCallback)),\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, sCallback: (result: boolean) => void) => dispatch(remove(id, homeIndex, user, users, sCallback))\r\n});\r\n\r\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport {confirmAlert} from 'react-confirm-alert';\r\nimport {View, Text, TextInput, Picker} from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport RadioButton from '../common/radio-button';\r\nimport {IUsers} from '../../models/store/users';\r\nimport {IUser} from '../../models/user/user';\r\nimport {IMember} from '../../models/home/member';\r\nimport {isNN} from '../../util/index';\r\nimport Toast from '../../util/toast';\r\nimport { APPTYPE } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => void,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [state, setState] = useState({\r\n    id: '',\r\n    number: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    relationship: '',\r\n    otherRelationship: '',\r\n    type: 'TENANT',\r\n    role: 'USER'\r\n  });\r\n\r\n  const onSave = () => {\r\n    if (isNN(state.name) && state.age > 0 && isNN(state.gender) && isNN(state.type)) {\r\n      setIsLoading(true);\r\n      const member = {\r\n        _id: state.id,\r\n        number: state.number,\r\n        name: state.name,\r\n        age: state.age,\r\n        gender: state.gender,\r\n        mobileNo: state.mobileNo,\r\n        emailId: state.emailId ? state.emailId.toLowerCase() : '',\r\n        relationship: state.relationship,\r\n        otherRelationship: state.otherRelationship,\r\n        type: state.type,\r\n        role: state.role,\r\n      } as IMember;\r\n      props.onSave(member, props.user, props.homeIndex, (result: boolean, message: string) => {\r\n        setIsLoading(false);\r\n        if (result === true) {\r\n          setIsEdit(false);\r\n          setState({\r\n            id: '',\r\n            number: '',\r\n            name: '',\r\n            age: 0,\r\n            gender: '',\r\n            mobileNo: '',\r\n            emailId: '',\r\n            relationship: '',\r\n            otherRelationship: '',\r\n            type: 'TENANT',\r\n            role: 'USER',\r\n          });\r\n          Toast.success('Member saved successfully.');\r\n        } else {\r\n          Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n        }\r\n      });\r\n    } else {\r\n      // Toast.warn('Please fill all the required fields before '+ (state.id > 0 ? 'Update' : 'Save') + '.');\r\n      Toast.warn('Please fill all the required fields before '+ (state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, props.homeIndex, props.user, props.users, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if (result === true) {\r\n                Toast.success('Member removed successfully.');\r\n              } else {\r\n                Toast.fail('Failed to remove member.');\r\n              }\r\n            });\r\n          },\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {},\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n    return (\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n            <Breadcrum data={[{title: 'Members', link: 'members'}]} />\r\n            <View className='bgc-white p-20'>\r\n              <View>\r\n                <Text className='fl-r cur-p c-blue-500' onClick={() => props.history.push('new-member')}>Add New</Text>\r\n              </View>\r\n              {isNN(props.user.homes[props.homeIndex].members) ?\r\n        props.user.homes[props.homeIndex].members.map((d: IMember, i: number) => {\r\n          return (\r\n            (isEdit === true && state.id === d._id) ?\r\n            <View key={i} className='bdB mT-5'>\r\n              {(props.user.client.config.appType == APPTYPE.QUARTERS && isNN(d.number)) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Number: ' + d.number}</Text>                  \r\n                </View>\r\n              }\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' value={state.name} onChange={(event: any) => setState({...state, name: event.target.value})} />\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} value={state.age > 0 ? state.age + '' : ''} onChange={(event: any) => setState({...state, age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <RadioButton isActive={state.gender === 'M'} text='Male' onPress={() => setState({...state, gender: 'M'})} />\r\n                <RadioButton isActive={state.gender === 'F'} text='Female' onPress={() => setState({...state, gender: 'F'})} />\r\n                {props.user.client.config.hasOtherGender &&\r\n                <RadioButton isActive={state.gender === 'O'} text='Other' onPress={() => setState({...state, gender: 'O'})} />\r\n                }\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' value={state.mobileNo} onChange={(event: any) => setState({...state, mobileNo: event.target.value})} />\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <TextInput type='text' placeholder=\"Email ID\" className='form-control' value={state.emailId} onChange={(event: any) => setState({...state, emailId: event.target.value})} />\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Picker\r\n                  className='form-control'\r\n                  value={state.relationship}\r\n                  onChange={(event: any) => setState({...state, relationship: event.target.value})}>\r\n                    <option key={'memrel-1'} value=''>Select Relationship</option>\r\n                    {isNN(props.user.client.config.memberRelationships) ?\r\n                    props.user.client.config.memberRelationships.map((d: string, i: number) => {\r\n                      return(<option key={'memrel' + i} value={d}>{d}</option>);\r\n                    })\r\n                    :\r\n                    <option key={'memrel0'} value='Other'>Other</option>\r\n                    }\r\n                </Picker>\r\n              </View>\r\n              {state.relationship === 'Other' &&\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <TextInput type='text' placeholder=\"Other Relationship\" className='form-control' value={state.otherRelationship} onChange={(event: any) => setState({...state, otherRelationship: event.target.value})} />\r\n              </View>\r\n              }\r\n              {/* <View className='mT-1 mB-3 p-2'>\r\n                <RadioButton isActive={state.type === 'OWNER'} text='Owner' onPress={() => setState({...state, type: 'OWNER'})} />\r\n                <RadioButton isActive={state.type === 'TENANT'} text='Tenant' onPress={() => setState({...state, type: 'TENANT'})} />\r\n              </View> */}\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={onSave}>\r\n                  <i className=\"c-green-500 fa fa-check\"></i>\r\n                </span>\r\n\t\t\t\t      <span className=\"icon-holder cur-p\" onClick={() => {\r\n                setIsEdit(false);\r\n                  setState({\r\n                    ...state,\r\n                    id: '',\r\n                    number: '',\r\n                    name: '',\r\n                    age: 0,\r\n                    gender: '',\r\n                    mobileNo: '',\r\n                    emailId: '',\r\n                    relationship: '',\r\n                    otherRelationship: '',\r\n                    type: 'TENANT',\r\n                    role: 'USER',\r\n                  });\r\n                }}>\r\n\t\t\t\t\t      <i className=\"c-red-500 fa fa-times\"></i>\r\n\t\t\t\t      </span>\r\n              </View>\r\n            </View> :\r\n            <View key={i} className='bdB mT-5'>\r\n              {(props.user.client.config.appType == APPTYPE.QUARTERS && isNN(d.number)) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Number: ' + d.number}</Text>                  \r\n                </View>\r\n              }\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.name}</Text>\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n              </View>\r\n              {isNN(d.mobileNo) &&\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.emailId) &&\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.emailId}</Text>\r\n              </View>\r\n              }\r\n              {(isNN(d.relationship) || isNN(d.otherRelationship)) &&\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{(isNN(d.relationship) && d.relationship != 'Other') ? d.relationship : (isNN(d.otherRelationship) ? d.otherRelationship : 'Other')}</Text>\r\n              </View>\r\n              }\r\n              {/* <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.type}</Text>\r\n              </View> */}\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                  setIsEdit(true);\r\n                  setState({\r\n                    ...state,\r\n                    id: d._id,\r\n                    number: d.number,\r\n                    name: d.name,\r\n                    age: d.age,\r\n                    gender: d.gender,\r\n                    mobileNo: d.mobileNo,\r\n                    emailId: d.emailId,\r\n                    relationship: d.relationship,\r\n                    otherRelationship: d.otherRelationship,\r\n                    type: d.type,\r\n                    role: d.role,\r\n                  });\r\n                }}>\r\n                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                </span>\r\n                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                  onRemove(d._id);\r\n                }}>\r\n                  <i className=\"c-red-500 fa fa-trash\"></i>\r\n                </span>\r\n              </View>\r\n            </View>\r\n          );\r\n        }) :\r\n        <Text className='p-20'>No member found.</Text>\r\n              }\r\n              <Spinner visible={isLoading} />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n};\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IMember } from '../models/home';\r\nimport { save } from '../store/actions/member';\r\nimport Page from '../components/home/new-member';\r\n////import { number } from 'prop-types';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, sCallback))\r\n});\r\n\r\nexport const NewMember = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { View, TextInput, Picker } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IMember } from '../../models/home';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [state, setState] = useState({\r\n    id: '',\r\n    number: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    relationship: '',\r\n    otherRelationship: '',\r\n    type: 'TENANT',\r\n    role: 'USER'\r\n  });\r\n  \r\n  const onSave = () => {\r\n    if(isNN(state.name) && state.age > 0 && isNN(state.gender) && isNN(state.type)){\r\n        setIsLoading(true);\r\n        let member = {\r\n          _id: state.id,\r\n          number: '',\r\n          name: state.name,\r\n          age: state.age,\r\n          gender: state.gender,\r\n          mobileNo: state.mobileNo,\r\n          emailId: state.emailId ? state.emailId.toLowerCase() : '',\r\n          relationship: state.relationship,\r\n          otherRelationship: state.otherRelationship,\r\n          type: state.type,\r\n          role: state.role\r\n        } as IMember;\r\n        props.onSave(member, props.user, props.homeIndex, (result: boolean, message: string) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setState({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              relationship: '',\r\n              otherRelationship: '',\r\n              type: 'TENANT',\r\n              role: 'USER'\r\n            });\r\n            // props.navigation.navigation.goBack(null)\r\n            Toast.success('Member saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n            <Breadcrum data={[{title: 'Members', link: 'members'}, {title: 'New Member', link: 'new-member'}]} />\r\n            <View className='bgc-white p-20'>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' value={state.name} onChange={(event: any) => setState({...state, name: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} value={state.age > 0 ? state.age + '' : ''} onChange={(event: any) => setState({...state, age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={state.gender === 'M'} text='Male' onPress={() => setState({...state, gender: 'M'})} />\r\n            <RadioButton isActive={state.gender === 'F'} text='Female' onPress={() => setState({...state, gender: 'F'})} />\r\n            {props.user.client.config.hasOtherGender &&\r\n            <RadioButton isActive={state.gender === 'O'} text='Other' onPress={() => setState({...state, gender: 'O'})} />\r\n            }\r\n          </View>            \r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' value={state.mobileNo} onChange={(event: any) => setState({...state, mobileNo: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' value={state.emailId} onChange={(event: any) => setState({...state, emailId: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Picker\r\n              className='form-control'\r\n              value={state.relationship}\r\n              onChange={(event: any) => setState({...state, relationship: event.target.value})}>\r\n                <option key={'memrel-1'} value=''>Select Relationship</option>\r\n                {isNN(props.user.client.config.memberRelationships) ?\r\n                props.user.client.config.memberRelationships.map((d: string, i: number) => {\r\n                  return(<option key={'memrel' + i} value={d}>{d}</option>);\r\n                })\r\n                :\r\n                <option key={'memrel0'} value='Other'>Other</option>\r\n                }\r\n            </Picker>\r\n          </View>\r\n          {state.relationship === 'Other' &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Other Relationship\" className='form-control' value={state.otherRelationship} onChange={(event: any) => setState({...state, otherRelationship: event.target.value})} />\r\n          </View>\r\n          }\r\n          {/* <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={state.type === 'OWNER'} text='Owner' onPress={() => setState({...state, type: 'OWNER'})} />\r\n            <RadioButton isActive={state.type === 'TENANT'} text='Tenant' onPress={() => setState({...state, type: 'TENANT'})} />\r\n          </View> */}\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { actionTypes } from '../action-types';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'vehicle';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IVehicle, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let vehicles = user.homes[homeIndex].vehicles;\r\n        var foundIndex = vehicles.findIndex(d => d._id === result.data);\r\n        vehicles[foundIndex]._id = result.data;\r\n        vehicles[foundIndex].number = data.number;\r\n        vehicles[foundIndex].type = data.type;\r\n        user.homes[homeIndex].vehicles = vehicles;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n  new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      data._id = result.data;\r\n      data.createdBy = user.name;\r\n      let vehicles = user.homes[homeIndex].vehicles;\r\n      vehicles.push(data);\r\n      user.homes[homeIndex].vehicles = vehicles;\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].vehicles = user.homes[homeIndex].vehicles.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVehicle } from '../models/home';\r\nimport { save, remove } from '../store/actions/vehicle';\r\nimport Page from '../components/home/vehicles';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, sCallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, sCallback))\r\n});\r\n\r\nexport const Vehicles = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Text, TextInput, } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [type, setType] = useState('');\r\n  \r\n  const onSave = () => {\r\n    if(isNN(number) && isNN(type)){\r\n      setIsLoading(true);\r\n        let vehicle = {\r\n          _id: id,\r\n          number: number,\r\n          type: type\r\n        } as IVehicle;\r\n        props.onSave(vehicle, props.user, props.homeIndex, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setIsEdit(false);\r\n            setId('');\r\n            setNumber('');\r\n            setType('');\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, props.user, props.homeIndex, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                Toast.success('Vehicle removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove vehicle.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Vehicles', link: 'vehicles'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View>\r\n          <Text className='fl-r cur-p c-blue-500' onClick={() => props.history.push('new-vehicle')}>Add New</Text>\r\n        </View>\r\n        {isNN(props.user.homes[props.homeIndex].vehicles) ?\r\n          props.user.homes[props.homeIndex].vehicles.map((d: IVehicle, i: number) => {\r\n            return(\r\n              (isEdit === true && id === d._id) ?\r\n              <View key={i} className='bdB mT-5'>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <RadioButton isActive={type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => setType('TWO WHEELER')} />\r\n                  <RadioButton isActive={type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => setType('FOUR WHEELER')} />\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                <TextInput type='text' placeholder=\"Number\" className='form-control' value={number} onChange={(event: any) => setNumber(event.target.value)} />\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={onSave}>\r\n                  <i className=\"c-green-500 fa fa-check\"></i>\r\n                </span>\r\n                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    setIsEdit(false);\r\n                    setId('');\r\n                    setNumber('');\r\n                    setType('');\r\n                  }}>\r\n                  <i className=\"c-red-500 fa fa-times\"></i>\r\n                </span>\r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} className='bdB mT-5'>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.type}</Text>                  \r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.number}</Text>\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                    setIsEdit(true);\r\n                    setId(d._id);\r\n                    setNumber(d.number);\r\n                    setType(d.type);\r\n                  }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    onRemove(d._id);\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text className='p-20'>No vehicle found.</Text>\r\n        }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVehicle } from '../models/home';\r\nimport { save } from '../store/actions/vehicle';\r\nimport Page from '../components/home/new-vehicle';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, sCallback))\r\n});\r\n\r\nexport const NewVehicle = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [type, setType] = useState('');\r\n\r\n  const onSave = () => {\r\n    if(isNN(number) && isNN(type)){\r\n      setIsLoading(true);\r\n        let vehicle = {\r\n          _id: id,\r\n          number: number,\r\n          type: type\r\n        } as IVehicle;\r\n        props.onSave(vehicle, props.user, props.homeIndex, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n              setId('');\r\n              setNumber('');\r\n              setType('');\r\n            // props.navigation.navigation.goBack(null)\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Vehicles', link: 'vehicles'}, {title: 'New Vehicle', link: 'new-vehicle' }]} />  \r\n        <View className='bgc-white p-20'>        \r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' value={number} onChange={(event: any) => setNumber(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => setType('TWO WHEELER')} />\r\n            <RadioButton isActive={type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => setType('FOUR WHEELER')} />\r\n          </View>\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { IServant, ITakeaway } from '../../models/home/servant';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'servant';\r\n\r\nexport const loadAll = (sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Servants.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Servants.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IServant, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n      //   let servants = user.homes[homeIndex].servants;\r\n      //   var foundIndex = servants.findIndex(d => d._id === result.data);\r\n      //   servants[foundIndex]._id = result.data;\r\n      //   servants[foundIndex].name = data.name;\r\n      //   servants[foundIndex].age = data.age;\r\n      //   servants[foundIndex].gender = data.gender;\r\n      //   servants[foundIndex].mobileNo = data.mobileNo;\r\n      //   servants[foundIndex].emailId = data.emailId;\r\n           \r\n      //   user.homes[homeIndex].servants = servants;\r\n      //   dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // data._id = result.data;\r\n        // data.createdBy = user.name;\r\n        // let servants = user.homes[homeIndex].servants;\r\n        // servants.push(data);\r\n        // user.homes[homeIndex].servants = servants;\r\n        // dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // user.homes[homeIndex].servants = user.homes[homeIndex].servants.filter((d, i) => d._id !== id);\r\n      // dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const createTakeaway = (id: string, data: ITakeaway, sCallback:(result: string) => void, fCallback:(message: string) => void) => (dispatch: any) => {\r\n  if(isNN(data._id)){\r\n    new Api().put(controller + '/takeaway/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        sCallback(result.data);\r\n      }else{\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to update takeaway.');\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/takeaway/' + id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        sCallback(result.data);\r\n      }else{\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to create Takeaway.');\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const removeTakeaway = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/takeaway/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const exitTakeaway = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/exittakeaway/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, {\r\n    gateNo: gateNo\r\n  });\r\n};\r\n\r\nexport const loadActiveTakeaways = (appClientId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/takeaways/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Takeaways.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const clocking = (id: string, status: string, gateNo: string, callback: (result: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/clocking/' + id + '/' + status + '/' + (gateNo ? gateNo : 0), (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data)){\r\n      callback(result.data);\r\n    } else {\r\n      callback('');\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadClockings = (id: string, pn: number, rc: number, callback: (result: Array<any>) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/clockings/' + id + '/' + pn + '/' + rc, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data)){\r\n      callback(result.data);\r\n    } else {\r\n      callback([]);\r\n    }\r\n  });\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IServant, ITakeaway } from '../models/home';\r\nimport { loadAllByHome, save, remove, createTakeaway, removeTakeaway, loadClockings } from '../store/actions/servant';\r\nimport Page from '../components/home/servants';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => dispatch(loadAllByHome(homeId, sCallback, fCallback)),\r\n    onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => dispatch(save(homeId, data, sCallback)),\r\n    onRemove: (id: string, sCallback: (result: boolean) => void) => dispatch(remove(id, sCallback)),\r\n    onCreateTakeaway: (id: string, data: ITakeaway, sCallback:(result: string) => void, fCallback:(message: string) => void) => dispatch(createTakeaway(id, data, sCallback, fCallback)),\r\n    onRemoveTakeaway: (id: string, sCallback: (result: boolean) => void) => dispatch(removeTakeaway(id, sCallback)),\r\n    onLoadClockings: (id: string, pn: number, rc: number, callback: (result: Array<any>) => void) => dispatch(loadClockings(id, pn, rc, callback))\r\n});\r\n\r\nexport const Servants = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Text, TextInput, TextArea } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServant, ITakeaway } from '../../models/home/servant';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\nimport Button from '../common/button';\r\nimport { toDateTimeString } from '../../util/convert';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, sCallback: (result: boolean) => void) => void,\r\n  onCreateTakeaway: (id: string, data: ITakeaway, sCallback:(result: string) => void, fCallback:(message: string) => void) => void,\r\n  onRemoveTakeaway: (id: string, sCallback: (result: boolean) => void) => void,\r\n  onLoadClockings: (id: string, pn: number, rc: number, callback: (result: Array<any>) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [state, setState] = useState({\r\n    data: [] as Array<IServant>,\r\n    id: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    viewId: '',\r\n    takeaways: [] as Array<ITakeaway>,\r\n    takeawayTitle: '',\r\n    takeawayDesc: '',\r\n    editTakeawayId: '',\r\n    editTakeawayTitle: '',\r\n    editTakeawayDesc: '',\r\n    viewClockingId: '',\r\n    clockings: [] as Array<any>,\r\n    clockingPN: 1,\r\n    clockingRC: 10\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.homes[props.homeIndex]._id, (result: Array<IServant>) => {\r\n      setIsLoading(false);\r\n      setState({\r\n        ...state,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      setIsLoading(false);\r\n      Toast.fail(message);\r\n    });\r\n  }, []);\r\n  \r\n  const onSave = () => {\r\n    if(isNN(state.name) && state.age > 0 && isNN(state.gender)){\r\n      setIsLoading(true);\r\n        let servant = {\r\n          _id: state.id,\r\n          name: state.name,\r\n          age: state.age,\r\n          gender: state.gender,\r\n          mobileNo: state.mobileNo,\r\n          emailId: state.emailId ? state.emailId.toLowerCase() : ''\r\n        } as IServant;\r\n        props.onSave(props.user.homes[props.homeIndex]._id, servant, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            let tData = state.data;\r\n            var foundIndex = tData.findIndex(d => d._id === state.id);\r\n            tData[foundIndex].name = state.name;\r\n            tData[foundIndex].age = state.age;\r\n            tData[foundIndex].gender = state.gender;\r\n            tData[foundIndex].mobileNo = state.mobileNo;\r\n            tData[foundIndex].emailId = state.emailId;\r\n            setIsEdit(false);\r\n            setState({\r\n              ...state,\r\n              data: tData,\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              viewId: '',\r\n              takeaways: [],\r\n              takeawayTitle: '',\r\n              takeawayDesc: '',\r\n              editTakeawayId: '',\r\n              editTakeawayTitle: '',\r\n              editTakeawayDesc: ''\r\n            });\r\n            Toast.success('Servant saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servant.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                setState({\r\n                  ...state,\r\n                  data: state.data.filter((d, i) => d._id !== id),\r\n                  viewId: '',\r\n                  takeaways: [],\r\n                  takeawayTitle: '',\r\n                  takeawayDesc: '',\r\n                  editTakeawayId: '',\r\n                  editTakeawayTitle: '',\r\n                  editTakeawayDesc: ''\r\n                });\r\n                Toast.success('Servant removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove servant.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n  \r\n  const onView = (id: string, takeaways: Array<ITakeaway>) => {\r\n    if(state.viewId === id){\r\n      setState({\r\n        ...state,\r\n        viewId: '',\r\n        takeaways: [],\r\n        takeawayTitle: '',\r\n        takeawayDesc: '',\r\n        editTakeawayId: '',\r\n        editTakeawayTitle: '',\r\n        editTakeawayDesc: '',\r\n        viewClockingId: '',\r\n        clockings: [],\r\n        clockingPN: 1\r\n      });\r\n    }else{\r\n      setState({\r\n        ...state,\r\n        viewId: id,\r\n        takeaways: takeaways,\r\n        takeawayTitle: '',\r\n        takeawayDesc: '',\r\n        editTakeawayId: '',\r\n        editTakeawayTitle: '',\r\n        editTakeawayDesc: '',\r\n        viewClockingId: '',\r\n        clockings: [],\r\n        clockingPN: 1\r\n      });\r\n    }\r\n  };\r\n\r\n  const onViewClocking = (id: string) => {\r\n    if(state.viewClockingId === id){\r\n      setState({\r\n        ...state,\r\n        viewId: '',\r\n        takeaways: [],\r\n        takeawayTitle: '',\r\n        takeawayDesc: '',\r\n        editTakeawayId: '',\r\n        editTakeawayTitle: '',\r\n        editTakeawayDesc: '',\r\n        viewClockingId: '',\r\n        clockings: [],\r\n        clockingPN: 1\r\n      });\r\n    }else{\r\n      setIsLoading(true);\r\n      props.onLoadClockings(id, state.clockingPN, state.clockingRC, (result: Array<any>) => {\r\n        setIsLoading(false);\r\n        setState({\r\n          ...state,\r\n          viewId: '',\r\n          takeaways: [],\r\n          takeawayTitle: '',\r\n          takeawayDesc: '',\r\n          editTakeawayId: '',\r\n          editTakeawayTitle: '',\r\n          editTakeawayDesc: '',\r\n          viewClockingId: id,\r\n          clockings: result,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const onViewMoreClockings = (id: string) => {\r\n    setIsLoading(true);\r\n    props.onLoadClockings(id, state.clockingPN + 1, state.clockingRC, (result: Array<any>) => {\r\n      setIsLoading(false);\r\n      let clockings = state.clockings;\r\n      clockings.push(...result);\r\n      setState({\r\n        ...state,\r\n        clockings: clockings,\r\n        clockingPN: state.clockingPN + 1\r\n      });\r\n    });\r\n  };\r\n\r\n  const onCreateTakeaway = (id: string) => {\r\n    if(isNN(state.takeawayTitle) && isNN(state.takeawayDesc)){\r\n      setIsLoading(true);\r\n      props.onCreateTakeaway(id, {\r\n        _id: '',\r\n        title: state.takeawayTitle,\r\n        description: state.takeawayDesc,\r\n        createdBy: props.user.name,\r\n        createdAt: new Date(),\r\n        updatedBy: props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITakeaway, (result: string) => {\r\n        setIsLoading(false);\r\n        let tData = state.data;\r\n        var foundIndex = tData.findIndex(d => d._id === id);\r\n        tData[foundIndex].takeaways.unshift({\r\n          _id: result,\r\n          title: state.takeawayTitle,\r\n          description: state.takeawayDesc,\r\n          createdAt: new Date(),\r\n          createdBy: props.user.name,\r\n          updatedBy: props.user._id,\r\n          updatedAt: new Date()\r\n        } as ITakeaway);\r\n        setState({\r\n          ...state,\r\n          data: tData,\r\n          takeawayTitle: '',\r\n          takeawayDesc: ''\r\n        });\r\n        Toast.success('Takeayway added successfully.');\r\n      }, (message: string) => {\r\n        setIsLoading(false);\r\n        Toast.fail('Failed to add takeaway.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill Takeaway title & description before Add.');\r\n    }\r\n  };\r\n\r\n  const onUpdateTakeaway = (id: string) => {\r\n    if(isNN(state.editTakeawayTitle) && isNN(state.editTakeawayDesc)){\r\n      setIsLoading(true);\r\n      props.onCreateTakeaway(id, {\r\n        _id: state.editTakeawayId,\r\n        title: state.editTakeawayTitle,\r\n        description: state.editTakeawayDesc,\r\n        createdBy: props.user.name,\r\n        createdAt: new Date(),\r\n        updatedBy: props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITakeaway, (result: string) => {\r\n        setIsLoading(false);\r\n        let tData = state.data;\r\n        var foundIndex = tData.findIndex(d => d._id === id);        \r\n        var takeawayIndex = tData[foundIndex].takeaways.findIndex(d => d._id === state.editTakeawayId);\r\n        tData[foundIndex].takeaways[takeawayIndex].title = state.editTakeawayTitle;\r\n        tData[foundIndex].takeaways[takeawayIndex].description = state.editTakeawayDesc;\r\n        tData[foundIndex].takeaways[takeawayIndex].updatedBy = props.user.name;\r\n        tData[foundIndex].takeaways[takeawayIndex].updatedAt = new Date();\r\n        setState({\r\n          ...state,\r\n          data: tData,\r\n          editTakeawayId: '',\r\n          editTakeawayTitle: '',\r\n          editTakeawayDesc: ''\r\n        });\r\n        Toast.success('Takeayway updated successfully.');\r\n      }, (message: string) => {\r\n        setIsLoading(false);\r\n        Toast.fail('Failed to update takeaway.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill Takeaway title & description before Add.');\r\n    }\r\n  };\r\n\r\n  const onRemoveTakeaway = (id: string, servantId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete this takeaway?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemoveTakeaway(id, (result: boolean) => {\r\n              setIsLoading(false);\r\n              let tData = state.data;\r\n              var foundIndex = tData.findIndex(d => d._id === servantId);        \r\n              tData[foundIndex].takeaways = tData[foundIndex].takeaways.filter((d, i) => d._id !== id);\r\n              if(result === true){\r\n                setState({\r\n                  ...state,\r\n                  data: tData,\r\n                  editTakeawayId: '',\r\n                  editTakeawayTitle: '',\r\n                  editTakeawayDesc: '',\r\n                  viewId: ''\r\n                });\r\n                Toast.success('Takeaway removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove takeaway.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Servants', link: 'servants'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View>\r\n          <Text className='fl-r cur-p c-blue-500' onClick={() => props.history.push('new-servant')}>Add New</Text>\r\n        </View>\r\n        {isNN(state.data) ?\r\n          state.data.map((d: IServant, i: number) => {\r\n            return(\r\n              (isEdit === true && state.id === d._id) ?\r\n              <View key={i} className='bdB mT-5'>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' value={state.name} onChange={(event: any) => setState({...state, name: event.target.value})} />\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} value={state.age > 0 ? state.age + '' : ''} onChange={(event: any) => setState({...state, age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <RadioButton isActive={state.gender === 'M'} text='Male' onPress={() => setState({...state, gender: 'M'})} />\r\n                  <RadioButton isActive={state.gender === 'F'} text='Female' onPress={() => setState({...state, gender: 'F'})} />\r\n                  {props.user.client.config.hasOtherGender &&\r\n                  <RadioButton isActive={state.gender === 'O'} text='Other' onPress={() => setState({...state, gender: 'O'})} />\r\n                  }\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' value={state.mobileNo} onChange={(event: any) => setState({...state, mobileNo: event.target.value})} />\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <TextInput type='text' placeholder=\"Email Id\" className='form-control' value={state.emailId} onChange={(event: any) => setState({...state, emailId: event.target.value})} />\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={onSave}>\r\n\t\t\t\t\t          <i className=\"c-green-500 fa fa-check\"></i>\r\n\t\t\t\t          </span>\r\n\t\t\t\t          <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    setIsEdit(false);\r\n                    setState({\r\n                      ...state,\r\n                      id: '',\r\n                      name: '',\r\n                      age: 0,\r\n                      gender: '',\r\n                      mobileNo: '',\r\n                      emailId: '',\r\n                      viewId: '',\r\n                      takeaways: [],\r\n                      takeawayTitle: '',\r\n                      takeawayDesc: '',\r\n                      editTakeawayId: '',\r\n                      editTakeawayTitle: '',\r\n                      editTakeawayDesc: '',\r\n                      viewClockingId: '',\r\n                      clockings: [],\r\n                      clockingPN: 1\r\n                    });\r\n                  }}>\r\n\t\t\t\t\t          <i className=\"c-red-500 fa fa-times\"></i>\r\n\t\t\t\t          </span>\r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} className='bdB mT-5'>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                {\r\n                  d.lastClocking &&\r\n                  <View className='mT-1 mB-3 p-2'>\r\n                  {\r\n                    (d.lastClocking.status === 'IN') ?\r\n                    <Text className='c-red-600'>{'Entered At: ' + toDateTimeString(d.lastClocking.at)}</Text>\r\n                    :\r\n                    <Text>{'Exit At: ' + toDateTimeString(d.lastClocking.at)}</Text>\r\n                  }\r\n                  </View>\r\n                }\r\n                <View className='mT-1 mB-3 p-2'>\r\n                {\r\n                  (d.lastClocking && d.lastClocking.status === 'IN') ?\r\n                  <Text className='c-red-600'>Staying IN</Text>\r\n                  :\r\n                  <Text>Staying OUT</Text>\r\n                }\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                    setIsEdit(true);\r\n                    setState({\r\n                      ...state,\r\n                      id: d._id,\r\n                      name: d.name,\r\n                      age: d.age,\r\n                      gender: d.gender,\r\n                      mobileNo: d.mobileNo,\r\n                      emailId: d.emailId,\r\n                      viewId: '',\r\n                      takeaways: [],\r\n                      takeawayTitle: '',\r\n                      takeawayDesc: '',\r\n                      editTakeawayId: '',\r\n                      editTakeawayTitle: '',\r\n                      editTakeawayDesc: '',\r\n                      viewClockingId: '',\r\n                      clockings: [],\r\n                      clockingPN: 1\r\n                    });\r\n                  }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n                    onRemove(d._id);\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n                  <span className='mR-15' onClick={() => {\r\n                    onView(d._id, d.takeaways);\r\n                  }}>\r\n                    <Text className='cur-p c-blue-500'>{(state.viewId === d._id ? 'Hide' : 'View') + ' Takeaways'}</Text>\r\n                  </span>\r\n                  <span onClick={() => {\r\n                    onViewClocking(d._id);\r\n                  }}>\r\n                    <Text className='cur-p c-blue-500'>{(state.viewClockingId === d._id ? 'Hide' : 'View') + ' Clocking'}</Text>\r\n                  </span>   \r\n                </View>\r\n                {state.viewId === d._id &&\r\n                <View className='mT-5 mB-5'>\r\n                  <View>\r\n                    <Text className='fw-600'>Takeaways</Text>\r\n                  </View>\r\n                  <View className='p-15'>\r\n                    <View className='mT-5 mB-5'>\r\n                      <TextInput type='text' placeholder='Takeaway Title' className='form-control mB-10' value={state.takeawayTitle} onChange={(event: any) => setState({...state, takeawayTitle: event.target.value})} />\r\n                      <TextArea placeholder='Takeaway Description' className='form-control bd' value={state.takeawayDesc} onChange={(event: any) => setState({...state, takeawayDesc: event.target.value})} />\r\n                      <View className='mT-5'>\r\n                        <Button\r\n                          title='ADD NEW TAKEAWAY'\r\n                          onPress={() => onCreateTakeaway(d._id)}\r\n                          />\r\n                      </View>\r\n                    </View>\r\n                    {isNN(state.takeaways) ?\r\n                      state.takeaways.map((e: ITakeaway, j: number) => {\r\n                        return(\r\n                        <View key={'tkycmt' + j} className={'pL-3 pR-3 pT-5 pB-5' + (j === 0 ? '' : ' bdT')}>\r\n                          <View>\r\n                            <Text className='fw-600'>{e.createdBy + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                          </View>\r\n                          <View>\r\n                            {\r\n                              (state.editTakeawayId === e._id && !e.isExit) ?\r\n                              <TextInput type='text' placeholder='Takeaway Title' className='form-control mB-10' value={state.editTakeawayTitle} onChange={(event: any) => setState({...state, editTakeawayTitle: event.target.value})} />\r\n                              :\r\n                              <Text>{e.title}</Text>\r\n                            }\r\n                          </View>\r\n                          <View>\r\n                            {\r\n                              (state.editTakeawayId === e._id && !e.isExit) ?\r\n                              <TextArea placeholder='Takeaway Description' className='form-control bd' value={state.editTakeawayDesc} onChange={(event: any) => setState({...state, editTakeawayDesc: event.target.value})} />\r\n                              :\r\n                              <Text>{e.description}</Text>\r\n                            }\r\n                          </View>\r\n                          {\r\n                            e.isExit ?\r\n                          <View>\r\n                            <Text className='c-green-600'>{'Exit by ' + e.exitBy + ' in Gate ' + e.exitGateNo + ' on ' + toDateTimeString(e.exitAt)}</Text>\r\n                          </View>\r\n                          :\r\n                          <View>\r\n                            <Text className='c-red-600'>Still not exit.</Text>\r\n                          </View>\r\n                          }\r\n                          {\r\n                            !e.isExit &&\r\n                            <>\r\n                              {\r\n                              state.editTakeawayId === e._id ?\r\n                              <View className='mT-1 mB-3 p-2'>\r\n                                <span className=\"icon-holder mR-10 cur-p\" onClick={() => onUpdateTakeaway(d._id)}>\r\n                                  <i className=\"c-green-500 fa fa-check\"></i>\r\n                                </span>\r\n                                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                                  setState({\r\n                                    ...state,\r\n                                    editTakeawayId: '',\r\n                                    editTakeawayTitle: '',\r\n                                    editTakeawayDesc: ''\r\n                                  });\r\n                                }}>\r\n                                  <i className=\"c-red-500 fa fa-times\"></i>\r\n                                </span>\r\n                              </View>\r\n                              :\r\n                              <View className='mT-1 mB-3 p-2'>\r\n                                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                                  setState({\r\n                                    ...state,\r\n                                    editTakeawayId: e._id,\r\n                                    editTakeawayTitle: e.title,\r\n                                    editTakeawayDesc: e.description\r\n                                  });\r\n                                }}>\r\n                                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                                  </span>\r\n                                  <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n                                    onRemoveTakeaway(e._id, d._id);\r\n                                  }}>\r\n                                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                                  </span>\r\n                              </View>\r\n                              }\r\n                            </>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text className='p-20'>No takeaway found.</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                {state.viewClockingId === d._id &&\r\n                <View className='mT-5 mB-5'>\r\n                  <View>\r\n                    <Text className='fw-600'>Clockings</Text>\r\n                  </View>\r\n                  <View className='p-15'>\r\n                    {isNN(state.clockings) ?\r\n                      state.clockings.map((e: any, j: number) => {\r\n                        return(\r\n                        <View key={'clkcmt' + j} className={'pL-3 pR-3 pT-5 pB-5' + (j === 0 ? '' : ' bdT')}>\r\n                          <View>\r\n                            <Text className='mR-15 fw-600'>{e.status}</Text><Text>{toDateTimeString(e.createdAt)}</Text>\r\n                          </View>\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text className='p-20'>No clocking found.</Text>\r\n                    }\r\n                    {(isNN(state.clockings) && state.clockings.length % 10 === 0) &&\r\n                    <span onClick={() => {\r\n                      onViewMoreClockings(d._id);\r\n                    }}>\r\n                      <Text className='cur-p c-blue-500'>View More</Text>\r\n                    </span>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text className='p-20'>No servant found.</Text>\r\n        }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IServant } from '../models/home';\r\nimport { loadAll, clocking, loadClockings } from '../store/actions/servant';\r\nimport Page from '../components/home/gatekeeper/servants';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(sCallback, fCallback)),\r\n    onClocking: (id: string, status: string, gateNo: string, callback: (result: string) => void) => dispatch(clocking(id, status, gateNo, callback)),\r\n    onLoadClockings: (id: string, pn: number, rc: number, callback: (result: Array<any>) => void) => dispatch(loadClockings(id, pn, rc, callback))\r\n});\r\n\r\nexport const AllServants = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TextInput, Image, Text } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IServant, ITakeaway } from '../../../models/home';\r\nimport Toast from  '../../../util/toast';\r\nimport { isNN } from '../../../util';\r\nimport { FILE_BASE_PATH, ROLE } from '../../../constants';\r\nimport { toDateTimeString } from '../../../util/convert';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  gateNo: string,\r\n  onLoad: (sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void,\r\n  onClocking: (id: string, status: string, gateNo: string, callback: (result: string) => void) => void,\r\n  onLoadClockings: (id: string, pn: number, rc: number, callback: (result: Array<any>) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([] as Array<IServant>);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [viewId, setViewId] = useState('');\r\n  const [takeaways, setTakeaways] = useState([] as Array<ITakeaway>);\r\n  const [clocking, setClocking] = useState({\r\n    viewId: '',\r\n    clockings: [] as Array<any>,\r\n    clockingPN: 1,\r\n    clockingRC: 10  \r\n  });\r\n\r\n  const loadData = () => {\r\n    setIsLoading(true);\r\n    props.onLoad((result: Array<IServant>) => {\r\n      setIsLoading(false);\r\n      setData(result);\r\n    }, (message: string) => {\r\n      setIsLoading(false);\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const onClocking = (id: string, status: string) => {\r\n    confirmAlert({\r\n      title: (status === 'IN' ? 'Confirm to Allow Servant Entry' : 'Confirm to Exit Servant'),\r\n      message: 'Are you sure you wish to ' + (status === 'IN' ? 'Allow the servant to Enter?' : 'exit servant?'),\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onClocking(id, status, props.gateNo, (result: string) => {\r\n              if(isNN(result)){\r\n                let tData = data;\r\n                let foundIndex = tData.findIndex(v => v._id === id);\r\n                tData[foundIndex].lastClocking = {\r\n                  _id: id,\r\n                  at: new Date(),\r\n                  status: status\r\n                };\r\n                setData(tData);\r\n                setIsLoading(false);\r\n                Toast.success(status === 'IN' ? 'servant entered successfully.' : 'Servant exit successfully.');\r\n              }else{\r\n                setIsLoading(false);\r\n                Toast.fail(status === 'IN' ? 'Failed to allow the entry of servant.' : 'Failed to exit servant.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onView = (id: string, takeaways: Array<ITakeaway>) => {\r\n    if(viewId === id){\r\n      setViewId('');\r\n      setTakeaways([]);\r\n      setClocking({\r\n        ...clocking,\r\n        viewId: '',\r\n        clockings: [],\r\n        clockingPN: 1\r\n      });\r\n    }else{\r\n      setViewId(id);\r\n      setTakeaways(takeaways);\r\n      setClocking({\r\n        ...clocking,\r\n        viewId: '',\r\n        clockings: [],\r\n        clockingPN: 1\r\n      });\r\n    }\r\n  };\r\n\r\n  const onViewClocking = (id: string) => {\r\n    if(clocking.viewId === id){\r\n      setViewId('');\r\n      setTakeaways([]);\r\n      setClocking({\r\n        ...clocking,\r\n        viewId: '',\r\n        clockings: [],\r\n        clockingPN: 1\r\n      });\r\n    }else{\r\n      setIsLoading(true);\r\n      props.onLoadClockings(id, clocking.clockingPN, clocking.clockingRC, (result: Array<any>) => {\r\n        setIsLoading(false);\r\n        setViewId('');\r\n        setTakeaways([]);\r\n        setClocking({\r\n          ...clocking,\r\n          viewId: id,\r\n          clockings: result\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const onViewMoreClockings = (id: string) => {\r\n    setIsLoading(true);\r\n    props.onLoadClockings(id, clocking.clockingPN + 1, clocking.clockingRC, (result: Array<any>) => {\r\n      setIsLoading(false);\r\n      let clockings = clocking.clockings;\r\n      clockings.push(...result);\r\n      setClocking({\r\n        ...clocking,\r\n        clockings: clockings,\r\n        clockingPN: clocking.clockingPN + 1\r\n      });\r\n    });\r\n  };\r\n\r\n  let dData = data;\r\n  if(isNN(searchText))\r\n  {\r\n    dData = data.filter(d => d.name.toLowerCase().indexOf(searchText.toLowerCase()) >= 0)\r\n  }\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Servants', link: 'all-servants'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <View className='mT-10 mB-5'>\r\n              <TextInput type='text' placeholder=\"Enter search text\" className='form-control' value={searchText} onChange={(event: any) => setSearchText(event.target.value)} />\r\n            </View>\r\n            <View className='p-10 mB-10'>\r\n              {isNN(data) ?\r\n              dData.map((d: IServant, i: number) => {\r\n                return(\r\n                  <View key={i} className='card m-1 d-ib'>\r\n                    {isNN(d.image) &&\r\n                    <View className='ta-c mB-5'>\r\n                      <Image src={FILE_BASE_PATH + d.image} className='cur-p m-0' style={{height: '25vh', borderRadius: '50%'}} onClick={() => {\r\n                        // setIsZoomImage(true);\r\n                        // setZoomImage(d.image);\r\n                        }} />\r\n                    </View>\r\n                    }\r\n                    <View className='container'>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                        <Text>{d._homeId}</Text>\r\n                      </View>\r\n                      <View className='mT-1 mB-3 p-2'>\r\n                        <Text>{d.name}</Text>\r\n                      </View>\r\n                      <View className='mT-1 mB-3 p-2'>\r\n                        <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n                      </View>\r\n                      {isNN(d.mobileNo) &&\r\n                      <View className='mT-1 mB-3 p-2'>\r\n                        <Text>{d.mobileNo}</Text>\r\n                      </View>\r\n                      }\r\n                      {isNN(d.emailId) &&\r\n                      <View className='mT-1 mB-3 p-2'>\r\n                        <Text>{d.emailId}</Text>\r\n                      </View>\r\n                      }\r\n                      {\r\n                        d.lastClocking &&\r\n                        <View className='mT-1 mB-3 p-2'>\r\n                        {\r\n                          (d.lastClocking.status === 'IN') ?\r\n                          <Text className='c-red-600'>{'Entered At: ' + toDateTimeString(d.lastClocking.at)}</Text>\r\n                          :\r\n                          <Text>{'Exit At: ' + toDateTimeString(d.lastClocking.at)}</Text>\r\n                        }\r\n                        </View>\r\n                      }\r\n                      <View className='mT-1 mB-3 p-2'>\r\n                      {\r\n                        (d.lastClocking && d.lastClocking.status === 'IN') ?\r\n                        <Text className='c-red-600'>Staying IN</Text>\r\n                        :\r\n                        <Text>Staying OUT</Text>\r\n                      }\r\n                      </View>\r\n                      {(props.appUser.role === ROLE.GATEKEEPER) ?\r\n                      <View className='mT-1 mB-3 p-2 ta-c'>\r\n                      {\r\n                        (d.lastClocking && d.lastClocking.status === 'IN') ?\r\n                        <Button title='OUT' onPress={() => { onClocking(d._id, 'OUT') }} />\r\n                        :\r\n                        <Button title='IN' className='mR-10' onPress={() => { onClocking(d._id, 'IN') }} />\r\n                      } \r\n                      </View>\r\n                      :\r\n                      <>\r\n                      <View className='mT-1 mB-3 p-2'>\r\n                        <span className='mR-15' onClick={() => {\r\n                          onView(d._id, d.takeaways);\r\n                        }}>\r\n                          <Text className='cur-p c-blue-500'>{(viewId === d._id ? 'Hide' : 'View') + ' Takeaways'}</Text>\r\n                        </span>\r\n                        <span onClick={() => {\r\n                          onViewClocking(d._id);\r\n                        }}>\r\n                          <Text className='cur-p c-blue-500'>{(clocking.viewId === d._id ? 'Hide' : 'View') + ' Clocking'}</Text>\r\n                        </span>\r\n                      </View>\r\n                      {viewId === d._id &&\r\n                        <View className='mT-5 mB-5'>\r\n                          <View>\r\n                            <Text className='fw-600'>Takeaways</Text>\r\n                          </View>\r\n                          <View className='p-15'>\r\n                            {isNN(takeaways) ?\r\n                              takeaways.map((e: ITakeaway, j: number) => {\r\n                                return(\r\n                                <View key={'tkycmt' + j} className={'pL-3 pR-3 pT-5 pB-5' + (j === 0 ? '' : ' bdT')}>\r\n                                  <View>\r\n                                    <Text className='fw-600'>{e.createdBy + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                                  </View>\r\n                                  <View>\r\n                                    <Text>{e.title}</Text>\r\n                                  </View>\r\n                                  <View>\r\n                                    <Text>{e.description}</Text>\r\n                                  </View>\r\n                                  {\r\n                                    e.isExit ?\r\n                                  <View>\r\n                                    <Text className='c-green-600'>{'Exit by ' + e.exitBy + ' in Gate ' + e.exitGateNo + ' on ' + toDateTimeString(e.exitAt)}</Text>\r\n                                  </View>\r\n                                  :\r\n                                  <View>\r\n                                    <Text className='c-red-600'>Still not exit.</Text>\r\n                                  </View>\r\n                                  }\r\n                                </View>\r\n                                )\r\n                              })\r\n                              :\r\n                              <Text className='p-20'>No takeaway found.</Text>\r\n                            }\r\n                          </View>\r\n                        </View>\r\n                        }\r\n                        {clocking.viewId === d._id &&\r\n                        <View className='mT-5 mB-5'>\r\n                          <View>\r\n                            <Text className='fw-600'>Clockings</Text>\r\n                          </View>\r\n                          <View className='p-15'>\r\n                            {isNN(clocking.clockings) ?\r\n                              clocking.clockings.map((e: any, j: number) => {\r\n                                return(\r\n                                <View key={'clkcmt' + j} className={'pL-3 pR-3 pT-5 pB-5' + (j === 0 ? '' : ' bdT')}>\r\n                                  <View>\r\n                                    <Text className='mR-15 fw-600'>{e.status}</Text><Text>{toDateTimeString(e.createdAt)}</Text>\r\n                                  </View>\r\n                                </View>\r\n                                )\r\n                              })\r\n                              :\r\n                              <Text className='p-20'>No clocking found.</Text>\r\n                            }\r\n                            {(isNN(clocking.clockings) && clocking.clockings.length % 10 === 0) &&\r\n                            <span onClick={() => {\r\n                              onViewMoreClockings(d._id);\r\n                            }}>\r\n                              <Text className='cur-p c-blue-500'>View More</Text>\r\n                            </span>\r\n                            }\r\n                          </View>\r\n                        </View>\r\n                        }\r\n                      </>\r\n                      }\r\n                    </View>\r\n                  </View>\r\n                )\r\n              })\r\n              :\r\n              <Text className='p-20'>No servants found.</Text>\r\n            }\r\n            </View>\r\n\r\n            <Spinner visible={isLoading} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IServant } from '../models/home';\r\nimport { loadActiveTakeaways, exitTakeaway } from '../store/actions/servant';\r\n\r\nimport Page from '../components/home/gatekeeper/takeaways';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) =>  dispatch(loadActiveTakeaways(appClientId, sCallback, fCallback)),\r\n    onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(exitTakeaway(id, gateNo, callback))\r\n});\r\n\r\nexport const AllTakeaways = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IServant, ITakeaway } from '../../../models/home/servant';\r\nimport Toast from  '../../../util/toast';\r\nimport { isNN } from '../../../util';\r\nimport { toDateTimeString } from '../../../util/convert';\r\nimport { ROLE } from '../../../constants';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void,\r\n  onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([] as Array<IServant>);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, (result: Array<IServant>) => {\r\n      setIsLoading(false);\r\n      setData(result);\r\n    }, (message: string) => {\r\n      setIsLoading(false);\r\n      Toast.fail(message);\r\n    });\r\n  }, []);\r\n\r\n  const onExit = (id: string, servantId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Exit Servant with Takeaway',\r\n      message: 'Are you sure you wish to exit the servant with this takeaway things?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onExit(id, props.gateNo, (result: boolean) => {\r\n              if(result === true){\r\n                let tData = data;\r\n                var foundIndex = tData.findIndex(d => d._id === servantId);\r\n                tData[foundIndex].takeaways = tData[foundIndex].takeaways.filter(d => d._id !== id);\r\n                setData(tData);\r\n                setIsLoading(false);\r\n                Toast.success('Servant exit with takeaway successfully.');\r\n              }else{\r\n                setIsLoading(false);\r\n                Toast.fail('Failed to exit servant with takeaway.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Takeaways', link: 'all-takeaways'}]} />\r\n          <View className='bgc-white p-20'>\r\n            {(isNN(data) && isNN(data.filter(d => d.takeaways && d.takeaways.length > 0))) ?\r\n              data.filter(d => d.takeaways && d.takeaways.length > 0).map((d: IServant, i: number) => {\r\n              return(\r\n                <View key={i} className='mT-5 bdB'>\r\n                  <View className='mB-3'>\r\n                    <Text className='fw-600'>{d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n                  </View>\r\n                  <View className='mB-3'>\r\n                    <Text>{d.name}</Text>\r\n                  </View>\r\n                  <View className='mB-3'>\r\n                    <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n                  </View>\r\n                  {isNN(d.mobileNo) &&\r\n                  <View className='mB-3'>\r\n                    <Text>{d.mobileNo}</Text>\r\n                  </View>\r\n                  }\r\n                  {isNN(d.emailId) &&\r\n                  <View className='mB-3'>\r\n                    <Text>{d.emailId}</Text>\r\n                  </View>\r\n                  }\r\n                  <View className='mT-5 mB-5'>\r\n                    <View>\r\n                      <Text className='fw-600'>Takeaways</Text>\r\n                    </View>\r\n                    <View className='pL-15 pR-15 pB-15 pT-3'>\r\n                      {isNN(d.takeaways) ?\r\n                        d.takeaways.map((e: ITakeaway, j: number) => {\r\n                          return(\r\n                          <View key={'tkycmt' + j} className={'pT-5 pB-5 pR-3 pL-3' + (j === 0 ? '' : ' bdB')}>\r\n                            <View>\r\n                              <Text className='fw-600'>{e.createdBy + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                            </View>\r\n                            <View>\r\n                              <Text>{e.title}</Text>\r\n                            </View>\r\n                            <View>\r\n                              <Text>{e.description}</Text>\r\n                            </View>\r\n                            {props.appUser.role === ROLE.GATEKEEPER &&\r\n                            <View className='mT-10'>\r\n                              {!e.isExit && <Button title='Exit' onPress={() => {onExit(e._id, d._id);}} />}\r\n                            </View>\r\n                            }\r\n                          </View>\r\n                          )\r\n                        })\r\n                        :\r\n                        <Text className='p-20'>No takeaway found.</Text>\r\n                      }\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n                );\r\n            })\r\n            :\r\n            <Text>No data found.</Text>\r\n            }\r\n            <Spinner visible={isLoading} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IServant } from '../models/home';\r\nimport { save } from '../store/actions/servant';\r\nimport Page from '../components/home/new-servant';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => dispatch(save(homeId, data, sCallback))\r\n});\r\n\r\nexport const NewServant = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServant } from '../../models/home';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [age, setAge] = useState(0);\r\n  const [gender, setGender] = useState('');\r\n  const [mobileNo, setMobileNo] = useState('');\r\n  const [emailId, setEmailId] = useState('');\r\n\r\n  const onSave = () => {\r\n    if(isNN(name) && age > 0 && isNN(gender)){\r\n      setIsLoading(true);\r\n        let servant = {\r\n          _id: id,\r\n          name: name,\r\n          age: age,\r\n          gender: gender,\r\n          mobileNo: mobileNo,\r\n          emailId: emailId ? emailId.toLowerCase() : ''\r\n        } as IServant;\r\n        props.onSave(props.user.homes[props.homeIndex]._id, servant, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setId('');\r\n            setName('');\r\n            setAge(0);\r\n            setGender('');\r\n            setMobileNo('');\r\n            setEmailId('');\r\n            // props..navigation.goBack(null)\r\n            Toast.success('Servant saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servant.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Servants', link: 'servants'}, {title: 'New Servant', link: 'new-servant' }]} />  \r\n        <View className='bgc-white p-20'>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' value={name} onChange={(event: any) => setName(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={3} value={age > 0 ? age + '' : ''} onChange={(event: any) => setAge(+(event.target.value.replace(/[^0-9]/g, '')))} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={gender === 'M'} text='Male' onPress={() => setGender('M')} />\r\n            <RadioButton isActive={gender === 'F'} text='Female' onPress={() => setGender('F')} />\r\n            {props.user.client.config.hasOtherGender &&\r\n            <RadioButton isActive={gender === 'O'} text='Other' onPress={() => setGender('O')} />\r\n            }\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' value={mobileNo} onChange={(event: any) => setMobileNo(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Email Id\" className='form-control' value={emailId} onChange={(event: any) => setEmailId(event.target.value)}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, onSave);\r\n            }} />\r\n          </View>\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { ITicketComment } from '../models/home/ticket-comment';\r\nimport { loadAll, save, remove, resolve, start, addComment, removeComment } from '../store/actions/ticket';\r\nimport Page from '../components/home/tickets';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, homeId, callback)),\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, sCallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, tickets, sCallback)),\r\n    onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(resolve(id, user, homeIndex, tickets, sCallback)),\r\n    onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(start(id, user, homeIndex, tickets, sCallback)),\r\n    onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) =>  dispatch(addComment(ticketId, comment, appUser, user, tickets, callback)),\r\n    onRemoveComment: (id: string, ticketId: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(removeComment(id, ticketId, user, homeIndex, tickets, sCallback))\r\n});\r\n\r\nexport const Tickets = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Text, TextInput, TextArea, Picker } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateTimeString } from '../../util/convert';\r\nimport { ROLE } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => void,\r\n  onRemoveComment: (id: string, ticketId: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [state, setState] = useState({\r\n    data: [] as Array<ITicket>,\r\n    id: '',\r\n    category: '',\r\n    title: '',\r\n    description: '',\r\n    status: 'INIT',\r\n    viewId: '',\r\n    comments: [] as Array<ITicketComment>,\r\n    comment: '',\r\n    editCommentId: '',\r\n    editComment: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, (props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER) ? '' : props.user.homes[props.appUser.homeIndex]._id, (result: boolean) => {\r\n      setIsLoading(false);\r\n      // setState({\r\n      //   ...state,\r\n      //   data: getTickets()\r\n      // });\r\n      if(!result){\r\n        Toast.fail('Failed to load Tickets.');\r\n      }\r\n    });\r\n    /*\r\n    if(props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER) {\r\n      setState({\r\n        isLoading: true\r\n      });\r\n      props.onLoadAll(props.user.client._id, (result: boolean) => {\r\n        setState({\r\n          isLoading: false,\r\n          data: getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }else{\r\n      setState({\r\n        isLoading: true\r\n      });\r\n      props.onLoadAllByHome(props.user, props.appUser.homeIndex, (result: boolean) => {\r\n        setState({\r\n          isLoading: false,\r\n          data: getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }\r\n    */\r\n  }, []);\r\n  \r\n  /*\r\n  getTickets = () => {\r\n    if(props.appUser.role === ROLE.USER) {\r\n      return isNN(props.user.homes[props.appUser.homeIndex].tickets) ? props.user.homes[props.appUser.homeIndex].tickets : [];\r\n    }else if(props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER) {\r\n      return (props.tickets.isUpToDate && !props.tickets.isError && isNN(props.tickets.data)) ? props.tickets.data : [];\r\n    }else{\r\n      return [];\r\n    }\r\n  };\r\n  */\r\n\r\n  const onSave = () => {\r\n    if(isNN(state.category) && isNN(state.title) && isNN(state.description)){\r\n      setIsLoading(true);\r\n        let ticket = {\r\n          _id: state.id,\r\n          category: state.category,\r\n          title: state.title,\r\n          description: state.description,\r\n          status: state.status\r\n        } as ITicket;\r\n        props.onSave(ticket, props.user, props.appUser.homeIndex, props.tickets, (result: boolean) => {          \r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setIsEdit(false);\r\n            setState({\r\n              ...state,\r\n              id: '',\r\n              category: '',\r\n              title: '',\r\n              description: '',\r\n              status: 'INIT',\r\n              viewId: '',\r\n              comments: [],\r\n              comment: '',\r\n              editCommentId: '',\r\n              editComment: ''\r\n            });\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, props.user, props.appUser.homeIndex, props.tickets, (result: boolean) => {\r\n              setIsLoading(false);\r\n              setState({\r\n                ...state,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: '',\r\n                editCommentId: '',\r\n                editComment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onResolve = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to resolve ticket',\r\n      message: 'Are you sure you wish to resolve this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onResolve(id, props.user, props.appUser.homeIndex, props.tickets, (result: boolean) => {\r\n              setIsLoading(false);\r\n              setState({\r\n                ...state,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: '',\r\n                editCommentId: '',\r\n                editComment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket resolved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to resolve ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onStart = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to start ticket',\r\n      message: 'Are you sure you wish to start this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onStart(id, props.user, props.appUser.homeIndex, props.tickets, (result: boolean) => {\r\n              setIsLoading(false);\r\n              setState({\r\n                ...state,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: '',\r\n                editCommentId: '',\r\n                editComment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket started successfully.');\r\n              }else{\r\n                Toast.fail('Failed to start ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(state.viewId === id){\r\n      setState({\r\n        ...state,\r\n        viewId: '',\r\n        comments: [],\r\n        comment: '',\r\n        editCommentId: '',\r\n        editComment: ''\r\n      });\r\n    }else{\r\n      setState({\r\n        ...state,\r\n        viewId: id,\r\n        comments: comments,\r\n        comment: '',\r\n        editCommentId: '',\r\n        editComment: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const onAddComment = (id: string) => {\r\n    if(isNN(state.comment)){\r\n      setIsLoading(true);\r\n      props.onAddComment(id, {\r\n        _id: '',\r\n        comment: state.comment,\r\n        createdBy: props.user._id,\r\n        createdByName: props.user.name,\r\n        createdAt: new Date(),\r\n        updatedBy: props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITicketComment, props.appUser, props.user, props.tickets, (result: boolean) => {\r\n        setIsLoading(false);\r\n        if(result === true){\r\n          setState({\r\n            ...state,\r\n            comment: ''\r\n          });\r\n          Toast.success('Comment added successfully.');\r\n        }else{\r\n          Toast.fail('Failed to add comment.');\r\n        }\r\n      });\r\n  }else{\r\n    Toast.warn('Please fill comment before Add.');\r\n  }\r\n  };\r\n\r\n  const onUpdateComment = (id: string) => {\r\n    if(isNN(state.editCommentId) && isNN(state.editComment)){\r\n      setIsLoading(true);\r\n      props.onAddComment(id, {\r\n        _id: state.editCommentId,\r\n        comment: state.editComment,\r\n        updatedBy: props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITicketComment, props.appUser, props.user, props.tickets, (result: boolean) => {\r\n        setIsLoading(false);\r\n        if(result === true){\r\n          setState({\r\n            ...state,\r\n            editCommentId: '',\r\n            editComment: ''\r\n          });\r\n          Toast.success('Comment updated successfully.');\r\n        }else{\r\n          Toast.fail('Failed to update comment.');\r\n        }\r\n      });\r\n  }else{\r\n    Toast.warn('Please fill comment before update.');\r\n  }\r\n  };\r\n\r\n  const onRemoveComment = (id: string, ticketId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete this comment?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemoveComment(id, ticketId, props.user, props.appUser.homeIndex, props.tickets, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                setState({\r\n                  ...state,\r\n                  editCommentId: '',\r\n                  editComment: '',\r\n                  viewId: ''\r\n                });\r\n                Toast.success('Comment removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove comment.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Tickets', link: 'tickets'}]} />\r\n        <View className='bgc-white p-20'>\r\n        {\r\n          props.appUser.role === ROLE.USER &&\r\n          <View>\r\n            <Text className='fl-r cur-p c-blue-500' onClick={() => props.history.push('new-ticket')}>Add New</Text>\r\n          </View>\r\n        }\r\n        {(isNNObject(props.tickets) && props.tickets.isUpToDate && !props.tickets.isError && isNN(props.tickets.data)) ?\r\n        props.tickets.data.map((d: ITicket, i: number) => {\r\n            return(\r\n              <View key={'tkt' + i} className='bdB mT-5'>\r\n               <View className='fw-600 mT-1 mB-3 p-2'>\r\n                  <Text className='fw-600'>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  {(isEdit && state.id === d._id) ?\r\n                    <Picker\r\n                    className='form-control'\r\n                    value={state.category}\r\n                    onChange={(event: any) => setState({...state, category: event.target.value})}>\r\n                      <option key={'ticketcat-1'} value=''>Select Ticket Category</option>\r\n                      {isNN(props.user.client.config.ticketCategories) ?\r\n                      props.user.client.config.ticketCategories.map((d: string, i: number) => {\r\n                        return(<option key={'ticketcat' + i} value={d}>{d}</option>);\r\n                      })\r\n                      :\r\n                      <option key={'ticketcat0'} value='Maintenance'>Maintenance</option>\r\n                      }\r\n                    </Picker>\r\n                    :\r\n                    <Text className='fw-600'>{d.category}</Text>\r\n                  }\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  {(isEdit && state.id === d._id) ?\r\n                    <TextInput type='text' placeholder='Title' className='form-control' value={state.title} onChange={(event: any) => setState({...state, title: event.target.value})} />\r\n                    :\r\n                    <Text>{d.title}</Text>\r\n                  }\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  {(isEdit && state.id === d._id) ?\r\n                    <TextArea placeholder='Description' className='form-control' value={state.description} onChange={(event: any) => setState({...state, description: event.target.value})} />\r\n                    :\r\n                    <Text>{d.description}</Text>\r\n                  }\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{d.status}</Text>\r\n                </View>\r\n                {(isEdit && state.id === d._id) ?\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={onSave}>\r\n                    <i className=\"c-green-500 fa fa-check\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    setIsEdit(false);\r\n                    setState({\r\n                      ...state, \r\n                      id: '',\r\n                      category: '',\r\n                      title: '',\r\n                      description: '',\r\n                      status: 'INIT',\r\n                      viewId: '',\r\n                      comments: [],\r\n                      comment: ''\r\n                    });\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-times\"></i>\r\n                  </span>\r\n                </View>\r\n                :\r\n                <View className='mT-1 mB-3 p-2'>\r\n                {props.appUser.role === ROLE.USER &&\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                  setIsEdit(true);\r\n                  setState({\r\n                    ...state, \r\n                    id: d._id,\r\n                    category: d.category,\r\n                    title: d.title,\r\n                    description: d.description,\r\n                    status: 'INIT',\r\n                    viewId: '',\r\n                    comments: [],\r\n                    comment: ''\r\n                  });\r\n                }}>\r\n                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                </span>\r\n                }\r\n                {props.appUser.role === ROLE.USER &&\r\n                <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n                  onRemove(d._id);\r\n                }}>\r\n                  <i className=\"c-red-500 fa fa-trash\"></i>\r\n                </span>\r\n                }\r\n                {props.appUser.role === ROLE.USER &&\r\n                  <span className='m-25' onClick={() => {\r\n                    onResolve(d._id);\r\n                  }}>\r\n                    <Text className='cur-p c-blue-500'>RESOLVE</Text>\r\n                  </span>\r\n                }\r\n                {((props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER) && d.status === 'INIT') &&\r\n                <span className='mR-25' onClick={() => {\r\n                  onStart(d._id);\r\n                }}>\r\n                  <Text className='cur-p c-blue-500'>START</Text>\r\n                </span>\r\n                }\r\n                <span onClick={() => {\r\n                  onView(d._id, d.comments);\r\n                }}>\r\n                  <Text className='cur-p c-blue-500'>{(state.viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n                </span>\r\n                </View>\r\n                }\r\n                {state.viewId === d._id &&\r\n                <View className='mT-5 mB-5'>\r\n                  <View>\r\n                    <Text className='fw-600'>Comments</Text>\r\n                  </View>\r\n                  <View className='p-15'>\r\n                    <View className='mT-5 mB-5'>\r\n                      <TextArea placeholder='Comment Text' className='form-control bd' value={state.comment} onChange={(event: any) => setState({...state, comment: event.target.value})} />\r\n                      <View className='mT-5'>\r\n                        <Button\r\n                          title='ADD COMMENT'\r\n                          onPress={() => onAddComment(d._id)}\r\n                          />\r\n                      </View>\r\n                    </View>\r\n                    {isNN(state.comments) ?\r\n                      state.comments.map((e, j) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} className={'pL-3 pR-3 pt-5 pB-5' + (j === 0 ? '' : ' bdT')}>\r\n                          <View>\r\n                            <Text className='fw-600'>{e.createdByName + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                          </View>\r\n                          <View>\r\n                            {\r\n                              state.editCommentId === e._id ?\r\n                              <TextArea placeholder='Comment Text' className='form-control bd' value={state.editComment} onChange={(event: any) => setState({...state, editComment: event.target.value})} />\r\n                              :\r\n                              <Text>{e.comment}</Text>\r\n                            }\r\n                          </View>\r\n                          {\r\n                            e.createdBy === props.user._id &&\r\n                            <>\r\n                              {\r\n                              state.editCommentId === e._id ?\r\n                              <View className='mT-1 mB-3 p-2'>\r\n                                <span className=\"icon-holder mR-10 cur-p\" onClick={() => onUpdateComment(d._id)}>\r\n                                  <i className=\"c-green-500 fa fa-check\"></i>\r\n                                </span>\r\n                                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                                  setState({\r\n                                    ...state, \r\n                                    editCommentId: '',\r\n                                    editComment: ''\r\n                                  });\r\n                                }}>\r\n                                  <i className=\"c-red-500 fa fa-times\"></i>\r\n                                </span>\r\n                              </View>\r\n                              :\r\n                              <View className='mT-1 mB-3 p-2'>\r\n                                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                                  setState({\r\n                                    ...state, \r\n                                    editCommentId: e._id,\r\n                                    editComment: e.comment\r\n                                  });\r\n                                }}>\r\n                                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                                </span>\r\n                                <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n                                  onRemoveComment(e._id, d._id);\r\n                                }}>\r\n                                  <i className=\"c-red-500 fa fa-trash\"></i>\r\n                                </span>\r\n                              </View>\r\n                              }\r\n                            </>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text className='p-20'>No comment found.</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text className='p-20'>{(props.tickets.isUpToDate ? (props.tickets.isError ? props.tickets.errorMessage : \"No ticket found.\") : \"Loading...\")}</Text>\r\n        }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { save } from '../store/actions/ticket';\r\nimport Page from '../components/home/new-ticket';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, sCallback))\r\n});\r\n\r\nexport const NewTicket = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { View, TextInput, Text, TextArea, Picker } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home';\r\nimport { ROLE } from '../../constants';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [status, setStatus] = useState('INIT');\r\n  \r\n  const onSave = () => {\r\n    if(isNN(category) && isNN(title) && isNN(description)){\r\n      setIsLoading(true);\r\n        let ticket = {\r\n          _id: id,\r\n          category: category,\r\n          title: title,\r\n          description: description,\r\n          status: status\r\n        } as ITicket;\r\n        props.onSave(ticket, props.user, props.appUser.homeIndex, props.tickets, (result: boolean) => {          \r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setId('');\r\n            setCategory('');\r\n            setTitle('');\r\n            setDescription('');\r\n            setStatus('INIT');\r\n            // props.navigation.navigation.goBack(null)\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Tickets', link: 'tickets'}, {title: 'New Ticket', link: 'new-ticket' }]} />  \r\n        {props.appUser.role === ROLE.USER ?\r\n          <View className='bgc-white p-20'>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <Picker\r\n                className='form-control'\r\n                value={category}\r\n                onChange={(event: any) => setCategory(event.target.value)}>\r\n                  <option key={'ticketcat-1'} value=''>Select Ticket Category</option>\r\n                  {isNN(props.user.client.config.ticketCategories) ?\r\n                  props.user.client.config.ticketCategories.map((d: string, i: number) => {\r\n                    return(<option key={'ticketcat' + i} value={d}>{d}</option>);\r\n                  })\r\n                  :\r\n                  <option key={'ticketcat0'} value='Maintenance'>Maintenance</option>\r\n                  }\r\n              </Picker>\r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextInput type='text' placeholder=\"Title\" className='form-control' value={title} onChange={(event: any) => setTitle(event.target.value)} />\r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextArea placeholder=\"Description\" className='form-control' value={description} onChange={(event: any) => setDescription(event.target.value)}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, onSave);\r\n              }} />\r\n            </View>\r\n            {/* <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <Text>{status}</Text>\r\n            </View> */}\r\n            <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={onSave}\r\n              />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View className='bgc-white p-20'>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <Text>Only User can Add New Ticket. If you have USER role and you want to add new ticket change your role to User from settings -> My Role and try again.</Text>\r\n            </View>\r\n          </View>\r\n        }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { loadAll, approve, reject, remove, save, search } from '../store/actions/visitor';\r\nimport { upload as fileUpload } from '../store/actions/file';\r\nimport { IUser } from '../models/user';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IVisitor } from '../models/home';\r\n\r\nimport Page from '../components/home/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    homes: state.Homes,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, isActive, sCallback, fCallback)),\r\n    onApprove: (id: string, callback: (result: boolean) => void) => dispatch(approve(id, callback)),\r\n    onReject: (id: string, callback: (result: boolean) => void) => dispatch(reject(id, callback)),\r\n    onRemove: (id: string, callback: (result: boolean) => void) => dispatch(remove(id, callback)),\r\n    onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => dispatch(save(homeId, data, user, appUser, sCallback, fCallback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(fileUpload(data, callback)),\r\n    onSearch: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => dispatch(search(searchText, sCallback, fCallback))\r\n});\r\n\r\nexport const Visitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Text } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport Toast from  '../../util/toast';\r\nimport { ROLE } from '../../constants';\r\nimport VisitorsView from './gatekeeper/visitors-view'\r\nimport NewVisitor from './gatekeeper/new-visitor';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  void,\r\n  onApprove: (id: string, callback: (result: boolean) => void) => void,\r\n  onReject: (id: string, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, callback: (result: boolean) => void) => void,\r\n  onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([] as Array<IVisitor>);\r\n  const [isActive, setIsActive] = useState(true);\r\n  const [isRequestNew, setIsRequestNew] = useState(false);\r\n  const [passCode, setPassCode] = useState('');\r\n  \r\n  const loadData = () => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, props.user.homes[props.appUser.homeIndex]._id, isActive, (result: Array<IVisitor>) => {\r\n      setIsLoading(false);\r\n      setData(result);\r\n    }, (message: string) => {\r\n      setIsLoading(false);\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n  \r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n  \r\n  const onActiveChange = () => {\r\n    setIsActive(!isActive);\r\n    loadData();\r\n  };\r\n  \r\n  const onApprove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Approve Visitor Entry',\r\n      message: 'Are you sure you wish to Approve the visitor to Enter?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onApprove(id, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                let tData = data;\r\n                let foundIndex = tData.findIndex(v => v._id === id);\r\n                tData[foundIndex].isApproved = true;\r\n                tData[foundIndex].approvedBy = props.user.name;\r\n                tData[foundIndex].approvedAt = new Date();\r\n                setData(tData);\r\n                Toast.success('Visitor approved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to approve the entry of visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onReject = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Reject Visitor Entry',\r\n      message: 'Are you sure you wish to reject visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onReject(id, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                let tData = data;\r\n                let foundIndex = tData.findIndex(v => v._id === id);\r\n                tData[foundIndex].isRejected = true;\r\n                tData[foundIndex].approvedBy = props.user.name;\r\n                tData[foundIndex].approvedAt = new Date();\r\n                setData(tData);\r\n                Toast.success('Visitor rejected successfully.');\r\n              }else{\r\n                Toast.fail('Failed to reject visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Remove Visitor',\r\n      message: 'Are you sure you wish to remove visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                setData(data.filter(v => v._id !== id));\r\n                Toast.success('Visitor removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onSave = (homeId: string, vData: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => {\r\n    props.onSave(homeId, vData, user, appUser, (result: IVisitor) => {\r\n      sCallback(result);\r\n      // data.unshift(result);\r\n      setData([result, ...data]);\r\n      setPassCode(result.passCode);\r\n      setIsRequestNew(false);\r\n    }, (message: string) => {\r\n      fCallback(message);\r\n    });\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Visitors', link: 'visitors'}]} />\r\n        <View className='bgc-white p-20'>\r\n        {props.appUser.role === ROLE.USER &&\r\n        <View className='mT-3 mB-3 pT-5 pB-5 ta-r'>\r\n          <Text className='cur-p c-blue-500 fw-600 ta-r' onClick={() => setIsRequestNew(!isRequestNew)}>{isRequestNew ? '< Back to Visitors' : 'Request for a New Visitor'}</Text>\r\n        </View>\r\n        }\r\n        {!isRequestNew && <VisitorsView data={data} isActive={isActive} user={props.user} appUser={props.appUser} onActiveChange={onActiveChange} onApprove={onApprove} onReject={onReject} onRemove={onRemove} />}\r\n        {isRequestNew && <NewVisitor appUser={props.appUser} user={props.user} homes={props.homes} gateNo={props.gateNo} onToggleLoading={(isLoading) => setIsLoading(isLoading)} onSave={onSave} onUpload={props.onUpload} onSearch={props.onSearch} />}\r\n        {isNN(passCode) &&\r\n        <Modal\r\n        open={isNN(passCode)}\r\n        onClose={() => setPassCode('')}>\r\n          <View className='mT-30 mB-25 mL-15 mR-15' style={{height: '80%'}}>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>{'Visitor Request created successfully. Please share the passcode(' + passCode + ') to yor visitor and ask him/her to show it to the security in the gate while entering.'}</View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5 ta-c fw-600 c-blue-600' style={{fontSize: 30}}>{passCode}</View>\r\n          </View>\r\n        </Modal>\r\n        }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\nimport { IAppState } from '../models/app-state';\nimport { changePassword, logout } from '../store/actions/account';\n\nimport Page from '../components/home/change-password';\n\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\n    user: state.User\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n    onUpdate: (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => dispatch(changePassword(userId, password, newPassword, callback)),\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\n});\n\nexport const ChangePassword = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, { useState } from 'react';\r\nimport { View, TextInput, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, password: string, newPassword: string, sCallback: (result: boolean, message: string) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n\r\n  const passwordPolicyCheck = (p: string) => {\r\n    let anUpperCase = /[A-Z]/;\r\n    let aLowerCase = /[a-z]/; \r\n    let aNumber = /[0-9]/;\r\n    let aSpecial = /[!|@|#|$|%|^|&|*|(|)|-|_]/;\r\n    let result = \"\";\r\n\r\n    if(p.length < 6){\r\n      result=\"New Password not long enough!\"\r\n        return result;\r\n    }\r\n\r\n    var numUpper = 0;\r\n    var numLower = 0;\r\n    var numNums = 0;\r\n    var numSpecials = 0;\r\n    for(var i=0; i<p.length; i++){\r\n        if(anUpperCase.test(p[i]))\r\n            numUpper++;\r\n        else if(aLowerCase.test(p[i]))\r\n            numLower++;\r\n        else if(aNumber.test(p[i]))\r\n            numNums++;\r\n        else if(aSpecial.test(p[i]))\r\n            numSpecials++;\r\n    }\r\n\r\n    if(numUpper < 1 || numLower < 1 || numNums < 1 || numSpecials < 1){\r\n      result=\"New Password dose not match with password policy!\";\r\n        return result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const onUpdate = () => {\r\n    if(isNN(password) && isNN(newPassword) && isNN(confirmNewPassword)){\r\n      if(newPassword === confirmNewPassword){\r\n        let policyResult = passwordPolicyCheck(newPassword);\r\n        if(policyResult.length < 1){\r\n          setIsLoading(true);\r\n          props.onUpdate(props.user._id, password, newPassword, (result: boolean, message: string) => {\r\n            setIsLoading(false);\r\n            if(result === true){\r\n              Toast.success('Password updated successfully. Please login with your new password.');\r\n                props.onLogout((result: boolean) => {});\r\n            }else{\r\n              Toast.fail(message);\r\n            }\r\n          });\r\n        }else{\r\n          Toast.warn(policyResult);\r\n        }\r\n      }else{\r\n        Toast.warn('New Password and Confirm New Password not matchs.');\r\n      }\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Change Password', link: 'change-password'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextInput type='password' placeholder='Password' className='form-control' value={password} onChange={(event: any) => setPassword(event.target.value)} />\r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextInput type='password' placeholder='New Password' className='form-control' value={newPassword} onChange={(event: any) => setNewPassword(event.target.value)} />\r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextInput type='password' placeholder='Confirm New Password' className='form-control' value={confirmNewPassword} onChange={(event: any) => setConfirmNewPassword(event.target.value)}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, onUpdate);\r\n              }} />\r\n            </View>\r\n            <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={onUpdate}\r\n              />\r\n            </View>\r\n            <View className='mT-7'>\r\n              <Text>Note: Password should contain adleast one uppercase, one lowercase, one number and one special character.</Text>\r\n            </View>\r\n          </View>\r\n          <Spinner visible={isLoading} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { updateProfile } from '../store/actions/account';\r\nimport { upload as fileUpload } from '../store/actions/file';\r\n\r\nimport Page from '../components/home/my-profile';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void, user: IUser) => dispatch(fileUpload(data, callback, user)),\r\n    onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, image: string, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updateProfile(userId, name, mobileNo, emailId, image, user, callback))\r\n});\r\n\r\nexport const MyProfile = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { View, TextInput, Image } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN, onEnter, generateUUID } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\nimport { FILE_BASE_PATH } from '../../constants';\r\nimport Images from '../images';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void, user: IUser) => void,\r\n  onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, image: string, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [mobileNo, setMobileNo] = useState('');\r\n  const [emailId, setEmailId] = useState('');\r\n\r\n  useEffect(() => {\r\n    setName(props.user.name);\r\n    setMobileNo(props.user.mobileNo);\r\n    setEmailId(props.user.emailId);\r\n  }, []);\r\n  \r\n  const onUpdate = () => {\r\n    if(isNN(name) && isNN(mobileNo) && isNN(emailId)){\r\n      setIsLoading(true);\r\n      props.onUpdate(props.user._id, name, mobileNo, (emailId ? emailId.toLowerCase() : ''), ((props.user && props.user.image) ? props.user.image : ''), props.user, (result: boolean, message: string) => {\r\n        setIsLoading(false);\r\n        if(result === true){\r\n          Toast.success('Profile updated successfully.');\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n  \r\n  const onImageSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName: string = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName,\r\n          isProfile: true\r\n        };\r\n        props.onUpload(data, (result: boolean, message: string) => {\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload profile image.');\r\n          }else{\r\n            onUpdate();\r\n          }\r\n        }, props.user);\r\n      }\r\n    }\r\n  };\r\n\r\n      return(\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'My Profile', link: 'my-profile'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <View className='mT-3 mB-3 pT-5 pB-5 ta-c'>\r\n              <Image src={isNN(props.user.image) ? FILE_BASE_PATH + props.user.image : (props.user.gender.toLocaleUpperCase() === 'F' ? Images.avatarFemale : Images.avatarMale)} className='m-0' style={{height: '25vh', borderRadius: '50%'}} />\r\n              <input type='file' accept='image/*' name='profile-image' placeholder='SELECT IMAGE' onChange={onImageSelect}/>              \r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextInput type='text' placeholder=\"Name\" className='form-control' value={name} onChange={(event: any) => setName(event.target.value)} />\r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' value={mobileNo} onChange={(event: any) => setMobileNo(event.target.value)} />\r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <TextInput type='text' placeholder=\"Email Id\" className='form-control' value={emailId} onChange={(event: any) => setEmailId(event.target.value)}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, onUpdate);\r\n              }} />\r\n            </View>\r\n            <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={onUpdate}\r\n              />\r\n            </View>\r\n\r\n\r\n          </View>\r\n          <Spinner visible={isLoading} />\r\n        </View>\r\n        </View>\r\n        </View>\r\n      );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { updateRole} from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-role';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (role: string, callback: (result: boolean, message: string) => void) => dispatch(updateRole(role, callback))\r\n});\r\n\r\nexport const MyRole = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { View, Picker } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onUpdate: (role: string, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [role, setRole] = useState('');\r\n\r\n  useEffect(() => {\r\n    setRole(props.appUser.role);\r\n  }, []);\r\n  \r\n  const onUpdate = () => {\r\n    if(isNN(role)){\r\n      setIsLoading(true);\r\n      props.onUpdate(role, (result: boolean, message: string) => {\r\n        setIsLoading(false);\r\n        if(result === true){\r\n          Toast.success('Role updated successfully.');\r\n          props.history.push('/')\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select role before Update.');\r\n    }\r\n  };\r\n\r\n      return(\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'My Role', link: 'my-role'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <Picker\r\n                className='form-control'\r\n                value={role}\r\n                onChange={(event: any) => setRole(event.target.value)}>\r\n                  {\r\n                  props.user.role.split(',').map((d: string, i: number) => {\r\n                    return(<option key={'role' + i} value={d}>{d}</option>);\r\n                  })\r\n                  }\r\n              </Picker>\r\n            </View>\r\n            <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={onUpdate}\r\n              />\r\n            </View>\r\n          </View>\r\n          <Spinner visible={isLoading} />\r\n        </View>\r\n        </View>\r\n        </View>\r\n      );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { loadAll, save, remove } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/ads';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, callback)),\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback)),\r\n    onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(remove(id, ads, callback))\r\n});\r\n\r\nexport const Ads = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { isNN } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onLoad: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  \r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, (result: boolean) => {\r\n      setIsLoading(false);\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n  }, []);\r\n  \r\n  const onSave = () => {\r\n    if(isNN(title) && isNN(description)){\r\n      setIsLoading(true);\r\n        let ad = {\r\n          _id: id,\r\n          title: title,\r\n          description: description\r\n        } as IAd;\r\n        props.onSave(props.user.client._id, ad, props.user, props.ads.data, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setIsEdit(false);\r\n            setId('');\r\n            setTitle('');\r\n            setDescription('');\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, props.ads.data, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                Toast.success('Ad removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ad.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Ads', link: 'ads'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <View>\r\n              <Text className='fl-r cur-p mB-3 c-blue-500' onClick={() => props.history.push('new-ad')}>Add New</Text>\r\n            </View>\r\n            {(props.ads.isUpToDate && !props.ads.isError && isNN(props.ads.data)) ?\r\n              props.ads.data.map((d: IAd, i: number) => {\r\n                return(\r\n                  (isEdit === true && id === d._id) ?\r\n                  <View key={i} className='bdB mT-5'>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                        <Text className='fw-600'>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <TextInput type='text' placeholder=\"Title\" className='form-control' value={title} onChange={(event: any) => setTitle(event.target.value)} />\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <TextArea placeholder=\"Description\" className='form-control' value={description} onChange={(event: any) => setDescription(event.target.value)} />\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <span className=\"icon-holder mR-10 cur-p\" onClick={onSave}>\r\n                        <i className=\"c-green-500 fa fa-check\"></i>\r\n                      </span>\r\n                      <span className=\"icon-holder cur-p\" onClick={() => {\r\n                        setIsEdit(false);\r\n                        setId('');\r\n                        setTitle('');\r\n                        setDescription('');\r\n                      }}>\r\n                        <i className=\"c-red-500 fa fa-times\"></i>\r\n                      </span>\r\n                    </View>\r\n                  </View>\r\n                  :\r\n                  <View key={i} className='bdB mT-5'>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                        <Text className='fw-600'>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text>{d.title}</Text>\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text>{d.description}</Text>\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                        setIsEdit(true);\r\n                        setId(d._id);\r\n                        setTitle(d.title);\r\n                        setDescription(d.description);\r\n                      }}>\r\n                        <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                      </span>\r\n                      <span className=\"icon-holder cur-p\" onClick={() => {\r\n                        onRemove(d._id);\r\n                      }}>\r\n                        <i className=\"c-red-500 fa fa-trash\"></i>\r\n                      </span>\r\n                    </View>\r\n                  </View>\r\n                )\r\n              })\r\n              :\r\n              <Text className='p-20'>{(props.ads.isUpToDate ? (props.ads.isError ? props.ads.errorMessage : \"No ad found.\") : \"Loading...\")}</Text>\r\n            }\r\n          <Spinner visible={isLoading} />\r\n    </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { save } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/new-ad';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback))\r\n});\r\n\r\nexport const NewAd = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { View, TextInput, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { isNN, onEnter } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const onSave = () => {\r\n    if(isNN(title) && isNN(description)){\r\n      setIsLoading(true);\r\n        let ad = {\r\n          _id: id,\r\n          title: title,\r\n          description: description\r\n        } as IAd;\r\n        props.onSave(props.user.client._id, ad, props.user, props.ads.data, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setId('');\r\n            setTitle('');\r\n            setDescription('');\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Ads', link: 'ads'}, {title: 'New Ad', link: 'new-ad'}]} />\r\n        <View className='bgc-white p-20'>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Title\" className='form-control' value={title} onChange={(event: any) => setTitle(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextArea placeholder=\"Description\" className='form-control' value={description} onChange={(event: any) => setDescription(event.target.value)}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, onSave);\r\n            }} />\r\n          </View>\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IUsers } from '../models/store/users';\r\nimport { removeByAM } from '../store/actions/member';\r\n\r\nimport Page from '../components/home/manager/users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => dispatch(removeByAM(id, homeIndex, user, users, callback))\r\n});\r\n\r\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TextInput, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IMember } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\nimport { APPTYPE } from '../../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => void,\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const [isEdit, setIsEdit] = useState(false);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchResult, setSearchResult] = useState([] as Array<IMember>);\r\n  const [searchResultIndex, setSearchResultIndex] = useState(10);\r\n\r\n  // const getHomes = (userId: string) => {\r\n  //   let homes = '';\r\n  //   if((props.homes.isUpToDate && !props.homes.isError && isNN(props.homes.data)) && (props.userHomes.isUpToDate && !props.userHomes.isError && isNN(props.userHomes.data))){\r\n  //     let homeIds = [] as Array<string>;\r\n  //     props.userHomes.data.filter(uh => uh.userId === userId).map((uh: IUserHome, i: number) => homeIds.push(uh.homeId));\r\n  //     props.homes.data.filter(d => homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n  //   }\r\n  //   return homes;\r\n  // };\r\n\r\n  const onSearch = () => {\r\n    if(isNN(searchText) && props.users.isUpToDate && !props.users.isError && isNN(props.users.data)){\r\n      let tempSearchText = searchText.toLowerCase();\r\n      let homes = props.homes.data.filter(h => h.number.toLowerCase() === tempSearchText);\r\n      setSearchResult(props.users.data.filter(d => (d.name + '').toLowerCase().indexOf(tempSearchText) >= 0 || (d.mobileNo + '').toLowerCase().indexOf(tempSearchText) >= 0 || (d.emailId + '').toLowerCase().indexOf(tempSearchText) >= 0 || (d.number + '').toLowerCase().indexOf(tempSearchText) >= 0 || (isNN(homes.filter(h => h.memberIds.indexOf(d._id) >= 0)))));\r\n      setSearchResultIndex(10);\r\n    }else{\r\n      setSearchResult([]);\r\n      setSearchResultIndex(10);\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, props.appUser.homeIndex, props.user, props.users, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                onSearch();\r\n                Toast.success('User removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove user.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n      return(\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Users', link: 'users'}]} />\r\n          <View className='bgc-white p-20'>\r\n          <View>\r\n            <Text className='fl-r cur-p c-blue-500' onClick={() => props.history.push('edit-user/0/false')}>Add New</Text>\r\n            <Text className='fl-r cur-p c-blue-500 mR-15' onClick={() => props.history.push('approve-users')}>View Users Waiting for Approval</Text>\r\n          </View>\r\n          <View className='mB-3 pB-5'>\r\n            <TextInput type='text' placeholder=\"Search User\" className='form-control mR-10 d-i' style={{width: 'calc(100% - 40px)'}} value={searchText} onChange={(event: any) => setSearchText(event.target.value)}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, onSearch);\r\n            }} />\r\n            <span className='icon-holder cur-p' onClick={onSearch}>\r\n              <i className='ti-search pdd-right-10 fw-900'></i>\r\n            </span>\r\n          </View>\r\n\r\n          {isNN(searchResult) ?\r\n          searchResult.slice(0, searchResultIndex).map((d: IMember, i: number) => {\r\n            return(\r\n              <View key={'usr' + i} className='bdB mT-5'>\r\n                {(props.user.client.config.appType == APPTYPE.QUARTERS && isNN(d.number)) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Number: ' + d.number}</Text>                  \r\n                </View>\r\n                }\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Mobile No: ' + d.mobileNo}</Text>         \r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Email: ' + d.emailId}</Text>         \r\n                </View>\r\n                }\r\n                {/* <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Owner Name: ' + (isNN(d.ownername) ? d.ownername : '')}</Text>         \r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Owner Mobile No: ' + (d.ownermobile > 0 ? d.ownermobile : '')}</Text>         \r\n                </View> */}\r\n                {/* <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Role: ' + (isNN(d.type) ? d.type.replace(/,/g, ', ') : '')}</Text>         \r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'House(s): ' + getHomes(d._id)}</Text>         \r\n                </View> */}\r\n                \r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                    props.history.push('edit-user/' + d._id + '/false');////TODO\r\n                    // props.navigation.navigate('EditUser', {id: d._id});\r\n                    // setState({\r\n                    //   isEdit: true,\r\n                    //   id: d.id\r\n                    // });\r\n                  }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span>\r\n                  {(d._id !== props.user._id) &&\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                      onRemove(d._id);\r\n                    }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n                  }\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text className='p-20'>No user match with your search.</Text>\r\n        }\r\n        {(searchResult.length > searchResultIndex) &&\r\n        <View className='bdB mT-5'>\r\n          <View className='p-10'>\r\n            <Text className='c-blue-500 fw-600' onClick={() => {\r\n              setSearchResultIndex(searchResultIndex + 10)\r\n            }}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n      );\r\n};","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'home';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IHome>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      result.data.forEach((h: any) => {\r\n        h.memberIds = h.members;\r\n        delete h.members;\r\n      });\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Homes.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNN(result.data._id)) {\r\n      result.data.memberIds = result.data.members;\r\n      delete result.data.members;\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Home.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n          var foundIndex = homes.data.findIndex(d => d._id === result.data);\r\n          homes.data[foundIndex]._id = result.data;\r\n          homes.data[foundIndex].number = data.number;\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n            homes.data.push({\r\n              _id: result.data,\r\n              // name: name,\r\n              number: data.number\r\n            } as IHome);\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const checkNumberAvail = (id: string, number: string, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().get(controller + '/checkno/' + number, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes = user.homes.filter((d, i) => d._id !== id);\r\n      homes.data = homes.data.filter((d, i) => d._id !== id);\r\n      ////userHomes.data = userHomes.data.filter((d, i) => d.homeId !== id);\r\n      dispatch(getUserResult(user));\r\n      dispatch(getHomesResult(homes.data, true, false, \"\"));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { remove } from '../store/actions/home';\r\n\r\nimport Page from '../components/home/manager/homes';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => dispatch(remove(id, user, homes, callback))\r\n});\r\n\r\nexport const Homes = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View,  TextInput, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => void,\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const [isEdit, setIsEdit] = useState(false);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchResult, setSearchResult] = useState([] as Array<IHome>);\r\n  const [searchResultIndex, setSearchResultIndex] = useState(10);\r\n  \r\n  // const getUsers = (homeId: string) => {\r\n  //   let users = '';\r\n  //   if((props.users.isUpToDate && !props.users.isError && isNN(props.users.data)) && (props.userHomes.isUpToDate && !props.userHomes.isError && isNN(props.userHomes.data))){\r\n  //     let userIds = [] as Array<string>;\r\n  //     props.userHomes.data.filter(uh => uh.homeId === homeId).map((uh: IUserHome, i: number) => userIds.push(uh.userId));\r\n  //     props.users.data.filter(d => userIds.indexOf(d._id) >= 0).map((u: IMember, i: number) => users += (users.length > 0 ? ', ' : '') + u.name);\r\n  //   }\r\n  //   return users;\r\n  // };\r\n\r\n  const onSearch = () => {\r\n    if(isNN(searchText) && props.homes.isUpToDate && !props.homes.isError && isNN(props.homes.data)){\r\n      setSearchResult(props.homes.data.filter(d => (d.number + '').toLocaleLowerCase().indexOf(searchText.toLowerCase()) >= 0));\r\n      setSearchResultIndex(10);\r\n    }else{\r\n      setSearchResult([]);\r\n      setSearchResultIndex(10);\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, props.user, props.homes, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                onSearch();\r\n                Toast.success('House removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove house.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n      return(\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Houses', link: 'homes'}]} />\r\n          <View className='bgc-white p-20'>\r\n          <View>\r\n            <Text className='fl-r cur-p c-blue-500' onClick={() => props.history.push('edit-home/0')}>Add New</Text>\r\n          </View>\r\n          <View className='mB-3 pB-5'>\r\n            <TextInput type='text' placeholder=\"Search House\" className='form-control mR-10 d-i' style={{width: 'calc(100% - 40px)'}} value={searchText} onChange={(event: any) => setSearchText(event.target.value)}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, onSearch);\r\n            }} />\r\n            <span className='icon-holder cur-p' onClick={onSearch}>\r\n              <i className='ti-search pdd-right-10 fw-900'></i>\r\n            </span>\r\n          </View>\r\n\r\n          {isNN(searchResult) ?\r\n          searchResult.slice(0, searchResultIndex).map((d: IHome, i: number) => {\r\n            return(\r\n              <View key={'home' + i} className='bdB mT-5'>\r\n                {/* <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View> */}\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Number: ' + d.number}</Text>         \r\n                </View>\r\n                {/* <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Address: ' + (isNN(d.address) ? d.address : '')}</Text>         \r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'User(s): ' + getUsers(d._id)}</Text>         \r\n                </View> */}\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                    props.history.push('view-home/' + d._id);\r\n                    // props.navigation.navigate('ViewHome', {id: d._id});\r\n                  }}>\r\n                    <i className=\"c-orange-500 fa fa-eye\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                    props.history.push('edit-home/' + d._id);\r\n                    // props.navigation.navigate('EditHome', {id: d._id});\r\n                    // setState({\r\n                    //   isEdit: true,\r\n                    //   id: d.id\r\n                    // });\r\n                  }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span>\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                      onRemove(d._id);\r\n                    }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text className='p-20'>No house match with your search.</Text>\r\n        }\r\n        {(searchResult.length > searchResultIndex) &&\r\n        <View className='bdB mT-5'>\r\n          <View className='p-10'>\r\n            <Text className='fw-600 c-blue-500' onClick={() => {\r\n            setSearchResultIndex(searchResultIndex + 10)\r\n            }}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n      );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IMember } from '../models/home';\r\nimport { IUsers } from '../models/store/users';\r\nimport { load, saveByAM, allowOwnAccess } from '../store/actions/member';\r\nimport Page from '../components/home/manager/edit-user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => dispatch(saveByAM(data, homeIds, user, users, isApprove, callback)),\r\n    onAllowOwnAccess: (id: string, isAllow: boolean, callback: (result: boolean) => void) => dispatch(allowOwnAccess(id, isAllow, callback))\r\n});\r\n\r\nexport const EditUser = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { ScrollView, View, TextInput, Text } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Toast from  '../../../util/toast';\r\nimport { ROLE, APPTYPE } from '../../../constants';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => void,\r\n  onAllowOwnAccess: (id: string, isAllow: boolean, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isShowHomes, setIsShowHomes] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    id: '',\r\n    number: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    relationship: '',\r\n    otherRelationship: '',\r\n    type: 'TENANT',\r\n    isApproved: false,\r\n    isPrimary: false,\r\n    hasOwnAccess: false,\r\n    isOwnAccessRequested: false,\r\n    homeIds: [] as Array<string>,\r\n    role: {\r\n      isAdmin: false,\r\n      isManager: false,\r\n      isGatekeeper: false,\r\n      isUser: false,\r\n      isMaintenanceSupervisor: false,\r\n      isSecuritySupervisor: false,\r\n      isMaintenanceManager: false,\r\n      isSecurityManager: false\r\n    }\r\n  });\r\n  \r\n  useEffect(() => {\r\n    let userId = props.match.params.id;\r\n    if(userId.length > 0 && userId !== '0'){\r\n      setIsLoading(true);\r\n      props.onLoad(userId, (result: IMember, homeIds: Array<string>) => {\r\n        setIsLoading(false);\r\n        if(result && isNN(result._id)){\r\n          setFormData({\r\n            id: result._id,\r\n            number: result.number,\r\n            name: result.name,\r\n            age: result.age,\r\n            gender: result.gender,\r\n            mobileNo: result.mobileNo,\r\n            emailId: result.emailId,\r\n            relationship: result.relationship,\r\n            otherRelationship: result.otherRelationship,\r\n            isApproved: result.isApproved || false,\r\n            isPrimary: result.isPrimary,\r\n            hasOwnAccess: result.hasOwnAccess,\r\n            isOwnAccessRequested: result.isOwnAccessRequested,\r\n            type: result.type,\r\n            homeIds: homeIds,\r\n            role: {\r\n              isAdmin: (',' + result.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n              isManager: (',' + result.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n              isGatekeeper: (',' + result.role + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n              isUser: (',' + result.role + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n              isMaintenanceSupervisor: (',' + result.role + ',').indexOf(',' + ROLE.MAINTENANCE_SUPERVISOR + ',') >= 0,\r\n              isSecuritySupervisor: (',' + result.role + ',').indexOf(',' + ROLE.SECURITY_SUPERVISOR + ',') >= 0,\r\n              isMaintenanceManager: (',' + result.role + ',').indexOf(',' + ROLE.MAINTENANCE_MANAGER + ',') >= 0,\r\n              isSecurityManager: (',' + result.role + ',').indexOf(',' + ROLE.SECURITY_MANAGER + ',') >= 0\r\n            }\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load User.');\r\n        }\r\n      }, (message: string) => {\r\n        setIsLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load User.');\r\n      });\r\n    }\r\n\r\n    /*\r\n    if(userId > 0 && (props.users.isUpToDate && !props.users.isError && isNN(props.users.data))){\r\n      let users = props.users.data.filter((u: IUser, i: number) => u._id === userId);\r\n      if(isNNObject(users) && users.length > 0){\r\n        let homeIds = [] as Array<string>;\r\n        if(props.userHomes.isUpToDate && !props.userHomes.isError && isNN(props.userHomes.data)){\r\n          props.userHomes.data.filter((uh: IUserHome, i: number) => uh.userId === userId).map(uh => {\r\n            homeIds.push(uh.homeId);\r\n          });\r\n        }\r\n        setFormData({...formData, \r\n          id: users[0]._id,\r\n          name: users[0].name,\r\n          mobileNo: users[0].mobileNo,\r\n          emailId: users[0].emailId,\r\n          ////ownername: users[0].ownername,\r\n          ////ownermobile: users[0].ownermobile,\r\n          homeIds: homeIds,\r\n          role: {\r\n            isAdmin: (',' + users[0].type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n            isManager: (',' + users[0].type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n            isGatekeeper: (',' + users[0].type + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n            isUser: (',' + users[0].type + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n          }\r\n        });\r\n      }\r\n    }\r\n    */\r\n  }, []);\r\n  \r\n  const getHomes = () => {\r\n    let homes = '';\r\n    if(isNN(formData.homeIds) && (props.homes.isUpToDate && !props.homes.isError && isNN(props.homes.data))){\r\n      props.homes.data.filter(d => formData.homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n    }\r\n    return homes;\r\n  };\r\n\r\n  const onSave = () => {\r\n    if((props.user.client.config.appType !== APPTYPE.QUARTERS || isNN(formData.number)) && isNN(formData.name) && formData.age > 0 && isNN(formData.gender)){\r\n      let role = '';\r\n      if(formData.role.isAdmin){\r\n        role = ROLE.ADMIN\r\n      }\r\n      if(formData.role.isManager){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.MANAGER\r\n      }\r\n      if(formData.role.isGatekeeper){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.GATEKEEPER\r\n      }\r\n      if(formData.role.isUser){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.USER\r\n      }\r\n      if(formData.role.isMaintenanceSupervisor){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.MAINTENANCE_SUPERVISOR\r\n      }\r\n      if(formData.role.isSecuritySupervisor){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.SECURITY_SUPERVISOR\r\n      }\r\n      if(formData.role.isMaintenanceManager){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.MAINTENANCE_MANAGER\r\n      }\r\n      if(formData.role.isSecurityManager){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.SECURITY_MANAGER\r\n      }\r\n        setIsLoading(true);\r\n        let member = {\r\n          _id: formData.id,\r\n          number: formData.number,\r\n          name: formData.name,\r\n          age: formData.age,\r\n          gender: formData.gender,\r\n          mobileNo: formData.mobileNo,\r\n          emailId: formData.emailId ? formData.emailId.toLowerCase() : '',\r\n          relationship: formData.relationship,\r\n          otherRelationship: formData.otherRelationship,\r\n          type: formData.type,\r\n          role: role\r\n        } as IMember;\r\n        props.onSave(member, formData.homeIds, props.user, props.users, props.match.params.isApprove === 'true', (result: boolean, message: string) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setFormData({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              relationship: '',\r\n              otherRelationship: '',\r\n              isApproved: false,\r\n              isPrimary: false,\r\n              hasOwnAccess: false,\r\n              isOwnAccessRequested: false,\r\n              type: 'TENANT',\r\n              homeIds: [],\r\n              role: {\r\n                isAdmin: false,\r\n                isManager: false,\r\n                isGatekeeper: false,\r\n                isUser: false,\r\n                isMaintenanceSupervisor: false,\r\n                isSecuritySupervisor: false,\r\n                isMaintenanceManager: false,\r\n                isSecurityManager: false\r\n              }\r\n            });\r\n            Toast.success('User saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save user.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (formData.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onToggleHomeModel = (isShow: boolean) => {\r\n    setIsShowHomes(isShow);\r\n  }\r\n\r\n  const onAllowOwnAccess = (isAllow: boolean) => {\r\n    setIsLoading(true);\r\n    props.onAllowOwnAccess(formData.id, isAllow, (result: boolean) => {\r\n      setIsLoading(false);\r\n      if(result === true){\r\n        setFormData({\r\n          ...formData,\r\n          hasOwnAccess: isAllow\r\n        });\r\n        Toast.success('User ' + (isAllow ? 'allowed to login' : 'login access revoked') + ' successfully.');\r\n      }else{\r\n        Toast.fail('Failed to ' + (isAllow ? 'allow' : 'revoke') + '.');\r\n      }\r\n    });\r\n  }\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Users', link: 'users'}, {title: 'Edit User', link: 'edit-user/0'}]} />\r\n        <View className='bgc-white p-20'>\r\n          {props.user.client.config.appType == APPTYPE.QUARTERS &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"User Id / Number\" className='form-control' value={formData.number} onChange={(event: any) => setFormData({...formData, number: event.target.value})} />\r\n          </View>\r\n          }\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' value={formData.name} onChange={(event: any) => setFormData({...formData, name: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} value={formData.age > 0 ? formData.age + '' : ''} onChange={(event: any) => setFormData({...formData, age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={formData.gender === 'M'} text='Male' onPress={() => setFormData({...formData, gender: 'M'})} />\r\n            <RadioButton isActive={formData.gender === 'F'} text='Female' onPress={() => setFormData({...formData, gender: 'F'})} />\r\n            {props.user.client.config.hasOtherGender &&\r\n            <RadioButton isActive={formData.gender === 'O'} text='Other' onPress={() => setFormData({...formData, gender: 'O'})} />\r\n            }\r\n          </View>            \r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' value={formData.mobileNo} onChange={(event: any) => setFormData({...formData, mobileNo: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' value={formData.emailId} onChange={(event: any) => setFormData({...formData, emailId: event.target.value})} />\r\n          </View>\r\n          {(isNN(formData.relationship) || isNN(formData.otherRelationship)) &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text>{(isNN(formData.relationship) && formData.relationship != 'Other') ? formData.relationship : (isNN(formData.otherRelationship) ? formData.otherRelationship : 'Other')}</Text>\r\n          </View>\r\n          }\r\n          {props.user.client.config.appType == APPTYPE.APARTMENT &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={formData.type === 'OWNER'} text='Owner' onPress={() => setFormData({...formData, type: 'OWNER'})} />\r\n            <RadioButton isActive={formData.type === 'TENANT'} text='Tenant' onPress={() => setFormData({...formData, type: 'TENANT'})} />\r\n          </View>\r\n          }\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mR-10'>Role: </Text>\r\n            <Checkbox isActive={formData.role.isAdmin} text={ROLE.ADMIN} onPress={() => {\r\n              let tRole = formData.role;\r\n              tRole.isAdmin = !formData.role.isAdmin;\r\n              setFormData({\r\n                ...formData,\r\n                role: tRole\r\n              });\r\n            }} />\r\n            <Checkbox isActive={formData.role.isManager} text={ROLE.MANAGER} onPress={() => {\r\n              let tRole = formData.role;\r\n              tRole.isManager = !formData.role.isManager;\r\n              setFormData({\r\n                ...formData,\r\n                role: tRole\r\n              });\r\n            }} />\r\n            <Checkbox isActive={formData.role.isGatekeeper} text={ROLE.GATEKEEPER} onPress={() => {\r\n              let tRole = formData.role;\r\n              tRole.isGatekeeper = !formData.role.isGatekeeper;\r\n              setFormData({\r\n                ...formData,\r\n                role: tRole\r\n              });\r\n            }} />\r\n            <Checkbox isActive={formData.role.isUser} text={ROLE.USER} onPress={() => {\r\n              let tRole = formData.role;\r\n              tRole.isUser = !formData.role.isUser;\r\n              setFormData({\r\n                ...formData,\r\n                role: tRole\r\n              });\r\n            }} />\r\n            <Checkbox isActive={formData.role.isMaintenanceSupervisor} text={ROLE.MAINTENANCE_SUPERVISOR} onPress={() => {\r\n              let tRole = formData.role;\r\n              tRole.isMaintenanceSupervisor = !formData.role.isMaintenanceSupervisor;\r\n              setFormData({\r\n                ...formData,\r\n                role: tRole\r\n              });\r\n            }} />\r\n            <Checkbox isActive={formData.role.isSecuritySupervisor} text={ROLE.SECURITY_SUPERVISOR} onPress={() => {\r\n              let tRole = formData.role;\r\n              tRole.isSecuritySupervisor = !formData.role.isSecuritySupervisor;\r\n              setFormData({\r\n                ...formData,\r\n                role: tRole\r\n              });\r\n            }} />\r\n            <Checkbox isActive={formData.role.isMaintenanceManager} text={ROLE.MAINTENANCE_MANAGER} onPress={() => {\r\n              let tRole = formData.role;\r\n              tRole.isMaintenanceManager = !formData.role.isMaintenanceManager;\r\n              setFormData({\r\n                ...formData,\r\n                role: tRole\r\n              });\r\n            }} />\r\n            <Checkbox isActive={formData.role.isSecurityManager} text={ROLE.SECURITY_MANAGER} onPress={() => {\r\n              let tRole = formData.role;\r\n              tRole.isSecurityManager = !formData.role.isSecurityManager;\r\n              setFormData({\r\n                ...formData,\r\n                role: tRole\r\n              });\r\n            }} />\r\n          </View>\r\n          {isNN(formData.id) &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mR-5'>Access to Login:</Text>\r\n            <span className='d-ib bd bdc-blue-500'>\r\n              {formData.hasOwnAccess ?\r\n              <>\r\n              <Text className='p-5 m-0 bgc-blue-500 c-white'>Allowed</Text>\r\n              <Text className='p-5 m-0 c-blue-500 cur-p' onClick={() => onAllowOwnAccess(false)}>Revoke</Text>\r\n              </>\r\n              :\r\n              <>\r\n              <Text className='p-5 m-0 c-blue-500 cur-p' onClick={() => onAllowOwnAccess(true)}>Allow</Text>\r\n              <Text className='p-5 m-0 bgc-blue-500 c-white'>Revoked</Text>\r\n              </>\r\n              }\r\n            </span>\r\n          </View>\r\n          }\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mR-5'>House(s):</Text>\r\n            <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n              setIsShowHomes(true);\r\n             }}>\r\n               <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n            </span>\r\n            <Text>{getHomes()}</Text>\r\n          </View>\r\n          {(props.homes.isUpToDate && !props.homes.isError && isNN(props.homes.data) && isShowHomes) &&\r\n          <Modal\r\n          open={isShowHomes}\r\n          onClose={() => onToggleHomeModel(false)}>\r\n            <View className='mT-30 mB-25 mL-15 mR-15' style={{height: '80%'}}>\r\n              <ScrollView className='bd bdc-blue-500' style={{height: '50%', maxHeight: '50%'}}>\r\n                {\r\n                  props.homes.data.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text key={'home' + i} className={'cur-p bdB p-3 mB-1' + (formData.homeIds.indexOf(d._id) >= 0 ? ' bgc-blue-500 c-white' : '')} onClick={() => {\r\n                        if(formData.homeIds.indexOf(d._id) >= 0){\r\n                          setFormData({...formData, \r\n                            homeIds: formData.homeIds.filter(e => e !== d._id)\r\n                          });\r\n                        }else{\r\n                          let tHomeIds = formData.homeIds;\r\n                          tHomeIds.push(d._id);\r\n                          setFormData({\r\n                            ...formData,\r\n                            homeIds: tHomeIds\r\n                          });\r\n                        }\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n                </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View className='mT-3 mB-3 pT-5 pB-5 ta-c'>\r\n            <Button\r\n            title={props.match.params.isApprove === 'true' ? 'Approve' : 'SAVE'}\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};\r\n\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { loadWFAUsers, reject } from '../store/actions/member';\r\nimport { IMember } from '../models/home';\r\n\r\nimport Page from '../components/home/manager/approve-users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadWFAUsers(sCallback, fCallback)),\r\n    onReject: (id: string, callback: (result: boolean) => void) => dispatch(reject(id, callback))\r\n});\r\n\r\nexport const ApproveUsers = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport Spinner from '../../common/spinner';\r\nimport { IMember } from '../../../models/home/member';\r\nimport Toast from  '../../../util/toast';\r\nimport { isNN } from '../../../util';\r\nimport { toDateTimeString } from '../../../util/convert';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  onLoad: (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onReject: (id: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([] as Array<IMember>);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad((result: Array<IMember>) => {\r\n      setIsLoading(false);\r\n      setData(result);\r\n    }, (message: string) => {\r\n      setIsLoading(false);\r\n      Toast.fail(message);\r\n    });\r\n  }, []);\r\n\r\n  const onApprove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Approve',\r\n      message: 'You want to Approve the user?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            props.history.push('edit-user/' + id + '/true');\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onReject = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Reject',\r\n      message: 'You want to Reject the user?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onReject(id, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                setData(data.filter(v => v._id !== id));\r\n                Toast.success('User rejected successfully.');\r\n              }else{\r\n                Toast.fail('Failed to reject the user.');\r\n              }\r\n            }); \r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Users', link: 'users'}, {title: 'Users Waiting for Approval', link: 'approve-users'}]} />\r\n          <View className='bgc-white p-20'>\r\n            {isNN(data) ?\r\n            data.map((d: IMember, i: number) => {\r\n              return(\r\n                <View key={i} className='bdB mT-5'>\r\n                  <View className='mT-1 mB-3 p-2'>\r\n                    <Text className='fw-600'>{d.name}</Text>\r\n                  </View>\r\n                  {(d.age > 0 || isNN(d.gender)) && \r\n                  <View className='mT-1 mB-3 p-2'>\r\n                    <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other')) : '')}</Text>\r\n                  </View>\r\n                  }\r\n                  <View className='mT-1 mB-3 p-2'>\r\n                    On <Text className='fw-600'>{toDateTimeString(d.createdAt)}</Text>\r\n                  </View>\r\n                  {isNN(d.mobileNo) && \r\n                  <View className='mT-1 mB-3 p-2'>\r\n                    <Text>{d.mobileNo}</Text>\r\n                  </View>\r\n                  }\r\n                  {isNN(d.emailId) && \r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text>{d.emailId}</Text>\r\n                    </View>\r\n                  }\r\n                  <View className='mT-1 mB-3 p-2'>\r\n                    <Button title='Approve' className='mR-10' onPress={() => { onApprove(d._id); }} />\r\n                    <Button title='Reject' onPress={() => { onReject(d._id); }} />\r\n                  </View>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <Text className='p-20'>No user found.</Text>\r\n            }\r\n            <Spinner visible={isLoading} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { IHome } from '../models/home';\r\nimport { IUser } from '../models/user';\r\nimport { load, save, checkNumberAvail } from '../store/actions/home';\r\nimport Page from '../components/home/manager/edit-home';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => dispatch(save(data, user, homes, callback)),\r\n    onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => dispatch(checkNumberAvail(id, number, callback))\r\n});\r\n\r\nexport const EditHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { ScrollView, View, TextInput, Text, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => void,\r\n  onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  id: string,\r\n\tblockId: string,\r\n\tnumber: string,\r\n\taddress: string,\r\n  bedRoom: number,\r\n  parking: string,\r\n  description: string,\r\n  members: Array<string>,\r\n};\r\n\r\nexport default (props:IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isShowUsers, setIsShowUsers] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    id: '',\r\n    blockId: '',\r\n    number: '',\r\n    address: '',\r\n    bedRoom: 1,\r\n    parking: '',\r\n    description: '',\r\n    members: [] as Array<string>\r\n  });\r\n\r\nuseEffect(() => {\r\n    let homeId = props.match.params.id; // props.navigation.state.params.id;\r\n    if(homeId.length > 0 && homeId !== '0'){\r\n      setIsLoading(true);\r\n      props.onLoad(homeId, (result: IHome) => {\r\n        setIsLoading(false);\r\n        if(result && isNN(result._id)){\r\n          setFormData({\r\n            ...formData,\r\n            id: result._id,\r\n            blockId: result._blockId,\r\n            number: result.number,\r\n            address: result.address,\r\n            bedRoom: result.bedRoom,\r\n            parking: result.parking,\r\n            description: result.description,\r\n            members: result.memberIds\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load house.');\r\n        }\r\n      }, (message: string) => {\r\n        setIsLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load house.');\r\n      });\r\n    }\r\n    \r\n    /*\r\n    if(homeId > 0 && (props.homes.isUpToDate && !props.homes.isError && isNN(props.homes.data))){\r\n      let homes = props.homes.data.filter((u: IHome, i: number) => u._id === homeId);\r\n      if(isNNObject(homes) && homes.length > 0){\r\n        let members = [] as Array<string>;\r\n        if(props.userHomes.isUpToDate && !props.userHomes.isError && isNN(props.userHomes.data)){\r\n          props.userHomes.data.filter((uh: IUserHome, i: number) => uh.homeId === homeId).map(uh => {\r\n            members.push(uh.userId);\r\n          });\r\n        }\r\n        setState({\r\n          id: homes[0]._id,\r\n          blockId: homes[0]._blockId,\r\n          number: homes[0].number,\r\n          address: homes[0].address,\r\n          bedRoom: homes[0].bedRoom,\r\n          parking: homes[0].parking,\r\n          description: homes[0].description,\r\n          members: members\r\n        });\r\n      }\r\n    }\r\n    */\r\n  }, []);\r\n\r\n  const getUsers = () => {\r\n    let users = '';\r\n    if(isNN(formData.members) && (props.users.isUpToDate && !props.users.isError && isNN(props.users.data))){\r\n      props.users.data.filter(d => formData.members.indexOf(d._id) >= 0).map((u: IMember, i: number) => \r\n        users += (users.length > 0 ? ', ' : '') + u.name + (isNN(u.number) ? '(' + u.number + ')' : '')\r\n      );\r\n    }\r\n    return users;\r\n  };\r\n\r\n  const onSave = () => {\r\n    if(isNN(formData.blockId) && isNN(formData.number)){\r\n      setIsLoading(true);\r\n      /*\r\n      props.onCheckNumberAvail(state.id, state.number, (result: boolean) => {\r\n        if(result === true){\r\n          */\r\n         let home = {\r\n           _id: formData.id,\r\n           _blockId: formData.blockId,\r\n           number: formData.number,\r\n           address: formData.address,\r\n           bedRoom: formData.bedRoom,\r\n           parking: formData.parking,\r\n           description: formData.description,\r\n           memberIds: formData.members\r\n         } as IHome;\r\n          props.onSave(home, props.user, props.homes, (result: boolean, message: string) => {\r\n            setIsLoading(false);\r\n            if(result === true){\r\n              setFormData({\r\n                id: '',\r\n                blockId: '',\r\n                number: '',\r\n                address: '',\r\n                bedRoom: 1,\r\n                parking: '',\r\n                description: '',\r\n                members: []\r\n              });\r\n              Toast.success('House saved successfully.');\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to save house.');\r\n            }\r\n          });\r\n          /*\r\n        }else{\r\n          setState({\r\n            isLoading: false,\r\n          });\r\n          Toast.warn('House with same Number already available. Please change the house number.');\r\n        }\r\n      });\r\n      */\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (formData.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onToggleUserModel = (isShow: boolean) => {\r\n    setIsShowUsers(isShow);\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Houses', link: 'homes'}, {title: 'Edit House', link: 'edit-home/0'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Picker\r\n            className='form-control'\r\n            value={formData.blockId}\r\n            onChange={(event: any) => setFormData({...formData, blockId: event.target.value})}>\r\n              <option key={'block0'} value=''>Select Block</option>\r\n              {(props.blocks && props.blocks.isUpToDate && !props.blocks.isError && isNN(props.blocks.data)) &&\r\n                props.blocks.data.map((d: IBlock, i: number) => {\r\n                  return(<option key={'block' + i} value={d._id}>{d.name}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' value={formData.number} onChange={(event: any) => setFormData({...formData, number: event.target.value})} />\r\n          </View>\r\n          {/* <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextArea placeholder=\"Address\" className='form-control' value={formData.address} onChange={(event: any) => setFormData({...formData, address: event.target.value})} />\r\n          </View> */}\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text>No of bed rooms: </Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <RadioButton isActive={formData.bedRoom === 1} text='1' onPress={() => setFormData({...formData, bedRoom: 1})} />\r\n            <RadioButton isActive={formData.bedRoom === 2} text='2' onPress={() => setFormData({...formData, bedRoom: 2})} />\r\n            <RadioButton isActive={formData.bedRoom === 3} text='3' onPress={() => setFormData({...formData, bedRoom: 3})} />\r\n            <RadioButton isActive={formData.bedRoom === 4} text='4' onPress={() => setFormData({...formData, bedRoom: 4})} />\r\n            <RadioButton isActive={formData.bedRoom === 5} text='5' onPress={() => setFormData({...formData, bedRoom: 5})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Parking\" className='form-control' value={formData.parking} onChange={(event: any) => setFormData({...formData, parking: event.target.value})} />\r\n          </View>\r\n          {/* <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Description\" className='form-control' value={formData.description} onChange={(event: any) => setFormData({...formData, description: event.target.value})} />\r\n          </View> */}\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mR-5'>User(s):</Text>\r\n            <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n              setIsShowUsers(true);\r\n             }}>\r\n              <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n            </span>\r\n            <Text>{getUsers()}</Text>\r\n          </View>\r\n          {(props.users.isUpToDate && !props.users.isError && isNN(props.users.data)) &&\r\n          <Modal\r\n          open={isShowUsers}\r\n          onClose={() => onToggleUserModel(false)}>\r\n            <View className='mT-30 mB-25 mL-15 mR-15' style={{height: '80%'}}>\r\n              <ScrollView className='bd bdc-blue-500' style={{height: '50%', maxHeight: '50%'}}>\r\n              {\r\n                props.users.data.map((d: IMember, i: number) => {\r\n                  return(\r\n                    <Text key={'user' + i} className={'cur-p bdB p-3 mB-1' + (formData.members.indexOf(d._id) >= 0 ? ' bgc-blue-500 c-white' : '')} onClick={() => {\r\n                      if(formData.members.indexOf(d._id) >= 0){\r\n                        setFormData({\r\n                          ...formData,\r\n                          members: formData.members.filter(e => e !== d._id)\r\n                        });\r\n                      }else{\r\n                        let tMembers = formData.members;\r\n                        tMembers.push(d._id);\r\n                        setFormData({\r\n                          ...formData,\r\n                          members: tMembers\r\n                        });\r\n                      }\r\n                    }}>{d.name + (d.number ? '(' + d.number + ')' : '')}</Text>\r\n                  )\r\n                })\r\n              }\r\n              </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View className='mT-3 mB-3 pT-5 pB-5 ta-c'>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IVisitor } from '../models/home';\r\nimport { loadAll, enter, exit } from '../store/actions/visitor';\r\n\r\nimport Page from '../components/home/gatekeeper/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    homes: state.Homes,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, isActive, sCallback, fCallback)),\r\n    onEnter: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(enter(id, gateNo, callback)),\r\n    onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(exit(id, gateNo, callback))\r\n});\r\n\r\nexport const AllVisitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport VisitorsView from './visitors-view';\r\nimport { View } from '../../common/elements';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onEnter: (id: string, gateNo: string, callback: (result: boolean) => void) => void,\r\n  onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([] as Array<IVisitor>);\r\n  const [isActive, setIsActive] = useState(true);\r\n  \r\n  const loadData = () => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, '', isActive, (result: Array<IVisitor>) => {\r\n      setIsLoading(false);\r\n      setData(result);\r\n    }, (message: string) => {\r\n      setIsLoading(false);\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n  \r\n  const onActiveChange = () => {\r\n    setIsActive(!isActive);\r\n    loadData();\r\n  };\r\n\r\n  const onEnter = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Allow Visitor Entry',\r\n      message: 'Are you sure you wish to Allow the visitor to Enter?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onEnter(id, props.gateNo, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                let tData = data;\r\n                let foundIndex = tData.findIndex(v => v._id === id);\r\n                tData[foundIndex].isEntered = true;\r\n                tData[foundIndex].enteredBy = props.user.name;\r\n                tData[foundIndex].enteredAt = new Date();\r\n                setData(tData);\r\n                Toast.success('Visitor entered successfully.');\r\n              }else{\r\n                Toast.fail('Failed to allow the entry of visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const onExit = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Exit Visitor',\r\n      message: 'Are you sure you wish to exit visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onExit(id, props.gateNo, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                setData(data.filter(v => v._id !== id));\r\n                Toast.success('Visitor exit successfully.');\r\n              }else{\r\n                Toast.fail('Failed to exit visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Visitors', link: 'all-visitors'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <VisitorsView user={props.user} appUser={props.appUser} data={data} isActive={isActive} onActiveChange={onActiveChange} onEnter={onEnter} onExit={onExit} />\r\n            <Spinner visible={isLoading} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { INotification } from '../models/notification';\r\nimport { loadAll, push } from '../store/actions/notification';\r\nimport Page from '../components/home/manager/notification';\r\nimport { IUser } from '../models/user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, sCallback, fCallback)),\r\n    onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => dispatch(push(appClientId, data, user, callback))\r\n});\r\n\r\nexport const Notification = connect(mapStateToProps, mapDispatchToProps)(Page);","import { INotification } from '../../models/notification';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { IUser } from '../../models/user';\r\n\r\nlet controller: string = 'notification';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Notification.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const push = (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => (dispatch: any) => {  \r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback({\r\n        _id: result.data,\r\n        title: data.title,\r\n        body: data.body,\r\n        createdBy: user.name,\r\n        createdAt: new Date()\r\n      } as INotification);\r\n    }else{\r\n      callback(null);\r\n    }\r\n  }, data);\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { INotification } from '../../../models/notification';\r\nimport { isNN, isNNObject, onEnter } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\nimport RadioButton from '../../common/radio-button';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => void,\r\n  onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState([] as Array<INotification>);\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, (result: Array<INotification>) => {\r\n      setIsLoading(false);\r\n      setData(result);\r\n    }, (message: string) => {\r\n      setIsLoading(false);\r\n      Toast.fail(message);\r\n    });\r\n  }, []);\r\n  \r\n  const onPush = () => {\r\n    if(isNN(title) && isNN(body)){\r\n      confirmAlert({\r\n        title: 'Confirm to send push notification',\r\n        message: 'Are you sure? This notification will send to all users using this app in your Appartment. Are you sure you want to Push?',\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n              setIsLoading(true);\r\n              let notification = {\r\n                title: title,\r\n                body: body\r\n              } as INotification;\r\n              props.onPush(props.user.client._id, notification, props.user, (result: INotification | null) => {\r\n                setIsLoading(false);\r\n                if(isNNObject(result)){\r\n                  // data.unshift(result as INotification);\r\n                  setData([result as INotification, ...data]);\r\n                  setTitle('');\r\n                  setBody('');\r\n                  Toast.success('Notification pushed successfully.');\r\n                }else{\r\n                  Toast.fail('Failed to push Notification.');\r\n                }\r\n              });\r\n            }\r\n          },\r\n          {\r\n            label: 'No',\r\n            onClick: () => {}\r\n          }\r\n        ]\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Push.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Notification', link: 'notification'}]} />\r\n        <View className='bgc-white p-20'>\r\n        {isNN(props.user.client.config.notificationTypes) &&\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          {props.user.client.config.notificationTypes.map((d, i) => {\r\n            return(<RadioButton isActive={d === title} text={d} onPress={() => setTitle(d)} />);\r\n          })\r\n          }\r\n          <RadioButton isActive={!isNN(props.user.client.config.notificationTypes.filter((d, i) => d === title))} text='Other' onPress={() => setTitle('')} />\r\n        </View>\r\n        }\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' value={title} disabled={isNN(props.user.client.config.notificationTypes.filter((d, i) => d === title))} onChange={(event: any) => setTitle(event.target.value)} />\r\n        </View>\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <TextArea placeholder=\"Body\" className='form-control' value={body} onChange={(event: any) => setBody(event.target.value)}\r\n          onKeyPress={(e) => {\r\n            onEnter(e, onPush);\r\n          }} />\r\n        </View>\r\n        <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            className='mR-10'\r\n            title=\"PUSH\"\r\n            onPress={onPush}\r\n            />\r\n            <Button\r\n            title=\"CLEAR\"\r\n            onPress={() => {\r\n              setTitle('');\r\n              setBody('');\r\n            }}\r\n            />\r\n        </View>\r\n      {(isNN(data)) ?\r\n        data.map((d: INotification, i: number) => {\r\n          return(\r\n            <View key={i} className={'mT-5' + (i === 0 ? '' : ' bdT')}>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                  <Text className='fw-600'>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text className='fw-600'>{d.title}</Text>\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.body}</Text>\r\n              </View>\r\n              <View className='mT-3 mB-3 pT-5 pB-5'>\r\n                <Button title=\"Duplicate\" onPress={() => {\r\n                  setTitle(d.title);\r\n                  setBody(d.body);\r\n                }} />\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text className='p-20'>No notification found.</Text>\r\n      }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'outing';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getOutingResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getOutingResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    // Not Implemented\r\n        callback(false);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      console.log('result:', result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        outings.data.unshift(data);\r\n        dispatch(getOutingResult(outings.data, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    },data);\r\n  }\r\n};\r\n\r\nexport const retunBack = (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().delete(controller + '/return/' + id, (result: any, message: string) => {\r\n    debugger;\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      var foundIndex = outings.data.findIndex(d => d._id === id);\r\n      outings.data[foundIndex].isReturned = true;\r\n      outings.data[foundIndex].returnedAt = new Date();\r\n      dispatch(getOutingResult(outings.data, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getOutingResult = (data: Array<IOuting>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_OUTINGS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IOutings\r\n});","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/index';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { loadAll, retunBack } from '../store/actions/outing';\r\nimport Page from '../components/home/outings';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    data: state.Outings\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, homeId, callback)),\r\n    onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(retunBack(id, user, outings, callback))\r\n});\r\n\r\nexport const Outings = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Button from '../common/button';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateTimeString } from '../../util/convert';\r\nimport { ROLE } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\nimport Breadcrum from '../common/breadcrum';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  data: IOutings,\r\n  onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.client._id, props.appUser.role === ROLE.USER ? props.user.homes[props.appUser.homeIndex]._id : '', (result: boolean) => {\r\n      setIsLoading(false);\r\n      if(!result){\r\n        Toast.fail('Failed to load Door Locks.');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onReturnBack = (outingId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to open the door',\r\n      message: 'Are you sure? You want to open the door?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onReturnBack(outingId, props.user, props.data, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result){\r\n                Toast.success('Successfully opened the door.');\r\n              }else{\r\n                Toast.fail('Failed to open the door.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Door Locks', link: 'outings'}]} />\r\n          <View className='bgc-white p-20'>\r\n            {(props.appUser.role === ROLE.USER && (!isNNObject(props.data) || !isNN(props.data.data.filter(o => o.isReturned !== true)))) &&\r\n              <View className='ta-r'>\r\n                <Button\r\n                title='Lock The Door'\r\n                onPress={() => {\r\n                  props.history.push('new-outing')\r\n                }}\r\n                />\r\n              </View>\r\n            }\r\n            {\r\n              (isNNObject(props.data) && props.data.isUpToDate && !props.data.isError && isNN(props.data.data)) ?\r\n              props.data.data.map((d: IOuting, i: number) => {\r\n                return(\r\n                  <View key={\"o\" + d._id} className='bdB mT-5'>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text className='fw-600'>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                        <Text className='fw-600'>{toDateTimeString(d.fromDate) + \" to \" + toDateTimeString(d.toDate)}</Text>\r\n                    </View>\r\n                    {isNN(d.place) &&\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text className='fw-600'>{d.place}</Text>\r\n                    </View>\r\n                    }\r\n                    {isNN(d.address) &&\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text>{d.address}</Text>\r\n                    </View>\r\n                    }\r\n                    {d.isReturned &&\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text>{'Returned on ' + toDateTimeString(d.returnedAt)}</Text>\r\n                    </View>\r\n                    }\r\n                    {props.appUser.role !== ROLE.USER && \r\n                      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n                        <Text>No one in the house. Please take care.</Text>\r\n                      </View>\r\n                    }\r\n                    {(props.appUser.role === ROLE.USER && d.isReturned !== true) &&\r\n                      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n                        <Button title='Open The Door' onPress={() => {\r\n                          onReturnBack(d._id);\r\n                        }} />\r\n                      </View>\r\n                    }\r\n                  </View>\r\n                )\r\n              })\r\n              :\r\n              <Text className='p-20'>{(props.data.isUpToDate ? (props.data.isError ? props.data.errorMessage : \"No door lock found.\") : \"Loading...\")}</Text>\r\n            }\r\n            <Spinner visible={isLoading} />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { IOuting } from '../models/outing';\r\nimport { save } from '../store/actions/outing';\r\nimport Page from '../components/home/new-outing';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    outings: state.Outings\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(save(data, homeId, user, outings, callback))\r\n});\r\n\r\nexport const NewOuting = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { View, Text, TextInput, TextArea } from '../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { isNNObject, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  outings: IOutings,\r\n  onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void,\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [state, setState] = useState({\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    place: '',\r\n    address: '',\r\n    datePickerType: '',\r\n    datePickerDate: new Date()\r\n  });\r\n  \r\n  const onSave = () => {\r\n    // if(isNNObject(state.fromDate) && isNNObject(state.toDate) && isNN(state.place) && isNN(state.address)){\r\n    if(isNNObject(state.fromDate) && isNNObject(state.toDate)){\r\n        setIsLoading(true);\r\n        let outing = {\r\n          ////homeId: props.user.home[props.appUser.homeIndex].id,\r\n          _homeId: props.user.homes[props.appUser.homeIndex].number,\r\n          fromDate: state.fromDate,\r\n          toDate : state.toDate,\r\n          place: state.place,\r\n          address: state.address,\r\n          isReturned: false,\r\n          createdBy: props.user.name,\r\n          createdAt: new Date()\r\n        } as IOuting;\r\n        props.onSave(outing, props.user.homes[props.appUser.homeIndex]._id, props.user, props.outings, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setState({\r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              place: '',\r\n              address: '',\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Outing submitted successfully.');\r\n          }else{\r\n            Toast.fail('Failed to submit Outing.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before submit Outing.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Door Locks', link: 'outings'}, {title: 'New Door Lock', link: 'new-outing' }]} />\r\n        <View className='bgc-white p-20' style={{minHeight: 450}}>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='w-100'>From Date: </Text>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              setState({\r\n                ...state,\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={state.fromDate}\r\n            />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='w-100'>To Date: </Text>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              setState({\r\n                ...state,\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={state.toDate}\r\n            />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Title\" className='form-control' value={state.place} onChange={(event: any) => setState({...state, place: event.target.value})} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextArea placeholder=\"Description\" className='form-control' value={state.address} onChange={(event: any) => setState({...state, address: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, onSave);\r\n            }} />\r\n          </View>\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { actionTypes } from '../action-types';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user';\r\nimport { IDocument } from '../../models/document';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants';\r\n\r\nlet controller: string = 'document';\r\n\r\nexport const loadAll = (homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getDocumentResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getDocumentResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Documents.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // document.file = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          var foundIndex = documents.findIndex(d => d._id === result.data._id);\r\n          documents[foundIndex]._id = result.data._id;\r\n          ////documents[foundIndex].userId = data.userId;\r\n          ////documents[foundIndex].homeId = data.homeId;\r\n          documents[foundIndex].title = data.title;\r\n          documents[foundIndex].description = data.description;\r\n          documents[foundIndex].file = data.file;\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          documents.unshift({\r\n            _id: result.data._id,\r\n            ////userId: data.userId,\r\n            ////homeId: data.homeId,\r\n            title: data.title,\r\n            description: data.description,\r\n            file: data.file,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IDocument);\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      documents = documents.filter((d, i) => d._id !== id);\r\n      dispatch(getDocumentResult(documents, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getDocumentResult = (data: Array<IDocument>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_DOCUMENTS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IDocuments\r\n});","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IDocument } from '../models/document';\r\nimport { loadAll, save, remove } from '../store/actions/documents';\r\nimport { upload } from '../store/actions/file';\r\nimport Page from '../components/home/my-documents';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    homeIndex: state.AppUser.homeIndex,\r\n    user: state.User,\r\n    documents: state.Documents\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(homeId, callback)),\r\n    onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(save(homeId, data, homeIndex, user, documents, callback)),\r\n    onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(remove(id, documents, callback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(upload(data, callback))\r\n});\r\n\r\nexport const MyDocuments = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {  View, Text, TextInput, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IDocument } from '../../models/document';\r\nimport { FILE_BASE_PATH } from '../../constants';\r\nimport { isNN, generateUUID } from '../../util/index';\r\nimport { toDateString } from '../../util/convert';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  homeIndex: number,\r\n  user: IUser,\r\n  documents: IDocuments,\r\n  onLoad: (homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [state, setState] = useState({\r\n    id: '',\r\n      homeId: isNN(props.user.homes) ? props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    props.onLoad(props.user.homes[props.homeIndex]._id, (result: boolean) => {\r\n      setIsLoading(false);\r\n      if(!result){\r\n        Toast.fail('Failed to load Documents.');\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onFileSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        setIsLoading(true);\r\n        // upload file to api.\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        props.onUpload(data, (result: boolean, message: string) => {\r\n          setIsLoading(false);\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }else{\r\n            setState({\r\n              ...state,\r\n              fileName: fileName\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSave = () => {\r\n    if(isNN(state.title) && isNN(state.fileName)){\r\n      setIsLoading(true);\r\n        /*\r\n        let data = state.data;\r\n        data.id = state.id,\r\n        data.userId = props.user._id,\r\n        data.homeId = state.homeId;\r\n        data.title = state.title;\r\n        data.description = state.description;\r\n        data.createdBy = props.user._id;\r\n        data.createdOn = new Date();\r\n        */\r\n        \r\n        let document = {\r\n          _id: state.id,\r\n          title: state.title,\r\n          description: state.description,\r\n          file: state.fileName,\r\n          createdBy: props.user.name,\r\n          createdAt: new Date()\r\n        } as IDocument;\r\n        props.onSave(state.homeId, document, props.homeIndex, props.user, props.documents.data, (result: boolean) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n            setIsEdit(false);\r\n            onClear();\r\n            Toast.success('Document saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save document.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onClear = () => {\r\n    setState({\r\n      ...state,\r\n      id: '',\r\n      homeId: isNN(props.user.homes) ? props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n    });\r\n  };\r\n  \r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setIsLoading(true);\r\n            props.onRemove(id, props.documents.data, (result: boolean) => {\r\n              setIsLoading(false);\r\n              if(result === true){\r\n                Toast.success('Document removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove document.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'My Documents', link: 'my-documents'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' value={state.title} onChange={(event: any) => setState({...state, title: event.target.value})} />\r\n        </View>\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <TextArea placeholder=\"Description\" className='form-control' value={state.description} onChange={(event: any) => setState({...state, description: event.target.value})} />\r\n        </View>\r\n        {isNN(props.user.homes) &&\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n        <Text className='mR-10'>House:</Text>\r\n        {props.user.homes.map((h: IHome, i: number) => {\r\n          return(\r\n            <RadioButton isActive={h._id === state.homeId} text={h.number} key={'home' + i} onPress={() => setState({...state, homeId: h._id})} />\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n        }\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          {/* <Button\r\n              title='Select Document'\r\n              onPress={onImageSelect}\r\n              /> */}\r\n              <input type='file' name='file' placeholder='Select Document' onChange={onFileSelect}/>\r\n              {isNN(state.fileName) &&\r\n              <Text className='mL-15'>{state.fileName}</Text>\r\n              }\r\n        </View>\r\n        <View className='cur-p mT-3 mB-3 pT-5 pB-5'>\r\n            <Button\r\n            className='mR-10'\r\n            title='SAVE'\r\n            onPress={onSave}\r\n            />\r\n            <Button\r\n            title='CLEAR'\r\n            onPress={onClear}\r\n            />\r\n        </View>\r\n      {(props.documents.isUpToDate && !props.documents.isError && isNN(props.documents.data)) ?\r\n        props.documents.data.map((d: IDocument, i: number) => {\r\n          return(\r\n            <View key={i} className='bdB mT-5'>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                  <Text className='fw-600'>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text className='fw-600'>{d.title}</Text>\r\n              </View>\r\n              {isNN(d.description) &&\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              }\r\n              {isNN(props.user.homes.filter(ho => ho._id === d._id)) &&\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{'House: ' + props.user.homes.filter(ho => ho._id === d._id)[0].number}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.file) &&\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n              </View>\r\n              }\r\n              <View className='mT-1 mB-3 p-2'>\r\n                {/* <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                  setIsEdit(true);\r\n                  setState({\r\n                    ...state,\r\n                    id: d.id,\r\n                    homeId: d.homeId,\r\n                    title: d.title,\r\n                    description: d.description,\r\n                  });\r\n                }}>\r\n                    <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                  </span> */}\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    onRemove(d._id);\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-trash\"></i>\r\n                  </span>\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text className='p-20'>{props.documents.isUpToDate ? 'No document found.' : (props.documents.isError ?  props.documents.errorMessage : 'No document found.')}</Text>\r\n      }\r\n        <Spinner visible={isLoading} />\r\n      </View>\r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { actionTypes } from '../action-types';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { IBlock } from '../../models/block/block';\r\nimport { IUser } from '../../models/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util';\r\nimport { IHome } from '../../models/home';\r\nimport { IHomes } from '../../models/store/homes';\r\n\r\nlet controller: string = 'block';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getBlockResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getBlockResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, homes: Array<IHome>, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = blocks.findIndex(d => d._id === result.data);\r\n        blocks[foundIndex]._id = result.data;\r\n        blocks[foundIndex].name = data.name;\r\n        blocks[foundIndex].description = data.description;\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.blockId))\r\n      {\r\n        blocks.unshift({\r\n            _id: result.data.blockId,\r\n            name: data.name,\r\n            description: data.description,\r\n            createdBy: user.name\r\n          } as IBlock);\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        if(isNN(result.data.homes)){\r\n          result.data.homes.forEach((h: any) => {\r\n            h.memberIds = h.members;\r\n            delete h.members;\r\n          });\r\n          homes = homes.concat(result.data.homes);\r\n          dispatch(getHomesResult(homes, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      blocks = blocks.filter((d, i) => d._id !== id);\r\n      dispatch(getBlockResult(blocks, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { remove } from '../store/actions/block';\r\nimport Page from '../components/home/manager/blocks';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => dispatch(remove(id, blocks, callback))\r\n});\r\n\r\nexport const Blocks = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View,  TextInput, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  homes: IHomes,\r\n  onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const [isEdit, setIsEdit] = useState(false);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchResult, setSearchResult] = useState([] as Array<IBlock>);\r\n  const [searchResultIndex, setSearchResultIndex] = useState(10);\r\n\r\n  const onSearch = () => {\r\n    if(isNN(searchText) && props.blocks.isUpToDate && !props.blocks.isError && isNN(props.blocks.data)){\r\n      setSearchResult(props.blocks.data.filter(d => (d.name + '').toLocaleLowerCase().indexOf(searchText.toLowerCase()) >= 0));\r\n      setSearchResultIndex(10);\r\n    }else{\r\n        setSearchResult([]);\r\n        setSearchResultIndex(10);\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            let homes = (isNN(props.homes.data)) ? props.homes.data.filter(h => h._blockId === id) : [];\r\n            if(isNN(homes)){\r\n              let msg = '';\r\n              homes.map(h => {\r\n                msg += (msg.length > 0 ? ', ' : '') + h.number;\r\n              });\r\n              if(homes.length > 1){\r\n                msg = 'Houses ' + msg + ' are assigned under this block. Please move these houses to other block and try to delete';\r\n              }else{\r\n                msg = 'House ' + msg + ' is assigned under this block. Please move this house to other block and try to delete.';\r\n              }\r\n              Toast.fail(msg);\r\n            }else{\r\n              setIsLoading(true);\r\n              props.onRemove(id, props.blocks.data, (result: boolean) => {\r\n                setIsLoading(false);\r\n                if(result === true){\r\n                  onSearch();\r\n                  Toast.success('House removed successfully.');\r\n                }else{\r\n                  Toast.fail('Failed to remove house.');\r\n                }\r\n              });\r\n            }\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Blocks', link: 'blocks'}]} />\r\n        <View className='bgc-white p-20'>\r\n        <View>\r\n          <Text className='fl-r cur-p c-blue-500' onClick={() => props.history.push('edit-block/0')}>Add New</Text>\r\n        </View>\r\n        <View className='mB-3 pB-5'>\r\n          <TextInput type='text' placeholder=\"Search Block\" className='form-control mR-10 d-i' style={{width: 'calc(100% - 40px)'}} value={searchText} onChange={(event: any) => setSearchText(event.target.value)}\r\n          onKeyPress={(e) => {\r\n            onEnter(e, onSearch);\r\n          }} />\r\n          <span className='icon-holder cur-p' onClick={onSearch}>\r\n            <i className='ti-search pdd-right-10 fw-900'></i>\r\n          </span> \r\n        </View>\r\n        {isNN(searchResult) ?\r\n        searchResult.slice(0, searchResultIndex).map((d: IBlock, i: number) => {\r\n          return(\r\n            <View key={'block' + i} className='bdB mT-5'>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{'Name: ' + d.name}</Text>         \r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{'Description: ' + (isNN(d.description) ? d.description : '')}</Text>\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text className='mR-10'>Houses: </Text>\r\n                {\r\n                  (isNN(props.homes.data) && isNN(props.homes.data.filter(h => h._blockId === d._id))) ?\r\n                  props.homes.data.filter(h => h._blockId === d._id).map((h, i) => {\r\n                  return(<Link to={'edit-home/' + h._id} className='mR-10'>{h.number}</Link>)\r\n                  })\r\n                  :\r\n                  <Text>No house assigned under this block.</Text>\r\n                }\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n                  props.history.push('edit-block/' + d._id);////TODO\r\n                  // props.navigation.navigate('EditBlock', {id: d._id});\r\n                }}>\r\n                  <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n                </span>\r\n                <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    onRemove(d._id);\r\n                  }}>\r\n                  <i className=\"c-red-500 fa fa-trash\"></i>\r\n                </span>\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text className='p-20'>No block match with your search.</Text>\r\n      }\r\n      {(searchResult.length > searchResultIndex) &&\r\n      <View className='bdB mT-5'>\r\n        <View className='p-10'>\r\n          <Text className='fw-600 c-blue-500' onClick={() =>{\r\n            setSearchResultIndex(searchResultIndex + 10);\r\n          }}>Show More</Text>\r\n        </View>\r\n      </View>\r\n      }\r\n      <Spinner visible={isLoading} />\r\n  </View>\r\n  </View>\r\n  </View>\r\n  </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { IUser } from '../models/user';\r\nimport { IHome } from '../models/home';\r\nimport { save } from '../store/actions/block';\r\nimport Page from '../components/home/manager/edit-block';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, homes: Array<IHome>, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, blocks, homes, callback))\r\n});\r\n\r\nexport const EditBlock = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { View, TextInput } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { isNN, onEnter } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome } from '../../../models/home';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  homes: IHomes,\r\n  onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, homes: Array<IHome>, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [homeCount, setHomeCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let blockId = props.match.params.id; // props.navigation.state.params.id;\r\n    if(blockId.length > 0 && blockId !== '0' && props.blocks && isNN(props.blocks.data)){\r\n      let block = props.blocks.data.filter((d, i) => {\r\n        return d._id === blockId\r\n      });\r\n      if(isNN(block)){\r\n        setId(block[0]._id);\r\n        setName(block[0].name);\r\n        setDescription(block[0].description)\r\n      }\r\n    }\r\n  }, []);\r\n  \r\n  const onSave = () => {\r\n    if(isNN(name) && (isNN(id) || homeCount > 0)){\r\n      if(!isNN(props.blocks.data) || !isNN(props.blocks.data.filter(b => b.name === name))){\r\n        setIsLoading(true);\r\n        let block = {\r\n          _id: id,\r\n          name: name,\r\n          description: description\r\n        } as IBlock;\r\n        block = Object.assign(block, {\r\n          homeCount: homeCount\r\n        });\r\n        props.onSave(props.user.client._id, block, props.user, (props.blocks && props.blocks.data) ? props.blocks.data : [], (props.homes && props.homes.data) ? props.homes.data : [], (result: boolean, message: string) => {\r\n          setIsLoading(false);\r\n          if(result === true){\r\n              setId('');\r\n              setName('');\r\n              setDescription('');\r\n              setHomeCount(0);\r\n            Toast.success(isNN(id) ? 'Block saved successfully.' : 'Block saved and house(s) created successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save block.');\r\n          }\r\n        });\r\n      }else{\r\n        Toast.fail('Block with same name already exists. Please give different name.');\r\n      }\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n      <Breadcrum data={[{title: 'Blocks', link: 'blocks'}, {title: 'Edit Block', link: 'edit-block/0'}]} />\r\n      <View className='bgc-white p-20'>\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <TextInput type='text' placeholder=\"Name\" className='form-control' value={name} onChange={(event: any) => setName(event.target.value)} />\r\n        </View>\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <TextInput type='text' placeholder=\"Description\" className='form-control' value={description} onChange={(event: any) => setDescription(event.target.value)}\r\n          onKeyPress={(e) => {\r\n            onEnter(e, onSave);\r\n          }} />\r\n        </View>\r\n        {!isNN(id) &&\r\n        <View className='mT-3 mB-3 pT-5 pB-5'>\r\n          <TextInput type='number' placeholder=\"Number of houses in this block\" className='form-control' value={homeCount > 0 ? homeCount + '' : ''} onChange={(event: any) => setHomeCount(+(event.target.value.replace(/[^0-9]/g, '')))} />\r\n        </View>\r\n        }\r\n        <View className='mT-3 mB-3 pT-5 pB-5 ta-c'>\r\n          <Button\r\n          title=\"SAVE\"\r\n          onPress={onSave}\r\n          />\r\n        </View>\r\n      </View>\r\n      <Spinner visible={isLoading} />\r\n    </View>\r\n    </View>\r\n    </View>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport { View, ScrollView, TextInput, Text, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome } from '../../../models/home';\r\nimport { isNN } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\nimport { MONTH } from '../../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [amount, setAmount] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [month, setMonth] = useState(new Date().getMonth());\r\n  const [year, setYear] = useState(new Date().getFullYear());\r\n  const [searchText, setSearchText] = useState('');\r\n  const [showHomes, setShowHomes] = useState(false);\r\n  const [isAllHome, setIsAllHome] = useState(false);\r\n  const [homes, setHomes] = useState([] as Array<IHome>);\r\n\r\n  const onSave = () => {\r\n    if(amount > 0 && (isAllHome || homes.length > 0)){\r\n      let homeIds = [] as any;\r\n      homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        amount: amount,\r\n        description: description,\r\n        month: month,\r\n        year: year,\r\n        isAllHome: isAllHome,\r\n        homes: homeIds\r\n      };\r\n      setIsLoading(true);\r\n      props.onSave(props.user.client._id, data, props.user, (result: boolean, message: string) => {\r\n        setIsLoading(false);\r\n        if(result === true){\r\n          // props.navigation.navigation.goBack(null);\r\n          onClear();\r\n          Toast.success('Payment saved successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to save payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Save.');\r\n    }\r\n  };\r\n\r\n  const onClear = () => {\r\n    setAmount(0);\r\n    setDescription('');\r\n    setMonth(new Date().getMonth());\r\n    setYear(new Date().getFullYear());\r\n    setSearchText('');\r\n    setShowHomes(false);\r\n    setIsAllHome(false);\r\n    setHomes([]);\r\n  };\r\n\r\n    return(\r\n        <View className='pL-15 pR-15'>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Amount\" className='form-control' value={amount > 0 ? amount + '' : ''} onChange={(event: any) => setAmount(+(event.target.value.replace(/[^0-9]/g, '')))} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mT-15'>{'Payment for ' + year + ' '}</Text>\r\n            <Picker\r\n              className='form-control'\r\n              value={month}\r\n              onChange={(event: any) => setMonth(event.target.value)}>\r\n              {\r\n                MONTH.filter((m, i) => m.value <= new Date().getMonth()).map((m: any, i: number) => {\r\n                  return(<option key={'month' + i} value={m.value}>{m.title}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextArea placeholder=\"Description\" className='form-control' value={description} onChange={(event: any) => setDescription(event.target.value)} />\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mR-15'>{'Apply to House(s): ' + (isAllHome ? '' : homes.length)}</Text>\r\n            <Checkbox isActive={isAllHome} text='All Homes' onPress={() => setIsAllHome(!isAllHome)} />\r\n          </View>\r\n          {!isAllHome &&\r\n          <ScrollView className='mT-3 mB-3 pT-5 pB-5 ov-s'>\r\n                {\r\n                  homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='cur-p mR-6 c-blue-500'\r\n                      key={'ho' + i}\r\n                      onClick={() => {\r\n                        setHomes(homes.filter((h, i) => h._id !== d._id));\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n          }\r\n          {!isAllHome &&\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Enter House Number\" className='form-control p-6 bd bdrs-5'\r\n            value={searchText} \r\n            onChange={(event: any) => {\r\n              setShowHomes(true);\r\n              setSearchText(event.target.value)\r\n            }} />\r\n          </View>\r\n          }\r\n            {(!isAllHome && showHomes && isNN(searchText) && props.homes && props.homes.data.length > 0 ) &&\r\n              <ScrollView className='mT-3 mB-3 pT-5 pB-5 ov-s'>\r\n                {\r\n                  props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(searchText.toLowerCase()) >= 0 && (homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='cur-p mR-6'\r\n                      key={'ho' + i}\r\n                      onClick={() => {\r\n                        let tHomes = homes;\r\n                        tHomes.push(d);\r\n                        setHomes(tHomes);\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n              </ScrollView>\r\n            }\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n              <Button\r\n              className='mR-10'\r\n              title=\"SAVE\"\r\n              onPress={onSave}\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={onClear}\r\n              />\r\n          </View>\r\n          <Spinner visible={isLoading} />\r\n        </View>\r\n    );\r\n};","import React, {useState} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Text, TextInput, ScrollView, TextArea } from '../../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IPayment } from '../../../models/home';\r\nimport { MONTH } from '../../../constants';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN } from '../../../util';\r\nimport Toast from '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [state, setState] = useState({\r\n    isLoading: false,\r\n    isShowSearch: true,\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    datePickerType: '',\r\n    datePickerDate: new Date(),\r\n    homes: [] as Array<IHome>,\r\n    searchText: '',\r\n    showHomes: false,\r\n    data: [] as Array<IPayment>,\r\n    isShowUpdateModel: false,\r\n    uPaymentId: '',\r\n    uAmount: 0,\r\n    uDescription: ''\r\n  });\r\n\r\n  const onSearch = () => {\r\n    if(state.fromDate && state.toDate){\r\n      let homeIds = [] as any;\r\n      state.homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        fromDate: state.fromDate,\r\n        toDate: state.toDate,\r\n        homes: homeIds\r\n      };\r\n      setState({\r\n        ...state,\r\n        isLoading: true\r\n      });\r\n      props.onSearch(props.user.client._id, data, props.user, (result: Array<IPayment>) => {\r\n        setState({\r\n          ...state,\r\n          isLoading: false,\r\n          isShowSearch: false,\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        setState({\r\n          ...state,\r\n          isLoading: false,\r\n        });\r\n        Toast.fail(message ? message : 'Failed to load payment.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Search.');\r\n    }\r\n  };\r\n\r\n  const onUpdate = () => {\r\n    if(isNN(state.uPaymentId) && state.uAmount > 0){\r\n      let data = {\r\n        amount: state.uAmount,\r\n        description: state.uDescription,\r\n      };\r\n      setState({\r\n        ...state,\r\n        isLoading: true\r\n      });\r\n      props.onUpdate(state.uPaymentId, data, props.user, (result: boolean, message: string) => {\r\n        setState({\r\n          ...state,\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          // props.navigation.navigation.goBack(null);\r\n          let pData = state.data;\r\n          var foundIndex = pData.findIndex(d => d._id === state.uPaymentId);\r\n          pData[foundIndex].amount = state.uAmount;\r\n          pData[foundIndex].description = state.uDescription;\r\n          setState({\r\n            ...state,\r\n            isShowUpdateModel: false,\r\n            uPaymentId: '',\r\n            uAmount: 0,\r\n            uDescription: '',\r\n            data: pData\r\n          });\r\n          Toast.success('Payment updated successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to update payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before update.');\r\n    }\r\n  };\r\n\r\n    return(\r\n        <View className='pL-15 pR-15'>\r\n          {state.isShowSearch ?\r\n          <View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                setState({\r\n                  ...state,\r\n                  fromDate: date\r\n                });\r\n              }}\r\n              value={state.fromDate}\r\n              />\r\n            </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                setState({\r\n                  ...state,\r\n                  toDate: date\r\n                });\r\n              }}\r\n              value={state.toDate}\r\n              />\r\n          </View>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mR-15'>{'House(s): ' + (state.homes.length > 0 ? state.homes.length : 'All')}</Text>\r\n          </View>\r\n            <ScrollView className='mT-3 mB-3 pT-5 pB-5 ov-s'>\r\n                {\r\n                  state.homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='cur-p mR-6 c-blue-500'\r\n                      key={'ho' + i}\r\n                      onClick={() => {\r\n                        setState({\r\n                          ...state,\r\n                          homes: state.homes.filter((h, i) => h._id !== d._id)\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <TextInput type='text' placeholder=\"Enter House Number\" className='form-control p-6 bd bdrs-5'\r\n            value={state.searchText} \r\n            onChange={(event: any) => setState({...state, showHomes: true, searchText: event.target.value})} />\r\n          </View>\r\n            {(state.showHomes && isNN(state.searchText) && props.homes && props.homes.data.length > 0 ) &&\r\n            <ScrollView className='mT-3 mB-3 pT-5 pB-5 ov-s'>\r\n                {\r\n                  props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(state.searchText.toLowerCase()) >= 0 && (state.homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='cur-p mR-6'\r\n                      key={'ho' + i}\r\n                      onClick={() => {\r\n                        let homes = state.homes;\r\n                        homes.push(d);\r\n                        setState({\r\n                          ...state,\r\n                          homes: homes\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            }\r\n            <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n                <Button\r\n                title=\"SEARCH\"\r\n                onPress={onSearch}\r\n                />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View>\r\n             <Text \r\n             className='fl-r cur-p c-blue-500 fw-600 ta-c'\r\n             onClick={() => {\r\n               setState({\r\n                ...state,\r\n                 isShowSearch: true\r\n               });\r\n             }}>Show Search</Text>\r\n          </View>\r\n          }\r\n          <View>\r\n            {(isNN(state.data)) ?\r\n              state.data.map((d: IPayment, i: number) => {\r\n                return(\r\n                  <View key={i} className='bdB mT-5'>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                        <Text className='fw-600'>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View className='mT-1 mB-3 p-2'>\r\n                      <Text className='fw-600'>{'Rs.' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                    </View>\r\n                    {isNN(d.description) &&\r\n                      <View className='mT-1 mB-3 p-2'>\r\n                        <Text>{d.description}</Text>\r\n                      </View>\r\n                    }\r\n                    <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n                      <Button title=\"Update\" onPress={() => {\r\n                        setState({\r\n                          ...state,\r\n                          isShowUpdateModel: true,\r\n                          uPaymentId: d._id,\r\n                          uAmount: d.amount,\r\n                          uDescription: d.description\r\n                        });\r\n                      }} />\r\n                    </View>\r\n                  </View>\r\n                )\r\n              })\r\n              :\r\n              <Text className='p-20'>No payment found.</Text>\r\n            }\r\n          </View>\r\n          <Modal\r\n          open={state.isShowUpdateModel}\r\n          onClose={() => {\r\n            setState({\r\n              ...state,\r\n              isShowUpdateModel: false,\r\n              uPaymentId: '',\r\n              uAmount: 0,\r\n              uDescription: ''\r\n            });\r\n          }}>\r\n          <View className='mT-30 mB-25 mL-15 mR-15'>\r\n            <View>\r\n              <View className='mT-3 mB-3 pT-5 pB-5'>\r\n                <TextInput type='text' placeholder=\"Amount\" className='form-control' value={state.uAmount > 0 ? state.uAmount + '' : ''} onChange={(event: any) => setState({...state, uAmount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View className='mT-3 mB-3 pT-5 pB-5'>\r\n                <TextArea placeholder=\"Description\" className='form-control' value={state.uDescription} onChange={(event: any) => setState({...state, uDescription: event.target.value})} />\r\n              </View>\r\n              <View className='cur-p mT-3 mB-3 pT-5 pB-5'>\r\n                  <Button\r\n                  className='mR-10'\r\n                  title=\"SAVE\"\r\n                  onPress={onUpdate}\r\n                  />\r\n                  <Button\r\n                  title=\"CLEAR\"\r\n                  onPress={() => {\r\n                    setState({\r\n                      ...state,\r\n                      uAmount: 0,\r\n                      uDescription: ''\r\n                    });\r\n                  }}\r\n                  />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n          <Spinner visible={state.isLoading} />\r\n        </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IPayment } from '../models/home';\r\nimport { loadAll, save, search, updatePay } from '../store/actions/payment';\r\nimport Page from '../components/home/manager/payment';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, homeId, sCallback, fCallback)),\r\n    onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, callback)),\r\n    onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(search(appClientId, data, user, sCallback, fCallback)),\r\n    onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updatePay(id, data, user, callback))\r\n});\r\n\r\nexport const Payment = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState} from 'react';\r\nimport { View } from '../../common/elements';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IPayment } from '../../../models/home';\r\nimport PaymentForm from './payment-form';\r\nimport PaymentHistory from './payment-history';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  // const [history, setHistory] = useState([] as Array<IPayment>);\r\n\r\n  // useEffect(() => {\r\n  //   props.onLoad(props.user.client._id, '', (result: Array<IPayment>) => {\r\n  //     if(isNN(result)){\r\n  //       setHistory(result);\r\n  //     }\r\n  //   }, (message: string) => {\r\n  //     Toast.fail(message ? message : 'Failed to load Payments.');\r\n  //   });\r\n  // }, []);\r\n  \r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Payment', link: 'payment'}]} />\r\n        <View className='bgc-white p-20'>\r\n          <View className='tab-bar'>\r\n            <span className={'tab' + (activeTab === 1 ? ' active': '')} onClick={() => setActiveTab(1)}>\r\n              NEW\r\n            </span>\r\n            <span className={'tab' + (activeTab === 2 ? ' active': '')} onClick={() => setActiveTab(2)}>\r\n              HISTORY\r\n            </span>\r\n          </View>\r\n          <View className='tab-content p-15'>\r\n            {\r\n              activeTab === 1 ? \r\n                <PaymentForm history={props.history} appUser={props.appUser} user={props.user} homes={props.homes} onSave={props.onSave} />\r\n              :\r\n                <PaymentHistory history={props.history} appUser={props.appUser} user={props.user} homes={props.homes} onSearch={props.onSearch} onUpdate={props.onUpdate} />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IBlock } from '../../../../models/block';\r\nimport { IHome } from '../../../../models/home';\r\n\r\ninterface IProps {\r\n  blocks: IBlocks,\r\n  data: IHome\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  let { blocks, data } = props;\r\n  let blockName = '';\r\n  if(data && isNN(data._id) && blocks && blocks.isUpToDate && !blocks.isError && blocks.data){\r\n    let block = blocks.data.filter((d: IBlock, i: number) => d._id === data._blockId);\r\n    if(block && block.length > 0){\r\n      blockName = block[0].name;\r\n    }\r\n  }\r\n  return(\r\n    (data && isNN(data._id)) ?\r\n    <View>\r\n      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n        <Text>{'Block: ' + blockName}</Text>\r\n      </View>\r\n      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n        <Text>{'Number: ' + data.number}</Text>\r\n      </View>\r\n      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n        <Text>{'Address: ' + data.address}</Text>\r\n      </View>\r\n      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n        <Text>{'No of bed room(s): ' + data.bedRoom}</Text>\r\n      </View>\r\n      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n        <Text>{'Parking: ' + data.parking}</Text>\r\n      </View>\r\n      <View className='mT-3 mB-3 pT-5 pB-5'>\r\n        <Text>{'Description: ' + data.description}</Text>\r\n      </View>\r\n    </View>\r\n    :\r\n    <Text>No data found.</Text>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { IUser } from '../../../../models/user';\r\nimport { IMember } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { APPTYPE } from '../../../../constants';\r\nimport { isNN } from '../../../../util/index';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [data, setData] = useState([] as Array<IMember>);\r\n\r\n  useEffect(() => {\r\n    if(props.homeId.length > 0){\r\n      props.onToggleLoading(true);\r\n      props.onLoad(props.homeId, (result: Array<IMember>) => {\r\n        props.onToggleLoading(false);\r\n        setData(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Members.');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return(\r\n    <View>\r\n    <View className='ta-c mT-1 mB-3 p-2'>\r\n      <Text className='c-blue-700 fw-600 mB-10'>Members</Text>\r\n    </View>\r\n      {isNN(data) ?\r\n        data.map((d: IMember, i: number) => {\r\n        return(\r\n          <View key={i} className='bdB mT-5'>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text className='fw-600'>{(isNN(d.createdBy) ? d.createdBy : '') + ' on ' + toDateString(d.createdAt)}</Text>\r\n            </View>\r\n            {(props.user.client.config.appType == APPTYPE.QUARTERS && isNN(d.number)) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.name}</Text>\r\n            </View>\r\n            }\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.name}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n            </View>\r\n            {isNN(d.mobileNo) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.mobileNo}</Text>\r\n            </View>\r\n            }\r\n            {isNN(d.emailId) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.emailId}</Text>\r\n            </View>\r\n            }\r\n            {(isNN(d.relationship) || isNN(d.otherRelationship)) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{(isNN(d.relationship) && d.relationship != 'Other') ? d.relationship : (isNN(d.otherRelationship) ? d.otherRelationship : 'Other')}</Text>\r\n            </View>\r\n            }\r\n            {props.user.client.config.appType == APPTYPE.APARTMENT &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.type}</Text>\r\n            </View>\r\n            }\r\n          </View>\r\n          );\r\n      })\r\n      :\r\n      <Text>No data found.</Text>\r\n    }\r\n    </View>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IVehicle } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [data, setData] = useState([] as Array<IVehicle>);\r\n\r\n  useEffect(() => {\r\n    if(props.homeId.length > 0){\r\n      props.onToggleLoading(true);\r\n      props.onLoad(props.homeId, (result: Array<IVehicle>) => {\r\n        props.onToggleLoading(false);\r\n        setData(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  }, []);\r\n  \r\n  return(\r\n    <View>\r\n      <View className='ta-c mT-1 mB-3 p-2'>\r\n        <Text className='c-blue-700 fw-600 mB-10'>Vehicles</Text>\r\n      </View>\r\n      {isNN(data) ? \r\n        data.map((d: IVehicle, i: number) => {\r\n        return(\r\n          <View key={i} className='bdB mT-5'>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text className='fw-600'>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.type}</Text>                  \r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.number}</Text>\r\n            </View>\r\n          </View>\r\n          );\r\n      })\r\n      :\r\n      <Text>No data found.</Text>\r\n    }\r\n    </View>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IServant, ITakeaway } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateTimeString } from '../../../../util/convert';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [data, setData] = useState([] as Array<IServant>);\r\n  const [viewId, setViewId] = useState('');\r\n  const [takeaways, setTakeaways] = useState([] as Array<ITakeaway>);\r\n\r\n  useEffect(() => {\r\n    if(props.homeId.length > 0){\r\n      props.onToggleLoading(true);\r\n      props.onLoad(props.homeId, (result: Array<IServant>) => {\r\n        props.onToggleLoading(false);\r\n        setData(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Servants.');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n const onView = (id: string, takeaways: Array<ITakeaway>) => {\r\n    if(viewId === id){\r\n      setViewId('');\r\n      setTakeaways([]);\r\n    }else{\r\n      setViewId(id);\r\n      setTakeaways(takeaways);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <View>\r\n      <View className='ta-c mT-1 mB-3 p-2'>\r\n        <Text className='c-blue-700 fw-600 mB-10'>Servants</Text>\r\n      </View>\r\n      {isNN(data) ?\r\n        data.map((d: IServant, i: number) => {\r\n        return(\r\n          <View key={i} className='bdB mT-5'>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text className='fw-600'>{d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.name}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n            </View>\r\n            {isNN(d.mobileNo) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.mobileNo}</Text>\r\n            </View>\r\n            }\r\n            {isNN(d.emailId) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.emailId}</Text>\r\n            </View>\r\n            }\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <span onClick={() => {\r\n                onView(d._id, d.takeaways);\r\n              }}>\r\n                <Text className='cur-p c-blue-500'>{(viewId === d._id ? 'Hide' : 'View') + ' Takeaways'}</Text>\r\n              </span>\r\n            </View>\r\n            {viewId === d._id &&\r\n            <View className='mT-5 mB-5'>\r\n              <View>\r\n                <Text className='fw-600'>Takeaways</Text>\r\n              </View>\r\n              <View className='p-15'>\r\n                {isNN(takeaways) ?\r\n                  takeaways.map((e: ITakeaway, j: number) => {\r\n                    return(\r\n                    <View key={'tkycmt' + j} className={'pL-3 pR-3 pT-5 pB-5' + (j === 0 ? '' : ' bdT')}>\r\n                      <View>\r\n                        <Text className='fw-600'>{e.createdBy + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                      </View>\r\n                      <View>\r\n                        <Text>{e.title}</Text>\r\n                      </View>\r\n                      <View>\r\n                        <Text>{e.description}</Text>\r\n                      </View>\r\n                      {\r\n                        e.isExit ?\r\n                      <View>\r\n                        <Text className='c-green-600'>{'Exit by ' + e.exitBy + ' in Gate ' + e.exitGateNo + ' on ' + toDateTimeString(e.exitAt)}</Text>\r\n                      </View>\r\n                      :\r\n                      <View>\r\n                        <Text className='c-red-600'>Still not exit.</Text>\r\n                      </View>\r\n                      }\r\n                    </View>\r\n                    )\r\n                  })\r\n                  :\r\n                  <Text className='p-20'>No takeaway found.</Text>\r\n                }\r\n              </View>\r\n            </View>\r\n            }\r\n          </View>\r\n          );\r\n      })\r\n      :\r\n      <Text>No data found.</Text>\r\n    }\r\n    </View>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { ITicket } from '../../../../models/home';\r\nimport { ITicketComment } from '../../../../models/home/ticket-comment';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateTimeString } from '../../../../util/convert';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [data, setData] = useState([] as Array<ITicket>);\r\n  const [viewId, setViewId] = useState('');\r\n  const [comments, setComments] = useState([] as Array<ITicketComment>);\r\n\r\n  useEffect(() => {\r\n    if(props.homeId.length > 0){\r\n      props.onToggleLoading(true);\r\n      props.onLoad(props.homeId, (result: Array<ITicket>) => {\r\n        props.onToggleLoading(false);\r\n        setData(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(viewId === id){\r\n      setViewId('');\r\n      setComments([]);\r\n    }else{\r\n      setViewId(id);\r\n      setComments(comments);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <View>\r\n      <View className='ta-c mT-1 mB-3 p-2'>\r\n        <Text className='c-blue-700 fw-600 mB-10'>Tickets</Text>\r\n      </View>\r\n      {isNN(data) ?\r\n        data.map((d: ITicket, i: number) => {\r\n        return(\r\n          <View key={'tkt' + i} className='bdB mT-5'>\r\n           <View className='mT-1 mB-3 p-2'>\r\n              <Text className='fw-600'>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.title}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.description}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.status}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <span onClick={() => {\r\n                onView(d._id, d.comments);\r\n              }}>\r\n                <Text className='cur-p c-blue-500'>{(viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n              </span>\r\n            </View>\r\n            {viewId === d._id &&\r\n            <View className='mT-5 mB-5'>\r\n              <View>\r\n                <Text className='fw-600'>Comments</Text>\r\n              </View>\r\n              <View className='p-15'>\r\n                {isNN(comments) ?\r\n                  comments.map((e: ITicketComment, j: number) => {\r\n                    return(\r\n                    <View key={'tkycmt' + j} className={'pL-3 pR-3 pT-5 pB-5' + (j === 0 ? '' : ' bdT')}>\r\n                      <View>\r\n                        <Text className='fw-600'>{e.createdByName + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                      </View>\r\n                      <View>\r\n                        <Text>{e.comment}</Text>\r\n                      </View>\r\n                    </View>\r\n                    )\r\n                  })\r\n                  :\r\n                  <Text className='p-20'>No comment found.</Text>\r\n                }\r\n              </View>\r\n            </View>\r\n            }\r\n          </View>\r\n          );\r\n      })\r\n      :\r\n      <Text>No data found.</Text>\r\n    }\r\n    </View>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IVisitor } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUser } from '../../../../models/user';\r\nimport VisitorsView from '../../gatekeeper/visitors-view';\r\nimport { View, Text } from '../../../common/elements';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [data, setData] = useState([] as Array<IVisitor>);\r\n  const [isActive, setIsActive] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = () => {\r\n    if(props.homeId.length > 0){\r\n      props.onToggleLoading(true);\r\n      props.onLoad(props.homeId, isActive, (result: Array<IVisitor>) => {\r\n        props.onToggleLoading(false);\r\n        setData(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Visitors.');\r\n      });\r\n    }\r\n  };\r\n  \r\n  const onActiveChange = () => {\r\n    setIsActive(!isActive);\r\n    loadData();\r\n  };\r\n\r\n  return(\r\n    <View>\r\n      <View className='ta-c mT-1 mB-3 p-2'>\r\n        <Text className='c-blue-700 fw-600 mB-10'>Visitors</Text>\r\n      </View>\r\n      <VisitorsView data={data} isActive={isActive} user={props.user} appUser={props.appUser} onActiveChange={onActiveChange} />\r\n    </View>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IPayment } from '../../../../models/home';\r\nimport { ITransaction } from '../../../../models/home/transaction';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { MONTH } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [data, setData] = useState([] as Array<IPayment>);\r\n  const [viewId, setViewId] = useState('');\r\n  const [transactions, setTransactions] = useState([] as Array<ITransaction>);\r\n  \r\n  useEffect(() => {\r\n    if(props.homeId.length > 0){\r\n      props.onToggleLoading(true);\r\n      props.onLoad(props.homeId, (result: Array<IPayment>) => {\r\n        props.onToggleLoading(false);\r\n        setData(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Payments.');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onView = (id: string, transactions: Array<ITransaction>) => {\r\n    if(viewId === id){\r\n      setViewId('');\r\n      setTransactions([]);\r\n    }else{\r\n      setViewId(id);\r\n      setTransactions(transactions);\r\n    }\r\n  };\r\n\r\n  const getAmountPaid = (transactions: Array<ITransaction>) => {\r\n    let amount = 0;\r\n    if(isNN(transactions)){\r\n      transactions.filter((d: ITransaction, i: number) => d.isSuccess === true).map((d:ITransaction, i: number) => amount += d.amount);\r\n    }\r\n    return amount;\r\n  };\r\n\r\n  return(\r\n    <View>\r\n      <View className='ta-c mT-1 mB-3 p-2'>\r\n        <Text className='c-blue-700 fw-600 mB-10'>Payments</Text>\r\n      </View>\r\n      {isNN(data) ?\r\n        data.map((d: IPayment, i: number) => {\r\n        return(\r\n          <View key={i} className='bdB mT-5'>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                    <Text className='fw-600'>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Rs. ' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                </View>\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <Text>{'Amount Paid Rs. ' + getAmountPaid(d.transactions)}</Text>\r\n                </View>\r\n                {isNN(d.description) &&\r\n                  <View className='mT-1 mB-3 p-2'>\r\n                    <Text>{d.description}</Text>\r\n                  </View>\r\n                }\r\n                <View className='mT-1 mB-3 p-2'>\r\n                  <span onClick={() => {\r\n                    onView(d._id, d.transactions);\r\n                  }}>\r\n                    <Text className='cur-p c-blue-500'>{(viewId === d._id ? 'Hide' : 'View') + ' Transactions'}</Text>\r\n                  </span>\r\n                </View>\r\n                {viewId === d._id &&\r\n                <View className='mT-5 mB-5'>\r\n              <View className='bdB'>\r\n                <Text className='fw-600'>Transactions</Text>\r\n              </View>\r\n              <View className='mT-3'>\r\n                {isNN(transactions) ?\r\n                  transactions.map((e: ITransaction, j: number) => {\r\n                    return(\r\n                    <View key={'tktcmt' + j} className={'pL-3 pR-3 pT-5 pB-5' + (j === 0 ? '' : ' bdT')}>\r\n                      <View className='fw-600'>\r\n                        <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                      </View>\r\n                      <View>\r\n                        <Text>{'Ref Id: ' + e.txnRef}</Text>\r\n                      </View>\r\n                      <View>\r\n                        <Text>{'Txn Id: ' + e.txnId}</Text>\r\n                      </View>\r\n                      <View>\r\n                        <Text>{'Amount: ' + e.amount}</Text>\r\n                      </View>\r\n                      <View>\r\n                        <Text>{'Status: ' + (e.isSuccess ? 'SUCCESS' : 'FAILED')}</Text>\r\n                      </View>\r\n                      {\r\n                        isNN(e.reason) &&\r\n                        <View>\r\n                          <Text>{'Reason: ' + e.reason}</Text>\r\n                        </View>\r\n                      }\r\n                    </View>\r\n                    )\r\n                  })\r\n                  :\r\n                  <Text className='p-20'>No transaction found.</Text>\r\n                }\r\n              </View>\r\n            </View>\r\n            }\r\n              </View>\r\n          );\r\n      })\r\n      :\r\n      <Text>No data found.</Text>\r\n    }\r\n    </View>\r\n  );\r\n};","import React, {useState, useEffect} from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { FILE_BASE_PATH } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [data, setData] = useState([] as Array<IDocument>);\r\n  \r\n  useEffect(() => {\r\n    if(props.homeId.length > 0){\r\n      props.onToggleLoading(true);\r\n      props.onLoad(props.homeId, (result: Array<IDocument>) => {\r\n        props.onToggleLoading(false);\r\n        setData(result);\r\n      }, (message: string) => {\r\n        props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return(\r\n    <View>\r\n      <View className='ta-c mT-1 mB-3 p-2'>\r\n        <Text className='c-blue-700 fw-600 mB-10'>Documents</Text>\r\n      </View>\r\n      {isNN(data) ?\r\n        data.map((d: IDocument, i: number) => {\r\n        return(\r\n          <View key={i} className='bdB mT-5'>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text className='fw-600'>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n            </View>\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text className='fw-600'>{d.title}</Text>\r\n            </View>\r\n            {isNN(d.description) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>{d.description}</Text>\r\n            </View>\r\n            }\r\n            {isNN(d.file) &&\r\n            <View className='mT-1 mB-3 p-2'>\r\n            <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n            </View>\r\n            }\r\n          </View>\r\n          );\r\n      })\r\n      :\r\n      <Text>No data found.</Text>\r\n    }\r\n    </View>\r\n  );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHome, IMember, IVehicle, IServant, ITicket, IPayment, IVisitor } from '../models/home';\r\nimport { IDocument } from '../models/document';\r\nimport { load } from '../store/actions/home';\r\nimport { loadAllByHome as loadMembers} from '../store/actions/member';\r\nimport { loadAllByHome as loadVehicles } from '../store/actions/vehicle';\r\nimport { loadAllByHome as loadServants } from '../store/actions/servant';\r\nimport { loadAllByHome as loadTickets } from '../store/actions/ticket';\r\nimport { loadAll as loadVisitors } from '../store/actions/visitor';\r\nimport { loadAll as loadPayments } from '../store/actions/payment';\r\nimport { loadAllByHome as loadDocuments } from '../store/actions/documents';\r\nimport Page from '../components/home/manager/view-home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadMembers(homeId, sCallback, fCallback)),\r\n    onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => dispatch(loadVehicles(homeId, sCallback, fCallback)),\r\n    onLoadServants: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => dispatch(loadServants(homeId, sCallback, fCallback)),\r\n    onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => dispatch(loadTickets(homeId, sCallback, fCallback)),\r\n    onLoadVisitors: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => dispatch(loadVisitors('', homeId, isActive, sCallback, fCallback)),\r\n    onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadPayments('', homeId, sCallback, fCallback)),\r\n    onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => dispatch(loadDocuments(homeId, sCallback, fCallback))\r\n});\r\n\r\nexport const ViewHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { View } from '../../../common/elements';\r\nimport Spinner from '../../../common/spinner';\r\nimport Breadcrum from '../../../common/breadcrum';\r\nimport { IUser } from '../../../../models/user/user';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUsers } from '../../../../models/store/users';\r\nimport { IHomes } from '../../../../models/store/homes';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IHome, IMember, IVehicle, IServant, ITicket, IVisitor, IPayment } from '../../../../models/home';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from  '../../../../util/toast';\r\nimport { isNN } from '../../../../util/index';\r\nimport Info from './info';\r\nimport Members from './members';\r\nimport Vehicles from './vehicles';\r\nimport Servants from './servants';\r\nimport Tickets from './tickets';\r\nimport Visitors from './visitors';\r\nimport Payments from './payments';\r\nimport Documents from './documents';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadServants: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVisitors: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [homeId, setHomeId] = useState('');\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const [data, setData] = useState({} as IHome);\r\n\r\n  useEffect(() => {\r\n    let homeId = props.match.params.id; // props.navigation.state.params.id;\r\n    setHomeId(homeId);\r\n    if(homeId.length > 0){\r\n      setIsLoading(true);\r\n      props.onLoad(homeId, (result: IHome) => {\r\n        setIsLoading(false);\r\n        if(result && isNN(result._id)){\r\n          setData(result);\r\n        }else{\r\n          Toast.fail('Failed to load house.');\r\n        }\r\n      }, (message: string) => {\r\n        setIsLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load house.');\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const toggleLoading = (isLoading: boolean) => {\r\n    setIsLoading(isLoading);\r\n  }\r\n  \r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Houses', link: 'homes'}, {title: 'View House', link: 'view-home'}]} />\r\n          <View className='bgc-white p-20'>\r\n            <View className='tab-bar'>\r\n              <span className={'tab' + (activeTab === 1 ? ' active': '')} onClick={() => setActiveTab(1)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-deep-purple-a700 ti-info-alt\"></i>\r\n                </span>\r\n              </span>\r\n              <span className={'tab' + (activeTab === 2 ? ' active': '')} onClick={() => setActiveTab(2)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-brown-500 fa fa-users\"></i>\r\n                </span>\r\n              </span>\r\n              <span className={'tab' + (activeTab === 3 ? ' active': '')} onClick={() => setActiveTab(3)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-indigo-500 fa fa-car\"></i>\r\n                </span>\r\n              </span>\r\n              <span className={'tab' + (activeTab === 4 ? ' active': '')} onClick={() => setActiveTab(4)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-deep-purple-500 fa fa-female\"></i>\r\n                </span>\r\n              </span>\r\n              <span className={'tab' + (activeTab === 5 ? ' active': '')} onClick={() => setActiveTab(5)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-orange-500 ti-headphone-alt\"></i>\r\n                </span>\r\n              </span>\r\n              <span className={'tab' + (activeTab === 6 ? ' active': '')} onClick={() => setActiveTab(6)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-pink-500 fa fa-id-card-o\"></i>\r\n                </span>\r\n              </span>\r\n              {props.user.client.config.hasPayment &&\r\n              <span className={'tab' + (activeTab === 7 ? ' active': '')} onClick={() => setActiveTab(7)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-indigo-500 fa fa-credit-card\"></i>\r\n                </span>\r\n              </span>\r\n              }\r\n              <span className={'tab' + (activeTab === 8 ? ' active': '')} onClick={() => setActiveTab(8)}>\r\n                <span className=\"icon-holder\">\r\n                  <i className=\"c-blue-500 fa fa-file-text\"></i>\r\n                </span>\r\n              </span>\r\n            </View>\r\n            <View className='p-15'>\r\n              {\r\n                activeTab === 1 ?\r\n                    <Info blocks={props.blocks} data={data} />\r\n                :\r\n                  activeTab === 2 ?\r\n                    <Members user={props.user} homeId={homeId} onToggleLoading={toggleLoading} onLoad={props.onLoadMembers} />\r\n                  :\r\n                    activeTab === 3 ?\r\n                      <Vehicles homeId={homeId} onToggleLoading={toggleLoading} onLoad={props.onLoadVehicles} />\r\n                    :\r\n                      activeTab === 4 ?\r\n                        <Servants homeId={homeId} onToggleLoading={toggleLoading} onLoad={props.onLoadServants} />\r\n                      :\r\n                        activeTab === 5 ?\r\n                          <Tickets homeId={homeId} onToggleLoading={toggleLoading} onLoad={props.onLoadTickets} />\r\n                        :\r\n                          activeTab === 6 ?\r\n                            <Visitors appUser={props.appUser} user={props.user} homeId={homeId} onToggleLoading={toggleLoading} onLoad={props.onLoadVisitors} />\r\n                          :\r\n                            activeTab === 7 ?\r\n                              <Payments homeId={homeId} onToggleLoading={toggleLoading} onLoad={props.onLoadPayments} />\r\n                            :\r\n                              <Documents homeId={homeId} onToggleLoading={toggleLoading} onLoad={props.onLoadDocuments} />\r\n              }            \r\n            </View>\r\n          </View>\r\n          <Spinner visible={isLoading} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import { actionTypes } from '../action-types';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IUser } from '../../models/user';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n//import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'poll';\r\n\r\nexport const loadAll = (appClientId: string, userRole: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getPollResult([], false, false, ''));\r\n  // new Api().get(controller + 'loadall/?appClientId=' + appClientId + '&userRole=' + userRole, (result: any, message: string) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getPollResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = polls.findIndex(d => d._id === result.data);\r\n        polls[foundIndex]._id = result.data;\r\n        polls[foundIndex].topic = data.topic;\r\n        polls[foundIndex].description = data.description;\r\n        polls[foundIndex].isAllowMultiple = data.isAllowMultiple;\r\n        polls[foundIndex].isOneVotePerFlat = data.isOneVotePerFlat;\r\n        polls[foundIndex].isAnonymous = data.isAnonymous;\r\n        polls[foundIndex].fromDate = data.fromDate;\r\n        polls[foundIndex].toDate = data.toDate;\r\n        polls[foundIndex].options = data.options;\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        sCallback(true);\r\n      }else{\r\n        sCallback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      // console.log(\"OUT: \" + result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        polls.unshift(data);\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        sCallback(true);\r\n      }else{\r\n        sCallback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, polls: Array<IPoll>, userId: string, sCallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      polls = polls.filter((d, i) => d._id !== id);\r\n      dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n      sCallback(true);\r\n    }else{\r\n      sCallback(false);\r\n    }\r\n  }, {\r\n    Id: id,\r\n    UserId: userId\r\n  });\r\n};\r\n\r\nexport const vote = (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/vote/' + pollId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      var foundIndex = polls.data.findIndex(d => d._id === pollId);\r\n      polls.data[foundIndex].votes = result.data;\r\n      dispatch(getPollResult(polls.data, true, false, ''));\r\n\r\n      /*\r\n      // Update home\r\n      if(!isNN(user.homes[appUser.homeIndex].votes)){\r\n        user.home[appUser.homeIndex].vote = [];\r\n      }\r\n      result.data.map((v: IVote, vi: number) => {\r\n        user.home[appUser.homeIndex].vote.push(v);\r\n      });\r\n      dispatch(getUserResult(user));\r\n      */\r\n      // Update polls\r\n      // if(polls.isUpToDate && !polls.isError && isNN(polls.data) && ((',' + user.type + ',').indexOf(ROLE.ADMIN) >= 0 || (',' + user.type + ',').indexOf(ROLE.MANAGER) >= 0)){\r\n        if(polls.isUpToDate && !polls.isError && isNN(polls.data)){\r\n        let lstPoll = polls.data;\r\n        let pollIndex = lstPoll.findIndex(p => p._id === pollId);\r\n        lstPoll[pollIndex].votes = result.data;\r\n        /*\r\n        if(!isNN(lstPoll[pollIndex].votes)){\r\n          lstPoll[pollIndex].vote = [];\r\n        }\r\n        result.data.map((v: IVote, vi: number) => {\r\n          lstPoll[pollIndex].vote.unshift(v);\r\n        });\r\n        */\r\n        dispatch(getPollResult(lstPoll, true, false, \"\"));\r\n      }\r\n     // dispatch(getUserResult(user));\r\n      \r\n      sCallback(true);\r\n    }else{\r\n      sCallback(false);\r\n    }\r\n  }, {\r\n    votes: votes\r\n  });\r\n};\r\n\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});","import { jsError } from \"./index\";\r\n\r\nexport function percentage(_partialValue: number, _totalValue: number) {\r\n    try{\r\n        if(_totalValue > 0){\r\n            return (100 * _partialValue) / _totalValue;\r\n        }else{\r\n            return 0;\r\n        }\r\n    } catch (ex) {\r\n    jsError(ex, 'calc.percentage'); \r\n    return 0; \r\n  }\r\n };","import React, {useState} from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport DatePicker from 'react-date-picker';\r\nimport { View, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IPolls } from '../../../models/store/polls';\r\nimport { IPoll } from '../../../models/poll/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN, isNNObject } from '../../../util/index';\r\nimport { percentage } from '../../../util/calc';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onSave: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, polls: Array<IPoll>, userID: string, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [state, setState] = useState({\r\n    isEdit: false,\r\n    isLoading: false,\r\n    id: '',\r\n    topic: '',\r\n    description: '',\r\n    isAllowMultiple: false,\r\n    isOneVotePerFlat: false,\r\n    isAnonymous: false,\r\n    fromDate: new Date(),\r\n    toDate: new Date(),\r\n    pollOption: [] as Array<string>,\r\n    showVotePoll: { _id: '' } as IPoll,\r\n    datePickerType: '',\r\n    datePickerDate: new Date()\r\n  });\r\n  \r\n  const onSave = () => {\r\n    if(isNN(state.topic) && isNN(state.description) && isNNObject(state.fromDate) && isNNObject(state.toDate) && isNN(state.pollOption.filter(po => isNN(po)))){\r\n        setState({\r\n          ...state,\r\n          isLoading: true\r\n        });\r\n        let poll = {\r\n          _id: state.id,\r\n          topic: state.topic,\r\n          description: state.description,\r\n          isAllowMultiple: state.isAllowMultiple,\r\n          isOneVotePerFlat: state.isOneVotePerFlat,\r\n          isAnonymous: state.isAnonymous,\r\n          fromDate: state.fromDate,\r\n          toDate: state.toDate,\r\n          options: state.pollOption.filter(po => isNN(po))\r\n        } as IPoll;\r\n        props.onSave(props.user.client._id, poll, props.polls.data, props.user, (result: boolean) => {\r\n          setState({\r\n            ...state,\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            setState({\r\n              ...state,\r\n              isEdit: false,\r\n              id: '',\r\n              topic: '',\r\n              description: '',\r\n              isAllowMultiple: false,\r\n              isOneVotePerFlat: false,\r\n              isAnonymous: false,\r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              pollOption: [],\r\n              showVotePoll: { _id: '' } as IPoll,\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Poll saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save pol.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  const onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            setState({\r\n              ...state,\r\n              isLoading: true\r\n            });\r\n            props.onRemove(id, props.polls.data, props.user._id, (result: boolean) => {\r\n              setState({\r\n                ...state,\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Poll removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove poll.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  const loadVotes = () => {\r\n    if(isNNObject(state.showVotePoll) && state.showVotePoll._id.length > 0){\r\n      let votes = [] as any;\r\n      state.showVotePoll.options.map((po: string, poi: number) => \r\n        votes.push({\r\n          option: po,\r\n          votes: state.showVotePoll.votes.filter(v => v.option === poi).length\r\n        })\r\n      );\r\n      return(\r\n        <View className='p-15'>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text className='fw-600'>{state.showVotePoll.topic}</Text>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text>{state.showVotePoll.description}</Text>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text className='fw-600'>{'Votes: ' + state.showVotePoll.votes.length}</Text>\r\n          </View>\r\n        {\r\n        votes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n          return(\r\n            <View key={'pvo' + voi} className='mT-1 mB-3 p-2'>\r\n              <Text>\r\n                {vo.votes + ' (' + percentage(vo.votes, state.showVotePoll.votes.length) +  '%) - ' + vo.option}\r\n              </Text>\r\n            </View>\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n      )\r\n    }else{\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View>\r\n        {state.isEdit === false &&\r\n        <View className='bdB mT-5 pB-5'>\r\n          <Button\r\n          title=\"ADD NEW\"\r\n          onPress={() => {\r\n            setState({\r\n              ...state,\r\n              isEdit: true,\r\n              id: '',\r\n              topic: '',\r\n              description: '',\r\n              isAllowMultiple: false,\r\n              isOneVotePerFlat: false,\r\n              isAnonymous: false, \r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              pollOption: [],\r\n              showVotePoll: { _id: '' } as IPoll,\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n             });\r\n          }}\r\n          />\r\n        </View>\r\n        }\r\n        {\r\n         (state.isEdit === true && state.id.length === 0)  ?\r\n         <View key={\"p0\"} className='bdB mT-5'>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' value={state.topic} onChange={(event: any) => setState({...state, topic: event.target.value})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <TextArea placeholder=\"Description\" className='form-control' value={state.description} onChange={(event: any) => setState({...state, description: event.target.value})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              setState({\r\n                ...state,\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={state.fromDate}\r\n            />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              setState({\r\n                ...state,\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={state.toDate}\r\n            />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Checkbox isActive={state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => setState({...state, isAllowMultiple: !state.isAllowMultiple})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Checkbox isActive={state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => setState({...state, isOneVotePerFlat: !state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Checkbox isActive={state.isAnonymous} text='Anonymous Voting' onPress={() => setState({...state, isAnonymous: !state.isAnonymous})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(state.pollOption) ?\r\n            state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} className='mT-1 mB-3 p-2'>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' value={e} onChange={(event: any) => {\r\n                    let newOptions = state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    setState({...state, pollOption: newOptions});\r\n                  }} />\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    let newOptions = state.pollOption;\r\n                    delete newOptions[j];\r\n                    setState({...state, pollOption: newOptions});\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-times\"></i>\r\n                  </span>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>No option found.</Text>\r\n            </View>\r\n          }\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <span\r\n              onClick={() => {\r\n                if(!isNN(state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = state.pollOption;\r\n                  newOptions.push('');\r\n                  setState({...state, pollOption: newOptions});\r\n                }\r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </span>\r\n            </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <span className=\"icon-holder mR-10 cur-p\" onClick={onSave}>\r\n              <i className=\"c-green-500 fa fa-check\"></i>\r\n            </span>\r\n            <span className=\"icon-holder cur-p\" onClick={() => {\r\n              setState({\r\n                ...state,\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <i className=\"c-red-500 fa fa-times\"></i>\r\n            </span>\r\n          </View>\r\n        </View>\r\n        :\r\n        []\r\n        }\r\n      {\r\n      (isNNObject(props.polls) && props.polls.isUpToDate && !props.polls.isError && isNN(props.polls.data)) ?      \r\n      props.polls.data.map((d: IPoll, i: number) => {\r\n      return(\r\n        (state.isEdit === true && state.id === d._id) ?\r\n        <View key={\"p\" + d._id} className='bdB mT-5'>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' value={state.topic} onChange={(event: any) => setState({...state, topic: event.target.value})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <TextArea placeholder=\"Description\" className='form-control' value={state.description} onChange={(event: any) => setState({...state, description: event.target.value})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              setState({\r\n                ...state,\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={state.fromDate}\r\n            />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              setState({\r\n                ...state,\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={state.toDate}\r\n            />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Checkbox isActive={state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => setState({...state, isAllowMultiple: !state.isAllowMultiple})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Checkbox isActive={state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => setState({...state, isOneVotePerFlat: !state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Checkbox isActive={state.isAnonymous} text='Anonymous Voting' onPress={() => setState({...state, isAnonymous: !state.isAnonymous})} />\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(state.pollOption) ?\r\n            state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} className='mT-1 mB-3 p-2'>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' value={e} onChange={(event: any) => {\r\n                    let newOptions = state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    setState({...state, pollOption: newOptions});\r\n                  }} />\r\n                  <span className=\"icon-holder cur-p\" onClick={() => {\r\n                    let newOptions = state.pollOption;\r\n                    delete newOptions[j];\r\n                    setState({...state, pollOption: newOptions});\r\n                  }}>\r\n                    <i className=\"c-red-500 fa fa-times\"></i>\r\n                  </span>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text>No option found.</Text>\r\n            </View>\r\n          }\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <span\r\n              onClick={() => {\r\n                if(!isNN(state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = state.pollOption;\r\n                  newOptions.push('');\r\n                  setState({...state, pollOption: newOptions});\r\n                }            \r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </span>\r\n            </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <span className=\"icon-holder mR-10 cur-p\" onClick={onSave}>\r\n              <i className=\"c-green-500 fa fa-check\"></i>\r\n            </span>\r\n            <span className=\"icon-holder cur-p\" onClick={() => {\r\n              setState({\r\n                ...state,\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <i className=\"c-red-500 fa fa-times\"></i>\r\n            </span>\r\n          </View>\r\n        </View>\r\n        :\r\n        <View key={\"p\" + d._id} className='bdB mT-5'>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text className='fw-600'>{d.topic}</Text>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text>{d.description}</Text>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text>{toDateString(d.fromDate) + \" to \" + toDateString(d.toDate)}</Text>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <View className={'bd pT-3 pB-3 pL-5 pR-5 ' + (d.isAllowMultiple === true ? 'bgc-blue-600 bdc-blue-600' : 'mL-5')}>\r\n              <Text className={(d.isAllowMultiple === true ? 'c-white' : '')}>Allow Multiple Votes</Text>\r\n            </View>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <View className={'bd pT-3 pB-3 pL-5 pR-5 ' + (d.isOneVotePerFlat === true ? 'bgc-blue-600 bdc-blue-600' : 'mL-5')}\r\n             >\r\n              <Text className={(d.isOneVotePerFlat === true ? 'c-white' : '')}>One Vote per Flat</Text>\r\n            </View>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <View className={'bd pT-3 pB-3 pL-5 pR-5 ' + (d.isAnonymous === true ? 'bgc-blue-600 bdc-blue-600' : 'mL-5')}>\r\n              <Text className={(d.isAnonymous === true ? 'c-white' : '')}>Anonymous Voting</Text>\r\n            </View>\r\n          </View>\r\n          <View className='mT-1 mB-3 p-2'>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(d.options) ?\r\n            d.options.map((e: string, j: number) => {\r\n              return(\r\n                <View key={\"po\" + j} className='mT-1 mB-3 p-2'>\r\n                  <Text key={\"pot\" + j}>{e}</Text>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View className='mT-1 mB-3 p-2'>\r\n              <Text className='p-10'>No option found.</Text> \r\n            </View>           \r\n          }\r\n          <View className='mT-1 mB-3 p-2'>\r\n          {(d.fromDate > new Date()) &&\r\n          <span className=\"icon-holder mR-10 cur-p\" onClick={() => {\r\n            setState({\r\n              ...state,\r\n              isEdit: true,\r\n              id: d._id,\r\n              topic: d.topic,\r\n              description: d.description,\r\n              isAllowMultiple: d.isAllowMultiple,\r\n              isOneVotePerFlat: d.isOneVotePerFlat,\r\n              isAnonymous: d.isAnonymous,\r\n              fromDate: d.fromDate,\r\n              toDate: d.toDate,\r\n              pollOption: (isNN(d.options) ? d.options : [])\r\n            });\r\n          }}>\r\n            <i className=\"c-blue-500 fa fa-pencil\"></i>\r\n          </span>\r\n          }\r\n          <span className=\"icon-holder mR-25 cur-p\" onClick={() => {\r\n              onRemove(d._id);\r\n            }}>\r\n            <i className=\"c-red-500 fa fa-trash\"></i>\r\n          </span>\r\n            <Text className='cur-p c-blue-500' onClick={() => {\r\n              setState({...state, showVotePoll: d})\r\n            }}>View Votes</Text>\r\n          </View>\r\n        </View>\r\n      )\r\n      })\r\n      :\r\n      <Text className='p-20'>{(props.polls.isUpToDate ? (props.polls.isError ? props.polls.errorMessage : \"No poll found.\") : \"Loading...\")}</Text>\r\n    }\r\n    <Modal\r\n      open={(isNNObject(state.showVotePoll) && state.showVotePoll._id.length > 0)}\r\n      onClose={() => setState({...state, showVotePoll : { _id: '' } as IPoll})}>\r\n      <View className='mT-30 mB-25 mL-15 mR-15' style={{height: '80%'}}>\r\n        <View>\r\n        {\r\n          loadVotes()\r\n        }\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n    <Spinner visible={state.isLoading} />\r\n    </View>  \r\n    );\r\n};","import React, {useState} from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Checkbox from '../common/checkbox';\r\nimport Spinner from '../common/spinner';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { percentage } from '../../util/calc';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  let curDate = new Date();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [votePollId, setVotePollId] = useState('');\r\n  const [votes, setVotes] = useState([] as Array<IVote>);\r\n  const [currentDate, setCurrentDate] = useState(new Date((curDate.getMonth() + 1) + '/' + curDate.getDate() + '/' + curDate.getFullYear()));\r\n\r\n  const loadVotes = (poll: IPoll) => {\r\n    let tVotes = [] as any;\r\n    poll.options.map((po: string, poi: number) => \r\n      tVotes.push({\r\n        option: po,\r\n        votes: poll.votes.filter(v => v.option === poi).length\r\n      })\r\n    );\r\n    return(\r\n    tVotes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n      return(\r\n        <View key={'pvo' + voi} className='mT-1 mB-3 p-2'>\r\n          <Text>\r\n            {vo.votes + ' (' + percentage(vo.votes, poll.votes.length) +  '%) - ' + vo.option}\r\n          </Text>\r\n        </View>\r\n      )\r\n    })\r\n    )\r\n  };\r\n\r\n  const onSelectOption = (poll: IPoll, optionId: number) => {\r\n    if(votePollId === poll._id){\r\n      if(isNN(votes.filter(v => v.option === optionId))){\r\n        setVotes(votes.filter(v => v.option !== optionId));\r\n      }else{\r\n        let tVotes = [] as Array<IVote>;\r\n        if(poll.isAllowMultiple){\r\n          tVotes = votes;\r\n        }\r\n        tVotes.push({\r\n            _homeId: props.user.homes[props.appUser.homeIndex]._id,\r\n            _memberId: props.user._id,\r\n            option: optionId,\r\n            isActive: true,\r\n            createdBy: props.user._id\r\n          } as IVote);\r\n          setVotes(tVotes);\r\n        // if(poll.isAllowMultiple || !isNN(votes.filter(v => v.pollId === poll.id))){\r\n\r\n        // }\r\n      }\r\n    }else{\r\n      let tVotes = [] as Array<IVote>;\r\n      tVotes.push({\r\n        _homeId: props.user.homes[props.appUser.homeIndex]._id,\r\n        _memberId: props.user._id,\r\n        option: optionId,\r\n        isActive: true,\r\n        createdBy: props.user._id\r\n      } as IVote);\r\n      setVotePollId(poll._id);\r\n      setVotes(tVotes);\r\n    }\r\n  };\r\n\r\n  const onVote = (pollId: string) => {\r\n    if(votePollId === pollId &&  isNN(votes)){\r\n      setIsLoading(true);\r\n      props.onVote(pollId, votes, props.polls, props.user, props.appUser, (result: boolean) => {\r\n        setIsLoading(false);\r\n        if(result === true){\r\n          setVotePollId('');\r\n          setVotes([]);\r\n          Toast.success('Your vote saved successfully.');\r\n        }else{\r\n          Toast.fail('Failed to save your vote.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select any option to vote.');\r\n    }\r\n  };\r\n\r\n    return(\r\n      <View>\r\n      {\r\n        (isNNObject(props.polls) && props.polls.isUpToDate && !props.polls.isError && isNN(props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= currentDate))) ?\r\n        props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= currentDate).map((d: IPoll, i: number) => {\r\n          return(\r\n            <View key={\"p\" + d._id} className='bdB mT-5'>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text className='fw-600'>{d.topic}</Text>\r\n              </View>\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === props.user.homes[props.appUser.homeIndex]._id))) &&\r\n                d.options.map((o: string, oi: number) => {\r\n                  return(\r\n                    <View key={\"popt\" + oi} className='mT-1 mB-3 p-2'>\r\n                      <Checkbox isActive={(votePollId === d._id && isNN(votes.filter(v => v.option === oi)))} text={o} onPress={() => onSelectOption(d, oi)} />\r\n                    </View>\r\n                  )\r\n                })\r\n              }\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === props.user.homes[props.appUser.homeIndex]._id))) &&\r\n                <View className='mT-5'>\r\n                  <Button title=\"Vote\" onPress={() => onVote(d._id)} />\r\n                </View>\r\n              }\r\n              <View className='mT-1 mB-3 p-2'>\r\n                <Text className='fw-600'>Your Votes:</Text>\r\n              </View>\r\n              {isNN(d.options) &&\r\n                loadVotes(d)\r\n              }\r\n            </View>\r\n          )\r\n      })\r\n      :\r\n      <Text className='p-20'>{(props.polls.isUpToDate ? (props.polls.isError ? props.polls.errorMessage : \"No active poll found.\") : \"Loading...\")}</Text>\r\n    }\r\n    <Spinner visible={isLoading} />\r\n    </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { IPolls } from '../models/store/polls';\r\nimport { IPoll, IVote } from '../models/poll/index';\r\nimport { loadAll as loadAllAds } from '../store/actions/ad';\r\nimport { loadAll as loadAllPools, save, remove, vote } from '../store/actions/poll';\r\nimport Page from '../components/home/notification';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    polls: state.Polls,\r\n    remainders: [],\r\n    complaints: []\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoadAds: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAllAds(appClientId, callback)),\r\n    onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => dispatch(loadAllPools(appClientId, userRole, callback)),\r\n    onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => dispatch(save(appClientId, data, polls, user, sCallback)),\r\n    onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, sCallback: (result: boolean) => void) => dispatch(remove(id, polls, userId, sCallback)),\r\n    onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => dispatch(vote(pollId, votes, polls, user, appUser, sCallback))\r\n});\r\n\r\nexport const Notice = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { View } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IComplaint, IRemainder } from '../../models/home/index';\r\nimport AMPoll from './manager/poll';\r\nimport UserPoll from './poll';\r\nimport CustomList from './custom-list';\r\nimport { ROLE } from '../../constants';\r\nimport { isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  polls: IPolls,\r\n  remainders: Array<IRemainder>,\r\n  complaints: Array<IComplaint>,\r\n  onLoadAds: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => void,\r\n  onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => void,\r\n  onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, sCallback: (result: boolean) => void) => void,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [activeTab, setActiveTab] = useState((isNNObject(props.user) && (props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER)) ? 1 : 2);\r\n  const [isShowPoll, setIsShowPoll] = useState(isNNObject(props.user) && (props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER || (props.appUser.role === ROLE.USER && props.appUser.homeIndex >= 0)));\r\n  \r\n  useEffect(() => {\r\n    props.onLoadAds(props.user.client._id, (result: boolean) => {\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n    if(isShowPoll){\r\n      props.onLoadPoll(props.user.client._id, props.appUser.role, (result: boolean) => {\r\n        if(!result){\r\n          Toast.fail('Failed to load Poll.');\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n  \r\n    return(\r\n      <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n        <Breadcrum data={[{title: 'Notice', link: 'notice'}]} />\r\n        <View className='bgc-white p-20'>\r\n          <View className='tab-bar'>\r\n          {isShowPoll &&\r\n            <span className={'tab' + (activeTab === 1 ? ' active': '')} onClick={() => setActiveTab(1)}>\r\n              POLL\r\n            </span>\r\n          }\r\n            <span className={'tab' + (activeTab === 2 ? ' active': '')} onClick={() => setActiveTab(2)}>\r\n              ADS\r\n            </span>\r\n            {/* <span className={'tab' + (activeTab === 3 ? ' active': '')} onClick={() => setActiveTab(3)}>\r\n              REMINDERS\r\n            </span>\r\n            <span className={'tab' + (activeTab === 4 ? ' active': '')} onClick={() => setActiveTab(4)}>\r\n            COMPLAINTS\r\n            </span> */}\r\n          </View>\r\n          <View className='p-15'>\r\n            {\r\n              activeTab === 1 ? \r\n                (props.appUser.role === ROLE.ADMIN || props.appUser.role === ROLE.MANAGER) ? \r\n                  <AMPoll appUser={props.appUser} user={props.user} polls={props.polls} onSave={props.onSavePoll} onRemove={props.onRemovePoll} />\r\n                :\r\n                  <UserPoll appUser={props.appUser} user={props.user} polls={props.polls} onVote={props.onVote} />\r\n              :\r\n                activeTab === 2 ?\r\n                  <CustomList data={(props.ads.isUpToDate ? props.ads.data : [])} message={(props.ads.isUpToDate ? (props.ads.isError ? props.ads.errorMessage : \"No data found.\") : \"Loading...\")} />\r\n                :\r\n                  <CustomList data={activeTab === 3 ? props.remainders : props.complaints} message=\"No data found.\" />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </View>\r\n      </View>\r\n      </View>\r\n    );\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport Page from '../components/home/help';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n});\r\n\r\nexport const Help = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IUser } from '../../models/user';\r\n\r\ninterface IProps {\r\n  user: IUser\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  return(\r\n    <View id='mainContent'>\r\n      <View className=\"row gap-20 masonry pos-r\">\r\n        <View className=\"masonry-item col-12\">\r\n          <Breadcrum data={[{title: 'Info', link: 'info'}]} />\r\n          <View className='bgc-white p-20'>\r\n          \r\n          {/* <Image source={Images.workInProgress} className='mT-30' />\r\n              <Text>Work in progress.</Text> */}\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='c-blue-500 fw-600 ta-c'>{props.user.client.name}</Text>\r\n          </View>\r\n          <View className='ta-c mT-3 mB-3 pT-5 pB-5'>\r\n              <Text className='c-blue-500 fw-600 ta-c'>{props.user.client.description}</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text>\r\n              {\"Apartment Residents & Apartment Owners need a common platform through which they can connect with association, get to know & discuss common issues of the neighborhood\"}\r\n            </Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text>House users</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mL-15'>Maintenance Admin Payment</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mL-15'>Receive real-time notifications</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mL-15'>Visitor management</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mL-15'>Lodge any complaint related to your apartment and track</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text>Admin Users</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mL-15'>Create polls and gather the opinion of all Apartment residents</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mL-15'>All details of your flat, staff who work in your flat, visitors coming to your flat</Text>\r\n          </View>\r\n          <View className='mT-3 mB-3 pT-5 pB-5'>\r\n            <Text className='mL-15'>Accounts  and much more...</Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\n\r\nexport default () => {\r\n    return (\r\n        <View id='mainContent'>\r\n        <View className=\"row gap-20 masonry pos-r\">\r\n          <View className=\"masonry-item col-12\">\r\n          <View className='bgc-white p-20'>\r\n                <Text>Page not found.</Text>\r\n            </View>\r\n        </View>\r\n        </View>\r\n        </View>\r\n    );\r\n};","import * as $ from 'jquery';\r\n\r\nconst initSideBar = () => {\r\n  // Sidebar links\r\n  $('.sidebar .sidebar-menu li a').on('click', function() {\r\n    const $this = $(this);\r\n\r\n    if ($this.parent().hasClass('open')) {\r\n      $this\r\n          .parent()\r\n          .children('.dropdown-menu')\r\n          .slideUp(200, () => {\r\n            $this.parent().removeClass('open');\r\n          });\r\n    } else {\r\n      $this\r\n          .parent()\r\n          .parent()\r\n          .children('li.open')\r\n          .children('.dropdown-menu')\r\n          .slideUp(200);\r\n\r\n      $this\r\n          .parent()\r\n          .parent()\r\n          .children('li.open')\r\n          .children('a')\r\n          .removeClass('open');\r\n\r\n      $this\r\n          .parent()\r\n          .parent()\r\n          .children('li.open')\r\n          .removeClass('open');\r\n\r\n      $this\r\n          .parent()\r\n          .children('.dropdown-menu')\r\n          .slideDown(200, () => {\r\n            $this.parent().addClass('open');\r\n          });\r\n    }\r\n  });\r\n\r\n  // Sidebar Activity Class\r\n  const sidebarLinks = $('.sidebar').find('.sidebar-link');\r\n\r\n  sidebarLinks\r\n      .each((index, el) => {\r\n        $(el).removeClass('active');\r\n      })\r\n      .filter(function() {\r\n        const href = $(this).attr('href');\r\n        const pattern = href[0] === '/' ? href.substr(1) : href;\r\n        return pattern === (window.location.pathname).substr(1);\r\n      })\r\n      .addClass('active');\r\n\r\n  // ٍSidebar Toggle\r\n  $('.sidebar-toggle').on('click', (e) => {\r\n    $('.app').toggleClass('is-collapsed');\r\n    e.preventDefault();\r\n  });\r\n\r\n  /**\r\n   * Wait untill sidebar fully toggled (animated in/out)\r\n   * then trigger window resize event in order to recalculate\r\n   * masonry layout widths and gutters.\r\n   */\r\n  $('#sidebar-toggle').click((e) => {\r\n    e.preventDefault();\r\n    setTimeout(() => {\r\n      window.dispatchEvent(window.EVENT);\r\n    }, 300);\r\n  });\r\n};\r\n\r\nexport default initSideBar;\r\n","import * as $ from 'jquery';\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\nconst initScrollBar = () => {\r\n  const scrollables = $('.scrollable');\r\n  if (scrollables.length > 0) {\r\n    scrollables.each((index, el) => {\r\n      new PerfectScrollbar(el);\r\n    });\r\n  }\r\n};\r\n\r\nexport default initScrollBar;\r\n","import * as $ from 'jquery';\r\nimport 'bootstrap';\r\n\r\nconst initPopover = () => {\r\n  // ------------------------------------------------------\r\n  // @Popover\r\n  // ------------------------------------------------------\r\n\r\n  $('[data-toggle=\"popover\"]').popover();\r\n\r\n  // ------------------------------------------------------\r\n  // @Tooltips\r\n  // ------------------------------------------------------\r\n\r\n  $('[data-toggle=\"tooltip\"]').tooltip();\r\n};\r\n\r\nexport default initPopover;\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { getProfile, homeChange, logout } from '../store/actions/account';\r\nimport Page from '../components/home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    getProfile: (callback: (result: boolean, message: string) => void) => dispatch(getProfile(callback)),\r\n    onHomeChange: (index: number, callback: (result: boolean) => void) => dispatch(homeChange(index, callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useState, useEffect} from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport TitleBar from './title-bar';\r\nimport NavBar from './nav-bar';\r\nimport Footer from './footer';\r\nimport { ROLE } from '../../constants';\r\nimport { isNNObject, isNN } from '../../util';\r\nimport Toast from  '../../util/toast';\r\n\r\nimport { Dashboard as CDashboard} from '../../containers/dashboard';\r\nimport { Members as CMembers } from '../../containers/members';\r\nimport { NewMember as CNewMember } from '../../containers/new-member';\r\nimport { Vehicles as CVehicles } from '../../containers/vehicles';\r\nimport { NewVehicle as CNewVehicle } from '../../containers/new-vehicle';\r\nimport { Servants as CServants } from '../../containers/servants';\r\nimport { AllServants as CAllServants } from '../../containers/all-servants';\r\nimport { AllTakeaways as CAllTakeaways } from '../../containers/all-takeaways';\r\nimport { NewServant as CNewServant } from '../../containers/new-servant';\r\nimport { Tickets as CTickets } from '../../containers/tickets';\r\nimport { NewTicket as CNewTicket } from '../../containers/new-ticket';\r\nimport { Visitors as CVisitors } from '../../containers/visitors';\r\n// import { NewVisitor as CNewVisitor } from '../../containers/new-visitor';\r\nimport { ChangePassword as CChangePassword } from '../../containers/change-password';\r\nimport { MyProfile as CMyProfile } from '../../containers/my-profile';\r\nimport { MyRole as CMyRole } from '../../containers/my-role';\r\nimport { Ads as CAds } from '../../containers/ads';\r\nimport { NewAd as CNewAd } from '../../containers/new-ad';\r\nimport { Users as CUsers } from '../../containers/users';\r\nimport { Homes as CHomes } from '../../containers/homes';\r\nimport { EditUser as CEditUser } from '../../containers/edit-user';\r\nimport { ApproveUsers as CApproveUsers } from '../../containers/approve-users';\r\nimport { EditHome as CEditHome } from '../../containers/edit-home';\r\nimport { AllVisitors as CAllVisitors } from '../../containers/all-visitors';\r\nimport { Notification as CNotification } from '../../containers/notification';\r\nimport { Outings as COutings } from '../../containers/outings';\r\nimport { NewOuting as CNewOuting } from '../../containers/new-outing';\r\nimport { MyDocuments as CMyDocuments } from '../../containers/my-documents';\r\nimport { Blocks as CBlocks } from '../../containers/blocks';\r\nimport { EditBlock as CEditBlock } from '../../containers/edit-block';\r\nimport { Payment as CPayment } from '../../containers/payment';\r\nimport { ViewHome as CViewHome } from '../../containers/view-home';\r\nimport { Notice as CNotice } from '../../containers/notice';\r\nimport { Help as CHelp } from '../../containers/help';\r\nimport NotFound from '../../components/not-found';\r\n\r\nimport initSideBar from '../../theme/scripts/sidebar/index';\r\nimport initScrollBar from '../../theme/scripts/scrollbar/index';\r\nimport initPopover from '../../theme/scripts/popover/index';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  getProfile: (callback: (result: boolean, message: string) => void) => void,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  useEffect(() => {\r\n    if(!isNNObject(props.user) || !isNN(props.user._id)){\r\n      setIsLoading(true);\r\n      props.getProfile( (result: boolean, message: string) => {\r\n        setIsLoading(false);\r\n        if(result !== true){\r\n          Toast.fail('Failed to load Profile: ' + message);\r\n        }\r\n      });\r\n    }\r\n    // setTimeout(() => {\r\n    //   initSideBar();\r\n    //   initScrollBar();\r\n    //   initPopover();\r\n    // }, 1000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    initSideBar();\r\n    initScrollBar();\r\n    initPopover();\r\n  });\r\n  \r\n  const isUser = () => {\r\n    return props.appUser.role === ROLE.USER;\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    return props.appUser.role === ROLE.ADMIN;\r\n  };\r\n  \r\n  const isManager = () => {\r\n    return props.appUser.role === ROLE.MANAGER;\r\n  };\r\n\r\n  const isGateKeeper = () => {\r\n    return props.appUser.role === ROLE.GATEKEEPER;\r\n  };\r\n\r\n  const isMaintenanceSupervisor = () => {\r\n    return props.appUser.role === ROLE.MAINTENANCE_SUPERVISOR;\r\n  };\r\n  \r\n  const isMaintenanceManager = () => {\r\n    return props.appUser.role === ROLE.MAINTENANCE_MANAGER;\r\n  };\r\n  \r\n  const isSecuritySupervisor = () => {\r\n    return props.appUser.role === ROLE.SECURITY_SUPERVISOR;\r\n  };\r\n  \r\n  const isSecurityManager = () => {\r\n    return props.appUser.role === ROLE.SECURITY_MANAGER;\r\n  };\r\n\r\n  return (\r\n    !isLoading ?\r\n      <View>\r\n        <NavBar appUser={props.appUser} user={props.user} />\r\n        <View className=\"page-container\">\r\n          <TitleBar appUser={props.appUser} user={props.user} onHomeChange={props.onHomeChange} onLogout={props.onLogout}/>\r\n          <main className='main-content bgc-grey-100'>\r\n            {((isNN(props.appUser.role) && !isUser()) || isNN(props.user.homes)) ?\r\n            <Switch>\r\n              <Route path={'/'} exact component={CDashboard} />\r\n              {/* <Route path={'/login'} exact component={CLogin} /> */}\r\n              {isUser() && <Route path={'/members'} exact component={CMembers} />}\r\n              {isUser() && <Route path={'/new-member'} exact component={CNewMember} />}\r\n              {isUser() && <Route path={'/vehicles'} exact component={CVehicles} />}\r\n              {isUser() && <Route path={'/new-vehicle'} exact component={CNewVehicle} />}\r\n              {isUser() && <Route path={'/servants'} exact component={CServants} />}\r\n              {(isAdmin() || isManager() || isGateKeeper() || isSecuritySupervisor() || isSecurityManager()) && <Route path={'/all-servants'} exact component={CAllServants} />}\r\n              {isUser() && <Route path={'/new-servant'} exact component={CNewServant} />}\r\n              {(isUser() || isAdmin() || isManager() || isMaintenanceSupervisor() || isMaintenanceManager()) && <Route path={'/tickets'} exact component={CTickets} />}\r\n              {isUser() && <Route path={'/new-ticket'} exact component={CNewTicket} />}\r\n              {isUser() && <Route path={'/visitors'} exact component={CVisitors} />}\r\n              {(isUser() || isAdmin() || isManager() || isGateKeeper() || isSecuritySupervisor() || isSecurityManager()) && <Route path={'/outings'} exact component={COutings} />}\r\n              {isUser() && <Route path={'/new-outing'} exact component={CNewOuting} />}\r\n              {/* {isUser() && <Route path={'/new-visitor'} exact component={CNewVisitor} />} */}\r\n              {(isAdmin() || isManager()) && <Route path={'/ads'} exact component={CAds} />}\r\n              {(isAdmin() || isManager()) && <Route path={'/new-ad'} exact component={CNewAd} />}\r\n              {(isAdmin() || isManager()) && <Route path={'/notification'} exact component={CNotification} />}\r\n              {isAdmin() && <Route path={'/users'} exact component={CUsers} />}\r\n              {isAdmin() && <Route path={'/edit-user/:id/:isApprove'} exact component={CEditUser} />}\r\n              {isAdmin() && <Route path={'/approve-users'} exact component={CApproveUsers} />}\r\n              {isAdmin() && <Route path={'/homes'} exact component={CHomes} />}\r\n              {isAdmin() && <Route path={'/view-home/:id'} exact component={CViewHome} />}\r\n              {isAdmin() && <Route path={'/edit-home/:id'} exact component={CEditHome} />}\r\n              {isAdmin() && <Route path={'/blocks'} exact component={CBlocks} />}\r\n              {isAdmin() && <Route path={'/edit-block/:id'} exact component={CEditBlock} />}\r\n              {(isAdmin() || isManager() && props.user.client.config.hasPayment) && <Route path={'/payment'} exact component={CPayment} />}\r\n              {(isAdmin() || isManager() || isGateKeeper() || isSecuritySupervisor() || isSecurityManager()) && <Route path={'/all-visitors'} exact component={CAllVisitors} />}\r\n              {(isAdmin() || isManager() || isGateKeeper() || isSecuritySupervisor() || isSecurityManager()) && <Route path={'/all-takeways'} exact component={CAllTakeaways} />}\r\n              <Route path={'/notice'} exact component={CNotice} />\r\n              <Route path={'/my-profile'} exact component={CMyProfile} />\r\n              {props.user.role.indexOf(',') > 0 && <Route path={'/my-role'} exact component={CMyRole} />}\r\n              <Route path={'/my-documents'} exact component={CMyDocuments} />\r\n              <Route path={'/change-password'} exact component={CChangePassword} />\r\n              <Route path={'/info'} exact component={CHelp} />              \r\n              <Route component={NotFound} />\r\n            </Switch>\r\n            :\r\n            <View id='mainContent'>\r\n              <Text className='m-20'>You are not authorized to view this content. Please contact administrator/manager.</Text>\r\n            </View>\r\n            } \r\n          </main>\r\n          <Footer />\r\n        </View>\r\n      </View>\r\n      :\r\n      <Spinner visible={isLoading} text={\"Loading...\"} />\r\n  );\r\n};","import { connect } from 'react-redux';\nimport { IAppState } from '../models/app-state';\nimport { setLogin } from '../store/actions/account';\nimport Page from '../components/app-container';\n\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\n   appUser: state.AppUser\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n   setLogin: (isLoggedIn: boolean) => dispatch(setLogin(isLoggedIn))\n});\n\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(Page);","import React, {useEffect} from 'react';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Login} from '../containers/login';\r\nimport {Home} from '../containers/home';\r\nimport {IAppUser} from '../models/app-user/app-user';\r\nimport {isNN} from '../util';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  setLogin: (isLoggedIn: boolean) => void\r\n};\r\n\r\nexport default (props: IProps) => {\r\n  useEffect(() => {\r\n    const token: string | null = sessionStorage.getItem('auth_token');\r\n    if (isNN(token)) {\r\n      props.setLogin(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    props.appUser.isLoggedIn ?\r\n    <HashRouter>\r\n      <Home />\r\n    </HashRouter> :\r\n    <Login />\r\n  );\r\n};\r\n","import * as $ from 'jquery';\r\n\r\nexport default (function() {\r\n  // ------------------------------------------------------\r\n  // @Window Resize\r\n  // ------------------------------------------------------\r\n\r\n  /**\r\n   * NOTE: Register resize event for Masonry layout\r\n   */\r\n  const EVENT = document.createEvent('UIEvents');\r\n  window.EVENT = EVENT;\r\n  EVENT.initUIEvent('resize', true, false, window, 0);\r\n\r\n\r\n  window.addEventListener('load', () => {\r\n    /**\r\n     * Trigger window resize event after page load\r\n     * for recalculation of masonry layout.\r\n     */\r\n    window.dispatchEvent(EVENT);\r\n  });\r\n\r\n  // ------------------------------------------------------\r\n  // @External Links\r\n  // ------------------------------------------------------\r\n\r\n  // Open external links in new window\r\n  $('a')\r\n      .filter('[href^=\"http\"], [href^=\"//\"]')\r\n      .not(`[href*=\"${window.location.host}\"]`)\r\n      .attr('rel', 'noopener noreferrer')\r\n      .attr('target', '_blank');\r\n\r\n  // ------------------------------------------------------\r\n  // @Resize Trigger\r\n  // ------------------------------------------------------\r\n\r\n  // Trigger resize on any element click\r\n  document.addEventListener('click', () => {\r\n    window.dispatchEvent(window.EVENT);\r\n  });\r\n}());\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n                console.log(\r\n                    'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n                );\r\n\r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n\r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n      .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n        // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n            'No internet connection found. App is running in offline mode.',\r\n        );\r\n      });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const registerServiceWorker = () => {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker\r\n        .register('./firebase-messaging-sw.js')\r\n        .then(function(registration) {\r\n          console.log('Registration successful, scope is:', registration.scope);\r\n        })\r\n        .catch(function(err) {\r\n          console.log('Service worker registration failed, error:', err);\r\n        });\r\n  }\r\n};\r\n\r\nexport {registerServiceWorker};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { registerServiceWorker } from './services/register-sw';\r\n\r\nregisterServiceWorker();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, {useEffect} from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\r\nimport { store } from './store/app-store';\r\nimport { AppContainer } from './containers/app-container';\r\nimport { init as fcmInit } from './services/init-fcm';\r\nimport './theme/scripts/index';\r\n\r\nexport default () => {\r\n  useEffect(() => {\r\n    fcmInit();\r\n  }, []);\r\n  \r\n  return(\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_RIGHT} />\r\n    </Provider>\r\n  );\r\n};","import * as firebase from 'firebase/app';\r\nimport 'firebase/messaging';\r\n\r\nexport const init = () => {\r\n  try {\r\n    const initializedFirebaseApp = firebase.initializeApp({\r\n      apiKey: 'AIzaSyCrGumtbn2McvNXzZdhShhLaW0QsIFZxOk',\r\n      authDomain: 'nest-df0a7.firebaseapp.com',\r\n      databaseURL: 'https://nest-df0a7.firebaseio.com',\r\n      projectId: 'nest-df0a7',\r\n      storageBucket: 'nest-df0a7.appspot.com',\r\n      messagingSenderId: '422026408390',\r\n      appId: '1:422026408390:web:cf0e6a945e7f1ec0d602c7',\r\n    });\r\n\r\n    const messaging = initializedFirebaseApp.messaging();\r\n\r\n    messaging.usePublicVapidKey(\r\n        'BExnmgKfYLBd44lIqI5xRAD55I5Qhsaa7sI_wJ19zcIuq05y2Z1AtuaNBChU--UhjFxpA2XLR2lI02otUje4Rkk',\r\n    );\r\n\r\n    messaging\r\n        .requestPermission()\r\n        .then(async function() {\r\n          const token = await messaging.getToken();\r\n          localStorage.setItem('fcm_token', token);\r\n        })\r\n        .catch(function(err) {\r\n          console.log('Unable to get permission to notify.', err);\r\n        });\r\n  } catch (ex) {\r\n    console.log('FCM ERROR: ', ex);\r\n  }\r\n};\r\n"],"sourceRoot":""}