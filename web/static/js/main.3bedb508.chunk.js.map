{"version":3,"sources":["store/action-types.ts","store/reducers/app-user.ts","store/reducers/user.ts","store/reducers/ads.ts","store/reducers/polls.ts","store/reducers/outings.ts","store/reducers/documents.ts","store/reducers/users.ts","store/reducers/homes.ts","store/reducers/user-homes.ts","store/reducers/tickets.ts","store/reducers/blocks.ts","store/reducers/gate-no.ts","store/reducers/state.ts","store/app-store.ts","constants/index.ts","util/index.ts","store/api/api.ts","store/actions/account.ts","components/common/elements.tsx","components/common/button.tsx","components/images.ts","components/common/spinner.tsx","styles/common.ts","util/toast.ts","components/common/radio-button.tsx","styles/model.ts","components/login/sign-up.tsx","components/login/index.tsx","containers/login.tsx","styles/popup.ts","components/home/title-bar.tsx","constants/nav.ts","components/home/nav-bar.tsx","components/home/tab-bar.tsx","store/actions/payment.ts","store/actions/visitor.ts","store/actions/file.ts","components/home/my-dues.tsx","util/convert.ts","components/home/history.tsx","components/home/custom-list.tsx","styles/card.ts","components/home/home.tsx","components/home/manager/home.tsx","components/common/checkbox.tsx","styles/page.ts","components/home/gatekeeper/visitors-view.tsx","components/home/gatekeeper/new-visitor.tsx","components/home/gatekeeper/home.tsx","components/home/dashboard.tsx","containers/dashboard.tsx","store/actions/member.ts","components/common/breadcrum.tsx","styles/icon.ts","components/home/members.tsx","containers/members.tsx","components/home/new-member.tsx","containers/new-member.tsx","store/actions/vehicle.ts","components/home/vehicles.tsx","containers/vehicles.tsx","components/home/new-vehicle.tsx","containers/new-vehicle.tsx","store/actions/servant.ts","styles/comments.ts","components/home/servants.tsx","containers/servants.tsx","components/home/gatekeeper/takeaways.tsx","containers/all-takeaways.tsx","components/home/new-servant.tsx","containers/new-servant.tsx","store/actions/ticket.ts","components/home/tickets.tsx","containers/tickets.tsx","components/home/new-ticket.tsx","containers/new-ticket.tsx","components/home/visitors.tsx","containers/visitors.tsx","components/home/change-password.tsx","containers/change-password.tsx","components/home/my-profile.tsx","containers/my-profile.tsx","components/home/my-role.tsx","containers/my-role.tsx","store/actions/ad.ts","components/home/manager/ads.tsx","containers/ads.tsx","components/home/manager/new-ad.tsx","containers/new-ad.tsx","components/home/manager/users.tsx","containers/users.tsx","store/actions/home.ts","components/home/manager/homes.tsx","containers/homes.tsx","styles/mlist.ts","components/home/manager/edit-user.tsx","containers/edit-user.tsx","components/home/manager/approve-users.tsx","containers/approve-users.tsx","components/home/manager/edit-home.tsx","containers/edit-home.tsx","components/home/gatekeeper/visitors.tsx","containers/all-visitors.tsx","components/home/manager/notification.tsx","containers/notification.tsx","store/actions/notification.ts","store/actions/outing.ts","components/home/new-outing.tsx","containers/new-outing.tsx","store/actions/documents.ts","components/home/my-documents.tsx","containers/my-documents.tsx","store/actions/block.ts","components/home/manager/blocks.tsx","containers/blocks.tsx","components/home/manager/edit-block.tsx","containers/edit-block.tsx","components/home/manager/payment-form.tsx","components/home/manager/payment-history.tsx","components/home/manager/payment.tsx","containers/payment.tsx","components/home/manager/view-home/info.tsx","components/home/manager/view-home/members.tsx","components/home/manager/view-home/vehicles.tsx","components/home/manager/view-home/servants.tsx","components/home/manager/view-home/tickets.tsx","components/home/manager/view-home/visitors.tsx","components/home/manager/view-home/payments.tsx","components/home/manager/view-home/documents.tsx","components/home/manager/view-home/index.tsx","containers/view-home.tsx","store/actions/poll.ts","util/calc.ts","components/home/manager/poll.tsx","components/home/poll.tsx","components/home/outing.tsx","components/home/notification.tsx","containers/notice.tsx","components/home/help.tsx","containers/help.tsx","components/not-found/index.tsx","components/home/index.tsx","containers/home.tsx","components/app-container.tsx","containers/app-container.tsx","App.tsx","services/init-fcm.js","serviceWorker.js","services/register-sw.js","index.tsx"],"names":["actionTypes","handleLoginResult","state","payload","Object","objectSpread","isLoggedIn","handleRoleResult","role","handleHomeIndexResult","homeIndex","handleResult","_id","number","name","age","gender","mobileNo","emailId","type","image","createdBy","updatedBy","homes","client","data","isUpToDate","isError","errorMessage","State","combineReducers","AppUser","arguments","length","undefined","action","SET_LOGIN_STATUS","SET_ROLE","SET_HOME_INDEX","RESET","User","description","address","upi","id","rep","repType","LOAD_USER","Ads","LOAD_ADS","Polls","LOAD_POLLS","Outings","LOAD_OUTINGS","Documents","LOAD_DOCUMENTS","Users","LOAD_USERS","Homes","LOAD_HOMES","UserHomes","LOAD_USERHOMES","Tickets","LOAD_TICKETS","Blocks","LOAD_BLOCKS","GateNo","SET_GATE_NO","store","createStore","compose","applyMiddleware","reduxThunk","API_BASE_PATH","IMAGE_BASE_PATH","FILE_BASE_PATH","DEFAULT_DATE_FORMAT","DEFAULT_DATE_TIME_FORMAT","COLOR","ROLE","USER","ADMIN","GATEKEEPER","MANAGER","MONTH","title","value","isNN","_input","isNNObject","json2Str","JSON","stringify","ex","jsError","generateUUID","d","Date","getTime","performance","now","replace","c","r","Math","random","floor","toString","_ex","_funName","console","log","onEnter","_e","_callback","keyCode","which","Api","url","get","callback","_this","fetch","post","delete","patch","put","upload","_callee","token","clientId","userId","formData","regenerator_default","a","wrap","_context","prev","next","getAS","sent","FormData","append","file","method","headers","Accept","x-access-token","client-id","user-id","body","then","response","json","message","catch","error","stop","_callee2","key","_context2","sessionStorage","getItem","abrupt","t0","_callee3","_context3","Content-Type","logout","dispatch","removeItem","setLoginResult","setHomeIndexResult","resetState","setGateNoResult","gateNo","setRoleResult","getUserResult","getUsersResult","getHomesResult","getBlockResult","View","styled","div","_templateObject","ScrollView","_templateObject2","Image","img","_templateObject3","TextInput","input","_templateObject4","TextArea","textarea","_templateObject5","Picker","select","_templateObject6","Text","label","_templateObject7","TouchableHighlight","span","_templateObject8","Button","this","react","className","props","onClick","onPress","style","styles","btn","React","defaultProps","backgroundColor","borderColor","color","cursor","Images","logo","logoInv","icon","homeIcon","homeIconInv","homeIconWhite","notification","notificationInv","notificationWhite","setting","settingInv","settingWhite","info","infoInv","infoWhite","workInProgress","members","membersInv","vehicle","vehicleInv","username","password","support","supportInv","visitors","visitorsInv","visitorsWhite","servant","servantInv","add","edit","close","tick","cancel","mobile","email","addvertise","reminder","users","blocks","search","datePicker","money","moneyInv","view","document","documentInv","menu","loading","Spinner","visible","src","width","height","fontWeight","marginTop","text","Toast","success","msg","toast","fail","warn","warning","show","bgColor","textColor","RadioButton","container","checked","isActive","htmlFor","marginRight","circle","borderRadius","borderWidth","alignItems","justifyContent","dot","marginLeft","head","flexDirection","alignContent","paddingLeft","paddingRight","paddingTop","paddingBottom","flex","alignSelf","font-weight","fontSize","marginBottom","row","ele","radio","display","radioText","radioActive","radioActiveText","saveBtn","SignUp","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSave","clientCode","member","toLowerCase","onSignUp","result","setState","bind","assertThisInitialized","_this2","modelStyles","placeholder","CommonStyles","onChange","event","target","radio_button_RadioButton","button_Button","Index","onLogin","userName","isLoading","onForgetPassword","isForgetPass","isSignUp","mobileNumber","onForgetPassSubmit","onCreateAccount","maxWidth","txtIcon","txt","onKeyPress","e","textAlign","sign_up_SignUp","float","borderStyle","margin","spinner_Spinner","resizeMode","top","Login","connect","ownProps","fcm_token","localStorage","controller","setItem","rememberMe","fcmToken","os","osVersion","login","forgetPassword","assign","signup","Page","content","TitleBar","onToggleHomeModel","isShow","isShowHomeModel","onHomeChange","index","confirmAlert","buttons","onLogout","titleBar","react_router_dom","to","appUser","titleText","user","index_es","open","onClose","popupStyles","map","i","homeList","activeHome","inActiveHome","padding","borderBottomWidth","borderBottomColor","border-bottom-style","NAV","path","roles","child","isMRole","NavBar","getImage","loadNav","nav","pTitle","isTopLevel","that","activeTopMenu","inner","indexOf","activeMenu","filter","isExpand","onToggleMenu","TabBar","tabBar","borderTopColor","borderTopWidth","border-top-style","tab","tabImage","activeTab","loadAll","appClientId","homeId","sCallback","fCallback","save","MyDues","getTotalDue","totalDue","home","payments","amountPaid","transactions","t","j","isSuccess","amount","payNow","paymentId","transactionRef","payment","successCallback","Status","responseCode","transaction","txnRef","txnId","status","reason","onPaymentUpdate","updateResult","clearTxn","txnFailure","failureCallback","p","myDueFirst","myDue","m","forMonth","forYear","borderLeftColor","borderLeftWidth","toDateString","_format","moment","format","toDateTimeString","History","slice","paidDate","createdAt","CustomList","borderBottomStyle","card","maxHeight","Home","cardStyles","history","push","vehicles","my_dues_MyDues","onPaymentUpload","custom_list_CustomList","history_History","Checkbox","VisitorsView","onToggleZoomImage","isZoom","isZoomImage","zoomImage","searchText","homeNumber","passCode","pageStyles","isSearch","checkbox_Checkbox","onActiveChange","cardContainer","isEntered","isExit","personCount","vehicleType","vehicleNo","isApproved","isRejected","approvedBy","approvedAt","enteredBy","enteredAt","exitBy","exitGateNo","exitAt","arriveAt","getDate","toDate","onExit","onApprove","onReject","onRemove","onSelect","NewVisitor","onImageSelect","files","arrFileName","split","fileName","onUpload","showHomes","arriveAtTime","setHours","parseInt","visitor","isUser","onToggleLoading","onClear","homeSearchText","searchResult","isShowSearch","onSearch","overflow","entry_default","minDate","maxDate","date","dist_entry_default","time","maxLength","visitors_view_VisitorsView","viewAllVisitors","viewAllTakeaways","onBlur","onGateNoChanged","new_visitor_NewVisitor","onSaveVisitor","onSearchVisitor","Dashboard","home_Home","manager_home_Home","ads","tickets","gatekeeper_home_Home","outings","setGateNo","approvalid","paymentIndex","findIndex","update","saveVisitor","fileUpload","searchVisitor","foundIndex","Breadcrum","cnr","link","sep","MarginTop","addIcon","editIcon","deleteIcon","closeIcon","Members","isEdit","breadcrum_Breadcrum","iconStyles","remove","NewMember","Vehicles","NewVehicle","loadAllByHome","cmntsCnr","cmntsHdr","cmntsHdrTxt","cmntsCnt","cmntCnr","cmntCnrFst","cmntHdr","cmntCnt","addCmntCnt","newCmnt","Servants","viewId","takeaways","takeawayTitle","takeawayDesc","editTakeawayId","editTakeawayTitle","editTakeawayDesc","onView","onCreateTakeaway","updatedAt","unshift","onUpdateTakeaway","takeawayIndex","onRemoveTakeaway","servantId","onLoad","_this3","commonStyles","commentsStyles","createTakeaway","removeTakeaway","Takeaways","AllTakeaways","loadActiveTakeaways","exitTakeaway","NewServant","arrTickets","getTicketsResult","_homeId","comments","ticket","comment","editCommentId","editComment","onResolve","onStart","onAddComment","createdByName","onUpdateComment","onRemoveComment","ticketId","resolve","start","ticketIndex","commentIndex","addComment","removeComment","NewTicket","Visitors","loadData","v","isRequestNew","approve","reject","ChangePassword","passwordPolicyCheck","anUpperCase","aLowerCase","aNumber","aSpecial","numUpper","numLower","numNums","numSpecials","test","onUpdate","newPassword","confirmNewPassword","policyResult","changePassword","MyProfile","updateProfile","MyRole","updateRole","getAdResult","ad","NewAd","getHomes","userHomes","homeIds","uh","h","toLocaleLowerCase","memberIds","searchResultIndex","removeByAM","load","getUsers","userIds","u","mListCnr","mListActiveRow","mListRow","EditUser","isAdmin","isManager","isGatekeeper","match","params","isApprove","isShowHomes","mlistStyles","isAM","saveByAM","ApproveUsers","accountController","loadWFAUsers","EditHome","blockId","_blockId","bedRoom","parking","onToggleUserModel","isShowUsers","onCheckNumberAvail","checkNumberAvail","AllVisitors","enter","exit","Notification","onPush","getOutingResult","NewOuting","fromDate","outing","place","isReturned","datePickerType","datePickerDate","getDocumentResult","MyDocuments","onFileSelect","documents","ho","rel","href","EditBlock","homeCount","b","block","forEach","concat","PaymentForm","isAllHome","month","year","getMonth","getFullYear","PaymentHistory","uPaymentId","uAmount","uDescription","pData","isShowUpdateModel","mode","Payment","payment_form_PaymentForm","payment_history_PaymentHistory","updatePay","Info","_this$props","blockName","Payments","getAmountPaid","myStyles","ViewHome","toggleLoading","info_Info","view_home_members_Members","onLoadMembers","view_home_vehicles_Vehicles","onLoadVehicles","view_home_servants_Servants","onLoadServants","view_home_tickets_Tickets","onLoadTickets","view_home_visitors_Visitors","onLoadVisitors","payments_Payments","onLoadPayments","view_home_documents_Documents","onLoadDocuments","loadMembers","loadVehicles","loadServants","loadTickets","loadVisitors","loadPayments","loadDocuments","getPollResult","percentage","_partialValue","_totalValue","Poll","topic","pollOption","po","poll","isAllowMultiple","isOneVotePerFlat","isAnonymous","options","polls","showVotePoll","loadVotes","votes","poi","option","sort","vo","voi","newOptions","onSelectOption","optionId","votePollId","_memberId","onVote","pollId","currentDate","o","oi","Outing","onReturnBack","outingId","returnedAt","isShowPoll","onLoadAds","onLoadPoll","onLoadOuting","poll_Poll","onSavePoll","onRemovePoll","home_poll_Poll","outing_Outing","remainders","complaints","Notice","loadAllAds","userRole","loadAllPools","Id","UserId","lstPoll","pollIndex","vote","loadAllOutings","retunBack","Help","listItem","isGateKeeper","getProfile","title_bar_TitleBar","nav_bar_NavBar","react_router","exact","component","CDashboard","CMembers","CNewMember","CVehicles","CNewVehicle","CServants","CNewServant","CTickets","CNewTicket","CVisitors","CNewOuting","CAds","CNewAd","CNotification","CUsers","CEditUser","CApproveUsers","CHomes","CViewHome","CEditHome","CBlocks","CEditBlock","CPayment","CAllVisitors","CAllTakeaways","CNotice","CMyProfile","CMyRole","CMyDocuments","CChangePassword","CHelp","NotFound","tab_bar_TabBar","mresult","bresult","hresult","homeChange","AppContainer","setLogin","containers_home_Home","App","messaging","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","usePublicVapidKey","requestPermission","asyncToGenerator","mark","getToken","err","fcmInit","react_default","createElement","es","containers_app_container_AppContainer","lib","ToastsStore","position","ToastsContainerPosition","TOP_RIGHT","Component","Boolean","window","location","hostname","navigator","serviceWorker","register","registration","scope","ReactDOM","render","App_App","getElementById","ready","unregister"],"mappings":"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","file":"static/js/main.3bedb508.chunk.js","sourcesContent":["export enum actionTypes{\r\n    SET_LOGIN_STATUS,\r\n    SET_ROLE,\r\n    SET_HOME_INDEX,\r\n    LOAD_USER,\r\n    LOAD_ADS,\r\n    LOAD_POLLS,\r\n    LOAD_OUTINGS,\r\n    LOAD_DOCUMENTS,\r\n    LOAD_USERS,\r\n    LOAD_HOMES,\r\n    LOAD_USERHOMES,\r\n    LOAD_TICKETS,\r\n    SAVE_MEMBER,\r\n    LOAD_BLOCKS,\r\n    SET_GATE_NO,\r\n    RESET\r\n};","import { actionTypes } from '../action-types';\r\nimport { IAppUser } from '../../models/app-user/app-user';\r\n\r\nconst createEmptyResult = (): IAppUser => ({\r\n    isLoggedIn: false,\r\n    role: '',\r\n    homeIndex: -1\r\n});\r\n\r\nexport const AppUser = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_LOGIN_STATUS:\r\n            return handleLoginResult(state, action.payload);\r\n        case actionTypes.SET_ROLE:\r\n            return handleRoleResult(state, action.payload);\r\n        case actionTypes.SET_HOME_INDEX:\r\n            return handleHomeIndexResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleLoginResult = (state: IAppUser, payload: boolean): IAppUser => {\r\n    return {\r\n        ...state,\r\n        isLoggedIn: payload\r\n    };\r\n};\r\n\r\nconst handleRoleResult = (state: IAppUser, payload: string): IAppUser => {\r\n    return {\r\n        ...state,\r\n        role: payload\r\n    };\r\n};\r\n\r\nconst handleHomeIndexResult = (state: IAppUser, payload: number): IAppUser => {\r\n    return {\r\n        ...state,\r\n        homeIndex: payload\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\n\r\nconst createEmptyResult = (): IUser => ({\r\n    _id: '',\r\n    number: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    type: '',\r\n    role: '',\r\n    image: '',\r\n    createdBy: '',\r\n    updatedBy: '',\r\n    homes: [],\r\n    client: {\r\n        _id: '',\r\n        name: '',\r\n        description: '',\r\n        address: '',\r\n        upi: {\r\n            id: '',\r\n            name: ''\r\n        },\r\n        rep: {\r\n            name: '',\r\n            mobileNo: '',\r\n            emailId: '',\r\n            repType: ''\r\n        }\r\n    }\r\n});\r\n\r\nexport const User = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USER:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUser, payload: IUser): IUser => {\r\n    return {\r\n        ...state,\r\n        _id: payload._id,\r\n        number: payload.number,\r\n        name: payload.name,\r\n        age: payload.age,\r\n        gender: payload.gender,\r\n        mobileNo: payload.mobileNo,\r\n        emailId: payload.emailId,\r\n        type: payload.type,\r\n        role: payload.role,\r\n        image: payload.image,\r\n        createdBy: payload.createdBy,\r\n        updatedBy: payload.updatedBy,\r\n        homes: payload.homes,\r\n        client: payload.client\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IAds } from '../../models/store/ads';\r\n\r\nconst createEmptyResult = (): IAds => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Ads = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_ADS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IAds, payload: IAds): IAds => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IPolls } from '../../models/store/polls';\r\n\r\nconst createEmptyResult = (): IPolls => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Polls = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_POLLS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IPolls, payload: IPolls): IPolls => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IOutings } from '../../models/store/outings';\r\n\r\nconst createEmptyResult = (): IOutings => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Outings = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_OUTINGS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IOutings, payload: IOutings): IOutings => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IDocuments } from '../../models/store/documents';\r\n\r\nconst createEmptyResult = (): IDocuments => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Documents = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_DOCUMENTS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IDocuments, payload: IDocuments): IDocuments => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUsers } from '../../models/store/users';\r\n\r\nconst createEmptyResult = (): IUsers => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Users = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUsers, payload: IUsers): IUsers => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IHomes } from '../../models/store/homes';\r\n\r\nconst createEmptyResult = (): IHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Homes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_HOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IHomes, payload: IHomes): IHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUserHomes } from '../../models/store/user-homes';\r\n\r\nconst createEmptyResult = (): IUserHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const UserHomes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERHOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUserHomes, payload: IUserHomes): IUserHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\n\r\nconst createEmptyResult = (): ITickets => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Tickets = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_TICKETS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: ITickets, payload: ITickets): ITickets => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IBlocks } from '../../models/store/blocks';\r\n\r\nconst createEmptyResult = (): IBlocks => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Blocks = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_BLOCKS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IBlocks, payload: IBlocks): IBlocks => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\n\r\nexport const GateNo = (state = '', action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_GATE_NO:\r\n            return handleResult(state, action.payload);\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: string, payload: string): string => {\r\n    return payload;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { IAppState } from '../../models/app-state';\r\nimport { AppUser } from './app-user';\r\nimport { User } from './user';\r\nimport { Ads } from './ads';\r\nimport { Polls } from './polls';\r\nimport { Outings } from './outings';\r\nimport { Documents } from './documents';\r\nimport { Users } from './users';\r\nimport { Homes } from './homes';\r\nimport { UserHomes } from './user-homes';\r\nimport { Tickets } from './tickets';\r\nimport { Blocks } from './blocks';\r\nimport { GateNo } from './gate-no';\r\n\r\nexport const State = combineReducers<IAppState>({\r\n    AppUser: AppUser,\r\n    User: User,\r\n    Ads: Ads,\r\n    Polls: Polls,\r\n    Outings: Outings,\r\n    Documents: Documents,\r\n    Users: Users,\r\n    Homes: Homes,\r\n    UserHomes: UserHomes,\r\n    Tickets: Tickets,\r\n    Blocks: Blocks,\r\n    GateNo: GateNo\r\n});\r\n","import { Store, createStore, compose, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport { State } from './reducers/state';\r\nimport { IAppState } from '../models/app-state';\r\n\r\nexport const store: Store<IAppState> = createStore(\r\n  State,\r\n  compose(\r\n    applyMiddleware(reduxThunk),\r\n  )\r\n);","// const API_BASE_PATH = 'http://localhost:3001/';\r\nconst API_BASE_PATH = 'https://nestadmin.herokuapp.com/';\r\n\r\nexport const API_PATH = API_BASE_PATH + 'api/';\r\nexport const IMAGE_BASE_PATH = API_BASE_PATH + 'image/';\r\nexport const FILE_BASE_PATH = API_BASE_PATH + 'file/';\r\nexport const DEFAULT_DATE_FORMAT = 'DD/MMM/YYYY';\r\nexport const DEFAULT_DATE_TIME_FORMAT = 'DD/MMM/YYYY hh:mm A';\r\nexport const COLOR = {\r\n    PRIMARY: '#0078d7',\r\n    SECONDARY: '#0067b9',\r\n    INVERSE: '#FFFFFF',\r\n    ERROR: '#FF0000',\r\n    SUCCESS: '#008000',\r\n    ICON_BTN_UNDERLAY: '#cce1f1',\r\n    CARD_UNDERLAY: '#cce1f1',\r\n    TAB_UNDERLAY: '#cce1f1',\r\n    SETTING_UNDERLAY: '#cce1f1',\r\n    HR_COLOR: '#e1e1e1',\r\n    FONT_COLOR1: '#8e8e93',\r\n    FONT_COLOR2: '#000000',\r\n    FONT_COLOR3: '#FFFFFF',\r\n    MODAL_BG: '#cce1f1'\r\n};\r\nexport const ROLE = {\r\n    USER: 'USER',\r\n    ADMIN: 'ADMIN',\r\n    GATEKEEPER: 'GATEKEEPER',\r\n    MANAGER: 'MANAGER'\r\n};\r\nexport const MONTH = [\r\n    {title: 'JAN', value: 0},\r\n    {title: 'FEB', value: 1},\r\n    {title: 'MAR', value: 2},\r\n    {title: 'APR', value: 3},\r\n    {title: 'MAY', value: 4},\r\n    {title: 'JUN', value: 5},\r\n    {title: 'JUL', value: 6},\r\n    {title: 'AUG', value: 7},\r\n    {title: 'SEP', value: 8},\r\n    {title: 'OCT', value: 9},\r\n    {title: 'NOV', value: 10},\r\n    {title: 'DEC', value: 11}\r\n]","//import { config as apiConfig } from '../store/api/config';\r\n\r\nexport function parseJSON(response: any) {\r\n     return response.json()\r\n};\r\n\r\nexport function isNN(_input: any) { \r\n  return (isNNObject(_input) && _input.length > 0) \r\n};\r\n\r\nexport function isNNObject(_input: any) { \r\n  return (_input !== null && _input !== undefined) \r\n};\r\n\r\nexport function str2Json(_input: string) { \r\n  try {\r\n    return JSON.parse(isNN(_input) ? _input : \"{}\"); \r\n  } catch (ex) { \r\n    jsError(ex, \"String2JSON\"); \r\n    return {}; \r\n  } \r\n};\r\n\r\nexport function json2Str(_input: any) { \r\n  try {\r\n    return (isNNObject(_input) ? JSON.stringify(_input) : \"\");\r\n  } catch (ex) { \r\n    jsError(ex, \"JSON2String\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function getBaseURL(_isApi: boolean) { \r\n  try {\r\n    let baseURL: string = \"\";\r\n    let arrURL = window.location.href.split(\"/\");\r\n    if(isNNObject(arrURL) && arrURL.length > 2){\r\n      if(_isApi){\r\n        //baseURL = arrURL[0] + \"//\" + arrURL[2] + apiConfig.baseURL;\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2];\r\n      }else{\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2] + \"/\";\r\n      }\r\n    }else{\r\n      baseURL = window.location.href;\r\n    }\r\n    return baseURL;\r\n  } catch (ex) { \r\n    jsError(ex, \"getBaseURL\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function generateUUID() { // Public Domain/MIT\r\n  var d = new Date().getTime();\r\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n      d += performance.now(); //use high-precision timer if available\r\n  }\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      var r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n}\r\n\r\nexport function jsError(_ex: any, _funName: string) {\r\n   //alert(\"Javascript Error\\n------------------\\nName: \" + _ex.name + \"\\nMessage: \" + _ex.message + \"\\nFunction: \" + _funName + \"\\nFile: \" + _ex.fileName + \"\\nLine Number: \" + _ex.lineNumber + \"\\nColumn Number: \" + _ex.columnNumber); \r\n   console.log(\"Error:\" + _funName + \":\" + _ex);\r\n};\r\n\r\nexport function onEnter(_e: any, _callback: Function) {\r\n  let code = (_e.keyCode ? _e.keyCode : _e.which);\r\n  if(code === 13 && typeof _callback === 'function') {\r\n    _callback();\r\n  }\r\n};","// import { AsyncStorage } from 'react-native';\r\nimport { API_PATH } from \"../../constants\";\r\nimport { isNNObject, json2Str, isNN } from \"../../util/index\";\r\n\r\nexport default class Api {\r\n    private url: string = API_PATH;\r\n     \r\n    // private url: string =  \"https://192.168.43.80:45456/api/\";\r\n    // private url: string =  \"http://192.168.43.80:45455/api/\";\r\n\r\n    /**\r\n    * HTTP GET operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public get = (url: string, callback: Function) => {\r\n        this.fetch(url, 'GET', callback);\r\n    };\r\n\r\n    /**\r\n    * HTTP POST operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public post = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'POST', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP DELETE operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public delete = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'DELETE', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PATCH operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public patch = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PATCH', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PUT operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public put = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PUT', callback, data);\r\n    };\r\n\r\n    public upload = async(url: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        \r\n        var formData = new FormData();\r\n        formData.append('file', data.file, data.name);\r\n        formData.append('name', data.name);\r\n\r\n        fetch(this.url + url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    // 'Content-Type': 'multipart/form-data',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: formData,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n\r\n/*\r\n    private fetch = (url: string, method: string, callback: Function, data?: any) => {\r\n        AsyncStorage.getItem('auth_token').then((token) => {\r\n            AsyncStorage.getItem('user_id').then((userId) => {\r\n                this.next(url, 'PUT', token, userId, callback, data);\r\n            }).catch(ex => {\r\n                this.next(url, 'PUT', token, '', callback, data);\r\n            }); \r\n        }).catch(ex => {\r\n            this.next(url, 'PUT', '', '', callback, data);\r\n        });\r\n    };\r\n    */\r\n\r\n    private getAS = async (key: string) => {\r\n        try {\r\n            // return await AsyncStorage.getItem(key);\r\n            return await sessionStorage.getItem(key);\r\n        } catch (error) {\r\n            return '';\r\n        }\r\n    };\r\n    \r\n    private fetch = async(url: string, method: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        fetch(this.url + url, \r\n            {\r\n                method: method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: isNNObject(data) ? json2Str(data) : null,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n    private callback = (callback: Function, data: any, message: any) => {\r\n        // console.log('message: '+ message);\r\n        if(isNNObject(callback) && typeof callback == \"function\"){\r\n            callback(data, message);\r\n        }\r\n    };\r\n\r\n    /*\r\n        private handleResult = (data: any) => {\r\n        if (data) {\r\n            if (data.message) {\r\n                return null;\r\n            } else {\r\n                return data;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private onBadRequest = () => {\r\n       \r\n    };\r\n    \r\n    private onError = () => {\r\n        \r\n        // alert('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n        // console.error('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n         \r\n    };\r\n    \r\n    private onUnAuthorized = () => {\r\n        // alert('UnAuthorized Request');\r\n                 \r\n    };\r\n    */\r\n};","// import { AsyncStorage, Platform } from 'react-native';\r\nimport { actionTypes } from '../action-types';\r\nimport Api from '../api/api';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IUsers } from '../../models/store/users';\r\n// import { IAd } from '../../models/ad/ad';\r\n// import { IAds } from '../../models/store/ads';\r\n// import { IPoll } from '../../models/poll/poll';\r\n// import { IPolls } from '../../models/store/polls';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IHomes } from '../../models/store/homes';\r\n// import { IUserHome } from '../../models/user-home/user-home';\r\n// import { IUserHomes } from '../../models/store/user-homes';\r\nimport { IMember } from '../../models/home';\r\n// import { ITicket } from '../../models/home/ticket';\r\n// import { ITickets } from '../../models/store/tickets';\r\nimport { IBlock } from '../../models/block';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'account/';\r\n\r\nexport const login = (userName: string, password: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  let fcm_token: string | null = localStorage.getItem('fcm_token');\r\n    new Api().post(controller + 'login', (result: any, message: string) => {\r\n      // console.log('OUT: ', result);\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.token) && isNN(result.data.userId))\r\n      {\r\n        // console.log('IN: ', result);\r\n        try {\r\n          // console.log(result.token);\r\n          sessionStorage.setItem('auth_token', result.data.token);\r\n          sessionStorage.setItem('client_id', result.data.clientId);\r\n          sessionStorage.setItem('user_id', result.data.userId);\r\n        } catch (error) {\r\n          // console.error('AsyncStorage error: ' + error.message);\r\n        }\r\n        dispatch(setLoginResult(true));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, {\r\n      userName: userName,\r\n      password: password,\r\n      rememberMe: false,\r\n      fcmToken: fcm_token,\r\n      os: 'web', // Platform.OS, ////TODO\r\n      osVersion: 'web' // Platform.Version ////TODO\r\n    });\r\n};\r\n\r\nexport const getProfile = (callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 'profile', (result: any, message: string) => {\r\n    // console.log('OUT: ', result);\r\n    if(isNNObject(result) && isNNObject(result.data) && isNN(result.data._id))\r\n    {\r\n      dispatch(getUserResult(result.data as IUser));\r\n      dispatch(setHomeIndexResult(isNN(result.data.homes) ? 0 : -1));\r\n      let roles = result.data.role.split(',');\r\n      if(isNN(roles)){\r\n        dispatch(setRoleResult(roles[0]));\r\n      }\r\n      // dispatch(getAdResult(((isNNObject(result.data.ad) && result.data.ad instanceof Array) ? result.data.ad as Array<IAd> : []), true, false, ''));\r\n      // dispatch(getPollResult(((isNNObject(result.data.poll) && result.data.poll instanceof Array) ? result.data.poll as Array<IPoll> : []), true, false, ''));\r\n    \r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0){\r\n        new Api().get('members', (mresult: any, message: string) => {\r\n          if (isNNObject(mresult) && isNN(mresult.data)) {\r\n            dispatch(getUsersResult(mresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(mresult.message) ? mresult.message : 'Failed to load Members.');\r\n          }\r\n        });\r\n        /*\r\n        loadAllMember(result.data.client._id, (members: Array<IMember>) => {\r\n          console.log('members: ', members)\r\n          dispatch(getUsersResult(members, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n        new Api().get('blocks/' + result.data.client._id, (bresult: any, message: string) => {\r\n          if (isNNObject(bresult) && isNN(bresult.data)) {\r\n            dispatch(getBlockResult(bresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n      }\r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0 || roles.indexOf(ROLE.GATEKEEPER) >= 0){\r\n        new Api().get('homes/' + result.data.client._id, (hresult: any, message: string) => {\r\n          if (isNNObject(hresult) && isNN(hresult.data)) {\r\n            hresult.data.forEach((h: any) => {\r\n              h.memberIds = h.members;\r\n              delete h.members;\r\n            });\r\n            dispatch(getHomesResult(hresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n        \r\n        /*\r\n        loadAllHome(result.data.client._id, (homes: Array<IHome>) => {\r\n          console.log('homes: ', homes)\r\n          dispatch(getHomesResult(homes, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n      }\r\n      \r\n      // dispatch(getUsersResult(((isNNObject(result.data.users) && result.data.users instanceof Array) ? result.data.users as Array<IUser> : []), true, false, ''));\r\n      // dispatch(getHomesResult(((isNNObject(result.data.homes) && result.data.homes instanceof Array) ? result.data.homes as Array<IHome> : []), true, false, ''));\r\n      // dispatch(getUserHomesResult(((isNNObject(result.data.userHomes) && result.data.userHomes instanceof Array) ? result.data.userHomes as Array<IUserHome> : []), true, false, ''));\r\n      \r\n      // dispatch(getHomesResult([], true, false, ''));\r\n      // dispatch(getUserHomesResult([], true, false, ''));\r\n      // dispatch(getTicketsResult(((isNNObject(result.data.tickets) && result.data.tickets instanceof Array) ? result.data.tickets as Array<ITicket> : []), true, false, ''));\r\n      //dispatch(setLoginResult(true));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const homeChange = (index: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(setHomeIndexResult(index));\r\n  callback(true);\r\n};\r\n\r\nexport const changePassword = (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'changepassword/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    password: password,\r\n    newPassword: newPassword\r\n  });\r\n};\r\n\r\nexport const forgetPassword = (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'resetpassword', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.data))\r\n    {\r\n      if(result.data.data === true){\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, result.data.message);\r\n      }\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    mobileNo: mobileNumber,\r\n    emailId: email\r\n  });\r\n};\r\n\r\nexport const updateProfile = (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  new Api().put(controller + 'profile/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.name = name;\r\n      user.mobileNo = mobileNo;\r\n      user.emailId = emailId;\r\n\r\n      dispatch(getUserResult(user));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    name: name,\r\n    mobileNo: mobileNo,\r\n    emailId: emailId\r\n  });\r\n};\r\n\r\nexport const updateRole = (role: string, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  dispatch(setRoleResult(role));\r\n  callback(true, '');\r\n};\r\n\r\nexport const logout = (callback: (result: boolean) => void) => (dispatch: any) => {\r\n  try {\r\n    sessionStorage.removeItem('auth_token');\r\n    sessionStorage.removeItem('user_id');\r\n    sessionStorage.removeItem('client_id');\r\n    dispatch(setLoginResult(false));\r\n    dispatch(setHomeIndexResult(-1));\r\n    dispatch(resetState());\r\n    callback(true);\r\n  } catch (error) {\r\n    // console.error('AsyncStorage error: ' + error.message);\r\n    callback(false);\r\n  }\r\n};\r\n\r\nexport const setLogin = (isLoggedIn: boolean) => (dispatch: any) => {\r\n  dispatch(setLoginResult(isLoggedIn));\r\n};\r\n\r\nexport const signup = (data: IMember, clientCode: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    clientCode: clientCode,\r\n    password: data.mobileNo\r\n  });\r\n  new Api().post(controller + 'signup', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const setGateNo = (gateNo: string) => (dispatch: any) => {\r\n  dispatch(setGateNoResult(gateNo));\r\n};\r\n\r\nconst setGateNoResult = (gateNo: string) => ({\r\n  type: actionTypes.SET_GATE_NO,\r\n  payload: gateNo\r\n});\r\nconst setLoginResult = (data: boolean) => ({\r\n  type: actionTypes.SET_LOGIN_STATUS,\r\n  payload: data\r\n});\r\nconst setRoleResult = (data: string) => ({\r\n  type: actionTypes.SET_ROLE,\r\n  payload: data\r\n});\r\nconst setHomeIndexResult = (data: number) => ({\r\n  type: actionTypes.SET_HOME_INDEX,\r\n  payload: data\r\n});\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n/*\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});\r\n*/\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});\r\n/*\r\nconst getUserHomesResult = (data: Array<IUserHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERHOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUserHomes\r\n});\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});\r\n*/\r\nconst resetState = () => ({\r\n  type: actionTypes.RESET\r\n});","import styled from 'styled-components';\r\n\r\nexport const View = styled.div`\r\n`;\r\n\r\nexport const ScrollView = styled.div`\r\noverflow: auto;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n`;\r\n\r\nexport const Picker = styled.select`\r\n`;\r\n\r\nexport const Text = styled.label`\r\n`;\r\n\r\nexport const TouchableHighlight = styled.span`\r\n`;\r\n\r\n// export const Button = styled.button`\r\n//   cursor: pointer;\r\n//   background: transparent;\r\n//   font-size: 16px;\r\n//   border-radius: 3px;\r\n//   color: ${props => (props.primary ? 'violet' : 'palevioletred')};\r\n//   border: ${props =>\r\n//     props.primary ? '2px solid violet' : '2px solid palevioletred'};\r\n//   margin: 0 1em;\r\n//   padding: 0.25em 1em;\r\n//   transition: 0.5s all ease-out;\r\n\r\n//   &:hover {\r\n//     color: white;\r\n//     background-color: ${props =>\r\n//       props.primary ? 'violet' : 'palevioletred'};\r\n//   }\r\n// `;","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  title: string,\r\n  onPress: () => void,\r\n  style? : {}\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Button extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    title: '',\r\n    onPress: () => {},\r\n    style: {}\r\n  }\r\n  render() {\r\n    return (\r\n      <input type='button' className='btn' value={this.props.title} onClick={() => this.props.onPress()} style={{...styles.btn, ...this.props.style}} />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  btn: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    borderColor: COLOR.PRIMARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    cursor: 'pointer',\r\n    // alignItems: 'center',\r\n    // paddingTop: 7,\r\n    // paddingBottom: 7,\r\n    // paddingLeft: 5,\r\n    // paddingRight: 5\r\n  }\r\n};","import { IMAGE_BASE_PATH } from '../constants/index';\r\n\r\nexport default class Images {\r\n    static readonly logo = IMAGE_BASE_PATH + 'logo.png';\r\n    static readonly logoInv = IMAGE_BASE_PATH + 'logo-inv.png';\r\n    static readonly icon = IMAGE_BASE_PATH + 'icon.png';\r\n    static readonly logout = IMAGE_BASE_PATH + 'logout.png';\r\n    static readonly homeIcon = IMAGE_BASE_PATH + 'home-icon.png';\r\n    static readonly homeIconInv = IMAGE_BASE_PATH + 'home-icon-inv.png';\r\n    static readonly homeIconWhite = IMAGE_BASE_PATH + 'home-icon-white.png';\r\n    static readonly notification = IMAGE_BASE_PATH + 'notification.png';\r\n    static readonly notificationInv = IMAGE_BASE_PATH + 'notification-inv.png';\r\n    static readonly notificationWhite = IMAGE_BASE_PATH + 'notification-white.png';\r\n    static readonly setting = IMAGE_BASE_PATH + 'setting.png';\r\n    static readonly settingInv = IMAGE_BASE_PATH + 'setting-inv.png';\r\n    static readonly settingWhite = IMAGE_BASE_PATH + 'setting-white.png';\r\n    static readonly info = IMAGE_BASE_PATH + 'info.png';\r\n    static readonly infoInv = IMAGE_BASE_PATH + 'info-inv.png';\r\n    static readonly infoWhite = IMAGE_BASE_PATH + 'info-white.png';\r\n    static readonly workInProgress = IMAGE_BASE_PATH + 'work-in-progress.png';\r\n    static readonly members = IMAGE_BASE_PATH + 'members.png';\r\n    static readonly membersInv = IMAGE_BASE_PATH + 'members-inv.png';\r\n    static readonly vehicle = IMAGE_BASE_PATH + 'vehicle.png';\r\n    static readonly vehicleInv = IMAGE_BASE_PATH + 'vehicle-inv.png';\r\n    static readonly username = IMAGE_BASE_PATH + 'username.png';\r\n    static readonly password = IMAGE_BASE_PATH + 'password.png';\r\n    static readonly support = IMAGE_BASE_PATH + 'support.png';\r\n    static readonly supportInv = IMAGE_BASE_PATH + 'support-inv.png';\r\n    static readonly visitors = IMAGE_BASE_PATH + 'visitors.png';\r\n    static readonly visitorsInv = IMAGE_BASE_PATH + 'visitors-inv.png';\r\n    static readonly visitorsWhite = IMAGE_BASE_PATH + 'visitors-white.png';\r\n    static readonly servant = IMAGE_BASE_PATH + 'servant.png';\r\n    static readonly servantInv = IMAGE_BASE_PATH + 'servant-inv.png';\r\n    static readonly add = IMAGE_BASE_PATH + 'add.png';\r\n    static readonly edit = IMAGE_BASE_PATH + 'edit.png';\r\n    static readonly delete = IMAGE_BASE_PATH + 'delete.png';\r\n    static readonly close = IMAGE_BASE_PATH + 'close.png';\r\n    static readonly tick = IMAGE_BASE_PATH + 'tick.png';    \r\n    static readonly cancel = IMAGE_BASE_PATH + 'cancel.png';\r\n    static readonly mobile = IMAGE_BASE_PATH + 'mobile.png';\r\n    static readonly email = IMAGE_BASE_PATH + 'email.png';\r\n    static readonly addvertise = IMAGE_BASE_PATH + 'addvertise.png';\r\n    static readonly reminder = IMAGE_BASE_PATH + 'reminder.png';\r\n    static readonly users = IMAGE_BASE_PATH + 'users.png';\r\n    static readonly homes = IMAGE_BASE_PATH + 'homes.png';\r\n    static readonly blocks = IMAGE_BASE_PATH + 'blocks.png';\r\n    static readonly search = IMAGE_BASE_PATH + 'search.png';\r\n    static readonly datePicker = IMAGE_BASE_PATH + 'date-picker.png';\r\n    static readonly money = IMAGE_BASE_PATH + 'money.png';\r\n    static readonly moneyInv = IMAGE_BASE_PATH + 'money-inv.png';\r\n    static readonly view = IMAGE_BASE_PATH + 'view.png';\r\n    static readonly document = IMAGE_BASE_PATH + 'document.png';\r\n    static readonly documentInv = IMAGE_BASE_PATH + 'document-inv.png';\r\n    static readonly menu = IMAGE_BASE_PATH + 'menu.png';\r\n    static readonly loading = IMAGE_BASE_PATH + 'loading.gif';\r\n};","import * as React from 'react';\r\nimport { View, Image } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\nimport Images from '../images';\r\n\r\ninterface IProps {\r\n  visible: boolean,\r\n  text?: string\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Spinner extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    visible: false,\r\n    text: 'Loading...'\r\n  }\r\n  render() {\r\n    return (\r\n      this.props.visible &&\r\n      <View>\r\n        <View className='loader-overlay'></View>\r\n        <View className='loader'>\r\n          <Image className='' src={Images.loading} style={{width: '50px', height: '50px'}} />\r\n          <View style={{color: COLOR.SECONDARY, fontWeight: 'bold', marginTop: 5}}>{this.props.text}</View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n// <AppSpinner visible={this.props.visible} textContent={this.props.text} textStyle={{color: COLOR.SECONDARY}} />\r\n","export const styles = {\r\n  textInput: {\r\n    // borderBottomWidth: 1,\r\n    // borderBottomColor: COLOR.FONT_COLOR2,\r\n    // paddingBottom: 5\r\n    }\r\n  };\r\n  ","import {ToastsStore as toast} from 'react-toasts';\r\n\r\n class Toast {\r\n   static success = (msg: string) => {\r\n       // Toast.show(msg, '#003300', '#FFFFFF');\r\n       toast.success(msg);\r\n    }\r\n    static fail = (msg: string) => {\r\n        // Toast.show(msg, '#b30000', '#FFFFFF');\r\n        toast.error(msg);\r\n    }\r\n    static warn = (msg: string) => {\r\n        // Toast.show(msg, '#e68a00', '#FFFFFF');\r\n        toast.warning(msg);\r\n    }\r\n    static info = (msg: string) => {\r\n        // Toast.show(msg, '#000080', '#FFFFFF');\r\n        toast.info(msg);\r\n    }\r\n    static show = (msg: string, bgColor: string, textColor: string) => {\r\n\r\n        toast.info(msg);\r\n        \r\n        /*\r\n        // Add a Toast on screen.\r\n        RNToast.show(msg, {\r\n            duration: RNToast.durations.SHORT,\r\n            position: RNToast.positions.TOP,\r\n            shadow: true,\r\n            animation: true,\r\n            hideOnPress: true,\r\n            delay: 0,\r\n            backgroundColor: bgColor,\r\n            textColor: textColor,\r\n            onShow: () => {\r\n                // calls on toast\\`s appear animation start\r\n            },\r\n            onShown: () => {\r\n                // calls on toast\\`s appear animation end.\r\n            },\r\n            onHide: () => {\r\n                // calls on toast\\`s hide animation start.\r\n            },\r\n            onHidden: () => {\r\n                // calls on toast\\`s hide animation end.\r\n            }\r\n        });\r\n        */\r\n    }\r\n};\r\n\r\nexport default Toast;","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, generateUUID } from '../../util';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  key: string,\r\n  onPress: () => void\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class RadioButton extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    isActive: false,\r\n    text: '',\r\n    key: '',\r\n    onPress: () => {}\r\n  }\r\n  render() {\r\n    let id = generateUUID();\r\n    return (\r\n      <span style={styles.container}>\r\n        <input type='radio' id={id} key={this.props.key} checked={this.props.isActive} onClick={this.props.onPress} />\r\n        {\r\n          isNN(this.props.text) &&\r\n          <label htmlFor={id} style={styles.text}>{this.props.text}</label>\r\n        }\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    // flexDirection: 'row',\r\n    marginRight: 10\r\n  },\r\n  circle: {\r\n    height: 24,\r\n    width: 24,\r\n    borderRadius: 12,\r\n    borderWidth: 2,\r\n    borderColor: COLOR.PRIMARY,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  dot: {\r\n    height: 12,\r\n    width: 12,\r\n    borderRadius: 6,\r\n    backgroundColor: COLOR.PRIMARY\r\n  },\r\n  text: {\r\n    marginLeft: 5\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    container: {\r\n    },\r\n    head: {\r\n      flexDirection: 'row',\r\n      alignContent: 'flex-start',\r\n      backgroundColor: COLOR.PRIMARY,\r\n      paddingLeft: 10,\r\n      paddingRight: 10,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    title: {\r\n      flex: 15,\r\n      alignSelf: 'flex-start',\r\n      width: 'auto',\r\n      'font-weight': 'bold',\r\n      fontSize: 20,\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    close: {\r\n      flex: 1,\r\n      alignSelf: 'flex-end',\r\n      marginBottom: 5\r\n    },\r\n    row: {\r\n      // flexDirection: 'row',\r\n      marginTop: 3,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    ele: {\r\n      flex: 1,\r\n      width: '100%'\r\n    },\r\n    radio: {\r\n      borderColor: COLOR.HR_COLOR,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioText: {\r\n      // 'font-weight': 'bold',\r\n      // color: COLOR.HR_COLOR\r\n    },\r\n    radioActive: {\r\n      backgroundColor: COLOR.PRIMARY,\r\n      borderColor: COLOR.PRIMARY,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioActiveText: {\r\n      // 'font-weight': 'bold',\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    saveBtn: {\r\n      marginTop: 5,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    }\r\n  };","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport { IMember } from '../../models/home';\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  onSignUp: (data: IMember, clientCode: string, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  id: string,\r\n  clientCode: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class SignUp extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      clientCode: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.clientCode) && isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.mobileNo) && isNN(this.state.emailId)){\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSignUp(member, this.state.clientCode, (result: boolean) => {\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              clientCode: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Submit.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View  style={{flex: 1}}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"App Code\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.clientCode} onChange={(event: any) => this.setState({clientCode: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Name\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' className='form-control' placeholder=\"Age\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n            <RadioButton isActive={this.state.gender === 'O'} text='Other' onPress={() => this.setState({gender: 'O'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Mobile Number\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' className='form-control' placeholder=\"Email ID\" style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TextInput, Image } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Images from '../images';\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, onEnter } from '../../util';\r\nimport Toast from  '../../util/toast';\r\nimport { IMember } from '../../models/home';\r\nimport SignUp from './sign-up'\r\n\r\ninterface IProps {\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => void,\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => void,\r\n    onSignUp: (data: IMember, clientCode: string, sCallback: (result: boolean, message: string) => void) => void\r\n}\r\n\r\ninterface IState{\r\n    userName: string,\r\n    password: string,\r\n    message: string,\r\n    isLoading: boolean,\r\n    isForgetPass: boolean,\r\n    isSignUp: boolean,\r\n    mobileNumber: string,\r\n    email: string\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            message: '',\r\n            isLoading: false,\r\n            isForgetPass: false,\r\n            isSignUp: false,\r\n            mobileNumber: '',\r\n            email: ''\r\n        };\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onForgetPassword = this.onForgetPassword.bind(this);\r\n        this.onForgetPassSubmit = this.onForgetPassSubmit.bind(this);\r\n        this.onCreateAccount = this.onCreateAccount.bind(this);\r\n        this.onSignUp = this.onSignUp.bind(this);\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    onLogin = () =>{\r\n        if(isNN(this.state.userName) && isNN(this.state.password)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            this.props.onLogin(this.state.userName, this.state.password, (result: boolean, message: string) => {\r\n                if(result === true){                        \r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            // Toast.warn('Enter Mobile Number and Password to continue.');\r\n            Toast.warn('Enter Mobile Number and Password to continue.');\r\n        }\r\n    };\r\n    \r\n    onForgetPassword = () =>{\r\n        this.setState({\r\n            isForgetPass: true,\r\n            isSignUp: false,\r\n            mobileNumber: '',\r\n            email: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    onForgetPassSubmit = () => {\r\n        if(isNN(this.state.mobileNumber) && isNN(this.state.email)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            this.props.onForgetPassword(this.state.mobileNumber, this.state.email.toLowerCase(), (result: boolean, message: string) => {\r\n                if(result === true){\r\n                    Toast.success('Password reset success. Login with New password sent to your Email. Change password after login.');\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: '',\r\n                        isForgetPass: false,\r\n                        isSignUp: false,\r\n                        userName: '',\r\n                        password: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            Toast.warn('Enter Mobile Number and Email to continue.');\r\n        }\r\n    };\r\n\r\n    onCreateAccount = () =>{\r\n        this.setState({\r\n            isForgetPass: false,\r\n            isSignUp: true,\r\n            mobileNumber: '',\r\n            email: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    onSignUp = (data: IMember, clientCode: string, callback: (result: boolean) => void) => {\r\n        this.setState({\r\n            message: '',\r\n            isLoading: true\r\n        });\r\n        this.props.onSignUp(data, clientCode, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                  isForgetPass: false,\r\n                  isSignUp: false,\r\n                  message: ''\r\n              });\r\n              Toast.success('Sign Up success. Please wait till Manager approves then you can access your account.');\r\n              callback(true);\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to Sign Up.');\r\n              callback(false);\r\n            }\r\n          });\r\n    };\r\n\r\n  render() {\r\n    return (\r\n            <View className='container' style={{backgroundColor: COLOR.INVERSE, maxWidth: '270px'}}>\r\n                <View className='row' style={{flexDirection: 'row', alignItems: 'center', justifyContent:'center', marginBottom: 30, marginTop: 5}}>\r\n                    <Image src={Images.logo} style={{width: 150, height: 150}}/>\r\n                </View>\r\n                {this.state.isForgetPass &&\r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <Image className='absolute' src={Images.mobile} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control' placeholder='Registered Mobile Number' value={this.state.mobileNumber} style={{...CommonStyles.textInput, ...styles.txt}}\r\n                        onChange={(event: any) => this.setState({mobileNumber: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onForgetPassSubmit);\r\n                        }} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 40}}>\r\n                        <Image className='absolute' src={Images.email} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control' placeholder='Registered Email' value={this.state.email} style={{...CommonStyles.textInput, ...styles.txt}}\r\n                        onChange={(event: any) => this.setState({email: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onForgetPassSubmit);\r\n                        }} />\r\n                    </View>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"Reset my password\" : \"Loading...\"}\r\n                    onPress={this.onForgetPassSubmit}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View style={{marginTop: 15}}>\r\n                        <Text className='pointer' onClick={() => { \r\n                            this.setState({\r\n                                isForgetPass: false,\r\n                                isSignUp: false,\r\n                                mobileNumber: \"\",\r\n                                email: \"\",\r\n                                message: \"\"\r\n                            });\r\n                         }} style={{marginBottom: 5, textAlign: 'center', color: COLOR.SECONDARY}}>Go back to Login.</Text>\r\n                    </View>\r\n                </View>\r\n                }\r\n                {this.state.isSignUp && <>\r\n                    <SignUp onSignUp={this.onSignUp} />\r\n                    <View style={{marginTop: 15, textAlign: 'center'}}>\r\n                        <Text className='pointer' onClick={() => { \r\n                            this.setState({\r\n                                isForgetPass: false,\r\n                                isSignUp: false,\r\n                                mobileNumber: \"\",\r\n                                email: \"\",\r\n                                message: \"\"\r\n                            });\r\n                         }} style={{marginBottom: 5, textAlign: 'center', color: COLOR.SECONDARY}}>Go back to Login.</Text>\r\n                    </View>\r\n                    </>\r\n                }\r\n                {(!this.state.isForgetPass && !this.state.isSignUp) && \r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <Image className='absolute' src={Images.username} style={styles.txtIcon} />\r\n                        <TextInput type='text' className='form-control' placeholder='Mobile Number' style={{...CommonStyles.textInput, ...styles.txt}} value={this.state.userName} \r\n                        onChange={(event: any) => this.setState({userName: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onLogin);\r\n                        }} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 15}}>\r\n                        <Image className='absolute' src={Images.password} style={styles.txtIcon} />\r\n                        <TextInput type='password'  className='form-control' placeholder='Password' value={this.state.password} style={{...CommonStyles.textInput, ...styles.txt}}\r\n                        onChange={(event: any) => this.setState({password: event.target.value})}\r\n                        onKeyPress={(e) => {\r\n                            onEnter(e, this.onLogin);\r\n                        }} />\r\n                    </View>\r\n                    <Text className='col-12 pointer' onClick={this.onForgetPassword} style={{marginBottom: 15, textAlign: 'right', color: COLOR.SECONDARY}}>Forgot Password?</Text>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"LOGIN\" : \"Loading...\"}\r\n                    onPress={this.onLogin}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View className='col-12' style={{marginTop: 15, alignItems: 'center', justifyContent:'center'}}>\r\n                        <Text className='col-12' style={{marginBottom: 5, textAlign: 'center'}}>Dont have an account?</Text>\r\n                        <View className='col' style={{float: 'left', alignItems: 'center', justifyContent:'center', borderWidth: 1, borderColor: '#000000', borderStyle: 'solid', borderRadius: 10}}>\r\n                            <Text style={{textAlign: 'center', margin: '7px', cursor: 'pointer'}} onClick={this.onCreateAccount}>CREATE / JOIN YOUR FLAT</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                }\r\n                <Spinner visible={this.state.isLoading} text={\"\"} />\r\n            </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n    row: {\r\n        // flexDirection: 'row',\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        marginBottom: 25\r\n    },     \r\n    txtIcon: {\r\n        marginLeft: 6,\r\n        // marginRight: -15,\r\n        height: 15,\r\n        width: 15,\r\n        resizeMode : 'stretch',\r\n        alignItems: 'center',\r\n        top: 11\r\n\r\n    },\r\n    txt: {\r\n        flex: 1,\r\n        paddingLeft: 25\r\n    }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IMember } from '../models/home';\r\nimport { login, forgetPassword, signup } from '../store/actions/account';\r\n\r\nimport Page from '../components/login/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => dispatch(login(userName, password, callback)),\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => dispatch(forgetPassword(mobileNumber, email, callback)),\r\n    onSignUp: (data: IMember, clientCode: string, callback: (result: boolean, message: string) => void) => dispatch(signup(data, clientCode, callback))\r\n});\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(Page);","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    container: {\r\n      // backgroundColor: COLOR.MODAL_BG,\r\n      height: '80%',\r\n      marginTop: 30,\r\n      marginBottom: 25,\r\n      marginLeft: 15,\r\n      marginRight: 15\r\n    },\r\n    head: {\r\n      // padding: 7,\r\n      // flexDirection: 'row'\r\n      alignContent: 'center'\r\n    },\r\n    title: {\r\n      flex: 1,\r\n      // flexDirection: 'row',\r\n      alignContent: 'center',\r\n      color: COLOR.FONT_COLOR2\r\n    },\r\n    close: {\r\n      width: 20,\r\n      flex: 1,\r\n      // flexDirection: 'row',\r\n      justifyContent: 'flex-end',\r\n      alignContent: 'flex-end',\r\n      alignSelf: 'flex-end'\r\n    },\r\n    content: {\r\n      // padding: 15\r\n    }\r\n  };","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { Link } from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text, Image } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Images from '../images';\r\nimport {styles as popupStyles} from '../../styles/popup';\r\nimport { ROLE } from '../../constants/index';\r\nimport { IHome } from '../../models/home';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{ \r\n  isShowHomeModel: boolean\r\n};\r\n\r\nexport default class TitleBar extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isShowHomeModel: false\r\n    };\r\n    this.onToggleHomeModel = this.onToggleHomeModel.bind(this);\r\n    this.onHomeChange = this.onHomeChange.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  onToggleHomeModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowHomeModel: isShow\r\n    });\r\n  }\r\n\r\n  onHomeChange = (index: number) => {\r\n    this.props.onHomeChange(index, (result: boolean) => {\r\n      if(result === true){\r\n        this.onToggleHomeModel(false);\r\n      }else{\r\n      }\r\n    });\r\n  }\r\n  \r\n  logout = () => {\r\n    confirmAlert({\r\n      title: 'Confirm to logout',\r\n      message: 'Are you sure you wish to logout?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.props.onLogout((result: boolean) => {\r\n              if(result === true){\r\n                Toast.success('Logout Success!');\r\n              }else{\r\n                Toast.fail('Failed to logout!');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className='center' style={styles.titleBar}>\r\n        <Link className='fl' to=''>\r\n          <Image src={Images.logoInv} className='' style={{ width: 22, height: 22}} />\r\n        </Link>\r\n          {/* <Image src={this.props.isMenuExpand ? Images.close : Images.menu} className='fl pointer' style={(this.props.isMenuExpand ? { width: 17, height: 17, marginLeft: 15, marginTop: 6} : { width: 22, height: 22, marginLeft: 15, marginTop: 4})} onClick={this.props.onToggleMenu} /> */}\r\n          {(this.props.appUser.role === ROLE.USER) ?\r\n          <Text className='pointer' style={styles.titleText} onClick={() => this.onToggleHomeModel(true)}>{((isNN(this.props.user.homes) && this.props.appUser.homeIndex >= 0) ? this.props.user.homes[this.props.appUser.homeIndex].number : \"\")}</Text>\r\n          :\r\n          <Text style={styles.titleText}>{(this.props.appUser.role === ROLE.ADMIN ? 'Admin' : (this.props.appUser.role === ROLE.MANAGER ? 'Manager' : (this.props.appUser.role === ROLE.GATEKEEPER ? 'Gate Keeper' : this.props.appUser.role)))}</Text>\r\n          }\r\n          <span className='fr pointer' onClick={this.logout} style={{flex: 1,}}>\r\n            <Image src={Images.logout} style={{ width: 20, height: 20}}  />\r\n          </span>\r\n        {isNN(this.props.user.homes) &&\r\n        <Modal\r\n          open={this.state.isShowHomeModel}\r\n          onClose={() => this.onToggleHomeModel(false)}>\r\n          <View style={popupStyles.container}>\r\n            {\r\n            this.props.user.homes.map((d: IHome, i: number) => {\r\n              return(\r\n                <Text className='col-12 pointer' key={'h' + i} onClick={() => this.onHomeChange(i)} style={(this.props.appUser.homeIndex === i ? {...styles.homeList, ...styles.activeHome} : {...styles.homeList, ...styles.inActiveHome})}>\r\n                {'' + d.number}\r\n                </Text>\r\n              )\r\n            })\r\n            }\r\n          </View>\r\n        </Modal>\r\n        }\r\n      </header>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  titleBar: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    // alignItems: 'flex-start',\r\n    // justifyContent: 'flex-start',\r\n    width: '100%',\r\n    // flexDirection: 'row',\r\n    padding: 7\r\n  },\r\n  titleText: {\r\n    flex: 15, \r\n    // textAlign: 'center', \r\n    color: COLOR.FONT_COLOR3, \r\n    // fontWeight: 'bold', \r\n    fontSize: 15\r\n  },\r\n  homeList: {\r\n    padding: 15, \r\n    borderBottomWidth: 1, \r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid'\r\n    // textAlign: 'center'\r\n  },\r\n  inActiveHome: {\r\n    color: COLOR.FONT_COLOR2\r\n  },\r\n  activeHome: {\r\n    color: COLOR.PRIMARY,\r\n    // fontWeight: 'bold',\r\n    fontSize: 20\r\n  }\r\n};","import { ROLE } from \".\";\r\n\r\nexport const NAV = [\r\n    {title: 'Home', image:'homeIconWhite', path: '/'},\r\n    {title: 'Manage', image:'visitorsWhite', roles: [ROLE.USER, ROLE.ADMIN, ROLE.MANAGER], child: [\r\n        {title: 'Members', path: 'members', roles: [ROLE.USER]},\r\n        {title: 'Vehicles', path: 'vehicles', roles: [ROLE.USER]},\r\n        {title: 'Servants', path: 'servants', roles: [ROLE.USER]},\r\n        {title: 'Tickets', path: 'tickets', roles: [ROLE.USER, ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Visitors', path: 'visitors', roles: [ROLE.USER]},\r\n        {title: 'Ads', path: 'ads', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Notification', path: 'notification', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Users', path: 'users', roles: [ROLE.ADMIN]},\r\n        {title: 'Homes', path: 'homes', roles: [ROLE.ADMIN]},\r\n        {title: 'Blocks', path: 'blocks', roles: [ROLE.ADMIN]},\r\n        {title: 'Visitors', path: 'all-visitors', roles: [ROLE.ADMIN, ROLE.MANAGER, ROLE.GATEKEEPER]},\r\n        {title: 'Payment', path: 'payment', roles: [ROLE.ADMIN, ROLE.MANAGER]}\r\n    ]},\r\n    {title: 'Notice', image:'notificationWhite', path: 'notice'},\r\n    {title: 'Settings', image:'settingWhite', child: [\r\n        {title: 'My Profile', path: 'my-profile'},\r\n        {title: 'My Role', path: 'my-role', isMRole: true},\r\n        {title: 'My Documents', path: 'my-documents'},\r\n        {title: 'Change Password', path: 'change-password'}\r\n    ]},\r\n    {title: 'Info', image:'infoWhite', path: 'info'}\r\n];","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport { NAV } from '../../constants/nav';\r\nimport { COLOR } from '../../constants';\r\nimport Images from '../images';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser\r\n};\r\n\r\ninterface IState{\r\n  isExpand: boolean,\r\n  activeMenu: string,\r\n  activeTopMenu: string\r\n};\r\n\r\nexport default class NavBar extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isExpand: false,\r\n      activeMenu: 'Home',\r\n      activeTopMenu: ''\r\n    };\r\n    this.loadNav = this.loadNav.bind(this);\r\n    this.onToggleMenu = this.onToggleMenu.bind(this);\r\n    this.getImage = this.getImage.bind(this);\r\n  }\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  getImage = (img: string) => {\r\n    switch(img){\r\n      case 'homeIconWhite':\r\n        return Images.homeIconWhite;\r\n      case 'visitorsWhite':\r\n        return Images.visitorsWhite;\r\n      case 'notificationWhite':\r\n        return Images.notificationWhite;\r\n      case 'settingWhite':\r\n        return Images.settingWhite;\r\n      case 'infoWhite':\r\n        return Images.infoWhite;\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\n\r\n  loadNav = (nav: any, pTitle: string, isTopLevel: boolean = false) => {\r\n    let that = this;\r\n    return(\r\n      <ul className={'navbar-nav' + ((!isTopLevel && this.state.activeTopMenu !== pTitle) ? ' hide' : '')} style={!isTopLevel ? styles.inner : {}}>\r\n      {\r\n        nav.map((d: any, i: number) => {\r\n          if((isNN(d.path) || isNN(d.child)) && (!isNN(d.roles) || d.roles.indexOf(this.props.appUser.role) >= 0) && (!d.isMRole || this.props.user.role.indexOf(',') > 0)){\r\n          return(\r\n            <li key={'nav-item' + i } className='nav-item' title={d.title}>\r\n              <Link className={'nav-link' + (this.state.activeMenu === d.title || (d.child && isNN(d.child.filter((c: any) => c.title === this.state.activeMenu))) ? ' active' : '')} to={isNN(d.path) ? d.path : '#' } onClick={() => {\r\n                if(this.state.activeTopMenu === d.title){\r\n                  this.setState({\r\n                    activeTopMenu: ''\r\n                  });\r\n                }else if(isTopLevel){\r\n                  this.setState({\r\n                    activeTopMenu: d.title\r\n                  });\r\n                  if(isNN(d.child)){\r\n                    this.setState({\r\n                      isExpand: true\r\n                    });\r\n                  }\r\n                }\r\n                if(isNN(d.path)){\r\n                  this.setState({\r\n                    activeMenu: d.title,\r\n                    activeTopMenu: '',\r\n                    isExpand: false\r\n                  });\r\n                }\r\n              }}>\r\n                {(!this.state.isExpand && isNN(d.image)) ?\r\n                <Image src={this.getImage(d.image)} className='' style={{ width: 26, height: 22}} />\r\n                :\r\n                <span>{d.title}</span>\r\n                }\r\n                </Link>\r\n              {\r\n                isNN(d.child) && \r\n                that.loadNav(d.child, d.title)\r\n              }\r\n            </li>\r\n          )\r\n          }else{\r\n            return null;\r\n          }\r\n        })\r\n      }\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  onToggleMenu = () => {\r\n    this.setState({\r\n      isExpand: !this.state.isExpand\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav style={{...styles.nav, width: (this.state.isExpand ? '250px' : '44px')}}>\r\n        {\r\n          this.loadNav(NAV, '', true)\r\n        }\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  nav: {\r\n    backgroundColor: COLOR.SECONDARY,\r\n    color: COLOR.INVERSE\r\n  },\r\n  inner:{\r\n    backgroundColor: COLOR.PRIMARY,\r\n    paddingLeft: 20\r\n  }\r\n};","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class TabBar extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // }\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <footer style={styles.tabBar}>\r\n        <View className='center'>© Nest</View>\r\n      </footer>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {  \r\n  tabBar: {\r\n    flex: 1,\r\n    // backgroundColor: COLOR.HR_COLOR,\r\n    borderTopColor: COLOR.HR_COLOR,\r\n    borderTopWidth: 1,\r\n    'border-top-style': 'solid',\r\n    // alignItems: 'flex-start',\r\n    // justifyContent: 'flex-start',\r\n    width: '100%',\r\n    // flexDirection: 'row',\r\n    // position: 'absolute',\r\n    marginTop: 25,\r\n    paddingTop: 15,\r\n    paddingBottom: 15\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    alignItems: 'center'\r\n  },\r\n  tabImage: {\r\n    width: 20,\r\n    height: 20\r\n  },\r\n  activeTab: {\r\n    backgroundColor: COLOR.INVERSE\r\n  }\r\n};","import Api from '../api/api';\r\nimport { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'payment';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const search = (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const save = (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to save Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const updatePay = (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().put(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to update Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const upload = (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'upload', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.approvalid > 0)\r\n    {\r\n      /*\r\n      var homeIndex = user.homes.findIndex(d => d._id === homeId);\r\n      if(file.approvalid > 0)\r\n      {        \r\n        var paymentIndex = user.home[homeIndex].paymentApproval.findIndex(d => d.approvalid === file.approvalid);\r\n        user.home[homeIndex].paymentApproval[paymentIndex] = result.data;\r\n      }else{\r\n        user.home[homeIndex].paymentApproval.push(result.data);\r\n      }\r\n      */\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, file);\r\n};\r\n\r\nexport const update = (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/transaction/' + paymentId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      transaction._id = result.data;\r\n      // var homeIndex = user.homes.findIndex(d => d._id === params.homeid);\r\n      // if(paymentId.length > 0)\r\n      // {        \r\n        var paymentIndex = user.homes[homeIndex].payments.findIndex(d => d._id === paymentId);\r\n        if(!user.homes[homeIndex].payments[paymentIndex].transactions){\r\n          user.homes[homeIndex].payments[paymentIndex].transactions = [];\r\n        }\r\n        user.homes[homeIndex].payments[paymentIndex].transactions.push(transaction);\r\n      // }else{\r\n      //   user.homes[homeIndex].payments.push(result.data);\r\n      // }\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, transaction);\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","// import { actionTypes } from '../action-types';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants/index';\r\n// import { IHome } from '../../models/home';\r\n\r\nlet controller: string = 'visitor';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : '') + '/' + isActive, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  // data.image = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data._id.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          var foundIndex = visitors.findIndex(d => d._id === result.data);\r\n          visitors[foundIndex]._id = result.data;\r\n          visitors[foundIndex].name = name;\r\n          visitors[foundIndex].age = data.age;\r\n          visitors[foundIndex].gender = data.gender;\r\n          visitors[foundIndex].mobileNo = data.mobileNo;\r\n          visitors[foundIndex].emailId = data.emailId;\r\n          visitors[foundIndex].image = result.image;\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        sCallback(result.data as IVisitor);\r\n      } else {\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data._id.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          data._id = result.data;\r\n          data.createdBy = user.name;\r\n          visitors.unshift(data);\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        sCallback(result.data as IVisitor);\r\n      } else {\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      /*\r\n      user.homes[homeIndex].visitors = user.homes[homeIndex].visitors.filter((d, i) => d._id != id);\r\n      dispatch(getUserResult(user as IUser));\r\n      */\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const enter = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/enter/' + id + '/' + gateNo, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const exit = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/exit/' + id + '/' + gateNo, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const approve = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/approve/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const reject = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/reject/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const search = (text: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/search/' + text, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback((result && isNN(result.message)) ? result.message : 'Failed to load Visitors.');\r\n    }\r\n  });\r\n};","import Api from '../api/api';\r\nimport { isNNObject } from '../../util/index';\r\n\r\nlet controller: string = 'upload';\r\n\r\nexport const upload = (data: any, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().upload(controller, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};","import * as React from 'react';\r\nimport { ScrollView, View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNN, generateUUID } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\nimport { MONTH, COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome,\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  payment: {\r\n    paymentId: string,\r\n    amount: number,\r\n    transactionRef: string\r\n  }\r\n};\r\n\r\nexport default class MyDues extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      payment: {\r\n        paymentId: '',\r\n        amount: 0,\r\n        transactionRef: ''\r\n      }\r\n    }\r\n    this.getTotalDue = this.getTotalDue.bind(this);\r\n    this.payNow = this.payNow.bind(this);\r\n    this.clearTxn = this.clearTxn.bind(this);\r\n    this.txnFailure = this.txnFailure.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getTotalDue = () => {\r\n    let totalDue = 0;\r\n    this.props.home.payments.map((d: IPayment, i: number) => {\r\n      let amountPaid = 0;\r\n        d.transactions.filter((t, j) => t.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n      totalDue += d.amount - amountPaid;\r\n      return 1;\r\n    });\r\n    return totalDue;\r\n  };\r\n\r\n  payNow = (paymentId: string, amount: number) => {\r\n    if(paymentId && paymentId.length > 0 && amount && amount > 0){\r\n      if(isNN(this.props.user.client.upi.id) && isNN(this.props.user.client.upi.name)){\r\n        let transactionRef = generateUUID();\r\n        this.setState({\r\n          payment: {\r\n            paymentId: paymentId,\r\n            amount: amount,\r\n            transactionRef: transactionRef\r\n          }\r\n        });\r\n        \r\n        Toast.warn('Payment is in progress. Please contact administrator.');\r\n        // RNUpiPayment.initializePayment({\r\n        //   vpa: this.props.user.client.upi.id, // or can be john@ybl or mobileNo@upi\r\n        //   payeeName: this.props.user.client.upi.name,\r\n        //   amount: amount + '',\r\n        //   transactionRef: transactionRef,\r\n        //   transactionNote: ''\r\n        // }, this.successCallback, this.failureCallback);\r\n      }else{\r\n        Toast.warn('Please update UPI ID and UPI Name to app administrator to proceed further.');\r\n      }\r\n    }else{\r\n      Toast.warn('Amount should be more then 0 to proceed payment.');\r\n    }\r\n  };\r\n  \r\n  successCallback = (result: any) => {\r\n    console.log('Payment Success...', result);\r\n    if(result && result.Status)\r\n    {\r\n      if(result.Status === 'SUCCESS' && result.responseCode && result.responseCode === '00'){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let transaction = {\r\n          txnRef: result.txnRef,\r\n          txnId: result.txnId,\r\n          amount: this.state.payment.amount,\r\n          status: 'PAID',\r\n          isSuccess: true,\r\n          reason: ''\r\n        } as ITransaction;\r\n        this.props.onPaymentUpdate(this.state.payment.paymentId, transaction, (updateResult: boolean) => {\r\n          this.setState({\r\n            isLoading: false\r\n          });\r\n          this.clearTxn();\r\n          if(updateResult === true){\r\n            Toast.success('Payment success.');\r\n          }else{\r\n            Toast.fail('Payment failed.');\r\n          }\r\n        });\r\n      }else{\r\n        this.txnFailure(result);\r\n      }\r\n    }else{\r\n      this.txnFailure(result);\r\n    }\r\n  };\r\n   \r\n  failureCallback = (result: any) => {\r\n    this.txnFailure(result);\r\n  };\r\n\r\n  txnFailure = (result: any) => {\r\n    console.log('Payment Failure...', result);\r\n    let msg: string = '';\r\n    if(result && result.Status)\r\n    {\r\n      if(result.Status === 'FAILURE' && result.responseCode && result.responseCode === 'ZM'){\r\n        msg = 'Payment failed because of wrong pin.';\r\n      }\r\n      else if(result.Status === 'FAILURE' && result.message && result.message.length > 0){\r\n        msg = 'Payment failed because ' + result.message;\r\n      }else{\r\n        msg = 'Payment failed.';\r\n      }\r\n    }\r\n    else{\r\n      msg = 'Payment failed.';\r\n    }\r\n    Toast.fail(msg);\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    let transaction = {\r\n      txnRef: this.state.payment.transactionRef,\r\n      txnId: '',\r\n      amount: this.state.payment.amount,\r\n      status: 'FAIL',\r\n      isSuccess: false,\r\n      reason: msg\r\n    } as ITransaction;\r\n    this.props.onPaymentUpdate(this.state.payment.paymentId, transaction, (updateResult: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      this.clearTxn();\r\n      // if(updateResult === true){\r\n      //   Toast.success('Payment success.');\r\n      // }else{\r\n      //   Toast.fail('Payment failed.');\r\n      // }\r\n    });\r\n  };\r\n\r\n  clearTxn = () => {\r\n    this.setState({\r\n      payment: {\r\n        paymentId: '',\r\n        amount: 0,\r\n        transactionRef: ''\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <View style={{ margin: 5 }}>\r\n          <Text style={{ marginTop: 2, fontWeight: 'bold', fontSize: 17 }}>{'Total Due Amount: Rs ' + this.getTotalDue()}</Text>\r\n        </View>\r\n        <ScrollView>\r\n        {isNN(this.props.home.payments) ?\r\n        this.props.home.payments.filter((p: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          if (isNN(p.transactions)) {\r\n            p.transactions.filter(t => t.isSuccess === true).map((p, j) => amountPaid += p.amount);\r\n          }\r\n          return(amountPaid < p.amount);\r\n        }).map((d: IPayment, i: number) => {\r\n            let amountPaid = 0;\r\n            if (isNN(d.transactions)) {\r\n              d.transactions.filter(p => p.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n            }\r\n            if (amountPaid < d.amount) {\r\n              return (\r\n                <View key={'my-due' + i} style={(i === 0) ? styles.myDueFirst : styles.myDue }>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Text>{'Due for: ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + '/' + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%', marginTop: 4, marginBottom: 3 }}>\r\n                    <Text style={{ fontSize: 17 }}>{'Rs ' + (d.amount - amountPaid)}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%'}}>\r\n                    <Text>{'Due Date: 15/' + MONTH.filter(m => m.value === d.forMonth)[0].title + '/' + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Button \r\n                    title='PAY NOW'\r\n                    onPress={() => this.payNow(d._id, (d.amount - amountPaid))} \r\n                    />\r\n                  </View>\r\n                </View>\r\n              )\r\n            } else {\r\n              return null;\r\n            }\r\n          })\r\n          :<Text style={{ padding: 20 }}>No Dues found!!!</Text>\r\n        }\r\n        </ScrollView>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  myDue: {\r\n    margin: 7, \r\n    paddingLeft: 15,\r\n    borderLeftColor: COLOR.HR_COLOR, \r\n    borderLeftWidth: 1 \r\n  },\r\n  myDueFirst: {\r\n    margin: 7\r\n  }\r\n};","import moment from 'moment';\r\nimport { isNN, jsError, isNNObject } from './index';\r\nimport { DEFAULT_DATE_FORMAT, DEFAULT_DATE_TIME_FORMAT } from '../constants/index';\r\n\r\nexport function toDateString(_input: any, _format?: string) {\r\n  try {\r\n    if(isNNObject(_input)) {\r\n      if (typeof _input != 'string') {\r\n        _input.toString();\r\n      }\r\n      if (!isNN(_format)) {\r\n       _format = DEFAULT_DATE_FORMAT;\r\n      }\r\n      return moment(_input).format(_format);\r\n    } else {\r\n      return '';\r\n    }\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateString'); \r\n    return ''; \r\n  }\r\n};\r\n\r\nexport function toDateTimeString(_input: any, _format?: string) {\r\n  try {\r\n    return toDateString(_input, DEFAULT_DATE_TIME_FORMAT);\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateTimeString'); \r\n    return ''; \r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, ScrollView } from '../common/elements';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNN } from '../../util';\r\nimport { toDateString } from '../../util/convert';\r\nimport { MONTH, COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  home: IHome,\r\n};\r\n\r\ninterface IState {\r\n  activeTab: number\r\n};\r\n\r\nexport default class History extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <ScrollView style={{}}>\r\n        {isNN(this.props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true)))) ?\r\n        this.props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true))).slice(0, 3).map((d: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          let paidDate = null;\r\n          d.transactions.filter(t => t.isSuccess === true).map((t: ITransaction, j: number) => {\r\n            amountPaid += t.amount;\r\n            if(j === 0){\r\n              paidDate = t.createdAt;\r\n            }\r\n            return 1;\r\n          });\r\n              return (\r\n                <View key={'my-his' + i} style={(i === 0) ? styles.myDueFirst : styles.myDue }>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Text style={{}}>{\"Paid for: \" + MONTH.filter(m => m.value === d.forMonth)[0].title + \"/\" + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%', marginTop: 4, marginBottom: 3 }}>\r\n                    <Text style={{ fontSize: 17 }}>{\"Rs \" + amountPaid}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%'}}>\r\n                    <Text>{\"Paid On: \" + toDateString(paidDate)}</Text>\r\n                  </View>\r\n                </View>\r\n              )\r\n          })\r\n          :<Text style={{ padding: 20 }}>No History found</Text>\r\n        }\r\n        </ScrollView>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  myDue: {\r\n    margin: 7, \r\n    paddingLeft: 15,\r\n    borderLeftColor: COLOR.HR_COLOR, \r\n    borderLeftWidth: 1 \r\n  },\r\n  myDueFirst: {\r\n    margin: 7\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { Text, View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\n\r\ninterface IProps {\r\n  data: Array<object>,\r\n  message: string\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class CustomList extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n      return(\r\n        isNN(this.props.data) ?\r\n        this.props.data.map((d: any, i: number) => {\r\n          return(\r\n            <View style={{flex: 1, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid', paddingBottom: 3}}>\r\n              <View>\r\n                <Text key={i} style={{flex: 1, fontWeight: 'bold'}}>\r\n                  {d.title}\r\n                </Text>\r\n              </View>\r\n              <View>\r\n                <Text key={i} style={{flex: 1}}>\r\n                  {d.description}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text>{this.props.message}</Text>          \r\n      );\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  container: {\r\n    flex: 1, \r\n    // flexDirection: 'column',\r\n    width: '100%',\r\n    // backgroundColor: \"#CCCCCC\",\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    borderBottomWidth: 1,\r\n    'border-bottom-style': 'solid'\r\n  }, \r\n  row: {\r\n    flex: 1,\r\n    // flexDirection: 'row'\r\n  }, \r\n  card: {\r\n    flex: 1, \r\n    // flexDirection: 'column', \r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    // backgroundColor: '#DDDDDD', \r\n    borderRadius: 10,\r\n    padding: 5,\r\n    margin: 7\r\n  },\r\n  inner: {\r\n    // flex: 1, \r\n    // flexDirection: 'column', \r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    // textAlign: 'center',\r\n    // width: '150px',\r\n    margin: 5,\r\n    padding: '0px 10px'\r\n    // float: 'left'\r\n  },\r\n  txt:{\r\n    flex: 1, \r\n    // justifyContent: 'center', \r\n    // textAlign: 'center', \r\n    paddingTop: 7,\r\n    paddingBottom: 5,\r\n    fontSize: 14\r\n  },\r\n  img:{\r\n    width: '10vw',\r\n    height: '10vw',\r\n    maxWidth: '75px',\r\n    maxHeight: '75px',\r\n    margin: 5\r\n  }\r\n};\r\n  ","import * as React from 'react';\r\nimport { View, TouchableHighlight, Image } from '../common/elements';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport MyDues from './my-dues';\r\nimport History from './history';\r\nimport Images from '../images';\r\nimport CustomList from './custom-list';\r\nimport { styles as cardStyles } from '../../styles/card';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  activeTab: number\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        {/*<View style={{flex: 1, flexDirection: 'row', marginTop: 1, marginBottom: 2}}>\r\n          <Text style={{flex: 1, justifyContent: 'flex-start', padding: 5}}>{new Date().toLocaleDateString()}</Text>\r\n          <Text style={{flex: 1, justifyContent: 'flex-end', alignItems:'flex-end', textAlign: \"right\", padding: 5}}>{new Date().toLocaleTimeString()}</Text>\r\n        </View>*/}\r\n        <View className='fl' style={cardStyles.container}>\r\n            <View style={cardStyles.row}>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('members')}>\r\n                  <Image src={Images.members} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  {(this.props.home.members ? this.props.home.members.length + '' : '') + ' MEMBER' + ((this.props.home.members.length === 0 || this.props.home.members.length > 1) ? 'S' : '')}\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('vehicles')}>\r\n                  <Image src={Images.vehicle} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  {(this.props.home.vehicles ?  this.props.home.vehicles.length + '' : '') + ' VEHICLE' + ((this.props.home.vehicles.length === 0 || this.props.home.vehicles.length > 1) ? 'S' : '')}\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('servants')}>\r\n                  <Image src={Images.servant} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>SERVANT(S)</View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('tickets')}>\r\n                  <Image src={Images.support} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.tickets ? this.props.home.tickets.length + '' : '') + ' TICKET' + ((this.props.home.tickets.length === 0 || this.props.home.tickets.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>TICKET(S)</View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('visitors')}>\r\n                  <Image src={Images.visitors} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.visitors ? this.props.home.visitors.length + '' : '') + ' VISITOR' + ((this.props.home.visitors.length === 0 || this.props.home.visitors.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>VISITOR(S)</View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab}: styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              MY DUES\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>\r\n              ADVANCE\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              HISTORY\r\n            </TouchableHighlight>\r\n            {/* <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.activeTab)} onClick={() => this.setState({activeTab: 4})}>\r\n              DEPOSITS\r\n            </TouchableHighlight> */}\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n          {this.state.activeTab === 1 ?\r\n              <MyDues history={this.props.history} user={this.props.user} home={this.props.home} onPaymentUpload={this.props.onPaymentUpload} onPaymentUpdate={this.props.onPaymentUpdate} />\r\n            :\r\n            this.state.activeTab === 2 ?\r\n              <CustomList data={[]} message=\"No advance found!\" />\r\n              :\r\n              this.state.activeTab === 3 ?\r\n              <History history={this.props.history} home={this.props.home} />\r\n              :\r\n              this.state.activeTab === 4 ?\r\n              <CustomList data={[]} message=\"Work in progress\" />\r\n              :\r\n              []\r\n            }\r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%',\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    borderBottomStyle: 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Image } from '../../common/elements';\r\nimport Images from '../../images';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles as cardStyles } from '../../../styles/card';\r\nimport { ROLE } from '../../../constants';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { ITickets } from '../../../models/store/tickets';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  tickets: ITickets\r\n  blocks: IBlocks\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View className='fl' style={cardStyles.container}>\r\n            <View style={cardStyles.row}>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('tickets')}>\r\n                  <Image src={Images.support} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {/* {this.props.tickets.isUpToDate ?\r\n                    ((!this.props.tickets.isError) ? this.props.tickets.data.length : 0) + \" TICKET\" + ((this.props.tickets.isError || this.props.tickets.data.length === 0 || this.props.tickets.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    } */}\r\n                    TICKET\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('ads')}>\r\n                  <Image src={Images.addvertise} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {/* {this.props.ads.isUpToDate ?\r\n                    ((!this.props.ads.isError) ? this.props.ads.data.length : 0) + \" AD\" + ((this.props.ads.isError || this.props.ads.data.length === 0 || this.props.ads.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    } */}\r\n                    ADS\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('notification')}>\r\n                  <Image src={Images.reminder} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>NOTIFICATION</View>\r\n                </View>\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('users')}>\r\n                  <Image src={Images.users} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.users.isUpToDate ?\r\n                    ((!this.props.users.isError) ? this.props.users.data.length : 0) + \" USER\" + ((this.props.users.isError || this.props.users.data.length === 0 || this.props.users.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('homes')}>\r\n                  <Image src={Images.homes} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.homes.isUpToDate ?\r\n                    ((!this.props.homes.isError) ? this.props.homes.data.length : 0) + \" HOME\" + ((this.props.homes.isError || this.props.homes.data.length === 0 || this.props.homes.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('blocks')}>\r\n                  <Image src={Images.blocks} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.blocks.isUpToDate ?\r\n                    ((!this.props.blocks.isError) ? this.props.blocks.data.length : 0) + \" BLOCK\" + ((this.props.blocks.isError || this.props.blocks.data.length === 0 || this.props.blocks.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('all-visitors')}>\r\n                  <Image src={Images.visitors} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.visitors ? this.props.home.visitors.length + '' : '') + ' VISITOR' + ((this.props.home.visitors.length === 0 || this.props.home.visitors.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>VISITOR(S)</View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('payment')}>\r\n                  <Image src={Images.money} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>PAYMENT</View>\r\n                </View>\r\n            </View>\r\n        </View>     \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%',\r\n  }\r\n};","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\nimport { generateUUID } from '../../util';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  key: string,\r\n  className: string,\r\n  onPress: () => void\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Checkbox extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    isActive: false,\r\n    text: '',\r\n    key: '',\r\n    className: '',\r\n    onPress: () => {}\r\n  }\r\n  render() {\r\n    let id = generateUUID();\r\n    return (\r\n      <span className={this.props.className} style={styles.container}>\r\n        <input type='checkbox' id={id} key={this.props.key} checked={this.props.isActive} onClick={this.props.onPress} />\r\n        <label htmlFor={id} style={styles.text}>{this.props.text}</label>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    // flexDirection: 'row',\r\n    marginRight: 10\r\n  },\r\n  circle: {\r\n    height: 24,\r\n    width: 24,\r\n    // borderRadius: 12,\r\n    borderWidth: 2,\r\n    borderColor: COLOR.PRIMARY,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  dot: {\r\n    height: 12,\r\n    width: 12,\r\n    // borderRadius: 6,\r\n    backgroundColor: COLOR.PRIMARY\r\n  },\r\n  text: {\r\n    marginLeft: 5\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    content: {\r\n      backgroundColor: COLOR.INVERSE\r\n    },\r\n    row: {\r\n      // flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n      // backgroundColor: COLOR.INVERSE,\r\n      borderBottomColor: COLOR.HR_COLOR,\r\n      borderBottomWidth: 1,\r\n      'border-bottom-style': 'solid',\r\n      marginTop: 5,\r\n      // marginBottom: 10,\r\n      // paddingLeft: 10,\r\n      // paddingRight: 10,\r\n      // borderRadius: 10\r\n    },\r\n    ele: {\r\n      // flexDirection: 'row',\r\n      alignItems: 'flex-start',\r\n      marginTop: 1,\r\n      marginBottom: 3,\r\n      padding: 2\r\n    }\r\n  };","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport moment from 'moment';\r\nimport { View, Image, Text, TextInput } from '../../common/elements';\r\nimport Checkbox from '../../common/checkbox';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { styles as modelStyles } from '../../../styles/model';\r\nimport { isNN } from '../../../util/index';\r\nimport { FILE_BASE_PATH, ROLE } from '../../../constants';\r\nimport Button from '../../common/button';\r\nimport { toDateTimeString } from '../../../util/convert';\r\nimport { COLOR } from '../../../constants';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  isSearch: boolean,\r\n  onActiveChange: () => void,\r\n  onEnter: (id: string) => void,\r\n  onExit: (id: string) => void,\r\n  onApprove: (id: string) => void,\r\n  onReject: (id: string) => void,\r\n  onSelect: (data: IVisitor) => void,\r\n  onRemove: (id: string) => void\r\n};\r\n\r\ninterface IState{\r\n  isZoomImage: boolean,\r\n  zoomImage: string,\r\n  searchText: string\r\n};\r\n\r\nexport default class VisitorsView extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isZoomImage: false,\r\n      zoomImage: '',\r\n      searchText: ''\r\n    }\r\n    this.onToggleZoomImage = this.onToggleZoomImage.bind(this);\r\n  };\r\n  static defaultProps = {\r\n    isSearch: false,\r\n    onActiveChange: () => {},\r\n    onEnter: () => {},\r\n    onExit: () => {},\r\n    onApprove: () => {},\r\n    onReject: () => {},\r\n    onSelect: () => {},\r\n    onRemove: () => {}\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onToggleZoomImage = (isZoom: boolean) => {\r\n    this.setState({\r\n      isZoomImage: isZoom\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { searchText } = this.state;\r\n    searchText = isNN(searchText) ? searchText.toLowerCase() : searchText;\r\n    let data = ((isNN(searchText) && isNN(this.props.data)) ? this.props.data.filter((d, i) => d.homeNumber.toLowerCase().indexOf(searchText) >= 0 || d.passCode.toLowerCase().indexOf(searchText) >= 0 || d.name.toLowerCase().indexOf(searchText) >= 0) : this.props.data);\r\n    return(<>\r\n      <View style={pageStyles.row}>\r\n        <Text>{'No of ' + (this.props.isActive ? 'Active' : '') + ' Visitors: ' + this.props.data.length}</Text>\r\n        {(!this.props.isSearch && this.props.appUser.role !== ROLE.GATEKEEPER) &&\r\n        <Checkbox isActive={this.props.isActive} text='Only Active Visitors' onPress={this.props.onActiveChange} className='fr' />\r\n        }\r\n      </View>\r\n      {isNN(this.props.data) &&\r\n      <View style={{width: '100%', marginTop: 10, marginBottom: 5}}>\r\n        <TextInput type='text' placeholder=\"Enter passcode to search\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: '100%'}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})} />\r\n      </View>\r\n      }\r\n      <View className='fl' style={styles.cardContainer}>\r\n        {isNN(data) ?\r\n        data.map((d: IVisitor, i: number) => {\r\n          return(\r\n            <View key={i} className='fl' style={styles.card}>\r\n              {isNN(d.image) &&\r\n              <View className='center'>\r\n                <Image src={FILE_BASE_PATH + d.image} className='pointer' style={styles.img} onClick={() => this.setState({isZoomImage: true, zoomImage: d.image})} />\r\n              </View>  \r\n              }\r\n              <View style={styles.content}>\r\n                {isNN(d.passCode) &&\r\n                <View style={pageStyles.ele}>\r\n                  <Text className='bold'>{d.passCode}</Text>\r\n                </View>\r\n                }\r\n                <View style={pageStyles.ele}>\r\n                  <Text className='bold'>{d.name + ' [' + d.type + ']'}</Text>\r\n                </View>\r\n                {(d.age > 0 || isNN(d.gender)) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other')) : '')}</Text>\r\n                </View>\r\n                }\r\n                <View style={pageStyles.ele}>\r\n                  To <Text className='bold'>{d.homeNumber}</Text> on <Text className='bold'>{toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                {(!d.isEntered && !d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <Text>{((d.gateNo) ? 'In gate ' + d.gateNo + ' by ': 'By ') + d.createdBy}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.mobileNo) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                {d.personCount > 0 && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.personCount + ' Person' + (d.personCount > 1 ? 's' : '') + (d.vehicleType === 'WALK' ? ' by WALK' : ' in ' + d.vehicleType + (isNN(d.vehicleNo) ? ' ' + d.vehicleNo : ''))}</Text>\r\n                </View>\r\n                }\r\n                {(!d.isApproved && !d.isRejected && !d.isEntered) && \r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.PRIMARY}}>WAITING FOR APPROVAL</View>\r\n                </View>\r\n                }\r\n                {(d.isApproved || d.isRejected ) && \r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: (d.isApproved ? COLOR.SUCCESS : COLOR.ERROR)}}>{d.isApproved ? 'APPROVED' : 'REJECTED'}</View>\r\n                  <View>{'By ' + d.approvedBy}</View>\r\n                  <View>{'On ' + toDateTimeString(d.approvedAt)}</View>\r\n                </View>\r\n                }\r\n                {d.isEntered &&\r\n                <View style={pageStyles.ele}>\r\n                  <View>{'Entry By ' + d.enteredBy + ' in gate ' + d.gateNo}</View>\r\n                  <View>{'On ' + toDateTimeString(d.enteredAt)}</View>\r\n                </View>\r\n                }\r\n                {(d.isApproved && !d.isEntered) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.ERROR}}>NOT ENTERED</View>\r\n                </View>\r\n                }\r\n                {(!d.isRejected && d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View>{'Exit By ' + d.exitBy + ' in gate ' +  d.exitGateNo}</View>\r\n                  <View>{'On ' + toDateTimeString(d.exitAt)}</View>\r\n                </View>\r\n                }\r\n                {(d.isEntered && !d.isExit) &&\r\n                <View style={pageStyles.ele}>\r\n                  <View style={{color: COLOR.ERROR}}>STAYING IN</View>\r\n                </View>\r\n                }\r\n                {(!d.isEntered && d.arriveAt) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text className='bold' style={{color: COLOR.ERROR}}>{'Expected Arrival ' + toDateTimeString(d.arriveAt)}</Text>\r\n                </View>\r\n                }\r\n                {(!this.props.isSearch && this.props.appUser.role === ROLE.GATEKEEPER) &&\r\n                <View style={pageStyles.ele} className='center'>\r\n                  {(!d.isEntered && !d.isRejected && (!d.arriveAt || new Date(d.arriveAt).getDate() === moment().toDate().getDate())) && <Button title='Enter' onPress={() => { this.props.onEnter(d._id) }} />}\r\n                  {((d.isEntered || d.isRejected) && !d.isExit) && <Button title={d.isRejected ? 'Remove' : 'Exit'} onPress={() => { this.props.onExit(d._id) }} />}\r\n                </View>\r\n                }\r\n                {(!this.props.isSearch && this.props.appUser.role === ROLE.USER && !d.isApproved && !d.isRejected && !d.isEntered) &&\r\n                <View style={pageStyles.ele} className='center'>\r\n                  <Button title='Approve' style={{marginRight: '10px'}} onPress={() => { this.props.onApprove(d._id) }} />\r\n                  <Button title='Reject' onPress={() => { this.props.onReject(d._id) }} />\r\n                </View>\r\n                }\r\n                {(!this.props.isSearch && this.props.appUser.role === ROLE.USER && isNN(d.passCode) && !d.isEntered && !d.isRejected) &&\r\n                <View style={pageStyles.ele} className='center'>\r\n                  <Button title='Remove' onPress={() => { this.props.onRemove(d._id) }} />\r\n                </View>\r\n                }\r\n                {this.props.isSearch &&\r\n                <View style={pageStyles.ele} className='center'>\r\n                  <Button title='Select' onPress={() => { this.props.onSelect(d) }} />\r\n                </View>\r\n                }\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Visitor found!!!</Text>\r\n      }\r\n      </View>\r\n      <Modal\r\n          open={this.state.isZoomImage}\r\n          onClose={() => this.onToggleZoomImage(false)}>\r\n          <View className='center'>\r\n            <Image src={FILE_BASE_PATH + this.state.zoomImage} style={{ height: '50%', width: '50%' }} />\r\n          </View>\r\n        </Modal>\r\n    </>\r\n    );\r\n  }\r\n};\r\n\r\nexport const styles = {\r\n  cardContainer: {\r\n    flex: 1, \r\n    width: '100%',\r\n    padding: 10,\r\n    marginBottom: 10\r\n  },\r\n  card: {\r\n    flex: 1, \r\n    margin: 15\r\n  },\r\n  img:{\r\n    // width: 25,\r\n    height: '25vh',\r\n    margin: 0,\r\n    borderRadius: '50%',\r\n    marginBottom: '-25px'\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 10,\r\n    paddingTop: '25px',\r\n    borderColor: COLOR.HR_COLOR,\r\n    borderWidth: 1,\r\n    borderStyle: 'solid',\r\n    borderRadius: 10,\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport DatePicker from 'react-date-picker';\r\nimport TimePicker from 'react-time-picker';\r\nimport moment from 'moment';\r\nimport { View, ScrollView, TextInput, Text, Picker, TouchableHighlight, Image } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { isNN, generateUUID, onEnter, isNNObject } from '../../../util/index';\r\nimport { COLOR, ROLE } from '../../../constants';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHome, IVisitor } from '../../../models/home';\r\nimport Images from '../../images';\r\nimport VisitorsView from './visitors-view';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  homeId: string,\r\n  id: string,\r\n  type: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  arriveAt: any,\r\n  arriveAtTime: any,\r\n\tpersonCount: number,\r\n\tvehicleType: string,\r\n\tvehicleNo: string,\r\n  fileName: string,\r\n  showHomes: boolean,\r\n  homeSearchText: string,\r\n  searchResult: Array<IVisitor>,\r\n  isShowSearch: boolean\r\n};\r\n\r\nexport default class NewVisitor extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      homeId: '',\r\n      id: '',\r\n      type: 'VISITOR',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      arriveAt: null,\r\n      arriveAtTime: null,\r\n      personCount: 1,\r\n      vehicleType: 'BIKE',\r\n      vehicleNo: '',\r\n      fileName: '',\r\n      showHomes: false,\r\n      homeSearchText: '',\r\n      searchResult: [],\r\n      isShowSearch: false\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onImageSelect = this.onImageSelect.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.appUser.role === ROLE.USER){\r\n      this.setState({\r\n        homeId: this.props.user.homes[this.props.appUser.homeIndex]._id\r\n      });\r\n    } \r\n  };\r\n\r\n  onImageSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        this.setState({\r\n          fileName: fileName\r\n        });\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        this.props.onUpload(data, (result: boolean, message: string) => {\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSave = () => {\r\n    if((this.props.appUser.role === ROLE.USER || isNN(this.props.gateNo)) && (this.props.appUser.role !== ROLE.USER || isNNObject(this.state.arriveAt)) && this.state.showHomes === false && this.state.homeId.length > 0 && isNN(this.state.name) && this.state.personCount > 0 && isNN(this.state.fileName)){\r\n      let arriveAt = this.state.arriveAt;\r\n      let arriveAtTime;\r\n      if(isNNObject(this.state.arriveAt) && isNN(this.state.arriveAtTime)){\r\n        arriveAtTime = this.state.arriveAtTime.split(':');\r\n      }\r\n      if(isNN(arriveAtTime) && arriveAtTime.length > 1){\r\n        arriveAt.setHours(parseInt(arriveAtTime[0]), parseInt(arriveAtTime[1]), 0,0);\r\n      }else{\r\n        arriveAt.setHours(0, 0, 0, 0);\r\n      }\r\n      let visitor = {\r\n        _id: '',\r\n        type: this.state.type,\r\n        name: this.state.name,\r\n        age: this.state.age,\r\n        gender: this.state.gender,\r\n        mobileNo: this.state.mobileNo,\r\n        emailId: '',\r\n        arriveAt: arriveAt,\r\n        personCount: this.state.personCount,\r\n        vehicleType: this.state.vehicleType,\r\n        vehicleNo: this.state.vehicleNo,\r\n        image: this.state.fileName,\r\n        passCode: '',\r\n        gateNo: this.props.gateNo\r\n      } as IVisitor;\r\n      visitor = Object.assign(visitor, {\r\n        isUser: (this.props.appUser.role === ROLE.USER)\r\n      });\r\n      this.props.onToggleLoading(true);\r\n      this.props.onSave(this.state.homeId, visitor, this.props.user, this.props.appUser, (result: IVisitor) => {\r\n          // this.props.navigation.navigation.goBack(null);\r\n          this.onClear();\r\n          this.props.onToggleLoading(false);\r\n          if(this.props.appUser.role === ROLE.USER){\r\n            Toast.success('Visitor Request created successfully. Please share the passcode(' + result.passCode + ') to yor visitor and ask him/her to show it to the security in the gate while entering.');\r\n          }else{\r\n            Toast.success('Visitor created successfully. Notification sent to the home members for approval. If this visitor got approved from home member then allow him/her inside.')\r\n          }\r\n      }, (message: string) => {\r\n          this.props.onToggleLoading(false);\r\n          Toast.fail('Failed to save visitor ' + visitor.name + '.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill Gate Number, Home, Name, People count and Image before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({ \r\n      homeId: (this.props.appUser.role === ROLE.USER) ? this.state.homeId : '',\r\n      id: '',\r\n      type: 'VISITOR',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      arriveAt: null,\r\n      arriveAtTime: null,\r\n      personCount: 1,\r\n      vehicleType: 'BIKE',\r\n      vehicleNo: '',\r\n      fileName: '',\r\n      showHomes: false,\r\n      homeSearchText: '',\r\n      searchResult: [],\r\n      isShowSearch: false\r\n    });\r\n  };\r\n  \r\n  onSearch = () => {\r\n    if(this.state.mobileNo.length > 2){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onSearch(this.state.mobileNo, (result: Array<IVisitor>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          isShowSearch: true,\r\n          searchResult: result\r\n        });\r\n\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(message);\r\n        this.setState({\r\n          isShowSearch: false,\r\n          searchResult: []\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          {this.props.appUser.role === ROLE.GATEKEEPER &&\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder='Enter Home Number' className='form-control'\r\n            style={{...modelStyles.ele, ...styles.ele,\r\n              flexDirection: 'row',\r\n              padding: 12,\r\n              borderWidth: 1,\r\n              borderColor: COLOR.HR_COLOR,\r\n              borderRadius: 5\r\n            }} \r\n            value={this.state.homeSearchText} \r\n            onChange={(event: any) => this.setState({showHomes: true, homeSearchText: event.target.value})} />\r\n          </View>\r\n          }\r\n          {\r\n            (this.props.appUser.role === ROLE.GATEKEEPER && this.state.showHomes && isNN(this.state.homeSearchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n              {\r\n                this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.homeSearchText.toLowerCase()) >= 0).map((d: IHome, i: number) => {\r\n                  return(\r\n                    <Text \r\n                    className='pointer'\r\n                    key={'ho' + i}\r\n                    style={{...styles.ele, flexDirection: 'column', margin: 3, padding: 6, backgroundColor: COLOR.CARD_UNDERLAY}}\r\n                    onClick={() => {\r\n                      this.setState({homeSearchText: d.number, homeId: d._id, showHomes: false});\r\n                    }}>{d.number}</Text>\r\n                  )\r\n                })\r\n              }\r\n            </ScrollView>\r\n          }\r\n          {this.props.appUser.role === ROLE.GATEKEEPER &&\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'VISITOR'} text='Visitor' onPress={() => this.setState({type: 'VISITOR'})} />\r\n            <RadioButton isActive={this.state.type === 'DELIVERY'} text='Delivery' onPress={() => this.setState({type: 'DELIVERY'})} />\r\n          </View>\r\n          }\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder='Mobile Number' className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} \r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSearch);\r\n            }} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          {this.props.appUser.role === ROLE.USER &&\r\n          <View style={modelStyles.row}>\r\n            <Text>Arrival At &nbsp;</Text>\r\n            <DatePicker minDate={moment().toDate()} maxDate={moment().add(2,'d').toDate()}\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                arriveAt: date\r\n              });\r\n            }}\r\n            value={this.state.arriveAt}\r\n            />\r\n            <Text>&nbsp;</Text>\r\n            <TimePicker\r\n            value={this.state.arriveAtTime}\r\n            // minTime={(isNN(this.state.arriveAt) && this.state.arriveAt.getDate() === moment().toDate().getDate()) ? moment().toDate() : null}\r\n            onChange={(time: any) => {\r\n              this.setState({\r\n                arriveAtTime: time\r\n              });\r\n            }}\r\n            />\r\n          </View>\r\n          }\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' placeholder='Age' className='form-control' maxLength={3} style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele, width: 'auto', display:'inline-block', marginRight: 10}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n            <View style={{display:'inline-block', width: 'auto'}}>\r\n              <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n              <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n              <RadioButton isActive={this.state.gender === 'O'} text='Other' onPress={() => this.setState({gender: 'O'})} />\r\n            </View>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' placeholder='People Count' className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele, width: 'auto', display:'inline-block', marginRight: 10}} value={this.state.personCount > 0 ? this.state.personCount + '' : ''} onChange={(event: any) => this.setState({personCount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n            <Picker className='form-control' value={this.state.vehicleType} style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele, display:'inline-block', width: 'auto', marginRight: 10}}\r\n            onChange={(event: any) => this.setState({vehicleType: event.target.value})}>\r\n              <option value='WALK'>WALK</option>\r\n              <option value='CYCLE'>CYCLE</option>\r\n              <option value='BIKE'>BIKE</option>\r\n              <option value='CAR'>CAR</option>\r\n              <option value='VAN'>VAN</option>\r\n              <option value='JEEP'>JEEP</option>\r\n              <option value='TEMPO'>TEMPO</option>\r\n              <option value='BUS'>BUS</option>\r\n              <option value='TRUCK'>TRUCK</option>\r\n            </Picker>\r\n            <TextInput type='text' placeholder='Vehicle No' className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele, display:'inline-block', width: 'auto'}} value={this.state.vehicleNo} onChange={(event: any) => this.setState({vehicleNo: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n              <input type='file' name='image' placeholder='SELECT IMAGE' onChange={this.onImageSelect}/>\r\n              {isNN(this.state.fileName) &&\r\n              <Text style={{...styles.ele, marginLeft: 15}}>{this.state.fileName}</Text>\r\n              }\r\n          </View>\r\n          <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              style={{...styles.ele, marginRight: 10}}\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={this.onClear}\r\n              style={styles.ele}\r\n              />\r\n          </View>\r\n          {this.state.isShowSearch &&\r\n          <Modal\r\n          open={this.state.isShowSearch}\r\n          onClose={() => this.setState({ isShowSearch: false })}>\r\n            <View style={popupStyles.container}>\r\n              <VisitorsView user={this.props.user} appUser={this.props.appUser} data={this.state.searchResult} isActive={false} isSearch={true} onSelect={(data: IVisitor) => {\r\n                this.setState({\r\n                  isShowSearch: false,\r\n                  searchResult: [],\r\n                  name: data.name,\r\n                  age: data.age,\r\n                  gender: data.gender,\r\n                  mobileNo: data.mobileNo,\r\n                  vehicleType: data.vehicleType,\r\n                  vehicleNo: data.vehicleNo,\r\n                  fileName: data.image\r\n                });\r\n                }} />\r\n            </View>\r\n          </Modal>\r\n          }\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  },\r\n  ele: {\r\n    fontSize: 17\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, TextInput, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home';\r\nimport NewVisitor from './new-visitor';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\nimport { COLOR } from '../../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onGateNoChanged: (gateNo: string) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearchVisitor: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  gateNo: string,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      gateNo: '',\r\n      isLoading: false\r\n    }\r\n    this.viewAllVisitors = this.viewAllVisitors.bind(this);\r\n    this.viewAllTakeaways = this.viewAllTakeaways.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      gateNo: this.props.gateNo\r\n    })\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  viewAllVisitors = () => {\r\n    if(isNN(this.state.gateNo)) {\r\n      this.props.history.push('all-visitors')\r\n    } else {\r\n      Toast.warn('Please enter Gate Number to view this page.');\r\n    }\r\n  };\r\n  \r\n  viewAllTakeaways = () => {\r\n    if(isNN(this.state.gateNo)) {\r\n      this.props.history.push('all-takeways')\r\n    } else {\r\n      Toast.warn('Please enter Gate Number to view this page.');\r\n    }\r\n  };\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder='Gate Number' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, width: 'auto'}} value={this.state.gateNo} onChange={(event: any) => this.setState({gateNo: event.target.value})} onBlur={() => this.props.onGateNoChanged(this.state.gateNo)} />\r\n        </View>\r\n        <View style={modelStyles.row}>\r\n          <Text className='fr pointer' onClick={this.viewAllTakeaways} style={{...styles.ele, color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right'}}>View all Active Takeaways</Text>\r\n          <Text className='fr pointer' onClick={this.viewAllVisitors} style={{...styles.ele, color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right', marginRight: 20}}>View all Active Visitors</Text>\r\n        </View>\r\n        <NewVisitor appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} gateNo={this.state.gateNo} onToggleLoading={(isLoading) => this.setState({ isLoading: isLoading })} onSave={this.props.onSaveVisitor} onUpload={this.props.onUpload} onSearch={this.props.onSearchVisitor} />\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  ele: {\r\n    fontSize: 17\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { Text } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { IVisitor } from '../../models/home';\r\nimport Home from './home';\r\nimport AMHome from './manager/home';\r\nimport GKHome from './gatekeeper/home';\r\nimport { ROLE } from '../../constants/index';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  outings: IOutings,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  tickets: ITickets,\r\n  blocks: IBlocks,\r\n  gateNo: string,\r\n  onGateNoChanged: (gateNo: string) => void,\r\n  onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearchVisitor: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n};\r\n\r\nexport default class Dashboard extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    if(this.props.appUser.role === ROLE.USER) {\r\n      if(this.props.appUser.homeIndex >= 0 && isNN(this.props.user.homes)) {\r\n        return(<Home history={this.props.history} user={this.props.user} home={this.props.user.homes[this.props.appUser.homeIndex]} onPaymentUpload={(file: any, homeId: string, callback: (result: boolean) => void) => this.props.onPaymentUpload(file, homeId, this.props.user, callback)} onPaymentUpdate={(paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => this.props.onPaymentUpdate(paymentId, transaction, this.props.appUser.homeIndex, this.props.user, callback)} />);\r\n      }else{\r\n        return(<Text style={{margin: 20, padding: 15, paddingLeft: 59}}>No home assigned to you. Please contact administrator/manager.</Text>);\r\n      }\r\n    }\r\n    else if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      return(<AMHome history={this.props.history} appUser={this.props.appUser} user={this.props.user} ads={this.props.ads} users={this.props.users} homes={this.props.homes} tickets={this.props.tickets} blocks={this.props.blocks} />);\r\n    }\r\n    else if(this.props.appUser.role === ROLE.GATEKEEPER) {\r\n      return(<GKHome history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} gateNo={this.props.gateNo} onGateNoChanged={this.props.onGateNoChanged} onSaveVisitor={this.props.onSaveVisitor} onUpload={this.props.onUpload} onSearchVisitor={this.props.onSearchVisitor} />);\r\n    }else{\r\n      return(<Text style={{margin: 20, padding: 15, paddingLeft: 59}}>No role assigned to you. Please contact administrator/manager.</Text>);\r\n    }\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { ITransaction } from '../models/home/transaction';\r\nimport { IVisitor } from '../models/home';\r\nimport { setGateNo } from '../store/actions/account';\r\nimport { upload, update } from '../store/actions/payment';\r\nimport { save as saveVisitor, search as searchVisitor } from '../store/actions/visitor';\r\nimport { upload as fileUpload } from '../store/actions/file';\r\nimport Page from '../components/home/dashboard';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    outings: state.Outings,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    tickets: state.Tickets,\r\n    blocks: state.Blocks,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onGateNoChanged: (gateNo: string) => dispatch(setGateNo(gateNo)),\r\n    onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => dispatch(upload(file, homeId, user, callback)),\r\n    onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => dispatch(update(paymentId, transaction, homeIndex, user, callback)),\r\n    onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => dispatch(saveVisitor(homeId, data, user, appUser, sCallback, fCallback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(fileUpload(data, callback)),\r\n    onSearchVisitor: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => dispatch(searchVisitor(searchText, sCallback, fCallback))\r\n});\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IMember } from '../../models/home/member';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n////import { number } from 'prop-types';\r\n////import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'member';\r\nlet accountController: string = 'account';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.member) && isNN(result.data.member._id)) {\r\n      sCallback(result.data.member, result.data.homeIds ? result.data.homeIds : []);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Member.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IMember, user: IUser, homeIndex: number, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        let members = user.homes[homeIndex].members;\r\n        var foundIndex = members.findIndex(d => d._id === result.data);\r\n        members[foundIndex]._id = result.data;\r\n        members[foundIndex].number = data.number;\r\n        members[foundIndex].name = data.name;\r\n        members[foundIndex].age = data.age;\r\n        members[foundIndex].gender = data.gender;\r\n        members[foundIndex].mobileNo = data.mobileNo;\r\n        members[foundIndex].emailId = data.emailId;\r\n        members[foundIndex].type = data.type;\r\n        \r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    data = Object.assign(data, {\r\n      password: data.mobileNo\r\n    });\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        let members = user.homes[homeIndex].members;\r\n        members.push(data);\r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const saveByAM = (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    isAM: true,\r\n    homeIds: homeIds,\r\n    isApprove: isApprove\r\n  });\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          var foundIndex = users.data.findIndex(d => d._id === result.data);\r\n          if(foundIndex >= 0){\r\n            users.data[foundIndex]._id = result.data;\r\n            users.data[foundIndex].name = data.name;\r\n          } else {\r\n            users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          }\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const removeByAM = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadWFAUsers = (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(accountController + '/wfausers', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNNObject(result) && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const reject = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(accountController + '/rejectuser/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  data: Array<{title: string, link: string}>\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Breadcrum extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    data: []\r\n  }\r\n  render() {\r\n    return (\r\n      <div style={styles.cnr}>\r\n        <Link to='' style={styles.link}>Home</Link>\r\n        {this.props.data.map((d, i) => {\r\n          return(<>\r\n          <span key={'bd' + i} style={styles.sep}>/</span>\r\n          {(i === this.props.data.length - 1) ?\r\n          <span key={'bc' + i} style={styles.link}>{d.title}</span>\r\n          :\r\n          <Link key={'bc' + i} to={'/' + d.link}>{d.title}</Link>\r\n          }\r\n          </>);\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  cnr: {\r\n    width: '100%',\r\n    MarginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n  sep:{\r\n    marginRight: 10,\r\n    marginLeft: 10\r\n  },\r\n  link: {\r\n\r\n  }\r\n};","export const styles = {   \r\n  addIcon: {\r\n    width: 20,\r\n    height: 20,\r\n    cursor: 'pointer'\r\n  },  \r\n  editIcon: {\r\n      width: 20,\r\n      height: 20,\r\n      cursor: 'pointer'\r\n    }, \r\n    deleteIcon: {\r\n      width: 18,\r\n      height: 20,\r\n      cursor: 'pointer'\r\n    },\r\n    closeIcon: {\r\n      width: 17,\r\n      height: 17,\r\n      cursor: 'pointer'\r\n    },\r\n    datePicker: {\r\n      width: 20,\r\n      height: 23,\r\n      cursor: 'pointer'\r\n    }\r\n  };\r\n  ","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport RadioButton from '../common/radio-button';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IMember } from '../../models/home/member';\r\nimport { styles } from '../../styles/page';\r\nimport { styles as iconStyles } from '../../styles/icon';\r\nimport { styles as modelStyles } from '../../styles/model';\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => void,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class Members extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSave(member, this.props.user, this.props.homeIndex, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n            Toast.success('Member saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n          }\r\n        });\r\n    }else{\r\n      // Toast.warn('Please fill all the required fields before '+ (this.state.id > 0 ? 'Update' : 'Save') + '.');\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.homeIndex, this.props.user, this.props.users, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Member removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove member.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Members', link: 'members'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-member')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n      {isNN(this.props.user.homes[this.props.homeIndex].members) ?\r\n        this.props.user.homes[this.props.homeIndex].members.map((d: IMember, i: number) => {\r\n          return(\r\n            (this.state.isEdit === true && this.state.id === d._id) ?\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n                <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n                <RadioButton isActive={this.state.gender === 'O'} text='Other' onPress={() => this.setState({gender: 'O'})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n                <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                  <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: false,\r\n                    id: '',\r\n                    number: '',\r\n                    name: '',\r\n                    age: 0,\r\n                    gender: '',\r\n                    mobileNo: '',\r\n                    emailId: '',\r\n                    type: 'OWNER',\r\n                    role: 'USER'\r\n                  });\r\n                }}>\r\n                  <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n            :\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                <Text>{d.name}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n              </View>\r\n              {isNN(d.mobileNo) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.emailId) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.emailId}</Text>\r\n              </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                <Text>{d.type}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d._id,\r\n                    number: d.number,\r\n                    name: d.name,\r\n                    age: d.age,\r\n                    gender: d.gender,\r\n                    mobileNo: d.mobileNo,\r\n                    emailId: d.emailId,\r\n                    type: d.type,\r\n                    role: d.role\r\n                  });\r\n                }}>\r\n                  <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Member found!!!</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUsers } from '../models/store/users';\r\nimport { IUser } from '../models/user/user';\r\nimport { IMember } from '../models/home';\r\nimport { save, remove } from '../store/actions/member';\r\nimport Page from '../components/home/members';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    users: state.Users,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, sCallback)),\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, sCallback: (result: boolean) => void) => dispatch(remove(id, homeIndex, user, users, sCallback))\r\n});\r\n\r\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\n// import { CheckBox  } from 'react-native-elements';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IMember } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class NewMember extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSave(member, this.props.user, this.props.homeIndex, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Member saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Members', link: 'members'}, {title: 'New Member', link: 'new-member'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n            <RadioButton isActive={this.state.gender === 'O'} text='Other' onPress={() => this.setState({gender: 'O'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IMember } from '../models/home';\r\nimport { save } from '../store/actions/member';\r\nimport Page from '../components/home/new-member';\r\n////import { number } from 'prop-types';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IMember, user: IUser, homeIndex: number, sCallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, sCallback))\r\n});\r\n\r\nexport const NewMember = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'vehicle';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IVehicle, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let vehicles = user.homes[homeIndex].vehicles;\r\n        var foundIndex = vehicles.findIndex(d => d._id === result.data);\r\n        vehicles[foundIndex]._id = result.data;\r\n        vehicles[foundIndex].number = data.number;\r\n        vehicles[foundIndex].type = data.type;\r\n        user.homes[homeIndex].vehicles = vehicles;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n  new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      data._id = result.data;\r\n      data.createdBy = user.name;\r\n      let vehicles = user.homes[homeIndex].vehicles;\r\n      vehicles.push(data);\r\n      user.homes[homeIndex].vehicles = vehicles;\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].vehicles = user.homes[homeIndex].vehicles.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Text, Image, TextInput, } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN } from '../../util/index';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string, \r\n  number: string, \r\n  type: string\r\n};\r\n\r\nexport default class Vehicles extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '', \r\n      number: '', \r\n      type: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.number) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let vehicle = {\r\n          _id: this.state.id,\r\n          number: this.state.number,\r\n          type: this.state.type\r\n        } as IVehicle;\r\n        this.props.onSave(vehicle, this.props.user, this.props.homeIndex, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              number: '',\r\n              type: ''\r\n            });\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Vehicle removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove vehicle.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Vehicles', link: 'vehicles'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-vehicle')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n        {isNN(this.props.user.homes[this.props.homeIndex].vehicles) ?\r\n          this.props.user.homes[this.props.homeIndex].vehicles.map((d: IVehicle, i: number) => {\r\n            return(\r\n              (this.state.isEdit === true && this.state.id === d._id) ?\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <RadioButton isActive={this.state.type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => this.setState({type: 'TWO WHEELER'})} />\r\n                  <RadioButton isActive={this.state.type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => this.setState({type: 'FOUR WHEELER'})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      number: '', \r\n                      type: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>                  \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.number}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      number: d.number,\r\n                      type: d.type\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No Vehicle found!!!</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVehicle } from '../models/home';\r\nimport { save, remove } from '../store/actions/vehicle';\r\nimport Page from '../components/home/vehicles';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, sCallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, sCallback))\r\n});\r\n\r\nexport const Vehicles = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string, \r\n  number: string, \r\n  type: string\r\n};\r\n\r\nexport default class NewVehicle extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '', \r\n      number: '', \r\n      type: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.number) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let vehicle = {\r\n          _id: this.state.id,\r\n          number: this.state.number,\r\n          type: this.state.type\r\n        } as IVehicle;\r\n        this.props.onSave(vehicle, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              type: ''\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Vehicles', link: 'vehicles'}, {title: 'New Vehicle', link: 'new-vehicle' }]} />  \r\n        <View style={modelStyles.container}>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => this.setState({type: 'TWO WHEELER'})} />\r\n            <RadioButton isActive={this.state.type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => this.setState({type: 'FOUR WHEELER'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVehicle } from '../models/home';\r\nimport { save } from '../store/actions/vehicle';\r\nimport Page from '../components/home/new-vehicle';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, sCallback))\r\n});\r\n\r\nexport const NewVehicle = connect(mapStateToProps, mapDispatchToProps)(Page);","import { IServant, ITakeaway } from '../../models/home/servant';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'servant';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Servants.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IServant, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n      //   let servants = user.homes[homeIndex].servants;\r\n      //   var foundIndex = servants.findIndex(d => d._id === result.data);\r\n      //   servants[foundIndex]._id = result.data;\r\n      //   servants[foundIndex].name = data.name;\r\n      //   servants[foundIndex].age = data.age;\r\n      //   servants[foundIndex].gender = data.gender;\r\n      //   servants[foundIndex].mobileNo = data.mobileNo;\r\n      //   servants[foundIndex].emailId = data.emailId;\r\n           \r\n      //   user.homes[homeIndex].servants = servants;\r\n      //   dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // data._id = result.data;\r\n        // data.createdBy = user.name;\r\n        // let servants = user.homes[homeIndex].servants;\r\n        // servants.push(data);\r\n        // user.homes[homeIndex].servants = servants;\r\n        // dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // user.homes[homeIndex].servants = user.homes[homeIndex].servants.filter((d, i) => d._id !== id);\r\n      // dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const createTakeaway = (id: string, data: ITakeaway, sCallback:(result: string) => void, fCallback:(message: string) => void) => (dispatch: any) => {\r\n  if(isNN(data._id)){\r\n    new Api().put(controller + '/takeaway/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        sCallback(result.data);\r\n      }else{\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to update takeaway.');\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/takeaway/' + id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        sCallback(result.data);\r\n      }else{\r\n        fCallback((result && isNN(result.message)) ? result.message : 'Failed to create Takeaway.');\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const removeTakeaway = (id: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/takeaway/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const exitTakeaway = (id: string, gateNo: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/exittakeaway/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, {\r\n    gateNo: gateNo\r\n  });\r\n};\r\n\r\nexport const loadActiveTakeaways = (appClientId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/takeaways/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Takeaways.');\r\n    }\r\n  });\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    padding: 15,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  },\r\n  addCmntCnt: {\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  newCmnt:{\r\n    width: '100%',\r\n    borderWidth: 1,\r\n    borderColor: COLOR.HR_COLOR\r\n  },\r\n  saveBtn:{\r\n    marginTop: 5\r\n  }\r\n};","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Text, Image, TextInput, TextArea } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServant, ITakeaway } from '../../models/home/servant';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as commonStyles} from '../../styles/common';\r\nimport {styles as commentsStyles} from '../../styles/comments';\r\nimport Images from '../images';\r\nimport { isNN } from '../../util/index';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\nimport Button from '../common/button';\r\nimport { toDateTimeString } from '../../util/convert';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, sCallback: (result: boolean) => void) => void,\r\n  onCreateTakeaway: (id: string, data: ITakeaway, sCallback:(result: string) => void, fCallback:(message: string) => void) => void,\r\n  onRemoveTakeaway: (id: string, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IServant>,\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  viewId: string,\r\n  takeaways: Array<ITakeaway>,\r\n  takeawayTitle: string,\r\n  takeawayDesc: string,\r\n  editTakeawayId: string,\r\n  editTakeawayTitle: string\r\n  editTakeawayDesc: string\r\n};\r\n\r\nexport default class Servants extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      viewId: '',\r\n      takeaways: [],\r\n      takeawayTitle: '',\r\n      takeawayDesc: '',\r\n      editTakeawayId: '',\r\n      editTakeawayTitle: '',\r\n      editTakeawayDesc: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onView = this.onView.bind(this);\r\n    this.onCreateTakeaway = this.onCreateTakeaway.bind(this);\r\n    this.onUpdateTakeaway = this.onUpdateTakeaway.bind(this);\r\n    this.onRemoveTakeaway = this.onRemoveTakeaway.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.homes[this.props.homeIndex]._id, (result: Array<IServant>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let servant = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : ''\r\n        } as IServant;\r\n        this.props.onSave(this.props.user.homes[this.props.homeIndex]._id, servant, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            var foundIndex = this.state.data.findIndex(d => d._id === this.state.id);\r\n            this.state.data[foundIndex].name = this.state.name;\r\n            this.state.data[foundIndex].age = this.state.age;\r\n            this.state.data[foundIndex].gender = this.state.gender;\r\n            this.state.data[foundIndex].mobileNo = this.state.mobileNo;\r\n            this.state.data[foundIndex].emailId = this.state.emailId;\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              viewId: '',\r\n              takeaways: [],\r\n              takeawayTitle: '',\r\n              takeawayDesc: '',\r\n              editTakeawayId: '',\r\n              editTakeawayTitle: '',\r\n              editTakeawayDesc: ''\r\n            });\r\n            Toast.success('Servant saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servant.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, (result: boolean) => {\r\n              if(result === true){\r\n                this.setState({\r\n                  isLoading: false,\r\n                  data: this.state.data.filter((d, i) => d._id !== id),\r\n                  viewId: '',\r\n                  takeaways: [],\r\n                  takeawayTitle: '',\r\n                  takeawayDesc: '',\r\n                  editTakeawayId: '',\r\n                  editTakeawayTitle: '',\r\n                  editTakeawayDesc: ''\r\n                });\r\n                Toast.success('Servant removed successfully.');\r\n              }else{\r\n                this.setState({\r\n                  isLoading: false,\r\n                });\r\n                Toast.fail('Failed to remove servant.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n  \r\n  onView = (id: string, takeaways: Array<ITakeaway>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        takeaways: [],\r\n        takeawayTitle: '',\r\n        takeawayDesc: '',\r\n        editTakeawayId: '',\r\n        editTakeawayTitle: '',\r\n        editTakeawayDesc: ''\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        takeaways: takeaways,\r\n        takeawayTitle: '',\r\n        takeawayDesc: '',\r\n        editTakeawayId: '',\r\n        editTakeawayTitle: '',\r\n        editTakeawayDesc: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  onCreateTakeaway = (id: string) => {\r\n    if(isNN(this.state.takeawayTitle) && isNN(this.state.takeawayDesc)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onCreateTakeaway(id, {\r\n        _id: '',\r\n        title: this.state.takeawayTitle,\r\n        description: this.state.takeawayDesc,\r\n        createdBy: this.props.user.name,\r\n        createdAt: new Date(),\r\n        updatedBy: this.props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITakeaway, (result: string) => {\r\n        var foundIndex = this.state.data.findIndex(d => d._id === id);\r\n        this.state.data[foundIndex].takeaways.unshift({\r\n          _id: result,\r\n          title: this.state.takeawayTitle,\r\n          description: this.state.takeawayDesc,\r\n          createdAt: new Date(),\r\n          createdBy: this.props.user.name,\r\n          updatedBy: this.props.user._id,\r\n          updatedAt: new Date()\r\n        } as ITakeaway);\r\n        this.setState({\r\n          isLoading: false,\r\n          takeawayTitle: '',\r\n          takeawayDesc: ''\r\n        });\r\n        Toast.success('Takeayway added successfully.');\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        Toast.fail('Failed to add takeaway.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill Takeaway title & description before Add.');\r\n    }\r\n  };\r\n\r\n  onUpdateTakeaway = (id: string) => {\r\n    if(isNN(this.state.editTakeawayTitle) && isNN(this.state.editTakeawayDesc)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onCreateTakeaway(id, {\r\n        _id: this.state.editTakeawayId,\r\n        title: this.state.editTakeawayTitle,\r\n        description: this.state.editTakeawayDesc,\r\n        createdBy: this.props.user.name,\r\n        createdAt: new Date(),\r\n        updatedBy: this.props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITakeaway, (result: string) => {\r\n        var foundIndex = this.state.data.findIndex(d => d._id === id);        \r\n        var takeawayIndex = this.state.data[foundIndex].takeaways.findIndex(d => d._id === this.state.editTakeawayId);\r\n        this.state.data[foundIndex].takeaways[takeawayIndex].title = this.state.editTakeawayTitle;\r\n        this.state.data[foundIndex].takeaways[takeawayIndex].description = this.state.editTakeawayDesc;\r\n        this.state.data[foundIndex].takeaways[takeawayIndex].updatedBy = this.props.user.name;\r\n        this.state.data[foundIndex].takeaways[takeawayIndex].updatedAt = new Date();\r\n        this.setState({\r\n          isLoading: false,\r\n          editTakeawayId: '',\r\n          editTakeawayTitle: '',\r\n          editTakeawayDesc: ''\r\n        });\r\n        Toast.success('Takeayway updated successfully.');\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        Toast.fail('Failed to update takeaway.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill Takeaway title & description before Add.');\r\n    }\r\n  };\r\n\r\n  onRemoveTakeaway = (id: string, servantId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete this takeaway?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemoveTakeaway(id, (result: boolean) => {\r\n              var foundIndex = this.state.data.findIndex(d => d._id === servantId);        \r\n              this.state.data[foundIndex].takeaways = this.state.data[foundIndex].takeaways.filter((d, i) => d._id !== id);\r\n              if(result === true){\r\n                this.setState({\r\n                  isLoading: false,\r\n                  editTakeawayId: '',\r\n                  editTakeawayTitle: '',\r\n                  editTakeawayDesc: '',\r\n                  viewId: ''\r\n                });\r\n                Toast.success('Takeaway removed successfully.');\r\n              }else{\r\n                this.setState({\r\n                  isLoading: false\r\n                });\r\n                Toast.fail('Failed to remove takeaway.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Servants', link: 'servants'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-servant')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n        {isNN(this.state.data) ?\r\n          this.state.data.map((d: IServant, i: number) => {\r\n            return(\r\n              (this.state.isEdit === true && this.state.id === d._id) ?\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n                  <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n                  <RadioButton isActive={this.state.gender === 'O'} text='Other' onPress={() => this.setState({gender: 'O'})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      name: '',\r\n                      age: 0,\r\n                      gender: '',\r\n                      mobileNo: '',\r\n                      emailId: '',\r\n                      viewId: '',\r\n                      takeaways: [],\r\n                      takeawayTitle: '',\r\n                      takeawayDesc: '',\r\n                      editTakeawayId: '',\r\n                      editTakeawayTitle: '',\r\n                      editTakeawayDesc: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>          \r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      name: d.name,\r\n                      age: d.age,\r\n                      gender: d.gender,\r\n                      mobileNo: d.mobileNo,\r\n                      emailId: d.emailId,\r\n                      viewId: '',\r\n                      takeaways: [],\r\n                      takeawayTitle: '',\r\n                      takeawayDesc: '',\r\n                      editTakeawayId: '',\r\n                      editTakeawayTitle: '',\r\n                      editTakeawayDesc: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onView(d._id, d.takeaways);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Takeaways'}</Text>\r\n                  </TouchableHighlight>   \r\n                </View>\r\n                {this.state.viewId === d._id &&\r\n                <View style={commentsStyles.cmntsCnr}>\r\n                  <View style={commentsStyles.cmntsHdr}>\r\n                    <Text className='bold' style={commentsStyles.cmntsHdrTxt}>Takeaways</Text>\r\n                  </View>\r\n                  <View style={commentsStyles.cmntsCnt}>\r\n                    <View style={commentsStyles.addCmntCnt}>\r\n                      <TextInput type='text' placeholder='Takeaway Title' className='form-control' style={{...commonStyles.textInput, ...commentsStyles.newCmnt, marginBottom: 10}} value={this.state.takeawayTitle} onChange={(event: any) => this.setState({takeawayTitle: event.target.value})} />\r\n                      <TextArea placeholder='Takeaway Description' className='form-control' style={{...commonStyles.textInput, ...commentsStyles.newCmnt}} value={this.state.takeawayDesc} onChange={(event: any) => this.setState({takeawayDesc: event.target.value})} />\r\n                      <View style={commentsStyles.saveBtn}>\r\n                        <Button\r\n                          title='ADD NEW TAKEAWAY'\r\n                          onPress={() => this.onCreateTakeaway(d._id)}\r\n                          />\r\n                      </View>\r\n                    </View>\r\n                    {isNN(this.state.takeaways) ?\r\n                      this.state.takeaways.map((e: ITakeaway, j: number) => {\r\n                        return(\r\n                        <View key={'tkycmt' + j} style={j === 0 ? commentsStyles.cmntCnrFst : commentsStyles.cmntCnr}>\r\n                          <View style={commentsStyles.cmntHdr}>\r\n                            <Text className='bold'>{e.createdBy + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            {\r\n                              (this.state.editTakeawayId === e._id && !e.isExit) ?\r\n                              <TextInput type='text' placeholder='Takeaway Title' className='form-control' style={{...commonStyles.textInput, ...commentsStyles.newCmnt, marginBottom: 10}} value={this.state.editTakeawayTitle} onChange={(event: any) => this.setState({editTakeawayTitle: event.target.value})} />\r\n                              :\r\n                              <Text>{e.title}</Text>\r\n                            }\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            {\r\n                              (this.state.editTakeawayId === e._id && !e.isExit) ?\r\n                              <TextArea placeholder='Takeaway Description' className='form-control' style={{...commonStyles.textInput, ...commentsStyles.newCmnt}} value={this.state.editTakeawayDesc} onChange={(event: any) => this.setState({editTakeawayDesc: event.target.value})} />\r\n                              :\r\n                              <Text>{e.description}</Text>\r\n                            }\r\n                          </View>\r\n                          {\r\n                            e.isExit ?\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text style={{color: COLOR.SUCCESS}}>{'Exit by ' + e.exitBy + ' in Gate ' + e.exitGateNo + ' on ' + toDateTimeString(e.exitAt)}</Text>\r\n                          </View>\r\n                          :\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text style={{color: COLOR.ERROR}}>Still not exit.</Text>\r\n                          </View>\r\n                          }\r\n                          {\r\n                            !e.isExit &&\r\n                            <>\r\n                              {\r\n                              this.state.editTakeawayId === e._id ?\r\n                              <View style={styles.ele}>\r\n                                <TouchableHighlight style={{marginRight: 25}} onClick={() => this.onUpdateTakeaway(d._id)}>\r\n                                  <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                                </TouchableHighlight>\r\n                                <TouchableHighlight style={{}} onClick={() => {\r\n                                  this.setState({\r\n                                    editTakeawayId: '',\r\n                                    editTakeawayTitle: '',\r\n                                    editTakeawayDesc: ''\r\n                                  });\r\n                                }}>\r\n                                  <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                                </TouchableHighlight>\r\n                              </View>\r\n                              :\r\n                              <View style={styles.ele}>\r\n                                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                                  this.setState({\r\n                                    editTakeawayId: e._id,\r\n                                    editTakeawayTitle: e.title,\r\n                                    editTakeawayDesc: e.description\r\n                                  });\r\n                                }}>\r\n                                  <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                                </TouchableHighlight>\r\n                                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                                  this.onRemoveTakeaway(e._id, d._id);\r\n                                }}>\r\n                                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                                </TouchableHighlight>\r\n                              </View>\r\n                              }\r\n                            </>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No takeaways found!!!</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No Servant found!!!</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IServant, ITakeaway } from '../models/home';\r\nimport { loadAllByHome, save, remove, createTakeaway, removeTakeaway } from '../store/actions/servant';\r\nimport Page from '../components/home/servants';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => dispatch(loadAllByHome(homeId, sCallback, fCallback)),\r\n    onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => dispatch(save(homeId, data, sCallback)),\r\n    onRemove: (id: string, sCallback: (result: boolean) => void) => dispatch(remove(id, sCallback)),\r\n    onCreateTakeaway: (id: string, data: ITakeaway, sCallback:(result: string) => void, fCallback:(message: string) => void) => dispatch(createTakeaway(id, data, sCallback, fCallback)),\r\n    onRemoveTakeaway: (id: string, sCallback: (result: boolean) => void) => dispatch(removeTakeaway(id, sCallback))\r\n});\r\n\r\nexport const Servants = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IServant, ITakeaway } from '../../../models/home/servant';\r\nimport { styles } from \"../../../styles/page\";\r\nimport {styles as commentsStyles} from '../../../styles/comments';\r\nimport Toast from  '../../../util/toast';\r\nimport { isNN } from '../../../util';\r\nimport { toDateTimeString } from '../../../util/convert';\r\nimport { ROLE } from '../../../constants';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void,\r\n  onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IServant>,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Takeaways extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoading: false\r\n    }\r\n    this.onExit = this.onExit.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (result: Array<IServant>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onExit = (id: string, servantId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Exit Servant with Takeaway',\r\n      message: 'Are you sure you wish to exit the servant with this takeaway things?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onExit(id, this.props.gateNo, (result: boolean) => {\r\n              if(result === true){\r\n                var foundIndex = this.state.data.findIndex(d => d._id === servantId);\r\n                this.state.data[foundIndex].takeaways = this.state.data[foundIndex].takeaways.filter(d => d._id !== id);\r\n                this.setState({\r\n                  isLoading: false\r\n                });\r\n                Toast.success('Servant exit with takeaway successfully.');\r\n              }else{\r\n                this.setState({\r\n                  isLoading: false,\r\n                });\r\n                Toast.fail('Failed to exit servant with takeaway.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Takeaways', link: 'all-takeaways'}]} />\r\n        {(isNN(this.state.data) && isNN(this.state.data.filter(d => d.takeaways && d.takeaways.length > 0))) ?\r\n            this.state.data.filter(d => d.takeaways && d.takeaways.length > 0).map((d: IServant, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text className='bold'>{d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={commentsStyles.cmntsCnr}>\r\n                  <View style={commentsStyles.cmntsHdr}>\r\n                    <Text className='bold' style={commentsStyles.cmntsHdrTxt}>Takeaways</Text>\r\n                  </View>\r\n                  <View style={commentsStyles.cmntsCnt}>\r\n                    {isNN(d.takeaways) ?\r\n                      d.takeaways.map((e: ITakeaway, j: number) => {\r\n                        return(\r\n                        <View key={'tkycmt' + j} style={j === 0 ? commentsStyles.cmntCnrFst : commentsStyles.cmntCnr}>\r\n                          <View style={commentsStyles.cmntHdr}>\r\n                            <Text className='bold'>{e.createdBy + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text>{e.title}</Text>\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text>{e.description}</Text>\r\n                          </View>\r\n                          {this.props.appUser.role === ROLE.GATEKEEPER &&\r\n                          <View style={{...commentsStyles.cmntCnt, marginTop: 10}}>\r\n                            {!e.isExit && <Button title='Exit' onPress={() => { this.onExit(e._id, d._id) }} />}\r\n                          </View>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No takeaways found!!!</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IServant } from '../models/home';\r\nimport { loadActiveTakeaways, exitTakeaway } from '../store/actions/servant';\r\n\r\nimport Page from '../components/home/gatekeeper/takeaways';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) =>  dispatch(loadActiveTakeaways(appClientId, sCallback, fCallback)),\r\n    onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(exitTakeaway(id, gateNo, callback))\r\n});\r\n\r\nexport const AllTakeaways = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServant } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class NewServant extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let servant = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : ''\r\n        } as IServant;\r\n        this.props.onSave(this.props.user.homes[this.props.homeIndex]._id, servant, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: ''\r\n            });\r\n            // this.props..navigation.goBack(null)\r\n            Toast.success('Servant saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servant.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Servants', link: 'servants'}, {title: 'New Servant', link: 'new-servant' }]} />  \r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={3} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n            <RadioButton isActive={this.state.gender === 'O'} text='Other' onPress={() => this.setState({gender: 'O'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IServant } from '../models/home';\r\nimport { save } from '../store/actions/servant';\r\nimport Page from '../components/home/new-servant';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (homeId: string, data: IServant, sCallback: (result: boolean) => void) => dispatch(save(homeId, data, sCallback))\r\n});\r\n\r\nexport const NewServant = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\n\r\nlet controller: string = 'ticket';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getTicketsResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      dispatch(getTicketsResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Tickets.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          if(isNN(tickets.data)) {\r\n            let arrTickets = [] as Array<ITicket>;\r\n            arrTickets = tickets.data;\r\n            var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n            arrTickets[foundIndex]._id = result.data;\r\n            arrTickets[foundIndex].title = data.title;\r\n            arrTickets[foundIndex].description = data.description;\r\n            arrTickets[foundIndex].status = data.status;\r\n            arrTickets[foundIndex].updatedBy = user.name;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n          arrTickets[foundIndex]._id = result.data;\r\n          arrTickets[foundIndex].title = data.title;\r\n          arrTickets[foundIndex].description = data.description;\r\n          arrTickets[foundIndex].status = data.status;\r\n          arrTickets[foundIndex].updatedBy = user.name;\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              _homeId: user.homes[homeIndex].number,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      // }\r\n      // if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n      //   user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n      //   dispatch(getUserResult(user as IUser));\r\n      // }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const resolve = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/resolve/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const start = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  let newStatus = 'IN-PROGRESS';\r\n  new Api().put(controller + '/start/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          arrTickets = tickets.data;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n          arrTickets[foundIndex].status = newStatus;\r\n          dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        let arrTickets = user.homes[homeIndex].tickets;\r\n        var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n        arrTickets[foundIndex].status = newStatus;\r\n        user.homes[homeIndex].tickets = arrTickets;\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  },{\r\n    status: newStatus\r\n  });\r\n};\r\n\r\nexport const addComment = (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(isNN(comment._id)){\r\n    new Api().put(controller + '/comment/' + comment._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n            var commentIndex = arrTickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n            // arrTickets[ticketIndex].comments[commentIndex] = result.data;\r\n            arrTickets[ticketIndex].comments[commentIndex].comment = comment.comment;\r\n            arrTickets[ticketIndex].comments[commentIndex].updatedBy = comment.updatedBy;\r\n            arrTickets[ticketIndex].comments[commentIndex].updatedAt = comment.updatedAt;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n          var commentIndex = user.homes[appUser.homeIndex].tickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n          user.homes[appUser.homeIndex].tickets[ticketIndex].comments[commentIndex] = comment;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }else{\r\n    new Api().post(controller + '/comment/' + ticketId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment._id = result.data;\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n              // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n              //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n              // }\r\n              arrTickets[ticketIndex].comments.unshift(comment);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n            // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n            //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n            // }\r\n            user.homes[appUser.homeIndex].tickets[ticketIndex].comments.unshift(comment);\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }\r\n};\r\n\r\nexport const removeComment = (id: string, ticketId: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/comment/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n        if(isNN(tickets.data)) {\r\n          var foundIndex = tickets.data.findIndex(d => d._id === ticketId);\r\n          tickets.data[foundIndex].comments = tickets.data[foundIndex].comments.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as commonStyles} from '../../styles/common';\r\nimport {styles as commentsStyles} from '../../styles/comments';\r\nimport Images from '../images';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateTimeString } from '../../util/convert';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n  onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => void,\r\n  onRemoveComment: (id: string, ticketId: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  data: Array<ITicket>,\r\n  isEdit: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string,\r\n  status: string,\r\n  viewId: string,\r\n  comments: Array<ITicketComment>,\r\n  comment: string,\r\n  editCommentId: string,\r\n  editComment: string\r\n};\r\n\r\nexport default class Tickets extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      data: [],\r\n      isEdit: false,\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      status: 'INIT',\r\n      viewId: '',\r\n      comments: [],\r\n      comment: '',\r\n      editCommentId: '',\r\n      editComment: ''\r\n    }\r\n    // this.getTickets = this.getTickets.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onResolve = this.onResolve.bind(this);\r\n    this.onStart = this.onStart.bind(this);\r\n    this.onView = this.onView.bind(this);\r\n    this.onAddComment = this.onAddComment.bind(this);\r\n    this.onUpdateComment = this.onUpdateComment.bind(this);\r\n    this.onRemoveComment = this.onRemoveComment.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) ? '' : this.props.user.homes[this.props.appUser.homeIndex]._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        // data: this.getTickets()\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Tickets.');\r\n      }\r\n    });\r\n    /*\r\n    if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoadAll(this.props.user.client._id, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          data: this.getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoadAllByHome(this.props.user, this.props.appUser.homeIndex, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          data: this.getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }\r\n    */\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  /*\r\n  getTickets = () => {\r\n    if(this.props.appUser.role === ROLE.USER) {\r\n      return isNN(this.props.user.homes[this.props.appUser.homeIndex].tickets) ? this.props.user.homes[this.props.appUser.homeIndex].tickets : [];\r\n    }else if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      return (this.props.tickets.isUpToDate && !this.props.tickets.isError && isNN(this.props.tickets.data)) ? this.props.tickets.data : [];\r\n    }else{\r\n      return [];\r\n    }\r\n  };\r\n  */\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ticket = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          status: this.state.status\r\n        } as ITicket;\r\n        this.props.onSave(ticket, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              title: '',\r\n              description: '',\r\n              status: 'INIT',\r\n              viewId: '',\r\n              comments: [],\r\n              comment: '',\r\n              editCommentId: '',\r\n              editComment: ''\r\n            });\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: '',\r\n                editCommentId: '',\r\n                editComment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onResolve = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to resolve ticket',\r\n      message: 'Are you sure you wish to resolve this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onResolve(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: '',\r\n                editCommentId: '',\r\n                editComment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket resolved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to resolve ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onStart = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to start ticket',\r\n      message: 'Are you sure you wish to start this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onStart(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: '',\r\n                editCommentId: '',\r\n                editComment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket started successfully.');\r\n              }else{\r\n                Toast.fail('Failed to start ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        comments: [],\r\n        comment: '',\r\n        editCommentId: '',\r\n        editComment: ''\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        comments: comments,\r\n        comment: '',\r\n        editCommentId: '',\r\n        editComment: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  onAddComment = (id: string) => {\r\n    if(isNN(this.state.comment)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onAddComment(id, {\r\n        _id: '',\r\n        comment: this.state.comment,\r\n        createdBy: this.props.user._id,\r\n        createdByName: this.props.user.name,\r\n        createdAt: new Date(),\r\n        updatedBy: this.props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITicketComment, this.props.appUser, this.props.user, this.props.tickets, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          this.setState({\r\n            comment: ''\r\n          });\r\n          Toast.success('Comment added successfully.');\r\n        }else{\r\n          Toast.fail('Failed to add comment.');\r\n        }\r\n      });\r\n  }else{\r\n    Toast.warn('Please fill comment before Add.');\r\n  }\r\n  };\r\n\r\n  onUpdateComment = (id: string) => {\r\n    if(isNN(this.state.editCommentId) && isNN(this.state.editComment)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onAddComment(id, {\r\n        _id: this.state.editCommentId,\r\n        comment: this.state.editComment,\r\n        updatedBy: this.props.user._id,\r\n        updatedAt: new Date()\r\n      } as ITicketComment, this.props.appUser, this.props.user, this.props.tickets, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          this.setState({\r\n            editCommentId: '',\r\n            editComment: ''\r\n          });\r\n          Toast.success('Comment updated successfully.');\r\n        }else{\r\n          Toast.fail('Failed to update comment.');\r\n        }\r\n      });\r\n  }else{\r\n    Toast.warn('Please fill comment before update.');\r\n  }\r\n  };\r\n\r\n  onRemoveComment = (id: string, ticketId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete this comment?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemoveComment(id, ticketId, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              if(result === true){\r\n                this.setState({\r\n                  isLoading: false,\r\n                  editCommentId: '',\r\n                  editComment: '',\r\n                  viewId: ''\r\n                });\r\n                Toast.success('Comment removed successfully.');\r\n              }else{\r\n                this.setState({\r\n                  isLoading: false\r\n                });\r\n                Toast.fail('Failed to remove comment.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Tickets', link: 'tickets'}]} />\r\n        {\r\n          this.props.appUser.role === ROLE.USER &&\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('new-ticket')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n        }\r\n        {(isNNObject(this.props.tickets) && this.props.tickets.isUpToDate && !this.props.tickets.isError && isNN(this.props.tickets.data)) ?\r\n        this.props.tickets.data.map((d: ITicket, i: number) => {\r\n            return(\r\n              <View key={'tkt' + i} style={styles.row}>\r\n               <View className='bold' style={styles.ele}>\r\n                  <Text className='bold'>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  {(this.state.isEdit && this.state.id === d._id) ?\r\n                    <TextInput type='text' placeholder='Title' className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n                    :\r\n                    <Text>{d.title}</Text>\r\n                  }\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  {(this.state.isEdit && this.state.id === d._id) ?\r\n                    <TextArea placeholder='Description' className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n                    :\r\n                    <Text>{d.description}</Text>\r\n                  }\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.status}</Text>\r\n                </View>\r\n                {(this.state.isEdit && this.state.id === d._id) ?\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      title: '',\r\n                      description: '',\r\n                      status: 'INIT',\r\n                      viewId: '',\r\n                      comments: [],\r\n                      comment: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n                :\r\n                <View style={styles.ele}>\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      title: d.title,\r\n                      description: d.description,\r\n                      status: 'INIT',\r\n                      viewId: '',\r\n                      comments: [],\r\n                      comment: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                }\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                }\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.onResolve(d._id);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>RESOLVE</Text>\r\n                  </TouchableHighlight>\r\n                }\r\n                {((this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) && d.status === 'INIT') &&\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.onStart(d._id);\r\n                }}>\r\n                  <Text className='pointer' style={{color: COLOR.SECONDARY}}>START</Text>\r\n                </TouchableHighlight>\r\n                }\r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onView(d._id, d.comments);\r\n                }}>\r\n                  <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n                </TouchableHighlight>\r\n                </View>\r\n                }\r\n                {this.state.viewId === d._id &&\r\n                <View style={commentsStyles.cmntsCnr}>\r\n                  <View style={commentsStyles.cmntsHdr}>\r\n                    <Text className='bold' style={commentsStyles.cmntsHdrTxt}>Comments</Text>\r\n                  </View>\r\n                  <View style={commentsStyles.cmntsCnt}>\r\n                    <View style={commentsStyles.addCmntCnt}>\r\n                      <TextArea placeholder='Comment Text' className='form-control' style={{...commonStyles.textInput, ...commentsStyles.newCmnt}} value={this.state.comment} onChange={(event: any) => this.setState({comment: event.target.value})} />\r\n                      <View style={commentsStyles.saveBtn}>\r\n                        <Button\r\n                          title='ADD COMMENT'\r\n                          onPress={() => this.onAddComment(d._id)}\r\n                          />\r\n                      </View>\r\n                    </View>\r\n                    {isNN(this.state.comments) ?\r\n                      this.state.comments.map((e, j) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? commentsStyles.cmntCnrFst : commentsStyles.cmntCnr}>\r\n                          <View style={commentsStyles.cmntHdr}>\r\n                            <Text className='bold'>{e.createdByName + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            {\r\n                              this.state.editCommentId === e._id ?\r\n                              <TextArea placeholder='Comment Text' className='form-control' style={{...commonStyles.textInput, ...commentsStyles.newCmnt}} value={this.state.editComment} onChange={(event: any) => this.setState({editComment: event.target.value})} />\r\n                              :\r\n                              <Text>{e.comment}</Text>\r\n                            }\r\n                          </View>\r\n                          {\r\n                            e.createdBy === this.props.user._id &&\r\n                            <>\r\n                              {\r\n                              this.state.editCommentId === e._id ?\r\n                              <View style={styles.ele}>\r\n                                <TouchableHighlight style={{marginRight: 25}} onClick={() => this.onUpdateComment(d._id)}>\r\n                                  <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                                </TouchableHighlight>\r\n                                <TouchableHighlight style={{}} onClick={() => {\r\n                                  this.setState({\r\n                                    editCommentId: '',\r\n                                    editComment: ''\r\n                                  });\r\n                                }}>\r\n                                  <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                                </TouchableHighlight>\r\n                              </View>\r\n                              :\r\n                              <View style={styles.ele}>\r\n                                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                                  this.setState({\r\n                                    editCommentId: e._id,\r\n                                    editComment: e.comment\r\n                                  });\r\n                                }}>\r\n                                  <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                                </TouchableHighlight>\r\n                                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                                  this.onRemoveComment(e._id, d._id);\r\n                                }}>\r\n                                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                                </TouchableHighlight>\r\n                              </View>\r\n                              }\r\n                            </>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No Comments found!!!</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>{(this.props.tickets.isUpToDate ? (this.props.tickets.isError ? this.props.tickets.errorMessage : \"No Ticket found!!!\") : \"Loading...\")}</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { ITicketComment } from '../models/home/ticket-comment';\r\nimport { loadAll, save, remove, resolve, start, addComment, removeComment } from '../store/actions/ticket';\r\nimport Page from '../components/home/tickets';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, homeId, callback)),\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, sCallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, tickets, sCallback)),\r\n    onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(resolve(id, user, homeIndex, tickets, sCallback)),\r\n    onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(start(id, user, homeIndex, tickets, sCallback)),\r\n    onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) =>  dispatch(addComment(ticketId, comment, appUser, user, tickets, callback)),\r\n    onRemoveComment: (id: string, ticketId: string, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(removeComment(id, ticketId, user, homeIndex, tickets, sCallback))\r\n});\r\n\r\nexport const Tickets = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, Text, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string,\r\n  status: string\r\n};\r\n\r\nexport default class NewTicket extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      status: 'INIT'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ticket = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          status: this.state.status\r\n        } as ITicket;\r\n        this.props.onSave(ticket, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              title: '',\r\n              description: '',\r\n              status: 'INIT'\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Tickets', link: 'tickets'}, {title: 'New Ticket', link: 'new-ticket' }]} />  \r\n        {this.props.appUser.role === ROLE.USER ?\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, this.onSave);\r\n              }} />\r\n            </View>\r\n            {/* <View style={modelStyles.row}>\r\n              <Text>{this.state.status}</Text>\r\n            </View> */}\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <Text>Only User can Add New Ticket. If you have USER role and you want to add new ticket change your role to User from settings->My Role and try again.</Text>\r\n            </View>\r\n          </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { save } from '../store/actions/ticket';\r\nimport Page from '../components/home/new-ticket';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, sCallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, sCallback))\r\n});\r\n\r\nexport const NewTicket = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Text } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport { styles as pageStyles } from '../../styles/page';\r\nimport { styles as modelStyles } from '../../styles/model';\r\nimport {styles as popupStyles} from '../../styles/popup';\r\nimport Toast from  '../../util/toast';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport VisitorsView from './gatekeeper/visitors-view'\r\nimport NewVisitor from './gatekeeper/new-visitor';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  void,\r\n  onApprove: (id: string, callback: (result: boolean) => void) => void,\r\n  onReject: (id: string, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, callback: (result: boolean) => void) => void,\r\n  onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  isRequestNew: boolean,\r\n  isLoading: boolean,\r\n  passCode: string\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true,\r\n      isRequestNew: false,\r\n      isLoading: false,\r\n      passCode: ''\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n    this.onApprove = this.onApprove.bind(this);\r\n    this.onReject = this.onReject.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, this.props.user.homes[this.props.appUser.homeIndex]._id, this.state.isActive, (result: Array<IVisitor>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n  \r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n  \r\n  onApprove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Approve Visitor Entry',\r\n      message: 'Are you sure you wish to Approve the visitor to Enter?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onApprove(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isApproved = true;\r\n                this.state.data[foundIndex].approvedBy = this.props.user.name;\r\n                this.state.data[foundIndex].approvedAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor approved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to approve the entry of visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onReject = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Reject Visitor Entry',\r\n      message: 'Are you sure you wish to reject visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReject(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isRejected = true;\r\n                this.state.data[foundIndex].approvedBy = this.props.user.name;\r\n                this.state.data[foundIndex].approvedAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor rejected successfully.');\r\n              }else{\r\n                Toast.fail('Failed to reject visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Remove Visitor',\r\n      message: 'Are you sure you wish to remove visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.setState({ \r\n                  data: this.state.data.filter(v => v._id !== id)\r\n                });\r\n                Toast.success('Visitor removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onSave = (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => {\r\n    this.props.onSave(homeId, data, user, appUser, (result: IVisitor) => {\r\n      sCallback(result);\r\n      this.state.data.unshift(result);\r\n      this.setState({\r\n        passCode: result.passCode,\r\n        isRequestNew: false\r\n      });\r\n    }, (message: string) => {\r\n      fCallback(message);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={pageStyles.content}>\r\n        <Breadcrum data={[{title: 'Visitors', link: 'visitors'}]} />\r\n        {this.props.appUser.role === ROLE.USER &&\r\n        <View style={{...modelStyles.row, textAlign: 'right'}}>\r\n          <Text className='pointer' onClick={() => this.setState({isRequestNew: !this.state.isRequestNew})} style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right'}}>{this.state.isRequestNew ? '< Back to Visitors' : 'Request for a New Visitor'}</Text>\r\n        </View>\r\n        }\r\n        {!this.state.isRequestNew && <VisitorsView data={this.state.data} isActive={this.state.isActive} user={this.props.user} appUser={this.props.appUser} onActiveChange={this.onActiveChange} onApprove={this.onApprove} onReject={this.onReject} onRemove={this.onRemove} />}\r\n        {this.state.isRequestNew && <NewVisitor appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} gateNo={this.props.gateNo} onToggleLoading={(isLoading) => this.setState({ isLoading: isLoading })} onSave={this.onSave} onUpload={this.props.onUpload} onSearch={this.props.onSearch} />}\r\n        {isNN(this.state.passCode) &&\r\n        <Modal\r\n        open={isNN(this.state.passCode)}\r\n        onClose={() => this.setState({ passCode: '' })}>\r\n          <View style={popupStyles.container}>\r\n            <View style={modelStyles.row}>{'Visitor Request created successfully. Please share the passcode(' + this.state.passCode + ') to yor visitor and ask him/her to show it to the security in the gate while entering.'}</View>\r\n            <View style={{...modelStyles.row, textAlign: 'center', fontSize: 30, fontWeight: 'bold', color: COLOR.SECONDARY}}>{this.state.passCode}</View>\r\n          </View>\r\n        </Modal>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { loadAll, approve, reject, remove, save, search } from '../store/actions/visitor';\r\nimport { upload as fileUpload } from '../store/actions/file';\r\nimport { IUser } from '../models/user';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IVisitor } from '../models/home';\r\n\r\nimport Page from '../components/home/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    homes: state.Homes,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, isActive, sCallback, fCallback)),\r\n    onApprove: (id: string, callback: (result: boolean) => void) => dispatch(approve(id, callback)),\r\n    onReject: (id: string, callback: (result: boolean) => void) => dispatch(reject(id, callback)),\r\n    onRemove: (id: string, callback: (result: boolean) => void) => dispatch(remove(id, callback)),\r\n    onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, sCallback: (result: IVisitor) => void, fCallback: (message: string) => void) => dispatch(save(homeId, data, user, appUser, sCallback, fCallback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(fileUpload(data, callback)),\r\n    onSearch: (searchText: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => dispatch(search(searchText, sCallback, fCallback))\r\n});\r\n\r\nexport const Visitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, password: string, newPassword: string, sCallback: (result: boolean, message: string) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  password: string,\r\n  newPassword: string,\r\n  confirmNewPassword: string\r\n};\r\n\r\nexport default class ChangePassword extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      password: '',\r\n      newPassword: '',\r\n      confirmNewPassword: ''\r\n    }\r\n    this.passwordPolicyCheck = this.passwordPolicyCheck.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  passwordPolicyCheck = (p: string) => {\r\n    let anUpperCase = /[A-Z]/;\r\n    let aLowerCase = /[a-z]/; \r\n    let aNumber = /[0-9]/;\r\n    let aSpecial = /[!|@|#|$|%|^|&|*|(|)|-|_]/;\r\n    let result = \"\";\r\n\r\n    if(p.length < 6){\r\n      result=\"New Password not long enough!\"\r\n        return result;\r\n    }\r\n\r\n    var numUpper = 0;\r\n    var numLower = 0;\r\n    var numNums = 0;\r\n    var numSpecials = 0;\r\n    for(var i=0; i<p.length; i++){\r\n        if(anUpperCase.test(p[i]))\r\n            numUpper++;\r\n        else if(aLowerCase.test(p[i]))\r\n            numLower++;\r\n        else if(aNumber.test(p[i]))\r\n            numNums++;\r\n        else if(aSpecial.test(p[i]))\r\n            numSpecials++;\r\n    }\r\n\r\n    if(numUpper < 1 || numLower < 1 || numNums < 1 || numSpecials < 1){\r\n      result=\"New Password dose not match with password policy!\";\r\n        return result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onUpdate = () => {\r\n    if(isNN(this.state.password) && isNN(this.state.newPassword) && isNN(this.state.confirmNewPassword)){\r\n      if(this.state.newPassword === this.state.confirmNewPassword){\r\n        let policyResult = this.passwordPolicyCheck(this.state.newPassword);\r\n        if(policyResult.length < 1){\r\n          this.setState({\r\n            isLoading: true\r\n          });\r\n          this.props.onUpdate(this.props.user._id, this.state.password, this.state.newPassword, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              Toast.success('Password updated successfully. Please login with your new password.');\r\n              this.props.onLogout((result: boolean) => {\r\n              });\r\n            }else{\r\n              Toast.fail(message);\r\n            }\r\n          });\r\n        }else{\r\n          Toast.warn(policyResult);\r\n        }\r\n      }else{\r\n        Toast.warn('New Password and Confirm New Password not matchs.');\r\n      }\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n          <Breadcrum data={[{title: 'Change Password', link: 'change-password'}]} />\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.password} onChange={(event: any) => this.setState({password: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='New Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.newPassword} onChange={(event: any) => this.setState({newPassword: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='password' placeholder='Confirm New Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.confirmNewPassword} onChange={(event: any) => this.setState({confirmNewPassword: event.target.value})}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, this.onUpdate);\r\n              }} />\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={this.onUpdate}\r\n              />\r\n            </View>\r\n            <View style={{ marginTop: 7 }}>\r\n              <Text>Note: Password should contain adleast one uppercase, one lowercase, one number and one special character.</Text>\r\n            </View>\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { changePassword, logout } from '../store/actions/account';\r\n\r\nimport Page from '../components/home/change-password';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => dispatch(changePassword(userId, password, newPassword, callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const ChangePassword = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN, onEnter } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  name: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class MyProfile extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      name: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.user.name,\r\n      mobileNo: this.props.user.mobileNo,\r\n      emailId: this.props.user.emailId\r\n    });\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onUpdate = () => {\r\n    if(isNN(this.state.name) && isNN(this.state.mobileNo) && isNN(this.state.emailId)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.props.user._id, this.state.name, this.state.mobileNo, (this.state.emailId ? this.state.emailId.toLowerCase() : ''), this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          Toast.success('Profile updated successfully.');\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n          <Breadcrum data={[{title: 'My Profile', link: 'my-profile'}]} />\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})}\r\n              onKeyPress={(e) => {\r\n                onEnter(e, this.onUpdate);\r\n              }} />\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={this.onUpdate}\r\n              />\r\n            </View>\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { updateProfile } from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-profile';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updateProfile(userId, name, mobileNo, emailId, user, callback))\r\n});\r\n\r\nexport const MyProfile = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Picker } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onUpdate: (role: string, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  role: string\r\n};\r\n\r\nexport default class MyRole extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      role: ''\r\n    }\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      role: this.props.appUser.role,\r\n    });\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onUpdate = () => {\r\n    if(isNN(this.state.role)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.state.role, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          Toast.success('Role updated successfully.');\r\n          this.props.history.push('my-role')\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select role before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n          <Breadcrum data={[{title: 'My Role', link: 'my-role'}]} />\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <Picker\r\n                className='form-control'\r\n                value={this.state.role}\r\n                style={modelStyles.ele}\r\n                onChange={(event: any) => this.setState({role: event.target.value})}>\r\n                  {\r\n                  this.props.user.role.split(',').map((d: string, i: number) => {\r\n                    return(<option key={'role' + i} value={d}>{d}</option>);\r\n                  })\r\n                  }\r\n              </Picker>\r\n            </View>\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"UPDATE\"\r\n              onPress={this.onUpdate}\r\n              />\r\n            </View>\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { updateRole} from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-role';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (role: string, callback: (result: boolean, message: string) => void) => dispatch(updateRole(role, callback))\r\n});\r\n\r\nexport const MyRole = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IUser } from '../../models/user';\r\nimport { IAd } from '../../models/ad';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'ad';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getAdResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getAdResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let foundIndex = ads.findIndex(d => d._id === result.data);\r\n        ads[foundIndex]._id = result.data;\r\n        ads[foundIndex].title = data.title;\r\n        ads[foundIndex].description = data.description;\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          ads.unshift({\r\n            _id: result.data,\r\n            title: data.title,\r\n            description: data.description,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IAd);\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      ads = ads.filter((d, i) => d._id !== id);\r\n      dispatch(getAdResult(ads, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onLoad: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string\r\n};\r\n\r\nexport default class Ads extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      title: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ad = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description\r\n        } as IAd;\r\n        this.props.onSave(this.props.user.client._id, ad, this.props.user, this.props.ads.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              title: '',\r\n              description: ''\r\n            });\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.ads.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ad removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ad.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Ads', link: 'ads'}]} />\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-ad')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n      {(this.props.ads.isUpToDate && !this.props.ads.isError && isNN(this.props.ads.data)) ?\r\n        this.props.ads.data.map((d: IAd, i: number) => {\r\n          return(\r\n            (this.state.isEdit === true && this.state.id === d._id) ?\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                  <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: false,\r\n                    id: '',\r\n                    title: '',\r\n                    description: ''\r\n                  });\r\n                }}>\r\n                  <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n            :\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.title}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d._id,\r\n                    title: d.title,\r\n                    description: d.description\r\n                  });\r\n                }}>\r\n                  <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{(this.props.ads.isUpToDate ? (this.props.ads.isError ? this.props.ads.errorMessage : \"No Ad found!!!\") : \"Loading...\")}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { loadAll, save, remove } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/ads';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, callback)),\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback)),\r\n    onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(remove(id, ads, callback))\r\n});\r\n\r\nexport const Ads = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string\r\n};\r\n\r\nexport default class NewAd extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      title: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ad = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description\r\n        } as IAd;\r\n        this.props.onSave(this.props.user.client._id, ad, this.props.user, this.props.ads.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              title: '',\r\n              description: ''\r\n            });\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Ads', link: 'ads'}, {title: 'New Ad', link: 'new-ad'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { save } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/new-ad';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback))\r\n});\r\n\r\nexport const NewAd = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IUserHome } from '../../../models/user-home';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IMember>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Users extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.getHomes = this.getHomes.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getHomes = (userId: string) => {\r\n    let homes = '';\r\n    if((this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)) && (this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data))){\r\n      let homeIds = [] as Array<string>;\r\n      this.props.userHomes.data.filter(uh => uh.userId === userId).map((uh: IUserHome, i: number) => homeIds.push(uh.homeId));\r\n      this.props.homes.data.filter(d => homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n    }\r\n    return homes;\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      let homes = this.props.homes.data.filter(h => h.number.toLocaleLowerCase() === searchText);\r\n      this.setState({\r\n        searchResult: this.props.users.data.filter(d => (d.name + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.mobileNo + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.emailId + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.number + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (isNN(homes.filter(h => h.memberIds.indexOf(d._id) >= 0)))),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.appUser.homeIndex, this.props.user, this.props.users, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('User removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove user.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Users', link: 'users'}]} />\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-user/0/false')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('approve-users')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right', marginRight: 15}}>View Users Waiting for Approval</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search User\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSearch);\r\n            }} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IMember, i: number) => {\r\n            return(\r\n              <View key={'usr' + i} style={styles.row}>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'User Id: ' + (isNN(d.number) ? d.number : '')}</Text>                  \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Mobile No: ' + (isNN(d.mobileNo) ? d.mobileNo : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Email: ' + (isNN(d.emailId) ? d.emailId : '')}</Text>         \r\n                </View> */}\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Owner Name: ' + (isNN(d.ownername) ? d.ownername : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Owner Mobile No: ' + (d.ownermobile > 0 ? d.ownermobile : '')}</Text>         \r\n                </View> */}\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Role: ' + (isNN(d.type) ? d.type.replace(/,/g, ', ') : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Home(s): ' + this.getHomes(d._id)}</Text>         \r\n                </View> */}\r\n                {(d._id !== this.props.user._id) &&\r\n                  <View style={styles.ele}>\r\n                    <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                      this.props.history.push('edit-user/' + d._id + '/false');////TODO\r\n                      // this.props.navigation.navigate('EditUser', {id: d._id});\r\n                      // this.setState({\r\n                      //   isEdit: true,\r\n                      //   id: d.id\r\n                      // });\r\n                    }}>\r\n                      <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                    </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                  </View>\r\n                }\r\n              </View>\r\n              \r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No user match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IUsers } from '../models/store/users';\r\nimport { removeByAM } from '../store/actions/member';\r\n\r\nimport Page from '../components/home/manager/users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => dispatch(removeByAM(id, homeIndex, user, users, callback))\r\n});\r\n\r\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'home';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IHome>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      result.data.forEach((h: any) => {\r\n        h.memberIds = h.members;\r\n        delete h.members;\r\n      });\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Homes.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNN(result.data._id)) {\r\n      result.data.memberIds = result.data.members;\r\n      delete result.data.members;\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Home.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n          var foundIndex = homes.data.findIndex(d => d._id === result.data);\r\n          homes.data[foundIndex]._id = result.data;\r\n          homes.data[foundIndex].number = data.number;\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n            homes.data.push({\r\n              _id: result.data,\r\n              // name: name,\r\n              number: data.number\r\n            } as IHome);\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const checkNumberAvail = (id: string, number: string, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().get(controller + '/checkno/' + number, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes = user.homes.filter((d, i) => d._id !== id);\r\n      homes.data = homes.data.filter((d, i) => d._id !== id);\r\n      ////userHomes.data = userHomes.data.filter((d, i) => d.homeId !== id);\r\n      dispatch(getUserResult(user));\r\n      dispatch(getHomesResult(homes.data, true, false, \"\"));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IUserHome } from '../../../models/user-home';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IHome>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Users extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.getUsers = this.getUsers.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getUsers = (homeId: string) => {\r\n    let users = '';\r\n    if((this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)) && (this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data))){\r\n      let userIds = [] as Array<string>;\r\n      this.props.userHomes.data.filter(uh => uh.homeId === homeId).map((uh: IUserHome, i: number) => userIds.push(uh.userId));\r\n      this.props.users.data.filter(d => userIds.indexOf(d._id) >= 0).map((u: IMember, i: number) => users += (users.length > 0 ? ', ' : '') + u.name);\r\n    }\r\n    return users;\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      this.setState({\r\n        searchResult: this.props.homes.data.filter(d => (d.number + '').toLocaleLowerCase().indexOf(searchText) >= 0),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homes, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('Home removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove home.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Homes', link: 'homes'}]} />\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-home/0')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search Home\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSearch);\r\n            }} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IHome, i: number) => {\r\n            return(\r\n              <View key={'home' + i} style={styles.row}>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <Text>{'Number: ' + d.number}</Text>         \r\n                </View>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Address: ' + (isNN(d.address) ? d.address : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'User(s): ' + this.getUsers(d._id)}</Text>         \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('view-home/' + d._id);\r\n                    // this.props.navigation.navigate('ViewHome', {id: d._id});\r\n                  }}>\r\n                    <Image src={Images.view} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('edit-home/' + d._id);\r\n                    // this.props.navigation.navigate('EditHome', {id: d._id});\r\n                    // this.setState({\r\n                    //   isEdit: true,\r\n                    //   id: d.id\r\n                    // });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No home match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { remove } from '../store/actions/home';\r\n\r\nimport Page from '../components/home/manager/homes';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => dispatch(remove(id, user, homes, callback))\r\n});\r\n\r\nexport const Homes = connect(mapStateToProps, mapDispatchToProps)(Page);","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  mListCnr: {\r\n    borderColor: COLOR.SECONDARY, \r\n    borderWidth: 1,\r\n    height: '50%'\r\n  },\r\n  mListActiveRow: {\r\n    padding: 3,\r\n    backgroundColor: COLOR.SECONDARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid',\r\n    width: '100%',\r\n    marginBottom: '1px'\r\n  },\r\n  mListRow: {\r\n    padding: 3,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid',\r\n    width: '100%',\r\n    marginBottom: '1px'\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { ScrollView, TouchableHighlight, View, TextInput, Text, Image } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport { styles as commonStyles} from '../../../styles/common';\r\nimport { styles as mlistStyles} from '../../../styles/mlist';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR, ROLE } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Images from '../../images';\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  homeIds: Array<string>,\r\n  role: {\r\n    isAdmin: boolean,\r\n    isManager: boolean,\r\n    isGatekeeper: boolean,\r\n    isUser: boolean\r\n  },\r\n  isShowHomes: boolean\r\n};\r\n\r\nexport default class EditUser extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      homeIds: [],\r\n      role: {\r\n        isAdmin: false,\r\n        isManager: false,\r\n        isGatekeeper: false,\r\n        isUser: false\r\n      },\r\n      isShowHomes: false\r\n    }\r\n    this.getHomes = this.getHomes.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onToggleHomeModel = this.onToggleHomeModel.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let userId = this.props.match.params.id;\r\n    if(userId.length > 0 && userId !== '0'){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(userId, (result: IMember, homeIds: Array<string>) => {\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            isLoading: false,\r\n            id: result._id,\r\n            number: result.number,\r\n            name: result.name,\r\n            age: result.age,\r\n            gender: result.gender,\r\n            mobileNo: result.mobileNo,\r\n            emailId: result.emailId,\r\n            type: result.type,\r\n            homeIds: homeIds,\r\n            role: {\r\n              isAdmin: (',' + result.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n              isManager: (',' + result.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n              isGatekeeper: (',' + result.role + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n              isUser: (',' + result.role + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n            }\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load User.');\r\n        }\r\n      }, (message: string) => {\r\n        Toast.fail(isNN(message) ? message : 'Failed to load User.');\r\n      });\r\n    }\r\n\r\n    /*\r\n    if(userId > 0 && (this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data))){\r\n      let users = this.props.users.data.filter((u: IUser, i: number) => u._id === userId);\r\n      if(isNNObject(users) && users.length > 0){\r\n        let homeIds = [] as Array<string>;\r\n        if(this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data)){\r\n          this.props.userHomes.data.filter((uh: IUserHome, i: number) => uh.userId === userId).map(uh => {\r\n            homeIds.push(uh.homeId);\r\n          });\r\n        }\r\n        this.setState({\r\n          id: users[0]._id,\r\n          name: users[0].name,\r\n          mobileNo: users[0].mobileNo,\r\n          emailId: users[0].emailId,\r\n          ////ownername: users[0].ownername,\r\n          ////ownermobile: users[0].ownermobile,\r\n          homeIds: homeIds,\r\n          role: {\r\n            isAdmin: (',' + users[0].type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n            isManager: (',' + users[0].type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n            isGatekeeper: (',' + users[0].type + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n            isUser: (',' + users[0].type + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n          }\r\n        });\r\n      }\r\n    }\r\n    */\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getHomes = () => {\r\n    let homes = '';\r\n    if(isNN(this.state.homeIds) && (this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data))){\r\n      this.props.homes.data.filter(d => this.state.homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n    }\r\n    return homes;\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n      let role = '';\r\n      if(this.state.role.isAdmin){\r\n        role = ROLE.ADMIN\r\n      }\r\n      if(this.state.role.isManager){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.MANAGER\r\n      }\r\n      if(this.state.role.isGatekeeper){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.GATEKEEPER\r\n      }\r\n      if(this.state.role.isUser){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.USER\r\n      }\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: role\r\n        } as IMember;\r\n        this.props.onSave(member, this.state.homeIds, this.props.user, this.props.users, this.props.match.params.isApprove === 'true', (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              homeIds: [],\r\n              role: {\r\n                isAdmin: false,\r\n                isManager: false,\r\n                isGatekeeper: false,\r\n                isUser: false\r\n              }\r\n            });\r\n            Toast.success('User saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save user.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onToggleHomeModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowHomes: isShow\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Users', link: 'users'}, {title: 'Edit User', link: 'edit-user/0'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n            <RadioButton isActive={this.state.gender === 'O'} text='Other' onPress={() => this.setState({gender: 'O'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>Role: </Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Checkbox isActive={this.state.role.isAdmin} text={ROLE.ADMIN} onPress={() => {\r\n              this.state.role.isAdmin = !this.state.role.isAdmin;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isManager} text={ROLE.MANAGER} onPress={() => {\r\n              this.state.role.isManager = !this.state.role.isManager;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isGatekeeper} text={ROLE.GATEKEEPER} onPress={() => {\r\n              this.state.role.isGatekeeper = !this.state.role.isGatekeeper;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isUser} text={ROLE.USER} onPress={() => {\r\n              this.state.role.isUser = !this.state.role.isUser;\r\n              this.setState({});\r\n            }} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Home(s): ' + this.getHomes()}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isShowHomes: true\r\n              });\r\n             }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          {(this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)) &&\r\n          <Modal\r\n          open={this.state.isShowHomes}\r\n          onClose={() => this.onToggleHomeModel(false)}>\r\n            <View style={popupStyles.container}>\r\n              <ScrollView style={{...mlistStyles.mListCnr, maxHeight: '50%'}}>\r\n                {\r\n                  this.props.homes.data.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text key={'home' + i} style={(this.state.homeIds.indexOf(d._id) >= 0 ? mlistStyles.mListActiveRow : mlistStyles.mListRow)} onClick={() => {\r\n                        if(this.state.homeIds.indexOf(d._id) >= 0){\r\n                          this.setState({\r\n                            homeIds: this.state.homeIds.filter(e => e !== d._id)\r\n                          });\r\n                        }else{\r\n                          this.state.homeIds.push(d._id);\r\n                          this.setState({});\r\n                        }\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n                </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title={this.props.match.params.isApprove === 'true' ? 'Approve' : 'SAVE'}\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IMember } from '../models/home';\r\nimport { IUsers } from '../models/store/users';\r\nimport { load, saveByAM } from '../store/actions/member';\r\nimport Page from '../components/home/manager/edit-user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, isApprove: Boolean, callback: (result: boolean, message: string) => void) => dispatch(saveByAM(data, homeIds, user, users, isApprove, callback))\r\n});\r\n\r\nexport const EditUser = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport Spinner from '../../common/spinner';\r\nimport { IMember } from '../../../models/home/member';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport Toast from  '../../../util/toast';\r\nimport { isNN } from '../../../util';\r\nimport { toDateTimeString } from '../../../util/convert';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  onLoad: (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onReject: (id: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IMember>,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class ApproveUsers extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoading: false\r\n    }\r\n    this.onApprove = this.onApprove.bind(this);\r\n    this.onReject = this.onReject.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad((result: Array<IMember>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  onApprove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Approve',\r\n      message: 'You want to Approve the user?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.props.history.push('edit-user/' + id + '/true');\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onReject = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Reject',\r\n      message: 'You want to Reject the user?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReject(id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                this.setState({\r\n                  data: this.state.data.filter(v => v._id !== id)\r\n                });\r\n                Toast.success('User rejected successfully.');\r\n              }else{\r\n                Toast.fail('Failed to reject the user.');\r\n              }\r\n            }); \r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Users', link: 'users'}, {title: 'Users Waiting for Approval', link: 'approve-users'}]} />\r\n        {isNN(this.state.data) ?\r\n        this.state.data.map((d: IMember, i: number) => {\r\n          return(\r\n            <View key={i} style={pageStyles.row}>\r\n              <View style={pageStyles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.name}</Text>\r\n              </View>\r\n              {(d.age > 0 || isNN(d.gender)) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other')) : '')}</Text>\r\n              </View>\r\n              }\r\n              <View style={pageStyles.ele}>\r\n                On <Text style={{fontWeight: 'bold'}}>{toDateTimeString(d.createdAt)}</Text>\r\n              </View>\r\n              {isNN(d.mobileNo) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.emailId) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n              }\r\n              <View style={pageStyles.ele}>\r\n                <Button title='Approve' style={{marginRight: '10px'}} onPress={() => { this.onApprove(d._id); }} />\r\n                <Button title='Reject' onPress={() => { this.onReject(d._id); }} />\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No users found!!!</Text>\r\n      }\r\n      <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { loadWFAUsers, reject } from '../store/actions/member';\r\nimport { IMember } from '../models/home';\r\n\r\nimport Page from '../components/home/manager/approve-users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadWFAUsers(sCallback, fCallback)),\r\n    onReject: (id: string, callback: (result: boolean) => void) => dispatch(reject(id, callback))\r\n});\r\n\r\nexport const ApproveUsers = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { TouchableHighlight, ScrollView, View, TextInput, Text, Image, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from '../../../styles/page';\r\nimport { styles as modelStyles } from '../../../styles/model';\r\nimport {styles as commonStyles} from '../../../styles/common';\r\nimport { styles as mlistStyles} from '../../../styles/mlist';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Images from '../../images';\r\nimport { styles as iconStyles } from '../../../styles/icon';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => void,\r\n  onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n\tblockId: string,\r\n\tnumber: string,\r\n\taddress: string,\r\n  bedRoom: number,\r\n  parking: string,\r\n  description: string,\r\n  members: Array<string>,\r\n  isShowUsers: boolean\r\n};\r\n\r\nexport default class EditHome extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      blockId: '',\r\n      number: '',\r\n      address: '',\r\n      bedRoom: 1,\r\n      parking: '',\r\n      description: '',\r\n      members: [],\r\n      isShowUsers: false\r\n    }\r\n    this.getUsers = this.getUsers.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onToggleUserModel = this.onToggleUserModel.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let homeId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    if(homeId.length > 0 && homeId !== '0'){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(homeId, (result: IHome) => {\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            isLoading: false,\r\n            id: result._id,\r\n            blockId: result._blockId,\r\n            number: result.number,\r\n            address: result.address,\r\n            bedRoom: result.bedRoom,\r\n            parking: result.parking,\r\n            description: result.description,\r\n            members: result.memberIds\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load Home.');\r\n        }\r\n      }, (message: string) => {\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Home.');\r\n      });\r\n    }\r\n    \r\n    /*\r\n    if(homeId > 0 && (this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data))){\r\n      let homes = this.props.homes.data.filter((u: IHome, i: number) => u._id === homeId);\r\n      if(isNNObject(homes) && homes.length > 0){\r\n        let members = [] as Array<string>;\r\n        if(this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data)){\r\n          this.props.userHomes.data.filter((uh: IUserHome, i: number) => uh.homeId === homeId).map(uh => {\r\n            members.push(uh.userId);\r\n          });\r\n        }\r\n        this.setState({\r\n          id: homes[0]._id,\r\n          blockId: homes[0]._blockId,\r\n          number: homes[0].number,\r\n          address: homes[0].address,\r\n          bedRoom: homes[0].bedRoom,\r\n          parking: homes[0].parking,\r\n          description: homes[0].description,\r\n          members: members\r\n        });\r\n      }\r\n    }\r\n    */\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getUsers = () => {\r\n    let users = '';\r\n    if(isNN(this.state.members) && (this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data))){\r\n      this.props.users.data.filter(d => this.state.members.indexOf(d._id) >= 0).map((u: IMember, i: number) => \r\n        users += (users.length > 0 ? ', ' : '') + u.name + (isNN(u.number) ? '(' + u.number + ')' : '')\r\n      );\r\n    }\r\n    return users;\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.blockId) && isNN(this.state.number)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      /*\r\n      this.props.onCheckNumberAvail(this.state.id, this.state.number, (result: boolean) => {\r\n        if(result === true){\r\n          */\r\n         let home = {\r\n           _id: this.state.id,\r\n           _blockId: this.state.blockId,\r\n           number: this.state.number,\r\n           address: this.state.address,\r\n           bedRoom: this.state.bedRoom,\r\n           parking: this.state.parking,\r\n           description: this.state.description,\r\n           memberIds: this.state.members\r\n         } as IHome;\r\n          this.props.onSave(home, this.props.user, this.props.homes, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                id: '',\r\n                blockId: '',\r\n                number: '',\r\n                address: '',\r\n                bedRoom: 1,\r\n                parking: '',\r\n                description: '',\r\n                members: []\r\n              });\r\n              Toast.success('Home saved successfully.');\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to save home.');\r\n            }\r\n          });\r\n          /*\r\n        }else{\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          Toast.warn('Home with same Number already available. Please change the home number.');\r\n        }\r\n      });\r\n      */\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onToggleUserModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowUsers: isShow\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Homes', link: 'homes'}, {title: 'Edit Home', link: 'edit-home/0'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <Picker\r\n            className='form-control'\r\n            value={this.state.blockId}\r\n            style={modelStyles.ele}\r\n            onChange={(event: any) => this.setState({blockId: event.target.value})}>\r\n              <option key={'block0'} value=''>Select Block</option>\r\n              {(this.props.blocks && this.props.blocks.isUpToDate && !this.props.blocks.isError && isNN(this.props.blocks.data)) &&\r\n                this.props.blocks.data.map((d: IBlock, i: number) => {\r\n                  return(<option key={'block' + i} value={d._id}>{d.name}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Address\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.address} onChange={(event: any) => this.setState({address: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>No of bed rooms: </Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.bedRoom === 1} text='1' onPress={() => this.setState({bedRoom: 1})} />\r\n            <RadioButton isActive={this.state.bedRoom === 2} text='2' onPress={() => this.setState({bedRoom: 2})} />\r\n            <RadioButton isActive={this.state.bedRoom === 3} text='3' onPress={() => this.setState({bedRoom: 3})} />\r\n            <RadioButton isActive={this.state.bedRoom === 4} text='4' onPress={() => this.setState({bedRoom: 4})} />\r\n            <RadioButton isActive={this.state.bedRoom === 5} text='5' onPress={() => this.setState({bedRoom: 5})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Parking\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.parking} onChange={(event: any) => this.setState({parking: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Description\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'User(s): ' + this.getUsers()}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isShowUsers: true\r\n              });\r\n             }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          {(this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)) &&\r\n          <Modal\r\n          open={this.state.isShowUsers}\r\n          onClose={() => this.onToggleUserModel(false)}>\r\n            <View style={popupStyles.container}>\r\n              <ScrollView style={{...mlistStyles.mListCnr, maxHeight: '50%'}}>\r\n              {\r\n                this.props.users.data.map((d: IMember, i: number) => {\r\n                  return(\r\n                    <Text key={'user' + i} style={(this.state.members.indexOf(d._id) >= 0 ? mlistStyles.mListActiveRow : mlistStyles.mListRow)} onClick={() => {\r\n                      if(this.state.members.indexOf(d._id) >= 0){\r\n                        this.setState({\r\n                          members: this.state.members.filter(e => e !== d._id)\r\n                        });\r\n                      }else{\r\n                        this.state.members.push(d._id);\r\n                        this.setState({});\r\n                      }\r\n                    }}>{d.name + (d.number ? '(' + d.number + ')' : '')}</Text>\r\n                  )\r\n                })\r\n              }\r\n              </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { IHome } from '../models/home';\r\nimport { IUser } from '../models/user';\r\nimport { load, save, checkNumberAvail } from '../store/actions/home';\r\nimport Page from '../components/home/manager/edit-home';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => dispatch(save(data, user, homes, callback)),\r\n    onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => dispatch(checkNumberAvail(id, number, callback))\r\n});\r\n\r\nexport const EditHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport Toast from  '../../../util/toast';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport VisitorsView from './visitors-view';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  homes: IHomes,\r\n  gateNo: string,\r\n  onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onEnter: (id: string, gateNo: string, callback: (result: boolean) => void) => void,\r\n  onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean,\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true,\r\n      isLoading: false\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n    this.onEnter = this.onEnter.bind(this);\r\n    this.onExit = this.onExit.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, '', this.state.isActive, (result: Array<IVisitor>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n\r\n  onEnter = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Allow Visitor Entry',\r\n      message: 'Are you sure you wish to Allow the visitor to Enter?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onEnter(id, this.props.gateNo, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                let foundIndex = this.state.data.findIndex(v => v._id === id);\r\n                this.state.data[foundIndex].isEntered = true;\r\n                this.state.data[foundIndex].enteredBy = this.props.user.name;\r\n                this.state.data[foundIndex].enteredAt = new Date();\r\n                this.setState({ });\r\n                Toast.success('Visitor entered successfully.');\r\n              }else{\r\n                Toast.fail('Failed to allow the entry of visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onExit = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Exit Visitor',\r\n      message: 'Are you sure you wish to exit visitor?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onExit(id, this.props.gateNo, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                this.setState({\r\n                  data: this.state.data.filter(v => v._id !== id)\r\n                });\r\n                Toast.success('Visitor exit successfully.');\r\n              }else{\r\n                Toast.fail('Failed to exit visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={pageStyles.content}>\r\n        <Breadcrum data={[{title: 'Visitors', link: 'all-visitors'}]} />\r\n        <VisitorsView user={this.props.user} appUser={this.props.appUser} data={this.state.data} isActive={this.state.isActive} onActiveChange={this.onActiveChange} onEnter={this.onEnter} onExit={this.onExit} />\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IVisitor } from '../models/home';\r\nimport { loadAll, enter, exit } from '../store/actions/visitor';\r\n\r\nimport Page from '../components/home/gatekeeper/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    homes: state.Homes,\r\n    gateNo: state.GateNo\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, isActive, sCallback, fCallback)),\r\n    onEnter: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(enter(id, gateNo, callback)),\r\n    onExit: (id: string, gateNo: string, callback: (result: boolean) => void) => dispatch(exit(id, gateNo, callback))\r\n});\r\n\r\nexport const AllVisitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Button from '../../common/button';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { INotification } from '../../../models/notification';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN, isNNObject, onEnter } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => void,\r\n  onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  data: Array<INotification>,\r\n  title: string,\r\n  body: string\r\n};\r\n\r\nexport default class Notification extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      data: [],\r\n      title: '',\r\n      body: ''\r\n    }\r\n    this.onPush = this.onPush.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (result: Array<INotification>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onPush = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.body)){\r\n      confirmAlert({\r\n        title: 'Confirm to send push notification',\r\n        message: 'Are you sure? This notification will send to all users using this app in your Appartment. Are you sure you want to Push?',\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n              this.setState({\r\n                isLoading: true\r\n              });\r\n              let notification = {\r\n                title: this.state.title,\r\n                body: this.state.body\r\n              } as INotification;\r\n              this.props.onPush(this.props.user.client._id, notification, this.props.user, (result: INotification | null) => {\r\n                this.setState({\r\n                  isLoading: false,\r\n                });\r\n                if(isNNObject(result)){\r\n                  let data = this.state.data;\r\n                  data.unshift(result as INotification);\r\n                  this.setState({\r\n                    data: data,\r\n                    title: '',\r\n                    body: ''\r\n                  });\r\n                  Toast.success('Notification pushed successfully.');\r\n                }else{\r\n                  Toast.fail('Failed to push Notification.');\r\n                }\r\n              });\r\n            }\r\n          },\r\n          {\r\n            label: 'No',\r\n            onClick: () => {}\r\n          }\r\n        ]\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Push.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Notification', link: 'notification'}]} />\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n        </View>\r\n        <View style={modelStyles.row}>\r\n          <TextArea placeholder=\"Body\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.body} onChange={(event: any) => this.setState({body: event.target.value})}\r\n          onKeyPress={(e) => {\r\n            onEnter(e, this.onPush);\r\n          }} />\r\n        </View>\r\n        <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n            <Button\r\n            style={{marginRight: 10}}\r\n            title=\"PUSH\"\r\n            onPress={this.onPush}\r\n            />\r\n            <Button\r\n            title=\"CLEAR\"\r\n            onPress={() => {\r\n              this.setState({\r\n                title: '',\r\n                body: ''\r\n              });\r\n            }}\r\n            />\r\n        </View>\r\n      {(isNN(this.state.data)) ?\r\n        this.state.data.map((d: INotification, i: number) => {\r\n          return(\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.body}</Text>\r\n              </View>\r\n              <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                <Button title=\"Duplicate\" onPress={() => {\r\n                  this.setState({\r\n                    title: d.title,\r\n                    body: d.body\r\n                  });\r\n                }} />\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Nofification found!!!</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { INotification } from '../models/notification';\r\nimport { loadAll, push } from '../store/actions/notification';\r\nimport Page from '../components/home/manager/notification';\r\nimport { IUser } from '../models/user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, sCallback, fCallback)),\r\n    onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => dispatch(push(appClientId, data, user, callback))\r\n});\r\n\r\nexport const Notification = connect(mapStateToProps, mapDispatchToProps)(Page);","import { INotification } from '../../models/notification';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { IUser } from '../../models/user';\r\n\r\nlet controller: string = 'notification';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Notification.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const push = (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => (dispatch: any) => {  \r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback({\r\n        _id: result.data,\r\n        title: data.title,\r\n        body: data.body,\r\n        createdBy: user.name,\r\n        createdAt: new Date()\r\n      } as INotification);\r\n    }else{\r\n      callback(null);\r\n    }\r\n  }, data);\r\n};","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'outing';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getOutingResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getOutingResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    // Not Implemented\r\n        callback(false);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      console.log('result:', result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        outings.data.unshift(data);\r\n        dispatch(getOutingResult(outings.data, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    },data);\r\n  }\r\n};\r\n\r\nexport const retunBack = (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().delete(controller + '/return/' + id, (result: any, message: string) => {\r\n    debugger;\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      var foundIndex = outings.data.findIndex(d => d._id === id);\r\n      outings.data[foundIndex].isReturned = true;\r\n      outings.data[foundIndex].returnedAt = new Date();\r\n      dispatch(getOutingResult(outings.data, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getOutingResult = (data: Array<IOuting>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_OUTINGS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IOutings\r\n});","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../common/button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { COLOR } from '../../constants';\r\nimport { isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  outings: IOutings,\r\n  onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  place: string,\r\n  address: string,\r\n  datePickerType: string,\r\n  datePickerDate: Date\r\n};\r\n\r\nexport default class NewOuting extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      fromDate: '',\r\n      toDate: '',\r\n      place: '',\r\n      address: '',\r\n      datePickerType: '',\r\n      datePickerDate: new Date()\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    // if(isNNObject(this.state.fromDate) && isNNObject(this.state.toDate) && isNN(this.state.place) && isNN(this.state.address)){\r\n    if(isNNObject(this.state.fromDate) && isNNObject(this.state.toDate)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let outing = {\r\n          ////homeId: this.props.user.home[this.props.appUser.homeIndex].id,\r\n          _homeId: this.props.user.homes[this.props.appUser.homeIndex].number,\r\n          fromDate: this.state.fromDate,\r\n          toDate : this.state.toDate,\r\n          place: this.state.place,\r\n          address: this.state.address,\r\n          isReturned: false,\r\n          createdBy: this.props.user.name,\r\n          createdAt: new Date()\r\n        } as IOuting;\r\n        this.props.onSave(outing, this.props.user.homes[this.props.appUser.homeIndex]._id, this.props.user, this.props.outings, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              fromDate: '',\r\n              toDate: '',\r\n              place: '',\r\n              address: '',\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Outing submitted successfully.');\r\n          }else{\r\n            Toast.fail('Failed to submit Outing.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before submit Outing.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Notice', link: 'notice'}, {title: 'New Outing', link: 'new-outing' }]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          {/* <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Place\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.place} onChange={(event: any) => this.setState({place: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Address\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.address} onChange={(event: any) => this.setState({address: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View> */}\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { IOuting } from '../models/outing';\r\nimport { save } from '../store/actions/outing';\r\nimport Page from '../components/home/new-outing';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    outings: state.Outings\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(save(data, homeId, user, outings, callback))\r\n});\r\n\r\nexport const NewOuting = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user';\r\nimport { IDocument } from '../../models/document';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants';\r\n\r\nlet controller: string = 'document';\r\n\r\nexport const loadAll = (homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getDocumentResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getDocumentResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(result && isNN(result.message) ? result.message : 'Failed to load Documents.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // document.file = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          var foundIndex = documents.findIndex(d => d._id === result.data._id);\r\n          documents[foundIndex]._id = result.data._id;\r\n          ////documents[foundIndex].userId = data.userId;\r\n          ////documents[foundIndex].homeId = data.homeId;\r\n          documents[foundIndex].title = data.title;\r\n          documents[foundIndex].description = data.description;\r\n          documents[foundIndex].file = data.file;\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          documents.unshift({\r\n            _id: result.data._id,\r\n            ////userId: data.userId,\r\n            ////homeId: data.homeId,\r\n            title: data.title,\r\n            description: data.description,\r\n            file: data.file,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IDocument);\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      documents = documents.filter((d, i) => d._id !== id);\r\n      dispatch(getDocumentResult(documents, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getDocumentResult = (data: Array<IDocument>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_DOCUMENTS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IDocuments\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport Spinner from '../common/spinner';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IDocument } from '../../models/document';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { FILE_BASE_PATH } from '../../constants';\r\nimport { isNN, generateUUID } from '../../util/index';\r\nimport { toDateString } from '../../util/convert';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  homeIndex: number,\r\n  user: IUser,\r\n  documents: IDocuments,\r\n  onLoad: (homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  homeId: string,\r\n  title: string,\r\n  description: string,\r\n  fileName: string\r\n};\r\n\r\nexport default class MyDocuments extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onFileSelect = this.onFileSelect.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.homes[this.props.homeIndex]._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Documents.');\r\n      }\r\n    });\r\n  };\r\n\r\n  onFileSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        // upload file to api.\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        this.props.onUpload(data, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false\r\n          });\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }else{\r\n            this.setState({\r\n              fileName: fileName\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.fileName)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        /*\r\n        let data = this.state.data;\r\n        data.id = this.state.id,\r\n        data.userId = this.props.user._id,\r\n        data.homeId = this.state.homeId;\r\n        data.title = this.state.title;\r\n        data.description = this.state.description;\r\n        data.createdBy = this.props.user._id;\r\n        data.createdOn = new Date();\r\n        */\r\n        \r\n        let document = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          file: this.state.fileName,\r\n          createdBy: this.props.user.name,\r\n          createdAt: new Date()\r\n        } as IDocument;\r\n        this.props.onSave(this.state.homeId, document, this.props.homeIndex, this.props.user, this.props.documents.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n              title: '',\r\n              description: '',\r\n              fileName: ''\r\n            });\r\n            Toast.success('Document saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save document.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      id: '',\r\n      homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n    });\r\n  };\r\n  \r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.documents.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Document removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove document.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'My Documents', link: 'my-documents'}]} />\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n        </View>\r\n        <View style={modelStyles.row}>\r\n          <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n        </View>\r\n        {isNN(this.props.user.homes) &&\r\n        <View style={modelStyles.row}>\r\n        <Text style={{marginRight: 10}}>Home:</Text>\r\n        {this.props.user.homes.map((h: IHome, i: number) => {\r\n          return(\r\n            <RadioButton isActive={h._id === this.state.homeId} text={h.number} key={'home' + i} onPress={() => this.setState({homeId: h._id})} />\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n        }\r\n        <View style={modelStyles.row}>\r\n          {/* <Button\r\n              title='Select Document'\r\n              onPress={this.onImageSelect}\r\n              /> */}\r\n              <input type='file' name='file' placeholder='Select Document' onChange={this.onFileSelect}/>\r\n              {isNN(this.state.fileName) &&\r\n              <Text style={{marginLeft: 15}}>{this.state.fileName}</Text>\r\n              }\r\n        </View>\r\n        <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n            <Button\r\n            style={{marginRight: 10}}\r\n            title='SAVE'\r\n            onPress={this.onSave}\r\n            />\r\n            <Button\r\n            title='CLEAR'\r\n            onPress={this.onClear}\r\n            />\r\n        </View>\r\n      {(this.props.documents.isUpToDate && !this.props.documents.isError && isNN(this.props.documents.data)) ?\r\n        this.props.documents.data.map((d: IDocument, i: number) => {\r\n          return(\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n              </View>\r\n              {isNN(d.description) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              }\r\n              {isNN(this.props.user.homes.filter(ho => ho._id === d._id)) &&\r\n              <View style={styles.ele}>\r\n                <Text>{'Home: ' + this.props.user.homes.filter(ho => ho._id === d._id)[0].number}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.file) &&\r\n              <View style={styles.ele}>\r\n                <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n              </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                {/* <TouchableHighlight underlayColor={COLOR.ICON_BTN_UNDERLAY} style={{marginRight: 25}} onPress={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d.id,\r\n                    homeId: d.homeId,\r\n                    title: d.title,\r\n                    description: d.description,\r\n                  });\r\n                }}>\r\n                  <Image source={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight> */}\r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{this.props.documents.isUpToDate ? 'No Documents found!!!' : (this.props.documents.isError ?  this.props.documents.errorMessage : 'No Documents found!!!')}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IDocument } from '../models/document';\r\nimport { loadAll, save, remove } from '../store/actions/documents';\r\nimport { upload } from '../store/actions/file';\r\nimport Page from '../components/home/my-documents';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    homeIndex: state.AppUser.homeIndex,\r\n    user: state.User,\r\n    documents: state.Documents\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(homeId, callback)),\r\n    onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(save(homeId, data, homeIndex, user, documents, callback)),\r\n    onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(remove(id, documents, callback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(upload(data, callback))\r\n});\r\n\r\nexport const MyDocuments = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { IBlock } from '../../models/block/block';\r\nimport { IUser } from '../../models/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util';\r\nimport { IHome } from '../../models/home';\r\nimport { IHomes } from '../../models/store/homes';\r\n\r\nlet controller: string = 'block';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getBlockResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getBlockResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, homes: Array<IHome>, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = blocks.findIndex(d => d._id === result.data);\r\n        blocks[foundIndex]._id = result.data;\r\n        blocks[foundIndex].name = data.name;\r\n        blocks[foundIndex].description = data.description;\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.blockId))\r\n      {\r\n        blocks.unshift({\r\n            _id: result.data.blockId,\r\n            name: data.name,\r\n            description: data.description,\r\n            createdBy: user.name\r\n          } as IBlock);\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        if(isNN(result.data.homes)){\r\n          result.data.homes.forEach((h: any) => {\r\n            h.memberIds = h.members;\r\n            delete h.members;\r\n          });\r\n          homes = homes.concat(result.data.homes);\r\n          dispatch(getHomesResult(homes, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      blocks = blocks.filter((d, i) => d._id !== id);\r\n      dispatch(getBlockResult(blocks, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  homes: IHomes,\r\n  onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IBlock>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Blocks extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.blocks.isUpToDate && !this.props.blocks.isError && isNN(this.props.blocks.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      this.setState({\r\n        searchResult: this.props.blocks.data.filter(d => (d.name + '').toLocaleLowerCase().indexOf(searchText) >= 0),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            let homes = (isNN(this.props.homes.data)) ? this.props.homes.data.filter(h => h._blockId === id) : [];\r\n            if(isNN(homes)){\r\n              let msg = '';\r\n              homes.map(h => {\r\n                msg += (msg.length > 0 ? ', ' : '') + h.number;\r\n              });\r\n              if(homes.length > 1){\r\n                msg = 'Homes ' + msg + ' are assigned under this block. Please move these homes to other block and try to delete';\r\n              }else{\r\n                msg = 'Home ' + msg + ' is assigned under this block. Please move this home to other block and try to delete.';\r\n              }\r\n              Toast.fail(msg);\r\n            }else{\r\n              this.setState({\r\n                isLoading: true\r\n              });\r\n              this.props.onRemove(id, this.props.blocks.data, (result: boolean) => {\r\n                this.setState({\r\n                  isLoading: false\r\n                });\r\n                if(result === true){\r\n                  this.onSearch();\r\n                  Toast.success('Home removed successfully.');\r\n                }else{\r\n                  Toast.fail('Failed to remove home.');\r\n                }\r\n              });\r\n            }\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Blocks', link: 'blocks'}]} />\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-block/0')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search Block\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSearch);\r\n            }} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IBlock, i: number) => {\r\n            return(\r\n              <View key={'block' + i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Name: ' + d.name}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Description: ' + (isNN(d.description) ? d.description : '')}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text style={{marginRight: 10}}>Homes: </Text>\r\n                  {\r\n                    (isNN(this.props.homes.data) && isNN(this.props.homes.data.filter(h => h._blockId === d._id))) ?\r\n                    this.props.homes.data.filter(h => h._blockId === d._id).map((h, i) => {\r\n                    return(<Link to={'edit-home/' + h._id} style={{marginRight: 10}}>{h.number}</Link>)\r\n                    })\r\n                    :\r\n                    <Text>No homes assigned under this block.</Text>\r\n                  }\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('edit-block/' + d._id);////TODO\r\n                    // this.props.navigation.navigate('EditBlock', {id: d._id});\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No block match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { remove } from '../store/actions/block';\r\nimport Page from '../components/home/manager/blocks';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => dispatch(remove(id, blocks, callback))\r\n});\r\n\r\nexport const Blocks = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as commonStyles} from '../../../styles/common';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN, onEnter } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome } from '../../../models/home';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  homes: IHomes,\r\n  onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, homes: Array<IHome>, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n\tname: string,\r\n  description: string,\r\n  homeCount: number\r\n};\r\n\r\nexport default class EditBlock extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      name: '',\r\n      description: '',\r\n      homeCount: 0\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let blockId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    if(blockId.length > 0 && blockId !== '0' && this.props.blocks && isNN(this.props.blocks.data)){\r\n      let block = this.props.blocks.data.filter((d, i) => {\r\n        return d._id === blockId\r\n      });\r\n      if(isNN(block)){\r\n        this.setState({\r\n          id: block[0]._id,\r\n          name: block[0].name,\r\n          description: block[0].description\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && (isNN(this.state.id) || this.state.homeCount > 0)){\r\n      if(!isNN(this.props.blocks.data) || !isNN(this.props.blocks.data.filter(b => b.name === this.state.name))){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let block = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          description: this.state.description\r\n        } as IBlock;\r\n        block = Object.assign(block, {\r\n          homeCount: this.state.homeCount\r\n        });\r\n        this.props.onSave(this.props.user.client._id, block, this.props.user, (this.props.blocks && this.props.blocks.data) ? this.props.blocks.data : [], (this.props.homes && this.props.homes.data) ? this.props.homes.data : [], (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              name: '',\r\n              description: '',\r\n              homeCount: 0\r\n            });\r\n            Toast.success(isNN(this.state.id) ? 'Block saved successfully.' : 'Block saved and home(s) created successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save block.');\r\n          }\r\n        });\r\n      }else{\r\n        Toast.fail('Block with same name already exists. Please give different name.');\r\n      }\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <Breadcrum data={[{title: 'Blocks', link: 'blocks'}, {title: 'Edit Block', link: 'edit-block/0'}]} />\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Description\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})}\r\n            onKeyPress={(e) => {\r\n              onEnter(e, this.onSave);\r\n            }} />\r\n          </View>\r\n          {!isNN(this.state.id) &&\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='number' placeholder=\"Number of houses in this block\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.homeCount > 0 ? this.state.homeCount + '' : ''} onChange={(event: any) => this.setState({homeCount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          }\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { IUser } from '../models/user';\r\nimport { IHome } from '../models/home';\r\nimport { save } from '../store/actions/block';\r\nimport Page from '../components/home/manager/edit-block';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, homes: Array<IHome>, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, blocks, homes, callback))\r\n});\r\n\r\nexport const EditBlock = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, ScrollView, TextInput, Text, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome } from '../../../models/home';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\nimport { COLOR, MONTH } from '../../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  amount: number,\r\n  description: string,\r\n  month: number,\r\n  year: number,\r\n  searchText: string,\r\n  showHomes: boolean,\r\n  isAllHome: boolean,\r\n  homes: Array<IHome>\r\n};\r\n\r\nexport default class PaymentForm extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      amount: 0,\r\n      description: '',\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n      searchText: '',\r\n      showHomes: false,\r\n      isAllHome: false,\r\n      homes: []\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n  };\r\n\r\n  onSave = () => {\r\n    if(this.state.amount > 0 && (this.state.isAllHome || this.state.homes.length > 0)){\r\n      let homeIds = [] as any;\r\n      this.state.homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        amount: this.state.amount,\r\n        description: this.state.description,\r\n        month: this.state.month,\r\n        year: this.state.year,\r\n        isAllHome: this.state.isAllHome,\r\n        homes: homeIds\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onSave(this.props.user.client._id, data, this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          this.setState({\r\n            amount: 0,\r\n            description: '',\r\n            month: new Date().getMonth(),\r\n            year: new Date().getFullYear(),\r\n            searchText: '',\r\n            showHomes: false,\r\n            isAllHome: false,\r\n            homes: []\r\n          });\r\n          Toast.success('Payment saved successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to save payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Save.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({ \r\n      amount: 0,\r\n      description: '',\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n      searchText: '',\r\n      showHomes: false,\r\n      isAllHome: false,\r\n      homes: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Amount\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.amount > 0 ? this.state.amount + '' : ''} onChange={(event: any) => this.setState({amount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={{marginTop: 15}}>{'Payment for ' + this.state.year + ' '}</Text>\r\n            <Picker\r\n              className='form-control'\r\n              value={this.state.month}\r\n              style={ modelStyles.ele}\r\n              onChange={(event: any) => this.setState({month: event.target.value})}>\r\n              {\r\n                MONTH.filter((m, i) => m.value <= new Date().getMonth()).map((m: any, i: number) => {\r\n                  return(<option key={'month' + i} value={m.value}>{m.title}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={{marginRight: 15}}>{'Apply to Home(s): ' + (this.state.isAllHome ? '' : this.state.homes.length)}</Text>\r\n            <Checkbox isActive={this.state.isAllHome} text='All Homes' onPress={() => this.setState({isAllHome: !this.state.isAllHome})} />\r\n          </View>\r\n          {!this.state.isAllHome &&\r\n          <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.state.homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6, color: COLOR.SECONDARY }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          homes: this.state.homes.filter((h, i) => h._id !== d._id)\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n          }\r\n          {!this.state.isAllHome &&\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Enter Home Number\" className='form-control'\r\n            style={{...modelStyles.ele,\r\n              flexDirection: 'row',\r\n              padding: 6,\r\n              borderWidth: 1,\r\n              borderColor: COLOR.HR_COLOR,\r\n              borderRadius: 5\r\n            }}\r\n            value={this.state.searchText} \r\n            onChange={(event: any) => this.setState({showHomes: true, searchText: event.target.value})} />\r\n          </View>\r\n          }\r\n            {(!this.state.isAllHome && this.state.showHomes && isNN(this.state.searchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n              <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.searchText.toLowerCase()) >= 0 && (this.state.homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6}}\r\n                      onClick={() => {\r\n                        let homes = this.state.homes;\r\n                        homes.push(d);\r\n                        this.setState({\r\n                          homes: homes\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n              </ScrollView>\r\n            }\r\n          <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n              <Button\r\n              style={{marginRight: 10}}\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={this.onClear}\r\n              />\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Text, TextInput, ScrollView, TextArea } from '../../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IPayment } from '../../../models/home';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR, MONTH } from '../../../constants';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN } from '../../../util';\r\nimport Toast from '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  isShowSearch: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  datePickerType: string,\r\n  datePickerDate: Date,\r\n  homes: Array<IHome>,\r\n  searchText: string,\r\n  showHomes: boolean,\r\n  data: Array<IPayment>,\r\n  isShowUpdateModel: boolean,\r\n  uPaymentId: string,\r\n  uAmount: number,\r\n  uDescription: string\r\n};\r\n\r\nexport default class PaymentHistory extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isShowSearch: true,\r\n      fromDate: '',\r\n      toDate: '',\r\n      datePickerType: '',\r\n      datePickerDate: new Date(),\r\n      homes: [],\r\n      searchText: '',\r\n      showHomes: false,\r\n      data: [],\r\n      isShowUpdateModel: false,\r\n      uPaymentId: '',\r\n      uAmount: 0,\r\n      uDescription: ''\r\n    };\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(this.state.fromDate && this.state.toDate){\r\n      let homeIds = [] as any;\r\n      this.state.homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        fromDate: this.state.fromDate,\r\n        toDate: this.state.toDate,\r\n        homes: homeIds\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onSearch(this.props.user.client._id, data, this.props.user, (result: Array<IPayment>) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          isShowSearch: false,\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        Toast.fail(message ? message : 'Failed to load payment.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Search.');\r\n    }\r\n  };\r\n\r\n  onUpdate = () => {\r\n    if(isNN(this.state.uPaymentId) && this.state.uAmount > 0){\r\n      let data = {\r\n        amount: this.state.uAmount,\r\n        description: this.state.uDescription,\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.state.uPaymentId, data, this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          let pData = this.state.data;\r\n          var foundIndex = pData.findIndex(d => d._id === this.state.uPaymentId);\r\n          pData[foundIndex].amount = this.state.uAmount;\r\n          pData[foundIndex].description = this.state.uDescription;\r\n          this.setState({\r\n            isShowUpdateModel: false,\r\n            uPaymentId: '',\r\n            uAmount: 0,\r\n            uDescription: '',\r\n            data: pData\r\n          });\r\n          Toast.success('Payment updated successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to update payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          {this.state.isShowSearch ?\r\n          <View>\r\n            <View style={modelStyles.row}>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                this.setState({\r\n                  fromDate: date\r\n                });\r\n              }}\r\n              value={this.state.fromDate}\r\n              />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                this.setState({\r\n                  toDate: date\r\n                });\r\n              }}\r\n              value={this.state.toDate}\r\n              />\r\n          </View>\r\n            <View style={modelStyles.row}>\r\n            <Text style={{marginRight: 15}}>{'Home(s): ' + (this.state.homes.length > 0 ? this.state.homes.length : 'All')}</Text>\r\n          </View>\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.state.homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6, color: COLOR.SECONDARY }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          homes: this.state.homes.filter((h, i) => h._id !== d._id)\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Enter Home Number\" className='form-control'\r\n            style={{...modelStyles.ele,\r\n              flexDirection: 'row',\r\n              padding: 6,\r\n              borderWidth: 1,\r\n              borderColor: COLOR.HR_COLOR,\r\n              borderRadius: 5\r\n            }}\r\n            value={this.state.searchText} \r\n            onChange={(event: any) => this.setState({showHomes: true, searchText: event.target.value})} />\r\n          </View>\r\n            {(this.state.showHomes && isNN(this.state.searchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.searchText.toLowerCase()) >= 0 && (this.state.homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6}}\r\n                      onClick={() => {\r\n                        let homes = this.state.homes;\r\n                        homes.push(d);\r\n                        this.setState({\r\n                          homes: homes\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            }\r\n            <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                <Button\r\n                title=\"SEARCH\"\r\n                onPress={this.onSearch}\r\n                />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View>\r\n             <Text \r\n             className='fr pointer'\r\n             style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right'}}\r\n             onClick={() => {\r\n               this.setState({\r\n                 isShowSearch: true\r\n               });\r\n             }}>Show Search</Text>\r\n          </View>\r\n          }\r\n          <View>\r\n            {(isNN(this.state.data)) ?\r\n              this.state.data.map((d: IPayment, i: number) => {\r\n                return(\r\n                  <View key={i} style={pageStyles.row}>\r\n                    <View style={pageStyles.ele}>\r\n                        <Text style={{fontWeight: 'bold'}}>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text style={{fontWeight: 'bold'}}>{'Rs.' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                    </View>\r\n                    {isNN(d.description) &&\r\n                      <View style={pageStyles.ele}>\r\n                        <Text>{d.description}</Text>\r\n                      </View>\r\n                    }\r\n                    <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                      <Button title=\"Update\" onPress={() => {\r\n                        this.setState({\r\n                          isShowUpdateModel: true,\r\n                          uPaymentId: d._id,\r\n                          uAmount: d.amount,\r\n                          uDescription: d.description\r\n                        });\r\n                      }} />\r\n                    </View>\r\n                  </View>\r\n                )\r\n              })\r\n              :\r\n              <Text style={{padding: 20}}>No Payment found!!!</Text>\r\n            }\r\n          </View>\r\n          <Modal\r\n          open={this.state.isShowUpdateModel}\r\n          onClose={() => {\r\n            this.setState({\r\n              isShowUpdateModel: false,\r\n              uPaymentId: '',\r\n              uAmount: 0,\r\n              uDescription: ''\r\n            });\r\n          }}>\r\n          <View style={popupStyles.container}>\r\n            <View style={popupStyles.content}>\r\n              <View style={modelStyles.row}>\r\n                <TextInput type='text' placeholder=\"Amount\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.uAmount > 0 ? this.state.uAmount + '' : ''} onChange={(event: any) => this.setState({uAmount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View style={modelStyles.row}>\r\n                <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.uDescription} onChange={(event: any) => this.setState({uDescription: event.target.value})} />\r\n              </View>\r\n              <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Button\r\n                  style={{marginRight: 10}}\r\n                  title=\"SAVE\"\r\n                  onPress={this.onUpdate}\r\n                  />\r\n                  <Button\r\n                  title=\"CLEAR\"\r\n                  onPress={() => {\r\n                    this.setState({\r\n                      uAmount: 0,\r\n                      uDescription: ''\r\n                    });\r\n                  }}\r\n                  />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  }\r\n};","import * as React from 'react';\r\nimport { TouchableHighlight, View } from '../../common/elements';\r\nimport Breadcrum from '../../common/breadcrum';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IPayment } from '../../../models/home';\r\nimport { COLOR } from '../../../constants';\r\nimport PaymentForm from './payment-form';\r\nimport PaymentHistory from './payment-history';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  activeTab: number,\r\n  history: Array<IPayment>\r\n};\r\n\r\nexport default class Payment extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1,\r\n      history: []\r\n    }\r\n  };\r\n  \r\n  componentDidMount(){\r\n    /*\r\n    this.props.onLoad(this.props.user.client._id, '', (result: Array<IPayment>) => {\r\n      if(isNN(result)){\r\n        this.setState({\r\n          history: result\r\n        });\r\n      }\r\n    }, (message: string) => {\r\n      Toast.fail(message ? message : 'Failed to load Payments.');\r\n    });\r\n    */\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Payment', link: 'payment'}]} />\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              NEW\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>          \r\n              HISTORY\r\n            </TouchableHighlight>\r\n          </View>\r\n          <View className='tab-content' style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              this.state.activeTab === 1 ? \r\n                <PaymentForm history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} onSave={this.props.onSave} />\r\n              :\r\n                <PaymentHistory history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} onSearch={this.props.onSearch} onUpdate={this.props.onUpdate} />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    borderBottomStyle: 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IPayment } from '../models/home';\r\nimport { loadAll, save, search, updatePay } from '../store/actions/payment';\r\nimport Page from '../components/home/manager/payment';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, homeId, sCallback, fCallback)),\r\n    onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, callback)),\r\n    onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(search(appClientId, data, user, sCallback, fCallback)),\r\n    onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updatePay(id, data, user, callback))\r\n});\r\n\r\nexport const Payment = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { styles as modelStyles } from '../../../../styles/model';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IBlock } from '../../../../models/block';\r\nimport { IHome } from '../../../../models/home';\r\n\r\ninterface IProps {\r\n  blocks: IBlocks,\r\n  data: IHome\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Info extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      homeId: '',\r\n      data: {} as IHome\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { blocks, data } = this.props;\r\n    let blockName = '';\r\n    if(data && isNN(data._id) && blocks && blocks.isUpToDate && !blocks.isError && blocks.data){\r\n      let block = blocks.data.filter((d: IBlock, i: number) => d._id === data._blockId);\r\n      if(block && block.length > 0){\r\n        blockName = block[0].name;\r\n      }\r\n    }\r\n    if(data && isNN(data._id)){\r\n    return(\r\n        <View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Block: ' + blockName}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Number: ' + data.number}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Address: ' + data.address}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'No of bed room(s): ' + data.bedRoom}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Parking: ' + data.parking}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Description: ' + data.description}</Text>\r\n          </View>\r\n        </View>\r\n    );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IMember } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IMember>\r\n};\r\n\r\nexport default class Members extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IMember>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Members.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Members</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IMember, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{(isNN(d.createdBy) ? d.createdBy : '') + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>\r\n                </View>\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IVehicle } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVehicle>\r\n};\r\n\r\nexport default class Vehicles extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IVehicle>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Vehicles</Text>\r\n        </View>\r\n          {isNN(data) ? \r\n            data.map((d: IVehicle, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>                  \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.number}</Text>\r\n                </View>\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TouchableHighlight } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport {styles as commentsStyles} from '../../../../styles/comments';\r\nimport { IServant, ITakeaway } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateTimeString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IServant>,\r\n  viewId: string,\r\n  takeaways: Array<ITakeaway>\r\n};\r\n\r\nexport default class Servants extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      viewId: '',\r\n      takeaways: [],\r\n    }\r\n    this.onView = this.onView.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IServant>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Servants.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onView = (id: string, takeaways: Array<ITakeaway>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        takeaways: []\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        takeaways: takeaways\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Servants</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IServant, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text className='bold'>{d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : (d.gender === 'F' ? 'Female' : 'Other'))}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onView(d._id, d.takeaways);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Takeaways'}</Text>\r\n                  </TouchableHighlight>\r\n                </View>\r\n                {this.state.viewId === d._id &&\r\n                <View style={commentsStyles.cmntsCnr}>\r\n                  <View style={commentsStyles.cmntsHdr}>\r\n                    <Text className='bold' style={commentsStyles.cmntsHdrTxt}>Takeaways</Text>\r\n                  </View>\r\n                  <View style={commentsStyles.cmntsCnt}>\r\n                    {isNN(this.state.takeaways) ?\r\n                      this.state.takeaways.map((e: ITakeaway, j: number) => {\r\n                        return(\r\n                        <View key={'tkycmt' + j} style={j === 0 ? commentsStyles.cmntCnrFst : commentsStyles.cmntCnr}>\r\n                          <View style={commentsStyles.cmntHdr}>\r\n                            <Text className='bold'>{e.createdBy + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text>{e.title}</Text>\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text>{e.description}</Text>\r\n                          </View>\r\n                          {\r\n                            e.isExit ?\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text style={{color: COLOR.SUCCESS}}>{'Exit by ' + e.exitBy + ' in Gate ' + e.exitGateNo + ' on ' + toDateTimeString(e.exitAt)}</Text>\r\n                          </View>\r\n                          :\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text style={{color: COLOR.ERROR}}>Still not exit.</Text>\r\n                          </View>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No takeaways found!!!</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TouchableHighlight } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { ITicket } from '../../../../models/home';\r\nimport { ITicketComment } from '../../../../models/home/ticket-comment';\r\nimport Toast from '../../../../util/toast';\r\nimport {styles as commentsStyles} from '../../../../styles/comments';\r\nimport { toDateTimeString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<ITicket>,\r\n  viewId: string,\r\n  comments: Array<ITicketComment>\r\n};\r\n\r\nexport default class Tickets extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      viewId: '',\r\n      comments: []\r\n    }\r\n    this.onView = this.onView.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<ITicket>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        comments: []\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        comments: comments\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Tickets</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: ITicket, i: number) => {\r\n            return(\r\n              <View key={'tkt' + i} style={styles.row}>\r\n               <View style={styles.ele}>\r\n                  <Text className='bold'>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                    <Text>{d.title}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                    <Text>{d.description}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.status}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onView(d._id, d.comments);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n                  </TouchableHighlight>\r\n                </View>\r\n                {this.state.viewId === d._id &&\r\n                <View style={commentsStyles.cmntsCnr}>\r\n                  <View style={commentsStyles.cmntsHdr}>\r\n                    <Text className='bold' style={commentsStyles.cmntsHdrTxt}>Comments</Text>\r\n                  </View>\r\n                  <View style={commentsStyles.cmntsCnt}>\r\n                    {isNN(this.state.comments) ?\r\n                      this.state.comments.map((e: ITicketComment, j: number) => {\r\n                        return(\r\n                        <View key={'tkycmt' + j} style={j === 0 ? commentsStyles.cmntCnrFst : commentsStyles.cmntCnr}>\r\n                          <View style={commentsStyles.cmntHdr}>\r\n                            <Text className='bold'>{e.createdByName + ' on ' + toDateTimeString(e.updatedAt)}</Text>\r\n                          </View>\r\n                          <View style={commentsStyles.cmntCnt}>\r\n                            <Text>{e.comment}</Text>\r\n                          </View>\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No Comments found!!!</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IVisitor } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUser } from '../../../../models/user';\r\nimport VisitorsView from '../../gatekeeper/visitors-view';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { COLOR } from '../../../../constants';\r\nimport { styles } from '../../../../styles/page';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isActive: boolean\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isActive: true\r\n    }\r\n    this.loadData = this.loadData.bind(this);\r\n    this.onActiveChange = this.onActiveChange.bind(this);\r\n  };\r\n\r\n  loadData = () => {\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, this.state.isActive, (result: Array<IVisitor>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Visitors.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.loadData();\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onActiveChange = () => {\r\n    this.setState({\r\n      isActive: !this.state.isActive\r\n    }, this.loadData);\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Visitors</Text>\r\n        </View>\r\n        <VisitorsView data={this.state.data} isActive={this.state.isActive} user={this.props.user} appUser={this.props.appUser} onActiveChange={this.onActiveChange} />\r\n      </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TouchableHighlight } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles as pageStyles } from '../../../../styles/page';\r\nimport { IPayment } from '../../../../models/home';\r\nimport { ITransaction } from '../../../../models/home/transaction';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { MONTH, COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IPayment>,\r\n  viewId: string,\r\n  transactions: Array<ITransaction>\r\n};\r\n\r\nexport default class Payments extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      viewId: '',\r\n      transactions: []\r\n    }\r\n    this.onView = this.onView.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IPayment>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Payments.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onView = (id: string, transactions: Array<ITransaction>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        transactions: []\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        transactions: transactions\r\n      });\r\n    }\r\n  };\r\n\r\n  getAmountPaid = (transactions: Array<ITransaction>) => {\r\n    let amount = 0;\r\n    if(isNN(transactions)){\r\n      transactions.filter((d: ITransaction, i: number) => d.isSuccess === true).map((d:ITransaction, i: number) => amount += d.amount);\r\n    }\r\n    return amount;\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={pageStyles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Payments</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IPayment, i: number) => {\r\n            return(\r\n              <View key={i} style={pageStyles.row}>\r\n                    <View style={pageStyles.ele}>\r\n                        <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text>{'Rs. ' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text>{'Amount Paid Rs. ' + this.getAmountPaid(d.transactions)}</Text>\r\n                    </View>\r\n                    {isNN(d.description) &&\r\n                      <View style={pageStyles.ele}>\r\n                        <Text>{d.description}</Text>\r\n                      </View>\r\n                    }\r\n                    <View style={pageStyles.ele}>\r\n                      <TouchableHighlight style={{}} onClick={() => {\r\n                        this.onView(d._id, d.transactions);\r\n                      }}>\r\n                        <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Transactions'}</Text>\r\n                      </TouchableHighlight>\r\n                    </View>\r\n                    {this.state.viewId === d._id &&\r\n                    <View style={myStyles.cmntsCnr}>\r\n                  <View style={myStyles.cmntsHdr}>\r\n                    <Text style={myStyles.cmntsHdrTxt}>Transactions</Text>\r\n                  </View>\r\n                  <View style={myStyles.cmntsCnt}>\r\n                    {isNN(this.state.transactions) ?\r\n                      this.state.transactions.map((e: ITransaction, j: number) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? myStyles.cmntCnrFst : myStyles.cmntCnr}>\r\n                          <View style={myStyles.cmntHdr}>\r\n                            <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Ref Id: ' + e.txnRef}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Txn Id: ' + e.txnId}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Amount: ' + e.amount}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Status: ' + (e.isSuccess ? 'SUCCESS' : 'FAILED')}</Text>\r\n                          </View>\r\n                          {\r\n                            isNN(e.reason) &&\r\n                            <View style={myStyles.cmntCnt}>\r\n                              <Text>{'Reason: ' + e.reason}</Text>\r\n                            </View>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No transactions found!!!</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                  </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};\r\n\r\nconst myStyles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR, \r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    marginTop: 3,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { FILE_BASE_PATH, COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IDocument>\r\n};\r\n\r\nexport default class Documents extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IDocument>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n      return(\r\n        <View>\r\n        <View className='center' style={styles.ele}>\r\n          <Text style={{color: COLOR.PRIMARY, fontWeight: 'bold', fontSize: 17, marginBottom: 10}}>Documents</Text>\r\n        </View>\r\n          {isNN(data) ?\r\n            data.map((d: IDocument, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n                </View>\r\n                {isNN(d.description) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.description}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.file) &&\r\n                <View style={styles.ele}>\r\n                <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n          :\r\n          <Text>No data found!!!</Text>\r\n        }\r\n        </View>\r\n      );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, TouchableHighlight, Image } from '../../../common/elements';\r\nimport Spinner from '../../../common/spinner';\r\nimport Breadcrum from '../../../common/breadcrum';\r\nimport { IUser } from '../../../../models/user/user';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUsers } from '../../../../models/store/users';\r\nimport { IHomes } from '../../../../models/store/homes';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IHome, IMember, IVehicle, IServant, ITicket, IVisitor, IPayment } from '../../../../models/home';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from  '../../../../util/toast';\r\nimport Images from '../../../images';\r\nimport { COLOR } from '../../../../constants';\r\nimport { isNN } from '../../../../util/index';\r\nimport Info from './info';\r\nimport Members from './members';\r\nimport Vehicles from './vehicles';\r\nimport Servants from './servants';\r\nimport Tickets from './tickets';\r\nimport Visitors from './visitors';\r\nimport Payments from './payments';\r\nimport Documents from './documents';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadServants: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVisitors: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  homeId: string,\r\n  activeTab: number,\r\n  data: IHome\r\n};\r\n\r\nexport default class ViewHome extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      homeId: '',\r\n      activeTab: 1,\r\n      data: {} as IHome\r\n    }\r\n    this.toggleLoading = this.toggleLoading.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let homeId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    this.setState({\r\n      homeId: homeId\r\n    });\r\n    if(homeId.length > 0){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(homeId, (result: IHome) => {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            data: result\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load Home.');\r\n        }\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Home.');\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleLoading = (isLoading: boolean) => {\r\n    this.setState({\r\n      isLoading: isLoading\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { activeTab } = this.state;\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Homes', link: 'homes'}, {title: 'View Home', link: 'view-home'}]} />\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              <Image src={activeTab === 1 ? Images.infoInv : Images.info} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>          \r\n              <Image src={activeTab === 2 ? Images.membersInv : Images.members} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              <Image src={activeTab === 3 ? Images.vehicleInv : Images.vehicle} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 4})}>\r\n              <Image src={activeTab === 4 ? Images.servantInv : Images.servant} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 5 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 5})}>\r\n              <Image src={activeTab === 5 ? Images.supportInv : Images.support} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 6 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 6})}>\r\n              <Image src={activeTab === 6 ? Images.visitorsInv : Images.visitors} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 7 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 7})}>\r\n              <Image src={activeTab === 7 ? Images.moneyInv : Images.money} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 8 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 8})}>\r\n              <Image src={activeTab === 8 ? Images.documentInv : Images.document} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              activeTab === 1 ?\r\n                  <Info blocks={this.props.blocks} data={this.state.data} />\r\n              :\r\n                activeTab === 2 ?\r\n                  <Members homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadMembers} />\r\n                :\r\n                  activeTab === 3 ?\r\n                    <Vehicles homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadVehicles} />\r\n                  :\r\n                    activeTab === 4 ?\r\n                      <Servants homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadServants} />\r\n                    :\r\n                      activeTab === 5 ?\r\n                        <Tickets homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadTickets} />\r\n                      :\r\n                        activeTab === 6 ?\r\n                          <Visitors appUser={this.props.appUser} user={this.props.user} homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadVisitors} />\r\n                        :\r\n                          activeTab === 7 ?\r\n                            <Payments homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadPayments} />\r\n                          :\r\n                            <Documents homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadDocuments} />\r\n            }            \r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    borderBottomStyle: 'solid',\r\n    color: COLOR.PRIMARY\r\n  },\r\n  tabImage: {\r\n    width: 20,\r\n    height: 20\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHome, IMember, IVehicle, IServant, ITicket, IPayment, IVisitor } from '../models/home';\r\nimport { IDocument } from '../models/document';\r\nimport { load } from '../store/actions/home';\r\nimport { loadAllByHome as loadMembers} from '../store/actions/member';\r\nimport { loadAllByHome as loadVehicles } from '../store/actions/vehicle';\r\nimport { loadAllByHome as loadServants } from '../store/actions/servant';\r\nimport { loadAllByHome as loadTickets } from '../store/actions/ticket';\r\nimport { loadAll as loadVisitors } from '../store/actions/visitor';\r\nimport { loadAll as loadPayments } from '../store/actions/payment';\r\nimport { loadAllByHome as loadDocuments } from '../store/actions/documents';\r\nimport Page from '../components/home/manager/view-home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadMembers(homeId, sCallback, fCallback)),\r\n    onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => dispatch(loadVehicles(homeId, sCallback, fCallback)),\r\n    onLoadServants: (homeId: string, sCallback: (result: Array<IServant>) => void, fCallback: (message: string) => void) => dispatch(loadServants(homeId, sCallback, fCallback)),\r\n    onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => dispatch(loadTickets(homeId, sCallback, fCallback)),\r\n    onLoadVisitors: (homeId: string, isActive: boolean, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => dispatch(loadVisitors('', homeId, isActive, sCallback, fCallback)),\r\n    onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadPayments('', homeId, sCallback, fCallback)),\r\n    onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => dispatch(loadDocuments(homeId, sCallback, fCallback))\r\n});\r\n\r\nexport const ViewHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IUser } from '../../models/user';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n//import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'poll';\r\n\r\nexport const loadAll = (appClientId: string, userRole: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getPollResult([], false, false, ''));\r\n  // new Api().get(controller + 'loadall/?appClientId=' + appClientId + '&userRole=' + userRole, (result: any, message: string) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getPollResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = polls.findIndex(d => d._id === result.data);\r\n        polls[foundIndex]._id = result.data;\r\n        polls[foundIndex].topic = data.topic;\r\n        polls[foundIndex].description = data.description;\r\n        polls[foundIndex].isAllowMultiple = data.isAllowMultiple;\r\n        polls[foundIndex].isOneVotePerFlat = data.isOneVotePerFlat;\r\n        polls[foundIndex].isAnonymous = data.isAnonymous;\r\n        polls[foundIndex].fromDate = data.fromDate;\r\n        polls[foundIndex].toDate = data.toDate;\r\n        polls[foundIndex].options = data.options;\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        sCallback(true);\r\n      }else{\r\n        sCallback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      // console.log(\"OUT: \" + result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        polls.unshift(data);\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        sCallback(true);\r\n      }else{\r\n        sCallback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, polls: Array<IPoll>, userId: string, sCallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      polls = polls.filter((d, i) => d._id !== id);\r\n      dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n      sCallback(true);\r\n    }else{\r\n      sCallback(false);\r\n    }\r\n  }, {\r\n    Id: id,\r\n    UserId: userId\r\n  });\r\n};\r\n\r\nexport const vote = (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/vote/' + pollId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      var foundIndex = polls.data.findIndex(d => d._id === pollId);\r\n      polls.data[foundIndex].votes = result.data;\r\n      dispatch(getPollResult(polls.data, true, false, ''));\r\n\r\n      /*\r\n      // Update home\r\n      if(!isNN(user.homes[appUser.homeIndex].votes)){\r\n        user.home[appUser.homeIndex].vote = [];\r\n      }\r\n      result.data.map((v: IVote, vi: number) => {\r\n        user.home[appUser.homeIndex].vote.push(v);\r\n      });\r\n      dispatch(getUserResult(user));\r\n      */\r\n      // Update polls\r\n      // if(polls.isUpToDate && !polls.isError && isNN(polls.data) && ((',' + user.type + ',').indexOf(ROLE.ADMIN) >= 0 || (',' + user.type + ',').indexOf(ROLE.MANAGER) >= 0)){\r\n        if(polls.isUpToDate && !polls.isError && isNN(polls.data)){\r\n        let lstPoll = polls.data;\r\n        let pollIndex = lstPoll.findIndex(p => p._id === pollId);\r\n        lstPoll[pollIndex].votes = result.data;\r\n        /*\r\n        if(!isNN(lstPoll[pollIndex].votes)){\r\n          lstPoll[pollIndex].vote = [];\r\n        }\r\n        result.data.map((v: IVote, vi: number) => {\r\n          lstPoll[pollIndex].vote.unshift(v);\r\n        });\r\n        */\r\n        dispatch(getPollResult(lstPoll, true, false, \"\"));\r\n      }\r\n     // dispatch(getUserResult(user));\r\n      \r\n      sCallback(true);\r\n    }else{\r\n      sCallback(false);\r\n    }\r\n  }, {\r\n    votes: votes\r\n  });\r\n};\r\n\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});","import { jsError } from \"./index\";\r\n\r\nexport function percentage(_partialValue: number, _totalValue: number) {\r\n    try{\r\n        if(_totalValue > 0){\r\n            return (100 * _partialValue) / _totalValue;\r\n        }else{\r\n            return 0;\r\n        }\r\n    } catch (ex) {\r\n    jsError(ex, 'calc.percentage'); \r\n    return 0; \r\n  }\r\n };","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport DatePicker from 'react-date-picker';\r\nimport { TouchableHighlight, View, Text, Image, TextInput, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IPolls } from '../../../models/store/polls';\r\nimport { IPoll } from '../../../models/poll/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN, isNNObject } from '../../../util/index';\r\nimport { percentage } from '../../../util/calc';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onSave: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, polls: Array<IPoll>, userID: string, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isEdit: boolean,\r\n  isLoading: boolean,\r\n  id: string,\r\n  topic: string,\r\n  description: string,\r\n  isAllowMultiple: boolean,\r\n  isOneVotePerFlat: boolean,\r\n  isAnonymous: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  pollOption: Array<string>,\r\n  showVotePoll: IPoll,\r\n  datePickerType: string,\r\n  datePickerDate: Date\r\n};\r\n\r\nexport default class Poll extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      isLoading: false,\r\n      id: '',\r\n      topic: '',\r\n      description: '',\r\n      isAllowMultiple: false,\r\n      isOneVotePerFlat: false,\r\n      isAnonymous: false,\r\n      fromDate: new Date(),\r\n      toDate: new Date(),\r\n      pollOption: [],\r\n      showVotePoll: { _id: '' } as IPoll,\r\n      datePickerType: '',\r\n      datePickerDate: new Date()\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n   onSave = () => {\r\n    if(isNN(this.state.topic) && isNN(this.state.description) && isNNObject(this.state.fromDate) && isNNObject(this.state.toDate) && isNN(this.state.pollOption.filter(po => isNN(po)))){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let poll = {\r\n          _id: this.state.id,\r\n          topic: this.state.topic,\r\n          description: this.state.description,\r\n          isAllowMultiple: this.state.isAllowMultiple,\r\n          isOneVotePerFlat: this.state.isOneVotePerFlat,\r\n          isAnonymous: this.state.isAnonymous,\r\n          fromDate: this.state.fromDate,\r\n          toDate: this.state.toDate,\r\n          options: this.state.pollOption.filter(po => isNN(po))\r\n        } as IPoll;\r\n        this.props.onSave(this.props.user.client._id, poll, this.props.polls.data, this.props.user, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              topic: '',\r\n              description: '',\r\n              isAllowMultiple: false,\r\n              isOneVotePerFlat: false,\r\n              isAnonymous: false,\r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              pollOption: [],\r\n              showVotePoll: { _id: '' } as IPoll,\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Poll saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save pol.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.polls.data, this.props.user._id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Poll removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove poll.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  loadVotes = () => {\r\n    if(isNNObject(this.state.showVotePoll) && this.state.showVotePoll._id.length > 0){\r\n      let votes = [] as any;\r\n      this.state.showVotePoll.options.map((po: string, poi: number) => \r\n        votes.push({\r\n          option: po,\r\n          votes: this.state.showVotePoll.votes.filter(v => v.option === poi).length\r\n        })\r\n      );\r\n      return(\r\n        <View style={{padding: 15}}>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{this.state.showVotePoll.topic}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{this.state.showVotePoll.description}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{'Votes: ' + this.state.showVotePoll.votes.length}</Text>\r\n          </View>\r\n        {\r\n        votes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n          return(\r\n            <View key={'pvo' + voi} style={styles.ele}>\r\n              <Text>\r\n                {vo.votes + ' (' + percentage(vo.votes, this.state.showVotePoll.votes.length) +  '%) - ' + vo.option}\r\n              </Text>\r\n            </View>\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n      )\r\n    }else{\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n        {this.state.isEdit === false &&\r\n        <View style={{...styles.row, paddingBottom: 5}}>\r\n          <Button\r\n          title=\"ADD NEW\"\r\n          onPress={() => {\r\n            this.setState({\r\n              isEdit: true,\r\n              id: '',\r\n              topic: '',\r\n              description: '',\r\n              isAllowMultiple: false,\r\n              isOneVotePerFlat: false,\r\n              isAnonymous: false,\r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              pollOption: [],\r\n              showVotePoll: { _id: '' } as IPoll,\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n             });\r\n          }}\r\n          />\r\n        </View>\r\n        }\r\n        {\r\n         (this.state.isEdit === true && this.state.id.length === 0)  ?\r\n         <View key={\"p0\"} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.topic} onChange={(event: any) => this.setState({topic: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => this.setState({isAllowMultiple: !this.state.isAllowMultiple})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => this.setState({isOneVotePerFlat: !this.state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAnonymous} text='Anonymous Voting' onPress={() => this.setState({isAnonymous: !this.state.isAnonymous})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(this.state.pollOption) ?\r\n            this.state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} style={styles.ele}>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={e} onChange={(event: any) => {\r\n                    let newOptions = this.state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    this.setState({pollOption: newOptions});\r\n                  }} />\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    let newOptions = this.state.pollOption;\r\n                    delete newOptions[j];\r\n                    this.setState({pollOption: newOptions});\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text>No Option found!!!</Text>\r\n            </View>\r\n          }\r\n            <View style={styles.ele}>\r\n              <TouchableHighlight\r\n              onClick={() => {\r\n                if(!isNN(this.state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = this.state.pollOption;\r\n                  newOptions.push('');\r\n                  this.setState({pollOption: newOptions});\r\n                }\r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          <View style={styles.ele}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n              <Image src={Images.tick} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight style={{}} onClick={() => {\r\n              this.setState({\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n        :\r\n        []\r\n        }\r\n      {\r\n      (isNNObject(this.props.polls) && this.props.polls.isUpToDate && !this.props.polls.isError && isNN(this.props.polls.data)) ?      \r\n      this.props.polls.data.map((d: IPoll, i: number) => {\r\n      return(\r\n        (this.state.isEdit === true && this.state.id === d._id) ?\r\n        <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.topic} onChange={(event: any) => this.setState({topic: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => this.setState({isAllowMultiple: !this.state.isAllowMultiple})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => this.setState({isOneVotePerFlat: !this.state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAnonymous} text='Anonymous Voting' onPress={() => this.setState({isAnonymous: !this.state.isAnonymous})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(this.state.pollOption) ?\r\n            this.state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} style={styles.ele}>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={e} onChange={(event: any) => {\r\n                    let newOptions = this.state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    this.setState({pollOption: newOptions});\r\n                  }} />\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    let newOptions = this.state.pollOption;\r\n                    delete newOptions[j];\r\n                    this.setState({pollOption: newOptions});\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text>No Option found!!!</Text>\r\n            </View>\r\n          }\r\n            <View style={styles.ele}>\r\n              <TouchableHighlight\r\n              onClick={() => {\r\n                if(!isNN(this.state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = this.state.pollOption;\r\n                  newOptions.push('');\r\n                  this.setState({pollOption: newOptions});\r\n                }            \r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          <View style={styles.ele}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n              <Image src={Images.tick} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>                \r\n            <TouchableHighlight style={{}} onClick={() => {\r\n              this.setState({\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>        \r\n          </View>\r\n        </View>\r\n        :\r\n        <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{d.topic}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{d.description}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{toDateString(d.fromDate) + \" to \" + toDateString(d.toDate)}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isAllowMultiple === true ? modelStyles.radioActive : {...modelStyles.radio, marginLeft: 5})}\r\n            >\r\n              <Text style={(d.isAllowMultiple === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>Allow Multiple Votes</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isOneVotePerFlat === true ? {...modelStyles.radioActive} : {...modelStyles.radio, marginLeft: 5})}\r\n             >\r\n              <Text style={(d.isOneVotePerFlat === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>One Vote per Flat</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isAnonymous === true ? {...modelStyles.radioActive} : {...modelStyles.radio, marginLeft: 5})}\r\n             >\r\n              <Text style={(d.isAnonymous === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>Anonymous Voting</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(d.options) ?\r\n            d.options.map((e: string, j: number) => {\r\n              return(\r\n                <View key={\"po\" + j} style={styles.ele}>\r\n                  <Text key={\"pot\" + j} style={{width: '100%'}}>{e}</Text>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text style={{padding: 10}}>No Option found!!!</Text> \r\n            </View>           \r\n          }\r\n          <View style={styles.ele}>\r\n          {(d.fromDate > new Date()) &&\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isEdit: true,\r\n                id: d._id,\r\n                topic: d.topic,\r\n                description: d.description,\r\n                isAllowMultiple: d.isAllowMultiple,\r\n                isOneVotePerFlat: d.isOneVotePerFlat,\r\n                isAnonymous: d.isAnonymous,\r\n                fromDate: d.fromDate,\r\n                toDate: d.toDate,\r\n                pollOption: (isNN(d.options) ? d.options : [])\r\n              });\r\n            }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          }\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.onRemove(d._id);\r\n            }}>\r\n              <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>\r\n            <Text className='pointer' style={{color: COLOR.SECONDARY}} onClick={() => {\r\n              this.setState({showVotePoll: d})\r\n            }}>View Votes</Text>\r\n          </View>\r\n        </View>\r\n      )\r\n      })\r\n      :\r\n      <Text style={{padding: 20}}>{(this.props.polls.isUpToDate ? (this.props.polls.isError ? this.props.polls.errorMessage : \"No poll found!!!\") : \"Loading...\")}</Text>\r\n    }\r\n    <Modal\r\n      open={(isNNObject(this.state.showVotePoll) && this.state.showVotePoll._id.length > 0)}\r\n      onClose={() => this.setState({showVotePoll : { _id: '' } as IPoll})}>\r\n      <View style={popupStyles.container}>\r\n        <View style={popupStyles.content}>\r\n        {\r\n          this.loadVotes()\r\n        }\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n    <Spinner visible={this.state.isLoading} />\r\n    </View>  \r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Checkbox from '../common/checkbox';\r\nimport Spinner from '../common/spinner';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { styles } from \"../../styles/page\";\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { percentage } from '../../util/calc';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  votePollId: string,\r\n  votes: Array<IVote>,\r\n  currentDate: Date\r\n};\r\n\r\nexport default class Poll extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    let currentDate = new Date();\r\n    this.state = {\r\n      isLoading: false,\r\n      votePollId: '',\r\n      votes: [],\r\n      currentDate: new Date((currentDate.getMonth() + 1) + '/' + currentDate.getDate() + '/' + currentDate.getFullYear())\r\n    }\r\n    this.loadVotes = this.loadVotes.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  loadVotes = (poll: IPoll) => {\r\n    let votes = [] as any;\r\n    poll.options.map((po: string, poi: number) => \r\n      votes.push({\r\n        option: po,\r\n        votes: poll.votes.filter(v => v.option === poi).length\r\n      })\r\n    );\r\n    return(\r\n    votes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n      return(\r\n        <View key={'pvo' + voi} style={styles.ele}>\r\n          <Text>\r\n            {vo.votes + ' (' + percentage(vo.votes, poll.votes.length) +  '%) - ' + vo.option}\r\n          </Text>\r\n        </View>\r\n      )\r\n    })\r\n    )\r\n  };\r\n\r\n  onSelectOption = (poll: IPoll, optionId: number) => {\r\n    if(this.state.votePollId === poll._id){\r\n      if(isNN(this.state.votes.filter(v => v.option === optionId))){\r\n        this.setState({\r\n          votes: this.state.votes.filter(v => v.option !== optionId)\r\n        });\r\n      }else{\r\n        let votes = [] as Array<IVote>;\r\n        if(poll.isAllowMultiple){\r\n          votes = this.state.votes;\r\n        }\r\n          votes.push({\r\n            _homeId: this.props.user.homes[this.props.appUser.homeIndex]._id,\r\n            _memberId: this.props.user._id,\r\n            option: optionId,\r\n            isActive: true,\r\n            createdBy: this.props.user._id\r\n          } as IVote);\r\n          this.setState({\r\n            votes: votes\r\n          });\r\n        // if(poll.isAllowMultiple || !isNN(this.state.votes.filter(v => v.pollId === poll.id))){\r\n\r\n        // }\r\n      }\r\n    }else{\r\n      let votes = [] as Array<IVote>;\r\n      votes.push({\r\n        _homeId: this.props.user.homes[this.props.appUser.homeIndex]._id,\r\n        _memberId: this.props.user._id,\r\n        option: optionId,\r\n        isActive: true,\r\n        createdBy: this.props.user._id\r\n      } as IVote);\r\n      this.setState({\r\n        votePollId: poll._id,\r\n        votes: votes\r\n      });\r\n    }\r\n  };\r\n\r\n  onVote = (pollId: string) => {\r\n    if(this.state.votePollId === pollId &&  isNN(this.state.votes)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onVote(pollId, this.state.votes, this.props.polls, this.props.user, this.props.appUser, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          this.setState({\r\n            votePollId: '',\r\n            votes: []\r\n          });\r\n          Toast.success('Your vote saved successfully.');\r\n        }else{\r\n          Toast.fail('Failed to save your vote.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select any option to vote.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n      {\r\n        (isNNObject(this.props.polls) && this.props.polls.isUpToDate && !this.props.polls.isError && isNN(this.props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= this.state.currentDate))) ?\r\n        this.props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= this.state.currentDate).map((d: IPoll, i: number) => {\r\n          return(\r\n            <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.topic}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === this.props.user.homes[this.props.appUser.homeIndex]._id))) &&\r\n                d.options.map((o: string, oi: number) => {\r\n                  return(\r\n                    <View key={\"popt\" + oi} style={styles.ele}>\r\n                      <Checkbox isActive={(this.state.votePollId === d._id && isNN(this.state.votes.filter(v => v.option === oi)))} text={o} onPress={() => this.onSelectOption(d, oi)} />\r\n                    </View>\r\n                  )\r\n                })\r\n              }\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === this.props.user.homes[this.props.appUser.homeIndex]._id))) &&\r\n                <View style={{marginTop: 5, width: '100%'}}>\r\n                  <Button title=\"Vote\" onPress={() => this.onVote(d._id)} style={{width: '100%'}} />\r\n                </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>Your Votes:</Text>\r\n              </View>\r\n              {isNN(d.options) &&\r\n                this.loadVotes(d)\r\n              }\r\n            </View>\r\n          )\r\n      })\r\n      :\r\n      <Text style={{padding: 20}}>{(this.props.polls.isUpToDate ? (this.props.polls.isError ? this.props.polls.errorMessage : \"No active poll found!!!\") : \"Loading...\")}</Text>\r\n    }\r\n    <Spinner visible={this.state.isLoading} />\r\n    </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Button from '../common/button';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateTimeString } from '../../util/convert';\r\nimport { ROLE, COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  outings: IOutings,\r\n  onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Outing extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false\r\n    }\r\n    this.onReturnBack = this.onReturnBack.bind(this);\r\n  };\r\n\r\n  componentDidMount(){};\r\n  \r\n  componentWillUnmount(){};\r\n  \r\n  onReturnBack = (outingId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to return back from outing',\r\n      message: 'Are you sure? You return back from this outing?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReturnBack(outingId, this.props.user, this.props.outings, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result){\r\n                Toast.success('Successfully returned back.');\r\n              }else{\r\n                Toast.fail('Failed to Return back.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n      {(this.props.appUser.role === ROLE.USER && (!isNNObject(this.props.outings) || !isNN(this.props.outings.data.filter(o => o.isReturned !== true)))) &&\r\n        <View style={styles.row}>\r\n          <Button\r\n          title=\"Go Outing\"\r\n          onPress={() => {\r\n            this.props.history.push('new-outing')\r\n          }}\r\n          />\r\n        </View>\r\n      }\r\n      {\r\n        (isNNObject(this.props.outings) && this.props.outings.isUpToDate && !this.props.outings.isError && isNN(this.props.outings.data)) ?\r\n        this.props.outings.data.map((d: IOuting, i: number) => {\r\n          return(\r\n            <View key={\"o\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateTimeString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{toDateTimeString(d.fromDate) + \" to \" + toDateTimeString(d.toDate)}</Text>\r\n              </View>\r\n              {isNN(d.place) &&\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.place}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.address) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.address}</Text>\r\n              </View>\r\n              }\r\n              {d.isReturned &&\r\n              <View style={styles.ele}>\r\n                <Text>{'Returned on ' + toDateTimeString(d.returnedAt)}</Text>\r\n              </View>\r\n              }\r\n              {this.props.appUser.role !== ROLE.USER && \r\n                <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Text>No one in the home</Text>\r\n                </View>\r\n              }\r\n              {(this.props.appUser.role === ROLE.USER && d.isReturned !== true) &&\r\n                <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Button title=\"Return to Home\" onPress={() => {\r\n                    this.onReturnBack(d._id);\r\n                  }} />\r\n                </View>\r\n              }\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{(this.props.outings.isUpToDate ? (this.props.outings.isError ? this.props.outings.errorMessage : \"No outings found!!!\") : \"Loading...\")}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { TouchableHighlight, View } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IComplaint, IRemainder } from '../../models/home/index';\r\nimport AMPoll from './manager/poll';\r\nimport UserPoll from './poll';\r\nimport Outing from './outing';\r\nimport CustomList from './custom-list';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  polls: IPolls,\r\n  outings: IOutings,\r\n  remainders: Array<IRemainder>,\r\n  complaints: Array<IComplaint>,\r\n  onLoadAds: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => void,\r\n  onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => void,\r\n  onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, sCallback: (result: boolean) => void) => void,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => void,\r\n  onLoadOuting: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  activeTab: number,\r\n  isShowPoll: boolean\r\n};\r\n\r\nexport default class Notification extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: (isNNObject(this.props.user) && (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER)) ? 1 : 2,\r\n      isShowPoll: isNNObject(this.props.user) && (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER || (this.props.appUser.role === ROLE.USER && this.props.appUser.homeIndex >= 0))\r\n    }\r\n  };\r\n  \r\n  componentDidMount(){\r\n    this.props.onLoadAds(this.props.user.client._id, (result: boolean) => {\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n    if(this.state.isShowPoll){\r\n      this.props.onLoadPoll(this.props.user.client._id, this.props.appUser.role, (result: boolean) => {\r\n        if(!result){\r\n          Toast.fail('Failed to load Poll.');\r\n        }\r\n      });\r\n    }\r\n    this.props.onLoadOuting(this.props.user.client._id, this.props.appUser.role === ROLE.USER ? this.props.user.homes[this.props.appUser.homeIndex]._id : '', (result: boolean) => {\r\n      if(!result){\r\n        Toast.fail('Failed to load Outing.');\r\n      }\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <Breadcrum data={[{title: 'Notice', link: 'notice'}]} />\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n          {this.state.isShowPoll &&\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>\r\n              POLL\r\n            </TouchableHighlight>\r\n          }\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>\r\n              ADS\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              OUTING\r\n            </TouchableHighlight>\r\n            {/* <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 4})}>\r\n              REMINDERS\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 5 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 5})}>\r\n            COMPLAINTS\r\n            </TouchableHighlight> */}\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              this.state.activeTab === 1 ? \r\n                (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) ? \r\n                  <AMPoll appUser={this.props.appUser} user={this.props.user} polls={this.props.polls} onSave={this.props.onSavePoll} onRemove={this.props.onRemovePoll} />\r\n                :\r\n                  <UserPoll appUser={this.props.appUser} user={this.props.user} polls={this.props.polls} onVote={this.props.onVote} />\r\n              :\r\n                this.state.activeTab === 2 ?\r\n                  <CustomList data={(this.props.ads.isUpToDate ? this.props.ads.data : [])} message={(this.props.ads.isUpToDate ? (this.props.ads.isError ? this.props.ads.errorMessage : \"No data found!!!\") : \"Loading...\")} />\r\n                :\r\n                this.state.activeTab === 3 ?\r\n                  <Outing history={this.props.history} appUser={this.props.appUser} user={this.props.user} outings={this.props.outings} onReturnBack={this.props.onReturnBack} />\r\n                :\r\n                  <CustomList data={this.state.activeTab === 4 ? this.props.remainders : this.props.complaints} message=\"No data found!!!\" />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    borderBottomStyle: 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { IPolls } from '../models/store/polls';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { IPoll, IVote } from '../models/poll/index';\r\nimport { loadAll as loadAllAds } from '../store/actions/ad';\r\nimport { loadAll as loadAllPools, save, remove, vote } from '../store/actions/poll';\r\nimport { loadAll as loadAllOutings, retunBack } from '../store/actions/outing';\r\nimport Page from '../components/home/notification';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    polls: state.Polls,\r\n    outings: state.Outings,\r\n    remainders: [],\r\n    complaints: []\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoadAds: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAllAds(appClientId, callback)),\r\n    onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => dispatch(loadAllPools(appClientId, userRole, callback)),\r\n    onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, sCallback: (result: boolean) => void) => dispatch(save(appClientId, data, polls, user, sCallback)),\r\n    onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, sCallback: (result: boolean) => void) => dispatch(remove(id, polls, userId, sCallback)),\r\n    onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, sCallback: (result: boolean) => void) => dispatch(vote(pollId, votes, polls, user, appUser, sCallback)),\r\n    onLoadOuting: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAllOutings(appClientId, homeId, callback)),\r\n    onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(retunBack(id, user, outings, callback))\r\n});\r\n\r\nexport const Notice = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Breadcrum from '../common/breadcrum';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user';\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Help extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <Breadcrum data={[{title: 'Info', link: 'info'}]} />\r\n          {/* <Image source={Images.workInProgress} style={{width: 50, height: 45, marginTop: 35}} />\r\n          <Text>Work in progress!!!</Text> */}\r\n          <View style={{...modelStyles.container, paddingLeft: 10, paddingRight: 10}}>\r\n            <View className='center' style={modelStyles.row}>\r\n              <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'center'}}>{this.props.user.client.name}</Text>\r\n            </View>\r\n            <View className='center' style={modelStyles.row}>\r\n                <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'center'}}>{this.props.user.client.description}</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>\r\n                {\"Apartment Residents & Apartment Owners need a common platform through which they can connect with association, get to know & discuss common issues of the neighborhood\"}\r\n              </Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>Home users</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Maintenance Admin Payment</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Receive real-time notifications</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Visitor management</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Lodge any complaint related to your apartment and track</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>Admin Users</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Create polls and gather the opinion of all Apartment residents</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>All details of your flat, staff who work in your flat, visitors coming to your flat</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Accounts  and much more...</Text>\r\n            </View>\r\n          </View>\r\n        </main>\r\n      );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  listItem: {\r\n    marginLeft: 15\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport Page from '../components/home/help';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n});\r\n\r\nexport const Help = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    render() {\r\n    return (\r\n            <View style={{flex: 1, backgroundColor: COLOR.INVERSE, padding: 15, paddingLeft: 59}}>\r\n                <Text>Page not found!!!</Text>\r\n            </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport TitleBar from './title-bar';\r\nimport NavBar from './nav-bar';\r\nimport TabBar from './tab-bar';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNNObject, isNN } from '../../util';\r\nimport Toast from  '../../util/toast';\r\n\r\nimport { Dashboard as CDashboard} from '../../containers/dashboard';\r\nimport { Members as CMembers } from '../../containers/members';\r\nimport { NewMember as CNewMember } from '../../containers/new-member';\r\nimport { Vehicles as CVehicles } from '../../containers/vehicles';\r\nimport { NewVehicle as CNewVehicle } from '../../containers/new-vehicle';\r\nimport { Servants as CServants } from '../../containers/servants';\r\nimport { AllTakeaways as CAllTakeaways } from '../../containers/all-takeaways';\r\nimport { NewServant as CNewServant } from '../../containers/new-servant';\r\nimport { Tickets as CTickets } from '../../containers/tickets';\r\nimport { NewTicket as CNewTicket } from '../../containers/new-ticket';\r\nimport { Visitors as CVisitors } from '../../containers/visitors';\r\n// import { NewVisitor as CNewVisitor } from '../../containers/new-visitor';\r\nimport { ChangePassword as CChangePassword } from '../../containers/change-password';\r\nimport { MyProfile as CMyProfile } from '../../containers/my-profile';\r\nimport { MyRole as CMyRole } from '../../containers/my-role';\r\nimport { Ads as CAds } from '../../containers/ads';\r\nimport { NewAd as CNewAd } from '../../containers/new-ad';\r\nimport { Users as CUsers } from '../../containers/users';\r\nimport { Homes as CHomes } from '../../containers/homes';\r\nimport { EditUser as CEditUser } from '../../containers/edit-user';\r\nimport { ApproveUsers as CApproveUsers } from '../../containers/approve-users';\r\n\r\nimport { EditHome as CEditHome } from '../../containers/edit-home';\r\nimport { AllVisitors as CAllVisitors } from '../../containers/all-visitors';\r\nimport { Notification as CNotification } from '../../containers/notification';\r\nimport { NewOuting as CNewOuting } from '../../containers/new-outing';\r\nimport { MyDocuments as CMyDocuments } from '../../containers/my-documents';\r\nimport { Blocks as CBlocks } from '../../containers/blocks';\r\nimport { EditBlock as CEditBlock } from '../../containers/edit-block';\r\nimport { Payment as CPayment } from '../../containers/payment';\r\nimport { ViewHome as CViewHome } from '../../containers/view-home';\r\nimport { Notice as CNotice } from '../../containers/notice';\r\nimport { Help as CHelp } from '../../containers/help';\r\nimport NotFound from '../../components/not-found';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  getProfile: (callback: (result: boolean, message: string) => void) => void,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false\r\n    }\r\n    this.isUser = this.isUser.bind(this);\r\n    this.isAdmin = this.isAdmin.bind(this);\r\n    this.isManager = this.isManager.bind(this);\r\n    this.isGateKeeper = this.isGateKeeper.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(!isNNObject(this.props.user) || !isNN(this.props.user._id)){\r\n      this.setState({\r\n          isLoading: true\r\n      });\r\n      this.props.getProfile( (result: boolean, message: string) => {\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n        if(result !== true){\r\n          Toast.fail('Failed to load Profile: ' + message);\r\n        }\r\n      });\r\n    }\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  isUser = () => {\r\n    return this.props.appUser.role === ROLE.USER;\r\n  };\r\n\r\n  isAdmin = () => {\r\n    return this.props.appUser.role === ROLE.ADMIN;\r\n  };\r\n  \r\n  isManager = () => {\r\n    return this.props.appUser.role === ROLE.MANAGER;\r\n  };\r\n\r\n  isGateKeeper = () => {\r\n    return this.props.appUser.role === ROLE.GATEKEEPER;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      !this.state.isLoading &&\r\n        <View style={styles.container}>\r\n          <TitleBar appUser={this.props.appUser} user={this.props.user} onHomeChange={this.props.onHomeChange} onLogout={this.props.onLogout}/>\r\n          <NavBar appUser={this.props.appUser} user={this.props.user} />\r\n            {((isNN(this.props.appUser.role) && !this.isUser()) || isNN(this.props.user.homes)) ?\r\n            <Switch>\r\n              <Route path={'/'} exact component={CDashboard} />\r\n              {/* <Route path={'/login'} exact component={CLogin} /> */}\r\n              {this.isUser() && <Route path={'/members'} exact component={CMembers} />}\r\n              {this.isUser() && <Route path={'/new-member'} exact component={CNewMember} />}\r\n              {this.isUser() && <Route path={'/vehicles'} exact component={CVehicles} />}\r\n              {this.isUser() && <Route path={'/new-vehicle'} exact component={CNewVehicle} />}\r\n              {this.isUser() && <Route path={'/servants'} exact component={CServants} />}\r\n              {this.isUser() && <Route path={'/new-servant'} exact component={CNewServant} />}\r\n              {(this.isUser() || this.isAdmin() || this.isManager()) && <Route path={'/tickets'} exact component={CTickets} />}\r\n              {this.isUser() && <Route path={'/new-ticket'} exact component={CNewTicket} />}\r\n              {this.isUser() && <Route path={'/visitors'} exact component={CVisitors} />}\r\n              {this.isUser() && <Route path={'/new-outing'} exact component={CNewOuting} />}\r\n              {/* {this.isUser() && <Route path={'/new-visitor'} exact component={CNewVisitor} />} */}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/ads'} exact component={CAds} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/new-ad'} exact component={CNewAd} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/notification'} exact component={CNotification} />}\r\n              {this.isAdmin() && <Route path={'/users'} exact component={CUsers} />}\r\n              {this.isAdmin() && <Route path={'/edit-user/:id/:isApprove'} exact component={CEditUser} />}\r\n              {this.isAdmin() && <Route path={'/approve-users'} exact component={CApproveUsers} />}\r\n              {this.isAdmin() && <Route path={'/homes'} exact component={CHomes} />}\r\n              {this.isAdmin() && <Route path={'/view-home/:id'} exact component={CViewHome} />}\r\n              {this.isAdmin() && <Route path={'/edit-home/:id'} exact component={CEditHome} />}\r\n              {this.isAdmin() && <Route path={'/blocks'} exact component={CBlocks} />}\r\n              {this.isAdmin() && <Route path={'/edit-block/:id'} exact component={CEditBlock} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/payment'} exact component={CPayment} />}\r\n              {(this.isAdmin() || this.isManager() || this.isGateKeeper()) && <Route path={'/all-visitors'} exact component={CAllVisitors} />}\r\n              {(this.isAdmin() || this.isManager() || this.isGateKeeper()) && <Route path={'/all-takeways'} exact component={CAllTakeaways} />}\r\n              <Route path={'/notice'} exact component={CNotice} />\r\n              <Route path={'/my-profile'} exact component={CMyProfile} />\r\n              {this.props.user.role.indexOf(',') > 0 && <Route path={'/my-role'} exact component={CMyRole} />}\r\n              <Route path={'/my-documents'} exact component={CMyDocuments} />\r\n              <Route path={'/change-password'} exact component={CChangePassword} />\r\n              <Route path={'/info'} exact component={CHelp} />              \r\n              <Route component={NotFound} />\r\n            </Switch>\r\n            :\r\n            <Text style={{margin: 20, padding: 15, paddingLeft: 59}}>No home assigned to you. Please contact administrator/manager.</Text>\r\n            }\r\n          {(isNNObject(this.props.user) && isNN(this.props.user._id)) &&\r\n          <TabBar />\r\n          }\r\n          <Spinner visible={this.state.isLoading} text={\"Loading...\"} />\r\n        </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLOR.INVERSE,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start'\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { getProfile, homeChange, logout } from '../store/actions/account';\r\nimport Page from '../components/home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    getProfile: (callback: (result: boolean, message: string) => void) => dispatch(getProfile(callback)),\r\n    onHomeChange: (index: number, callback: (result: boolean) => void) => dispatch(homeChange(index, callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Login } from '../containers/login';\r\nimport { Home } from '../containers/home';\r\nimport { IAppUser } from '../models/app-user/app-user';\r\nimport { isNN } from '../util';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  setLogin: (isLoggedIn: boolean) => void\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class AppContainer extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // };\r\n\r\n  componentDidMount() {\r\n    let token: string | null = sessionStorage.getItem('auth_token');\r\n    if(isNN(token)){\r\n      this.props.setLogin(true);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n        this.props.appUser.isLoggedIn ? \r\n          <HashRouter>\r\n            <Home />\r\n          </HashRouter>\r\n        :\r\n          <Login />\r\n    )\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { setLogin } from '../store/actions/account';\r\nimport Page from '../components/app-container';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n   appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n   setLogin: (isLoggedIn: boolean) => dispatch(setLogin(isLoggedIn))\r\n});\r\n\r\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(Page);","\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\r\nimport { store } from './store/app-store';\r\nimport { AppContainer } from './containers/app-container';\r\nimport { init as fcmInit } from './services/init-fcm';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './css/bootstrap.min.css';\r\nimport './css/common.scss';\r\n\r\nexport default class App extends React.Component {\r\n    componentDidMount() {\r\n      fcmInit();\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        // FCM.notificationDisplayedListener();\r\n        // FCM.notificationListener();\r\n        // FCM.notificationOpenedListener();\r\n    };\r\n  \r\n    render() {\r\n        return(\r\n          <Provider store={store}>\r\n            <AppContainer />\r\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_RIGHT} />\r\n          </Provider>      \r\n        )\r\n    }\r\n};","import * as firebase from \"firebase/app\";\r\nimport \"firebase/messaging\";\r\n\r\nexport const init = () => {\r\n  try{\r\n  const initializedFirebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCrGumtbn2McvNXzZdhShhLaW0QsIFZxOk\",\r\n    authDomain: \"nest-df0a7.firebaseapp.com\",\r\n    databaseURL: \"https://nest-df0a7.firebaseio.com\",\r\n    projectId: \"nest-df0a7\",\r\n    storageBucket: \"nest-df0a7.appspot.com\",\r\n    messagingSenderId: \"422026408390\",\r\n    appId: \"1:422026408390:web:cf0e6a945e7f1ec0d602c7\"\r\n  });\r\n  \r\n  const messaging = initializedFirebaseApp.messaging();\r\n  \r\n  messaging.usePublicVapidKey(\r\n    \"BExnmgKfYLBd44lIqI5xRAD55I5Qhsaa7sI_wJ19zcIuq05y2Z1AtuaNBChU--UhjFxpA2XLR2lI02otUje4Rkk\"\r\n  );\r\n  \r\n  messaging\r\n  .requestPermission()\r\n  .then(async function() {\r\n    const token = await messaging.getToken();\r\n    localStorage.setItem('fcm_token', token);\r\n  })\r\n  .catch(function(err) {\r\n    console.log(\"Unable to get permission to notify.\", err);\r\n  });\r\n}catch(ex){\r\n  console.log('FCM ERROR: ', ex);\r\n}\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const registerServiceWorker = () => {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker\r\n      .register(\"./firebase-messaging-sw.js\")\r\n      .then(function(registration) {\r\n        console.log(\"Registration successful, scope is:\", registration.scope);\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Service worker registration failed, error:\", err);\r\n      });\r\n  }\r\n};\r\n\r\nexport { registerServiceWorker };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { registerServiceWorker } from './services/register-sw';\r\n\r\nregisterServiceWorker();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}