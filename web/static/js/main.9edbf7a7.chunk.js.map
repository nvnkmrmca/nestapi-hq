{"version":3,"sources":["store/action-types.ts","store/reducers/app-user.ts","store/reducers/user.ts","store/reducers/ads.ts","store/reducers/polls.ts","store/reducers/outings.ts","store/reducers/documents.ts","store/reducers/users.ts","store/reducers/homes.ts","store/reducers/user-homes.ts","store/reducers/tickets.ts","store/reducers/blocks.ts","store/reducers/state.ts","store/app-store.ts","constants/index.ts","util/index.ts","store/api/api.ts","store/actions/account.ts","components/common/elements.tsx","components/common/button.tsx","components/images.ts","components/common/spinner.tsx","styles/common.ts","util/toast.ts","components/login/index.tsx","containers/login.tsx","styles/popup.ts","components/home/title-bar.tsx","constants/nav.ts","components/home/nav-bar.tsx","components/home/tab-bar.tsx","store/actions/payment.ts","store/actions/visitor.ts","store/actions/file.ts","components/home/my-dues.tsx","util/convert.ts","components/home/history.tsx","components/home/custom-list.tsx","styles/card.ts","components/home/home.tsx","components/home/manager/home.tsx","components/common/radio-button.tsx","styles/model.ts","components/home/gatekeeper/new-visitor.tsx","components/home/gatekeeper/home.tsx","components/home/dashboard.tsx","containers/dashboard.tsx","store/actions/member.ts","styles/page.ts","styles/icon.ts","components/home/members.tsx","containers/members.tsx","components/home/new-member.tsx","containers/new-member.tsx","store/actions/vehicle.ts","components/home/vehicles.tsx","containers/vehicles.tsx","components/home/new-vehicle.tsx","containers/new-vehicle.tsx","store/actions/servent.ts","components/home/servents.tsx","containers/servents.tsx","components/home/new-servent.tsx","containers/new-servent.tsx","store/actions/ticket.ts","components/home/tickets.tsx","containers/tickets.tsx","components/home/new-ticket.tsx","containers/new-ticket.tsx","components/home/visitors.tsx","containers/visitors.tsx","components/home/change-password.tsx","containers/change-password.tsx","components/home/my-profile.tsx","containers/my-profile.tsx","components/home/my-role.tsx","containers/my-role.tsx","store/actions/ad.ts","components/home/manager/ads.tsx","containers/ads.tsx","components/home/manager/new-ad.tsx","containers/new-ad.tsx","components/home/manager/users.tsx","containers/users.tsx","store/actions/home.ts","components/home/manager/homes.tsx","containers/homes.tsx","components/common/checkbox.tsx","styles/mlist.ts","components/home/manager/edit-user.tsx","containers/edit-user.tsx","components/home/manager/edit-home.tsx","containers/edit-home.tsx","components/home/gatekeeper/visitors.tsx","containers/all-visitors.tsx","components/home/manager/notification.tsx","containers/notification.tsx","store/actions/notification.ts","store/actions/outing.ts","components/home/new-outing.tsx","containers/new-outing.tsx","store/actions/documents.ts","components/home/my-documents.tsx","containers/my-documents.tsx","store/actions/block.ts","components/home/manager/blocks.tsx","containers/blocks.tsx","components/home/manager/edit-block.tsx","containers/edit-block.tsx","components/home/manager/payment-form.tsx","components/home/manager/payment-history.tsx","components/home/manager/payment.tsx","containers/payment.tsx","components/home/manager/view-home/info.tsx","components/home/manager/view-home/members.tsx","components/home/manager/view-home/vehicles.tsx","components/home/manager/view-home/servents.tsx","components/home/manager/view-home/tickets.tsx","components/home/manager/view-home/visitors.tsx","components/home/manager/view-home/payments.tsx","components/home/manager/view-home/documents.tsx","components/home/manager/view-home/index.tsx","containers/view-home.tsx","store/actions/poll.ts","util/calc.ts","components/home/manager/poll.tsx","components/home/poll.tsx","components/home/outing.tsx","components/home/notification.tsx","containers/notice.tsx","components/home/help.tsx","containers/help.tsx","components/not-found/index.tsx","components/home/index.tsx","containers/home.tsx","components/app-container.tsx","containers/app-container.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["actionTypes","handleLoginResult","state","payload","Object","objectSpread","isLoggedIn","handleRoleResult","role","handleHomeIndexResult","homeIndex","handleResult","_id","number","name","age","gender","mobileNo","emailId","type","image","createdBy","updatedBy","homes","client","data","isUpToDate","isError","errorMessage","State","combineReducers","AppUser","arguments","length","undefined","action","SET_LOGIN_STATUS","SET_ROLE","SET_HOME_INDEX","RESET","User","description","address","upi","id","rep","repType","LOAD_USER","Ads","LOAD_ADS","Polls","LOAD_POLLS","Outings","LOAD_OUTINGS","Documents","LOAD_DOCUMENTS","Users","LOAD_USERS","Homes","LOAD_HOMES","UserHomes","LOAD_USERHOMES","Tickets","LOAD_TICKETS","Blocks","LOAD_BLOCKS","store","createStore","compose","applyMiddleware","reduxThunk","API_BASE_PATH","DEFAULT_DATE_FORMAT","IMAGE_BASE_PATH","FILE_BASE_PATH","COLOR","ROLE","USER","ADMIN","GATEKEEPER","MANAGER","MONTH","title","value","isNN","_input","isNNObject","json2Str","JSON","stringify","ex","jsError","generateUUID","d","Date","getTime","performance","now","replace","c","r","Math","random","floor","toString","_ex","_funName","console","log","Api","url","get","callback","_this","fetch","post","delete","patch","put","upload","_callee","token","clientId","userId","formData","regenerator_default","a","wrap","_context","prev","next","getAS","sent","FormData","append","file","method","headers","Accept","x-access-token","client-id","user-id","body","then","response","json","message","catch","error","stop","_callee2","key","_context2","sessionStorage","getItem","abrupt","t0","_callee3","_context3","Content-Type","logout","dispatch","removeItem","setLoginResult","setHomeIndexResult","resetState","setRoleResult","getUserResult","getUsersResult","getHomesResult","getBlockResult","View","styled","div","_templateObject","ScrollView","_templateObject2","Image","img","_templateObject3","TextInput","input","_templateObject4","TextArea","textarea","_templateObject5","Picker","select","_templateObject6","Text","label","_templateObject7","TouchableHighlight","span","_templateObject8","Button","this","react","className","props","onClick","onPress","style","styles","btn","React","defaultProps","backgroundColor","borderColor","color","cursor","Images","logo","logoInv","icon","homeIcon","homeIconInv","notification","notificationInv","setting","settingInv","info","infoInv","workInProgress","members","membersInv","vehicle","vehicleInv","username","password","support","supportInv","visitors","visitorsInv","servent","serventInv","add","edit","close","tick","cancel","mobile","email","addvertise","reminder","users","blocks","search","datePicker","money","moneyInv","view","document","documentInv","menu","loading","Spinner","visible","src","width","height","fontWeight","marginTop","text","Toast","success","msg","toast","fail","warn","warning","show","bgColor","textColor","Index","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onLogin","userName","setState","isLoading","result","onForgetPassword","isForgetPass","mobileNumber","onCreateAccount","alert","onForgetPassSubmit","toLowerCase","bind","assertThisInitialized","_this2","maxWidth","flexDirection","alignItems","justifyContent","marginBottom","flex","row","txtIcon","placeholder","CommonStyles","txt","onChange","event","target","button_Button","textAlign","float","borderWidth","borderStyle","borderRadius","margin","spinner_Spinner","marginLeft","resizeMode","top","paddingLeft","Login","connect","ownProps","fcm_token","controller","setItem","rememberMe","fcmToken","os","osVersion","login","forgetPassword","Page","container","marginRight","head","alignContent","alignSelf","content","TitleBar","onToggleHomeModel","isShow","isShowHomeModel","onHomeChange","index","confirmAlert","buttons","onLogout","titleBar","react_router_dom","to","isMenuExpand","onToggleMenu","appUser","titleText","user","index_es","open","onClose","popupStyles","map","i","homeList","activeHome","inActiveHome","padding","fontSize","borderBottomWidth","borderBottomColor","border-bottom-style","NAV","path","roles","child","isMRole","NavBar","loadNav","nav","pTitle","isTopLevel","that","activeTopMenu","inner","indexOf","split","activeMenu","isExpand","TabBar","tabBar","borderTopColor","borderTopWidth","border-top-style","paddingTop","paddingBottom","tab","tabImage","activeTab","loadAll","appClientId","homeId","sCallback","fCallback","save","MyDues","getTotalDue","totalDue","home","payments","amountPaid","transactions","filter","t","j","isSuccess","amount","payNow","paymentId","transactionRef","payment","successCallback","Status","responseCode","transaction","txnRef","txnId","status","reason","onPaymentUpdate","updateResult","clearTxn","txnFailure","failureCallback","p","myDueFirst","myDue","m","forMonth","forYear","borderLeftColor","borderLeftWidth","toDateString","_format","moment","format","History","slice","paidDate","createdAt","CustomList","borderBottomStyle","card","Home","cardStyles","history","push","vehicles","servents","my_dues_MyDues","onPaymentUpload","custom_list_CustomList","history_History","RadioButton","checked","isActive","circle","dot","paddingRight","font-weight","ele","radio","display","radioText","radioActive","radioActiveText","saveBtn","NewVisitor","onImageSelect","files","arrFileName","fileName","onUpload","onSave","showHomes","visitor","homeSearchText","onClear","modelStyles","overflow","radio_button_RadioButton","maxLength","new_visitor_NewVisitor","onToggleLoading","onSaveVisitor","Dashboard","home_Home","manager_home_Home","ads","tickets","gatekeeper_home_Home","outings","approvalid","paymentIndex","findIndex","update","scallback","saveVisitor","fileUpload","foundIndex","addIcon","editIcon","deleteIcon","closeIcon","Members","member","isEdit","onRemove","iconStyles","remove","NewMember","Vehicles","NewVehicle","Servents","NewServent","arrTickets","getTicketsResult","unshift","_homeId","comments","ticket","viewId","comment","onResolve","onStart","onView","onAddComment","onLoad","_this3","myStyles","cmntsCnr","cmntsHdr","cmntsHdrTxt","cmntsCnt","e","cmntCnrFst","cmntCnr","cmntHdr","cmntCnt","addCmntCnt","newCmnt","resolve","start","ticketId","ticketIndex","commentIndex","addComment","NewTicket","Visitors","onToggleZoomImage","isZoom","isZoomImage","zoomImage","pageStyles","ChangePassword","passwordPolicyCheck","anUpperCase","aLowerCase","aNumber","aSpecial","numUpper","numLower","numNums","numSpecials","test","onUpdate","newPassword","confirmNewPassword","policyResult","changePassword","MyProfile","updateProfile","MyRole","updateRole","getAdResult","ad","NewAd","getHomes","userHomes","homeIds","uh","h","onSearch","searchText","toLocaleLowerCase","searchResult","memberIds","searchResultIndex","removeByAM","load","getUsers","userIds","u","Checkbox","mListCnr","mListActiveRow","mListRow","EditUser","isAdmin","isManager","isGatekeeper","isUser","isShowHomes","match","params","commonStyles","checkbox_Checkbox","mlistStyles","maxHeight","assign","isAM","saveByAM","EditHome","blockId","_blockId","bedRoom","parking","onToggleUserModel","isShowUsers","onCheckNumberAvail","checkNumberAvail","getHomeNumber","onExit","v","AllVisitors","exit","Notification","onPush","getOutingResult","NewOuting","fromDate","toDate","place","outing","isReturned","datePickerType","datePickerDate","entry_default","date","getDocumentResult","MyDocuments","onFileSelect","documents","ho","rel","href","EditBlock","block","PaymentForm","isAllHome","month","year","getMonth","getFullYear","PaymentHistory","isShowSearch","uPaymentId","uAmount","uDescription","pData","isShowUpdateModel","mode","Payment","payment_form_PaymentForm","payment_history_PaymentHistory","updatePay","Info","_this$props","blockName","Payments","getAmountPaid","ViewHome","toggleLoading","info_Info","view_home_members_Members","onLoadMembers","view_home_vehicles_Vehicles","onLoadVehicles","view_home_servents_Servents","onLoadServents","view_home_tickets_Tickets","onLoadTickets","view_home_visitors_Visitors","onLoadVisitors","payments_Payments","onLoadPayments","view_home_documents_Documents","onLoadDocuments","loadMembers","loadVehicles","loadServents","loadTickets","loadVisitors","loadPayments","loadDocuments","getPollResult","percentage","_partialValue","_totalValue","Poll","topic","pollOption","po","poll","isAllowMultiple","isOneVotePerFlat","isAnonymous","options","polls","showVotePoll","loadVotes","votes","poi","option","sort","b","vo","voi","newOptions","onSelectOption","optionId","votePollId","_memberId","onVote","pollId","currentDate","getDate","o","oi","Outing","onReturnBack","outingId","isShowPoll","onLoadAds","onLoadPoll","onLoadOuting","poll_Poll","onSavePoll","onRemovePoll","home_poll_Poll","outing_Outing","remainders","complaints","Notice","loadAllAds","userRole","loadAllPools","Id","UserId","lstPoll","pollIndex","vote","loadAllOutings","returnedAt","retunBack","Help","listItem","isGateKeeper","getProfile","title_bar_TitleBar","nav_bar_NavBar","react_router","exact","component","CDashboard","CMembers","CNewMember","CVehicles","CNewVehicle","CServents","CNewServent","CTickets","CNewTicket","CVisitors","CAds","CNewAd","CNotification","CUsers","CEditUser","CHomes","CViewHome","CEditHome","CBlocks","CEditBlock","CPayment","CAllVisitors","CNotice","CNewOuting","CMyProfile","CMyRole","CMyDocuments","CChangePassword","CHelp","NotFound","tab_bar_TabBar","mresult","bresult","hresult","forEach","homeChange","AppContainer","setLogin","containers_home_Home","App","react_default","createElement","es","containers_app_container_AppContainer","lib","ToastsStore","position","ToastsContainerPosition","TOP_RIGHT","Component","Boolean","window","location","hostname","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9edbf7a7.chunk.js","sourcesContent":["export enum actionTypes{\r\n    SET_LOGIN_STATUS,\r\n    SET_ROLE,\r\n    SET_HOME_INDEX,\r\n    LOAD_USER,\r\n    LOAD_ADS,\r\n    LOAD_POLLS,\r\n    LOAD_OUTINGS,\r\n    LOAD_DOCUMENTS,\r\n    LOAD_USERS,\r\n    LOAD_HOMES,\r\n    LOAD_USERHOMES,\r\n    LOAD_TICKETS,\r\n    SAVE_MEMBER,\r\n    LOAD_BLOCKS,\r\n    RESET\r\n};","import { actionTypes } from '../action-types';\r\nimport { IAppUser } from '../../models/app-user/app-user';\r\n\r\nconst createEmptyResult = (): IAppUser => ({\r\n    isLoggedIn: false,\r\n    role: '',\r\n    homeIndex: -1\r\n});\r\n\r\nexport const AppUser = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_LOGIN_STATUS:\r\n            return handleLoginResult(state, action.payload);\r\n        case actionTypes.SET_ROLE:\r\n            return handleRoleResult(state, action.payload);\r\n        case actionTypes.SET_HOME_INDEX:\r\n            return handleHomeIndexResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleLoginResult = (state: IAppUser, payload: boolean): IAppUser => {\r\n    return {\r\n        ...state,\r\n        isLoggedIn: payload\r\n    };\r\n};\r\n\r\nconst handleRoleResult = (state: IAppUser, payload: string): IAppUser => {\r\n    return {\r\n        ...state,\r\n        role: payload\r\n    };\r\n};\r\n\r\nconst handleHomeIndexResult = (state: IAppUser, payload: number): IAppUser => {\r\n    return {\r\n        ...state,\r\n        homeIndex: payload\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\n\r\nconst createEmptyResult = (): IUser => ({\r\n    _id: '',\r\n    number: '',\r\n    name: '',\r\n    age: 0,\r\n    gender: '',\r\n    mobileNo: '',\r\n    emailId: '',\r\n    type: '',\r\n    role: '',\r\n    image: '',\r\n    createdBy: '',\r\n    updatedBy: '',\r\n    homes: [],\r\n    client: {\r\n        _id: '',\r\n        name: '',\r\n        description: '',\r\n        address: '',\r\n        upi: {\r\n            id: '',\r\n            name: ''\r\n        },\r\n        rep: {\r\n            name: '',\r\n            mobileNo: '',\r\n            emailId: '',\r\n            repType: ''\r\n        }\r\n    }\r\n});\r\n\r\nexport const User = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USER:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUser, payload: IUser): IUser => {\r\n    return {\r\n        ...state,\r\n        _id: payload._id,\r\n        number: payload.number,\r\n        name: payload.name,\r\n        age: payload.age,\r\n        gender: payload.gender,\r\n        mobileNo: payload.mobileNo,\r\n        emailId: payload.emailId,\r\n        type: payload.type,\r\n        role: payload.role,\r\n        image: payload.image,\r\n        createdBy: payload.createdBy,\r\n        updatedBy: payload.updatedBy,\r\n        homes: payload.homes,\r\n        client: payload.client\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IAds } from '../../models/store/ads';\r\n\r\nconst createEmptyResult = (): IAds => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Ads = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_ADS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IAds, payload: IAds): IAds => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IPolls } from '../../models/store/polls';\r\n\r\nconst createEmptyResult = (): IPolls => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Polls = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_POLLS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IPolls, payload: IPolls): IPolls => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IOutings } from '../../models/store/outings';\r\n\r\nconst createEmptyResult = (): IOutings => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Outings = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_OUTINGS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IOutings, payload: IOutings): IOutings => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IDocuments } from '../../models/store/documents';\r\n\r\nconst createEmptyResult = (): IDocuments => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Documents = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_DOCUMENTS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IDocuments, payload: IDocuments): IDocuments => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUsers } from '../../models/store/users';\r\n\r\nconst createEmptyResult = (): IUsers => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Users = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUsers, payload: IUsers): IUsers => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IHomes } from '../../models/store/homes';\r\n\r\nconst createEmptyResult = (): IHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Homes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_HOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IHomes, payload: IHomes): IHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IUserHomes } from '../../models/store/user-homes';\r\n\r\nconst createEmptyResult = (): IUserHomes => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const UserHomes = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_USERHOMES:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IUserHomes, payload: IUserHomes): IUserHomes => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\n\r\nconst createEmptyResult = (): ITickets => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Tickets = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_TICKETS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: ITickets, payload: ITickets): ITickets => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { actionTypes } from '../action-types';\r\nimport { IBlocks } from '../../models/store/blocks';\r\n\r\nconst createEmptyResult = (): IBlocks => ({\r\n    data: [],\r\n    isUpToDate: false,\r\n    isError: false,\r\n    errorMessage: \"\"\r\n});\r\n\r\nexport const Blocks = (state = createEmptyResult(), action: any) => {\r\n    switch (action.type) {\r\n        case actionTypes.LOAD_BLOCKS:\r\n            return handleResult(state, action.payload);\r\n        case actionTypes.RESET:\r\n            state = createEmptyResult();\r\n    }\r\n    return state;\r\n};\r\n\r\nconst handleResult = (state: IBlocks, payload: IBlocks): IBlocks => {\r\n    return {\r\n        ...state,\r\n        data: payload.data,\r\n        isUpToDate: payload.isUpToDate,\r\n        isError: payload.isError,\r\n        errorMessage: payload.errorMessage\r\n    };\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { IAppState } from '../../models/app-state';\r\nimport { AppUser } from './app-user';\r\nimport { User } from './user';\r\nimport { Ads } from './ads';\r\nimport { Polls } from './polls';\r\nimport { Outings } from './outings';\r\nimport { Documents } from './documents';\r\nimport { Users } from './users';\r\nimport { Homes } from './homes';\r\nimport { UserHomes } from './user-homes';\r\nimport { Tickets } from './tickets';\r\nimport { Blocks } from './blocks';\r\n\r\nexport const State = combineReducers<IAppState>({\r\n    AppUser: AppUser,\r\n    User: User,\r\n    Ads: Ads,\r\n    Polls: Polls,\r\n    Outings: Outings,\r\n    Documents: Documents,\r\n    Users: Users,\r\n    Homes: Homes,\r\n    UserHomes: UserHomes,\r\n    Tickets: Tickets,\r\n    Blocks: Blocks\r\n});\r\n","import { Store, createStore, compose, applyMiddleware } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport { State } from './reducers/state';\r\nimport { IAppState } from '../models/app-state';\r\n\r\nexport const store: Store<IAppState> = createStore(\r\n  State,\r\n  compose(\r\n    applyMiddleware(reduxThunk),\r\n  )\r\n);","// const API_BASE_PATH = 'http://10.0.2.2:3001/';\r\nconst API_BASE_PATH = 'https://nestadmin.herokuapp.com/';\r\n// const API_BASE_PATH = 'http://192.168.43.80:3001/';\r\n// const API_BASE_PATH = 'http://104.196.184.134:3001/';\r\n\r\nexport const DEFAULT_DATE_FORMAT = 'DD-MMM-YYYY';\r\n// export const API_PATH = API_BASE_PATH + 'api/';\r\nexport const API_PATH = API_BASE_PATH;\r\nexport const IMAGE_BASE_PATH = API_BASE_PATH + 'image/';\r\nexport const FILE_BASE_PATH = API_BASE_PATH + 'file/';\r\nexport const COLOR = {\r\n    PRIMARY: '#0078d7',\r\n    SECONDARY: '#0067b9',\r\n    INVERSE: '#FFFFFF',\r\n    ERROR: '#FF0000',\r\n    ICON_BTN_UNDERLAY: '#cce1f1',\r\n    CARD_UNDERLAY: '#cce1f1',\r\n    TAB_UNDERLAY: '#cce1f1',\r\n    SETTING_UNDERLAY: '#cce1f1',\r\n    HR_COLOR: '#e1e1e1',\r\n    FONT_COLOR1: '#8e8e93',\r\n    FONT_COLOR2: '#000000',\r\n    FONT_COLOR3: '#FFFFFF',\r\n    MODAL_BG: '#cce1f1'\r\n};\r\nexport const ROLE = {\r\n    USER: 'USER',\r\n    ADMIN: 'ADMIN',\r\n    GATEKEEPER: 'GATEKEEPER',\r\n    MANAGER: 'MANAGER'\r\n};\r\nexport const MONTH = [\r\n    {title: 'JAN', value: 0},\r\n    {title: 'FEB', value: 1},\r\n    {title: 'MAR', value: 2},\r\n    {title: 'APR', value: 3},\r\n    {title: 'MAY', value: 4},\r\n    {title: 'JUN', value: 5},\r\n    {title: 'JUL', value: 6},\r\n    {title: 'AUG', value: 7},\r\n    {title: 'SEP', value: 8},\r\n    {title: 'OCT', value: 9},\r\n    {title: 'NOV', value: 10},\r\n    {title: 'DEC', value: 11}\r\n]","//import { config as apiConfig } from '../store/api/config';\r\n\r\nexport function parseJSON(response: any) {\r\n     return response.json()\r\n};\r\n\r\nexport function isNN(_input: any) { \r\n  return (isNNObject(_input) && _input.length > 0) \r\n};\r\n\r\nexport function isNNObject(_input: any) { \r\n  return (_input !== null && _input !== undefined) \r\n};\r\n\r\nexport function str2Json(_input: string) { \r\n  try {\r\n    return JSON.parse(isNN(_input) ? _input : \"{}\"); \r\n  } catch (ex) { \r\n    jsError(ex, \"String2JSON\"); \r\n    return {}; \r\n  } \r\n};\r\n\r\nexport function json2Str(_input: any) { \r\n  try {\r\n    return (isNNObject(_input) ? JSON.stringify(_input) : \"\");\r\n  } catch (ex) { \r\n    jsError(ex, \"JSON2String\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function getBaseURL(_isApi: boolean) { \r\n  try {\r\n    let baseURL: string = \"\";\r\n    let arrURL = window.location.href.split(\"/\");\r\n    if(isNNObject(arrURL) && arrURL.length > 2){\r\n      if(_isApi){\r\n        //baseURL = arrURL[0] + \"//\" + arrURL[2] + apiConfig.baseURL;\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2];\r\n      }else{\r\n        baseURL = arrURL[0] + \"//\" + arrURL[2] + \"/\";\r\n      }\r\n    }else{\r\n      baseURL = window.location.href;\r\n    }\r\n    return baseURL;\r\n  } catch (ex) { \r\n    jsError(ex, \"getBaseURL\"); \r\n    return \"\"; \r\n  }\r\n};\r\n\r\nexport function generateUUID() { // Public Domain/MIT\r\n  var d = new Date().getTime();\r\n  if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n      d += performance.now(); //use high-precision timer if available\r\n  }\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      var r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n  });\r\n}\r\n\r\nexport function jsError(_ex: any, _funName: string) {\r\n   //alert(\"Javascript Error\\n------------------\\nName: \" + _ex.name + \"\\nMessage: \" + _ex.message + \"\\nFunction: \" + _funName + \"\\nFile: \" + _ex.fileName + \"\\nLine Number: \" + _ex.lineNumber + \"\\nColumn Number: \" + _ex.columnNumber); \r\n   console.log(\"Error:\" + _funName + \":\" + _ex);\r\n};","// import { AsyncStorage } from 'react-native';\r\nimport { API_PATH } from \"../../constants\";\r\nimport { isNNObject, json2Str, isNN } from \"../../util/index\";\r\n\r\nexport default class Api {\r\n    private url: string = API_PATH;\r\n     \r\n    // private url: string =  \"https://192.168.43.80:45456/api/\";\r\n    // private url: string =  \"http://192.168.43.80:45455/api/\";\r\n\r\n    /**\r\n    * HTTP GET operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public get = (url: string, callback: Function) => {\r\n        this.fetch(url, 'GET', callback);\r\n    };\r\n\r\n    /**\r\n    * HTTP POST operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public post = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'POST', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP DELETE operation\r\n    * @ param url\r\n    * @ param callback\r\n    */\r\n    public delete = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'DELETE', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PATCH operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public patch = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PATCH', callback, data);\r\n    };\r\n\r\n    /**\r\n    * HTTP PUT operation\r\n    * @ param url\r\n    * @ param callback\r\n    * @ param data\r\n    */\r\n    public put = (url: string, callback: Function, data?: {}) => {\r\n        this.fetch(url, 'PUT', callback, data);\r\n    };\r\n\r\n    public upload = async(url: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        \r\n        var formData = new FormData();\r\n        formData.append('file', data.file, data.name);\r\n        formData.append('name', data.name);\r\n\r\n        fetch(this.url + url, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    // 'Content-Type': 'multipart/form-data',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: formData,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n\r\n/*\r\n    private fetch = (url: string, method: string, callback: Function, data?: any) => {\r\n        AsyncStorage.getItem('auth_token').then((token) => {\r\n            AsyncStorage.getItem('user_id').then((userId) => {\r\n                this.next(url, 'PUT', token, userId, callback, data);\r\n            }).catch(ex => {\r\n                this.next(url, 'PUT', token, '', callback, data);\r\n            }); \r\n        }).catch(ex => {\r\n            this.next(url, 'PUT', '', '', callback, data);\r\n        });\r\n    };\r\n    */\r\n\r\n    private getAS = async (key: string) => {\r\n        try {\r\n            // return await AsyncStorage.getItem(key);\r\n            return await sessionStorage.getItem(key);\r\n        } catch (error) {\r\n            return '';\r\n        }\r\n    };\r\n    \r\n    private fetch = async(url: string, method: string, callback: Function, data?: any) => {\r\n        let token = await this.getAS('auth_token');\r\n        let clientId = await this.getAS('client_id');\r\n        let userId = await this.getAS('user_id');\r\n        fetch(this.url + url, \r\n            {\r\n                method: method,\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'x-access-token': (isNN(token) ? 'Bearer ' + token : ''),\r\n                    'client-id': (isNN(clientId) ? '' + clientId : ''),\r\n                    'user-id': (isNN(userId) ? '' + userId : '')\r\n                },\r\n                body: isNNObject(data) ? json2Str(data) : null,\r\n            }).then(response => {\r\n                return response.json(); \r\n            }).then((response: any) => {\r\n                if(isNNObject(response)){\r\n                    if(isNNObject(response.data)){\r\n                        this.callback(callback, response, 'Some problem occurs. Please contact administrator.');\r\n                    }else{\r\n                        this.callback(callback, null, response.message);\r\n                    }\r\n\r\n                    //   if(response.ok == true && response.status == 200){\r\n                    //     this.callback(callback, response.data, \"Some problem occurs. Please contact administrator.\");\r\n                    //   }else if (response.status == 401){\r\n                    //     this.callback(callback, null, \"Unauthorized request.\");\r\n                    //   }\r\n                    //   else{\r\n                    //     this.callback(callback, null, response.data.message);\r\n                    //   }\r\n                }else{\r\n                    this.callback(callback, null, 'Some problem occurs. Please contact administrator.');\r\n                }\r\n            }).catch((error: any) => {\r\n                console.log('err', error);\r\n                this.callback(callback, null, error.toString());\r\n            });\r\n    };\r\n\r\n    private callback = (callback: Function, data: any, message: any) => {\r\n        // console.log('message: '+ message);\r\n        if(isNNObject(callback) && typeof callback == \"function\"){\r\n            callback(data, message);\r\n        }\r\n    };\r\n\r\n    /*\r\n        private handleResult = (data: any) => {\r\n        if (data) {\r\n            if (data.message) {\r\n                return null;\r\n            } else {\r\n                return data;\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private onBadRequest = () => {\r\n       \r\n    };\r\n    \r\n    private onError = () => {\r\n        \r\n        // alert('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n        // console.error('error occured on parsing the request ' + config.baseURL + this.url + errorMessage);\r\n         \r\n    };\r\n    \r\n    private onUnAuthorized = () => {\r\n        // alert('UnAuthorized Request');\r\n                 \r\n    };\r\n    */\r\n};","// import { AsyncStorage, Platform } from 'react-native';\r\nimport { actionTypes } from '../action-types';\r\nimport Api from '../api/api';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IUsers } from '../../models/store/users';\r\n// import { IAd } from '../../models/ad/ad';\r\n// import { IAds } from '../../models/store/ads';\r\n// import { IPoll } from '../../models/poll/poll';\r\n// import { IPolls } from '../../models/store/polls';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IHomes } from '../../models/store/homes';\r\n// import { IUserHome } from '../../models/user-home/user-home';\r\n// import { IUserHomes } from '../../models/store/user-homes';\r\nimport { IMember } from '../../models/home';\r\n// import { ITicket } from '../../models/home/ticket';\r\n// import { ITickets } from '../../models/store/tickets';\r\nimport { IBlock } from '../../models/block';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'account/';\r\n\r\nexport const login = (userName: string, password: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  let fcm_token: string | null = sessionStorage.getItem('fcm_token');\r\n    new Api().post(controller + 'login', (result: any, message: string) => {\r\n      // console.log('OUT: ', result);\r\n      if(isNNObject(result) && isNNObject(result.data) && isNN(result.data.token) && isNN(result.data.userId))\r\n      {\r\n        // console.log('IN: ', result);\r\n        try {\r\n          // console.log(result.token);\r\n          sessionStorage.setItem('auth_token', result.data.token);\r\n          sessionStorage.setItem('client_id', result.data.clientId);\r\n          sessionStorage.setItem('user_id', result.data.userId);\r\n        } catch (error) {\r\n          // console.error('AsyncStorage error: ' + error.message);\r\n        }\r\n        dispatch(setLoginResult(true));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, {\r\n      userName: userName,\r\n      password: password,\r\n      rememberMe: false,\r\n      fcmToken: fcm_token,\r\n      os: 'web', // Platform.OS, ////TODO\r\n      osVersion: 'web' // Platform.Version ////TODO\r\n    });\r\n};\r\n\r\nexport const getProfile = (callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 'profile', (result: any, message: string) => {\r\n    // console.log('OUT: ', result);\r\n    if(isNNObject(result) && isNNObject(result.data) && isNN(result.data._id))\r\n    {\r\n      dispatch(getUserResult(result.data as IUser));\r\n      dispatch(setHomeIndexResult(isNN(result.data.homes) ? 0 : -1));\r\n      let roles = result.data.role.split(',');\r\n      if(isNN(roles)){\r\n        dispatch(setRoleResult(roles[0]));\r\n      }\r\n      // dispatch(getAdResult(((isNNObject(result.data.ad) && result.data.ad instanceof Array) ? result.data.ad as Array<IAd> : []), true, false, ''));\r\n      // dispatch(getPollResult(((isNNObject(result.data.poll) && result.data.poll instanceof Array) ? result.data.poll as Array<IPoll> : []), true, false, ''));\r\n    \r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0){\r\n        new Api().get('members', (mresult: any, message: string) => {\r\n          if (isNNObject(mresult) && isNN(mresult.data)) {\r\n            dispatch(getUsersResult(mresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(mresult.message) ? mresult.message : 'Failed to load Members.');\r\n          }\r\n        });\r\n        /*\r\n        loadAllMember(result.data.client._id, (members: Array<IMember>) => {\r\n          console.log('members: ', members)\r\n          dispatch(getUsersResult(members, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n        new Api().get('blocks/' + result.data.client._id, (bresult: any, message: string) => {\r\n          if (isNNObject(bresult) && isNN(bresult.data)) {\r\n            dispatch(getBlockResult(bresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n      }\r\n      if(roles.indexOf(ROLE.ADMIN) >= 0 || roles.indexOf(ROLE.MANAGER) >= 0 || roles.indexOf(ROLE.GATEKEEPER) >= 0){\r\n        new Api().get('homes/' + result.data.client._id, (hresult: any, message: string) => {\r\n          if (isNNObject(hresult) && isNN(hresult.data)) {\r\n            hresult.data.forEach((h: any) => {\r\n              h.memberIds = h.members;\r\n              delete h.members;\r\n            });\r\n            dispatch(getHomesResult(hresult.data, true, false, ''));\r\n          } else {\r\n            // fCallback(isNN(hresult.message) ? hresult.message : 'Failed to load Homes.');\r\n          }\r\n        });\r\n        \r\n        /*\r\n        loadAllHome(result.data.client._id, (homes: Array<IHome>) => {\r\n          console.log('homes: ', homes)\r\n          dispatch(getHomesResult(homes, true, false, ''));\r\n        }, (emsg: string) => {});\r\n        */\r\n      }\r\n      \r\n      // dispatch(getUsersResult(((isNNObject(result.data.users) && result.data.users instanceof Array) ? result.data.users as Array<IUser> : []), true, false, ''));\r\n      // dispatch(getHomesResult(((isNNObject(result.data.homes) && result.data.homes instanceof Array) ? result.data.homes as Array<IHome> : []), true, false, ''));\r\n      // dispatch(getUserHomesResult(((isNNObject(result.data.userHomes) && result.data.userHomes instanceof Array) ? result.data.userHomes as Array<IUserHome> : []), true, false, ''));\r\n      \r\n      // dispatch(getHomesResult([], true, false, ''));\r\n      // dispatch(getUserHomesResult([], true, false, ''));\r\n      // dispatch(getTicketsResult(((isNNObject(result.data.tickets) && result.data.tickets instanceof Array) ? result.data.tickets as Array<ITicket> : []), true, false, ''));\r\n      //dispatch(setLoginResult(true));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  });\r\n};\r\n\r\nexport const homeChange = (index: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(setHomeIndexResult(index));\r\n  callback(true);\r\n};\r\n\r\nexport const changePassword = (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'changepassword/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    password: password,\r\n    newPassword: newPassword\r\n  });\r\n};\r\n\r\nexport const forgetPassword = (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'resetpassword', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.data))\r\n    {\r\n      if(result.data.data === true){\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, result.data.message);\r\n      }\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    mobileNo: mobileNumber,\r\n    emailId: email\r\n  });\r\n};\r\n\r\nexport const updateProfile = (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  new Api().put(controller + 'profile/' + userId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.name = name;\r\n      user.mobileNo = mobileNo;\r\n      user.emailId = emailId;\r\n\r\n      dispatch(getUserResult(user));\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, {\r\n    name: name,\r\n    mobileNo: mobileNo,\r\n    emailId: emailId\r\n  });\r\n};\r\n\r\nexport const updateRole = (role: string, callback: (result: boolean, message: string) => void) =>  (dispatch: any) => {\r\n  dispatch(setRoleResult(role));\r\n  callback(true, '');\r\n};\r\n\r\nexport const logout = (callback: (result: boolean) => void) => (dispatch: any) => {\r\n  try {\r\n    sessionStorage.removeItem('auth_token');\r\n    sessionStorage.removeItem('user_id');\r\n    sessionStorage.removeItem('client_id');\r\n    dispatch(setLoginResult(false));\r\n    dispatch(setHomeIndexResult(-1));\r\n    dispatch(resetState());\r\n    callback(true);\r\n  } catch (error) {\r\n    // console.error('AsyncStorage error: ' + error.message);\r\n    callback(false);\r\n  }\r\n};\r\n\r\nexport const setLogin = (isLoggedIn: boolean) => (dispatch: any) => {\r\n  dispatch(setLoginResult(isLoggedIn));\r\n};\r\n\r\nconst setLoginResult = (data: boolean) => ({\r\n  type: actionTypes.SET_LOGIN_STATUS,\r\n  payload: data\r\n});\r\nconst setRoleResult = (data: string) => ({\r\n  type: actionTypes.SET_ROLE,\r\n  payload: data\r\n});\r\nconst setHomeIndexResult = (data: number) => ({\r\n  type: actionTypes.SET_HOME_INDEX,\r\n  payload: data\r\n});\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n/*\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});\r\n*/\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});\r\n/*\r\nconst getUserHomesResult = (data: Array<IUserHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERHOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUserHomes\r\n});\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});\r\n*/\r\nconst resetState = () => ({\r\n  type: actionTypes.RESET\r\n});","import styled from 'styled-components';\r\n\r\nexport const View = styled.div`\r\n`;\r\n\r\nexport const ScrollView = styled.div`\r\noverflow: auto;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n`;\r\n\r\nexport const TextInput = styled.input`\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n`;\r\n\r\nexport const Picker = styled.select`\r\n`;\r\n\r\nexport const Text = styled.label`\r\n`;\r\n\r\nexport const TouchableHighlight = styled.span`\r\n`;\r\n\r\n// export const Button = styled.button`\r\n//   cursor: pointer;\r\n//   background: transparent;\r\n//   font-size: 16px;\r\n//   border-radius: 3px;\r\n//   color: ${props => (props.primary ? 'violet' : 'palevioletred')};\r\n//   border: ${props =>\r\n//     props.primary ? '2px solid violet' : '2px solid palevioletred'};\r\n//   margin: 0 1em;\r\n//   padding: 0.25em 1em;\r\n//   transition: 0.5s all ease-out;\r\n\r\n//   &:hover {\r\n//     color: white;\r\n//     background-color: ${props =>\r\n//       props.primary ? 'violet' : 'palevioletred'};\r\n//   }\r\n// `;","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  title: string,\r\n  onPress: () => void,\r\n  style? : {}\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Button extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    title: '',\r\n    onPress: () => {},\r\n    style: {}\r\n  }\r\n  render() {\r\n    return (\r\n      <input type='button' className='btn' value={this.props.title} onClick={() => this.props.onPress()} style={{...styles.btn, ...this.props.style}} />\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  btn: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    borderColor: COLOR.PRIMARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    cursor: 'pointer',\r\n    // alignItems: 'center',\r\n    // paddingTop: 7,\r\n    // paddingBottom: 7,\r\n    // paddingLeft: 5,\r\n    // paddingRight: 5\r\n  }\r\n};","import { IMAGE_BASE_PATH } from '../constants/index';\r\n\r\nexport default class Images {\r\n    static readonly logo = IMAGE_BASE_PATH + 'logo.png';\r\n    static readonly logoInv = IMAGE_BASE_PATH + 'logo-inv.png';\r\n    static readonly icon = IMAGE_BASE_PATH + 'icon.png';\r\n    static readonly logout = IMAGE_BASE_PATH + 'logout.png';\r\n    static readonly homeIcon = IMAGE_BASE_PATH + 'home-icon.png';\r\n    static readonly homeIconInv = IMAGE_BASE_PATH + 'home-icon-inv.png';\r\n    static readonly notification = IMAGE_BASE_PATH + 'notification.png';\r\n    static readonly notificationInv = IMAGE_BASE_PATH + 'notification-inv.png';\r\n    static readonly setting = IMAGE_BASE_PATH + 'setting.png';\r\n    static readonly settingInv = IMAGE_BASE_PATH + 'setting-inv.png';\r\n    static readonly info = IMAGE_BASE_PATH + 'info.png';\r\n    static readonly infoInv = IMAGE_BASE_PATH + 'info-inv.png';\r\n    static readonly workInProgress = IMAGE_BASE_PATH + 'work-in-progress.png';\r\n    static readonly members = IMAGE_BASE_PATH + 'members.png';\r\n    static readonly membersInv = IMAGE_BASE_PATH + 'members-inv.png';\r\n    static readonly vehicle = IMAGE_BASE_PATH + 'vehicle.png';\r\n    static readonly vehicleInv = IMAGE_BASE_PATH + 'vehicle-inv.png';\r\n    static readonly username = IMAGE_BASE_PATH + 'username.png';\r\n    static readonly password = IMAGE_BASE_PATH + 'password.png';\r\n    static readonly support = IMAGE_BASE_PATH + 'support.png';\r\n    static readonly supportInv = IMAGE_BASE_PATH + 'support-inv.png';\r\n    static readonly visitors = IMAGE_BASE_PATH + 'visitors.png';\r\n    static readonly visitorsInv = IMAGE_BASE_PATH + 'visitors-inv.png';\r\n    static readonly servent = IMAGE_BASE_PATH + 'servent.png';\r\n    static readonly serventInv = IMAGE_BASE_PATH + 'servent-inv.png';\r\n    static readonly add = IMAGE_BASE_PATH + 'add.png';\r\n    static readonly edit = IMAGE_BASE_PATH + 'edit.png';\r\n    static readonly delete = IMAGE_BASE_PATH + 'delete.png';\r\n    static readonly close = IMAGE_BASE_PATH + 'close.png';\r\n    static readonly tick = IMAGE_BASE_PATH + 'tick.png';    \r\n    static readonly cancel = IMAGE_BASE_PATH + 'cancel.png';\r\n    static readonly mobile = IMAGE_BASE_PATH + 'mobile.png';\r\n    static readonly email = IMAGE_BASE_PATH + 'email.png';\r\n    static readonly addvertise = IMAGE_BASE_PATH + 'addvertise.png';\r\n    static readonly reminder = IMAGE_BASE_PATH + 'reminder.png';\r\n    static readonly users = IMAGE_BASE_PATH + 'users.png';\r\n    static readonly homes = IMAGE_BASE_PATH + 'homes.png';\r\n    static readonly blocks = IMAGE_BASE_PATH + 'blocks.png';\r\n    static readonly search = IMAGE_BASE_PATH + 'search.png';\r\n    static readonly datePicker = IMAGE_BASE_PATH + 'date-picker.png';\r\n    static readonly money = IMAGE_BASE_PATH + 'money.png';\r\n    static readonly moneyInv = IMAGE_BASE_PATH + 'money-inv.png';\r\n    static readonly view = IMAGE_BASE_PATH + 'view.png';\r\n    static readonly document = IMAGE_BASE_PATH + 'document.png';\r\n    static readonly documentInv = IMAGE_BASE_PATH + 'document-inv.png';\r\n    static readonly menu = IMAGE_BASE_PATH + 'menu.png';\r\n    static readonly loading = IMAGE_BASE_PATH + 'loading.gif';\r\n};","import * as React from 'react';\r\nimport { View, Image } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\nimport Images from '../images';\r\n\r\ninterface IProps {\r\n  visible: boolean,\r\n  text?: string\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Spinner extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    visible: false,\r\n    text: 'Loading...'\r\n  }\r\n  render() {\r\n    return (\r\n      this.props.visible &&\r\n      <View>\r\n        <View className='loader-overlay'></View>\r\n        <View className='loader'>\r\n          <Image className='' src={Images.loading} style={{width: '50px', height: '50px'}} />\r\n          <View style={{color: COLOR.SECONDARY, fontWeight: 'bold', marginTop: 5}}>{this.props.text}</View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\n// <AppSpinner visible={this.props.visible} textContent={this.props.text} textStyle={{color: COLOR.SECONDARY}} />\r\n","export const styles = {\r\n  textInput: {\r\n    // borderBottomWidth: 1,\r\n    // borderBottomColor: COLOR.FONT_COLOR2,\r\n    // paddingBottom: 5\r\n    }\r\n  };\r\n  ","import {ToastsStore as toast} from 'react-toasts';\r\n\r\n class Toast {\r\n   static success = (msg: string) => {\r\n       // Toast.show(msg, '#003300', '#FFFFFF');\r\n       toast.success(msg);\r\n    }\r\n    static fail = (msg: string) => {\r\n        // Toast.show(msg, '#b30000', '#FFFFFF');\r\n        toast.error(msg);\r\n    }\r\n    static warn = (msg: string) => {\r\n        // Toast.show(msg, '#e68a00', '#FFFFFF');\r\n        toast.warning(msg);\r\n    }\r\n    static info = (msg: string) => {\r\n        // Toast.show(msg, '#000080', '#FFFFFF');\r\n        toast.info(msg);\r\n    }\r\n    static show = (msg: string, bgColor: string, textColor: string) => {\r\n\r\n        toast.info(msg);\r\n        \r\n        /*\r\n        // Add a Toast on screen.\r\n        RNToast.show(msg, {\r\n            duration: RNToast.durations.SHORT,\r\n            position: RNToast.positions.TOP,\r\n            shadow: true,\r\n            animation: true,\r\n            hideOnPress: true,\r\n            delay: 0,\r\n            backgroundColor: bgColor,\r\n            textColor: textColor,\r\n            onShow: () => {\r\n                // calls on toast\\`s appear animation start\r\n            },\r\n            onShown: () => {\r\n                // calls on toast\\`s appear animation end.\r\n            },\r\n            onHide: () => {\r\n                // calls on toast\\`s hide animation start.\r\n            },\r\n            onHidden: () => {\r\n                // calls on toast\\`s hide animation end.\r\n            }\r\n        });\r\n        */\r\n    }\r\n};\r\n\r\nexport default Toast;","import * as React from 'react';\r\nimport { View, Text, TextInput, Image } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport Images from '../images';\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => void,\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => void\r\n}\r\n\r\ninterface IState{\r\n    userName: string,\r\n    password: string,\r\n    message: string,\r\n    isLoading: boolean,\r\n    isForgetPass: boolean,\r\n    mobileNumber: string,\r\n    email: string\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n            message: '',\r\n            isLoading: false,\r\n            isForgetPass: false,\r\n            mobileNumber: '',\r\n            email: ''\r\n        };\r\n        this.onLogin = this.onLogin.bind(this);\r\n        this.onForgetPassword = this.onForgetPassword.bind(this);\r\n        this.onCreateAccount = this.onCreateAccount.bind(this);\r\n        this.onForgetPassSubmit = this.onForgetPassSubmit.bind(this);\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    onLogin = () =>{\r\n        if(isNN(this.state.userName) && isNN(this.state.password)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            this.props.onLogin(this.state.userName, this.state.password, (result: boolean, message: string) => {\r\n                if(result === true){                        \r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            // Toast.warn('Enter Mobile Number and Password to continue.');\r\n            Toast.warn('Enter Mobile Number and Password to continue.');\r\n        }\r\n    };\r\n    \r\n    onForgetPassword = () =>{\r\n        this.setState({\r\n            isForgetPass: true,\r\n            mobileNumber: '',\r\n            email: '',\r\n            message: ''\r\n        });\r\n    };\r\n\r\n    onCreateAccount = () =>{\r\n        alert('Contact administrator/manager to create/join your flat.');\r\n    };\r\n\r\n    onForgetPassSubmit = () => {\r\n        if(isNN(this.state.mobileNumber) && isNN(this.state.email)){\r\n            this.setState({\r\n                message: '',\r\n                isLoading: true\r\n            });\r\n            this.props.onForgetPassword(this.state.mobileNumber, this.state.email.toLowerCase(), (result: boolean, message: string) => {\r\n                if(result === true){\r\n                    Toast.success('Password reset success. Login with New password sent to your Email. Change password after login.');\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        message: '',\r\n                        isForgetPass: false,\r\n                        userName: '',\r\n                        password: ''\r\n                    });\r\n                }else{\r\n                    this.setState({\r\n                        message: message,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            });\r\n        }else{\r\n            Toast.warn('Enter Mobile Number and Email to continue.');\r\n        }\r\n    };\r\n\r\n  render() {\r\n    return (\r\n            <View className='container' style={{backgroundColor: COLOR.INVERSE, maxWidth: '270px'}}>\r\n                <View className='row' style={{flexDirection: 'row', alignItems: 'center', justifyContent:'center', marginBottom: 30, marginTop: 5}}>\r\n                    <Image src={Images.logo} style={{width: 150, height: 150}}/>\r\n                </View>\r\n                {!this.state.isForgetPass ?\r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <Image className='absolute' src={Images.username} style={styles.txtIcon} />\r\n                        <TextInput type='text' className='form-control' placeholder='Mobile Number' style={{...CommonStyles.textInput, ...styles.txt}} value={this.state.userName} onChange={(event: any) => this.setState({userName: event.target.value})} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 15}}>\r\n                        <Image className='absolute' src={Images.password} style={styles.txtIcon} />\r\n                        <TextInput type='password'  className='form-control' placeholder='Password' value={this.state.password} style={{...CommonStyles.textInput, ...styles.txt}} onChange={(event: any) => this.setState({password: event.target.value})} />\r\n                    </View>\r\n                    <Text className='col-12 pointer' onClick={this.onForgetPassword} style={{marginBottom: 15, textAlign: 'right', color: COLOR.SECONDARY}}>Forgot Password?</Text>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"LOGIN\" : \"Loading...\"}\r\n                    onPress={this.onLogin}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View className='col-12' style={{marginTop: 15, alignItems: 'center', justifyContent:'center'}}>\r\n                        <Text className='col-12' style={{marginBottom: 5, textAlign: 'center'}}>Dont have an account?</Text>\r\n                        <View className='col' style={{float: 'left', alignItems: 'center', justifyContent:'center', borderWidth: 1, borderColor: '#000000', borderStyle: 'solid', borderRadius: 10}}>\r\n                            <Text style={{textAlign: 'center', margin: '7px', cursor: 'pointer'}} onClick={this.onCreateAccount}>CREATE / JOIN YOUR FLAT</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                :\r\n                <View className='row' style={{flex: 1, alignItems: 'center', justifyContent:'center'}}>\r\n                    <View className='col-12' style={styles.row}>\r\n                        <Image className='absolute' src={Images.mobile} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control' placeholder='Registered Mobile Number' value={this.state.mobileNumber} style={{...CommonStyles.textInput, ...styles.txt}} onChange={(event: any) => this.setState({mobileNumber: event.target.value})} />\r\n                    </View>\r\n                    <View className='col-12' style={{...styles.row, marginBottom: 40}}>\r\n                        <Image className='absolute' src={Images.email} style={styles.txtIcon} />\r\n                        <TextInput type='text'  className='form-control' placeholder='Registered Email' value={this.state.email} style={{...CommonStyles.textInput, ...styles.txt}} onChange={(event: any) => this.setState({email: event.target.value})} />\r\n                    </View>\r\n                    <Button\r\n                    title={this.state.isLoading === false ? \"Reset my password\" : \"Loading...\"}\r\n                    onPress={this.onForgetPassSubmit}\r\n                    />\r\n                    <Text className='col-12 center' style={{marginTop: 5, color: (this.state.isLoading ? COLOR.FONT_COLOR2 : COLOR.ERROR)}}>{this.state.message}</Text>\r\n\r\n                    <View style={{marginTop: 15}}>\r\n                        <Text className='pointer' onClick={() => { \r\n                            this.setState({\r\n                                isForgetPass: false,\r\n                                mobileNumber: \"\",\r\n                                email: \"\",\r\n                                message: \"\"\r\n                            });\r\n                         }} style={{marginBottom: 5, textAlign: 'center', color: COLOR.SECONDARY}}>Go back to Login.</Text>\r\n                    </View>\r\n                </View>\r\n                }\r\n                <Spinner visible={this.state.isLoading} text={\"\"} />\r\n            </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n    row: {\r\n        // flexDirection: 'row',\r\n        // justifyContent: 'center',\r\n        // alignItems: 'center',\r\n        marginBottom: 25\r\n    },     \r\n    txtIcon: {\r\n        marginLeft: 3,\r\n        // marginRight: -15,\r\n        height: 15,\r\n        width: 15,\r\n        resizeMode : 'stretch',\r\n        alignItems: 'center',\r\n        top: 11\r\n\r\n    },\r\n    txt: {\r\n        flex: 1,\r\n        paddingLeft: 20\r\n    }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { login, forgetPassword } from '../store/actions/account';\r\n\r\nimport Page from '../components/login/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLogin: (userName: string, password: string, callback: (result: boolean, message: string) => void) => dispatch(login(userName, password, callback)),\r\n    onForgetPassword: (mobileNumber: string, email: string, callback: (result: boolean, message: string) => void) => dispatch(forgetPassword(mobileNumber, email, callback))\r\n});\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(Page);","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    container: {\r\n      // backgroundColor: COLOR.MODAL_BG,\r\n      height: '80%',\r\n      marginTop: 30,\r\n      marginBottom: 25,\r\n      marginLeft: 15,\r\n      marginRight: 15\r\n    },\r\n    head: {\r\n      // padding: 7,\r\n      // flexDirection: 'row'\r\n      alignContent: 'center'\r\n    },\r\n    title: {\r\n      flex: 1,\r\n      // flexDirection: 'row',\r\n      alignContent: 'center',\r\n      color: COLOR.FONT_COLOR2\r\n    },\r\n    close: {\r\n      width: 20,\r\n      flex: 1,\r\n      // flexDirection: 'row',\r\n      justifyContent: 'flex-end',\r\n      alignContent: 'flex-end',\r\n      alignSelf: 'flex-end'\r\n    },\r\n    content: {\r\n      // padding: 15\r\n    }\r\n  };","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { Link } from 'react-router-dom';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text, Image } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Images from '../images';\r\nimport {styles as popupStyles} from '../../styles/popup';\r\nimport { ROLE } from '../../constants/index';\r\nimport { IHome } from '../../models/home';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  isMenuExpand: boolean,\r\n  onToggleMenu: () => void,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{ \r\n  isShowHomeModel: boolean\r\n};\r\n\r\nexport default class TitleBar extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isShowHomeModel: false\r\n    };\r\n    this.onToggleHomeModel = this.onToggleHomeModel.bind(this);\r\n    this.onHomeChange = this.onHomeChange.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  onToggleHomeModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowHomeModel: isShow\r\n    });\r\n  }\r\n\r\n  onHomeChange = (index: number) => {\r\n    this.props.onHomeChange(index, (result: boolean) => {\r\n      if(result === true){\r\n        this.onToggleHomeModel(false);\r\n      }else{\r\n      }\r\n    });\r\n  }\r\n  \r\n  logout = () => {\r\n    confirmAlert({\r\n      title: 'Confirm to logout',\r\n      message: 'Are you sure you wish to logout?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.props.onLogout((result: boolean) => {\r\n              if(result === true){\r\n                Toast.success('Logout Success!');\r\n              }else{\r\n                Toast.fail('Failed to logout!');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className='center' style={styles.titleBar}>\r\n        <Link className='fl' to=''>\r\n          <Image src={Images.logoInv} className='' style={{ width: 22, height: 22}} onClick={() => { if(this.props.isMenuExpand){ this.props.onToggleMenu(); }}} />\r\n        </Link>\r\n          <Image src={this.props.isMenuExpand ? Images.close : Images.menu} className='fl pointer' style={(this.props.isMenuExpand ? { width: 17, height: 17, marginLeft: 15, marginTop: 6} : { width: 22, height: 22, marginLeft: 15, marginTop: 4})} onClick={this.props.onToggleMenu} />\r\n          {(this.props.appUser.role === ROLE.USER) ?\r\n          <Text className='pointer' style={styles.titleText} onClick={() => this.onToggleHomeModel(true)}>{((isNN(this.props.user.homes) && this.props.appUser.homeIndex >= 0) ? this.props.user.homes[this.props.appUser.homeIndex].number : \"\")}</Text>\r\n          :\r\n          <Text style={styles.titleText}>{(this.props.appUser.role === ROLE.ADMIN ? 'Admin' : (this.props.appUser.role === ROLE.MANAGER ? 'Manager' : (this.props.appUser.role === ROLE.GATEKEEPER ? 'Gate Keeper' : this.props.appUser.role)))}</Text>\r\n          }\r\n          <span className='fr pointer' onClick={this.logout} style={{flex: 1,}}>\r\n            <Image src={Images.logout} style={{ width: 20, height: 20}}  />\r\n          </span>\r\n        {isNN(this.props.user.homes) &&\r\n        <Modal\r\n          open={this.state.isShowHomeModel}\r\n          onClose={() => this.onToggleHomeModel(false)}>\r\n          <View style={popupStyles.container}>\r\n            {\r\n            this.props.user.homes.map((d: IHome, i: number) => {\r\n              return(\r\n                <Text className='col-12 pointer' key={'h' + i} onClick={() => this.onHomeChange(i)} style={(this.props.appUser.homeIndex === i ? {...styles.homeList, ...styles.activeHome} : {...styles.homeList, ...styles.inActiveHome})}>\r\n                {'' + d.number}\r\n                </Text>\r\n              )\r\n            })\r\n            }\r\n          </View>\r\n        </Modal>\r\n        }\r\n      </header>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  titleBar: {\r\n    backgroundColor: COLOR.PRIMARY,\r\n    // alignItems: 'flex-start',\r\n    // justifyContent: 'flex-start',\r\n    width: '100%',\r\n    // flexDirection: 'row',\r\n    padding: 7\r\n  },\r\n  titleText: {\r\n    flex: 15, \r\n    // textAlign: 'center', \r\n    color: COLOR.FONT_COLOR3, \r\n    // fontWeight: 'bold', \r\n    fontSize: 15\r\n  },\r\n  homeList: {\r\n    padding: 15, \r\n    borderBottomWidth: 1, \r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid'\r\n    // textAlign: 'center'\r\n  },\r\n  inActiveHome: {\r\n    color: COLOR.FONT_COLOR2\r\n  },\r\n  activeHome: {\r\n    color: COLOR.PRIMARY,\r\n    // fontWeight: 'bold',\r\n    fontSize: 20\r\n  }\r\n};","import { ROLE } from \".\";\r\n\r\nexport const NAV = [\r\n    {title: 'Home', path: '/'},\r\n    {title: 'Manage', roles: [ROLE.USER, ROLE.ADMIN, ROLE.MANAGER], child: [\r\n        {title: 'Members', path: 'members', roles: [ROLE.USER]},\r\n        {title: 'Vehicles', path: 'vehicles', roles: [ROLE.USER]},\r\n        {title: 'Servents', path: 'servents', roles: [ROLE.USER]},\r\n        {title: 'Tickets', path: 'tickets', roles: [ROLE.USER, ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Visitors', path: 'visitors', roles: [ROLE.USER]},\r\n        {title: 'Ads', path: 'ads', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Notification', path: 'notification', roles: [ROLE.ADMIN, ROLE.MANAGER]},\r\n        {title: 'Users', path: 'users', roles: [ROLE.ADMIN]},\r\n        {title: 'Homes', path: 'homes', roles: [ROLE.ADMIN]},\r\n        {title: 'Blocks', path: 'blocks', roles: [ROLE.ADMIN]},\r\n        {title: 'Visitors', path: 'all-visitors', roles: [ROLE.ADMIN, ROLE.MANAGER, ROLE.GATEKEEPER]},\r\n        {title: 'Payment', path: 'payment', roles: [ROLE.ADMIN, ROLE.MANAGER]}\r\n    ]},\r\n    {title: 'Notice', path: 'notice'},\r\n    {title: 'Settings', child: [\r\n        {title: 'My Profile', path: 'my-profile'},\r\n        {title: 'My Role', path: 'my-role', isMRole: true},\r\n        {title: 'My Documents', path: 'my-documents'},\r\n        {title: 'Change Password', path: 'change-password'}\r\n    ]},\r\n    {title: 'Info', path: 'info'}\r\n];","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport { NAV } from '../../constants/nav';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  isExpand: boolean,\r\n  onToggleMenu: () => void,\r\n};\r\n\r\ninterface IState{\r\n  activeMenu: string,\r\n  activeTopMenu: string\r\n};\r\n\r\nexport default class NavBar extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeMenu: '',\r\n      activeTopMenu: ''\r\n    };\r\n    this.loadNav = this.loadNav.bind(this);\r\n  }\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  loadNav = (nav: any, pTitle: string, isTopLevel: boolean = false) => {\r\n    let that = this;\r\n    return(\r\n      <ul className={'navbar-nav' + ((!isTopLevel && this.state.activeTopMenu !== pTitle) ? ' hide' : '')} style={!isTopLevel ? styles.inner : {}}>\r\n      {\r\n        nav.map((d: any, i: number) => {\r\n          if((isNN(d.path) || isNN(d.child)) && (!isNN(d.roles) || d.roles.indexOf(this.props.appUser.role) >= 0) && (!d.isMRole || this.props.user.role.split(',').length > 0)){\r\n          return(\r\n            <li className='nav-item'>\r\n              <Link className='nav-link' to={isNN(d.path) ? d.path : '#' } onClick={() => {\r\n                if(this.state.activeTopMenu === d.title){\r\n                  this.setState({\r\n                    activeTopMenu: ''\r\n                  });\r\n                }else if(isTopLevel){\r\n                  this.setState({\r\n                    activeTopMenu: d.title\r\n                  });\r\n                }\r\n                this.setState({\r\n                  activeMenu: d.title\r\n                });\r\n                if(isNN(d.path)){\r\n                  this.props.onToggleMenu();\r\n                }\r\n              }}>{d.title}</Link>\r\n              {\r\n                isNN(d.child) && \r\n                that.loadNav(d.child, d.title)\r\n              }\r\n            </li>\r\n          )\r\n          }else{\r\n            return null;\r\n          }\r\n        })\r\n      }\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className={this.props.isExpand ? '' : 'collapse'} style={styles.nav}>\r\n        {\r\n          this.loadNav(NAV, '', true)\r\n        }\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  nav: {\r\n    backgroundColor: COLOR.SECONDARY,\r\n    color: COLOR.INVERSE\r\n  },\r\n  inner:{\r\n    backgroundColor: COLOR.PRIMARY,\r\n    paddingLeft: 10\r\n  }\r\n};","import * as React from 'react';\r\nimport { View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class TabBar extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // }\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <footer style={styles.tabBar}>\r\n        <View className='center'>© Nest</View>\r\n      </footer>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {  \r\n  tabBar: {\r\n    flex: 1,\r\n    // backgroundColor: COLOR.HR_COLOR,\r\n    borderTopColor: COLOR.HR_COLOR,\r\n    borderTopWidth: 1,\r\n    'border-top-style': 'solid',\r\n    // alignItems: 'flex-start',\r\n    // justifyContent: 'flex-start',\r\n    width: '100%',\r\n    // flexDirection: 'row',\r\n    // position: 'absolute',\r\n    marginTop: 25,\r\n    paddingTop: 15,\r\n    paddingBottom: 15\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    alignItems: 'center'\r\n  },\r\n  tabImage: {\r\n    width: 20,\r\n    height: 20\r\n  },\r\n  activeTab: {\r\n    backgroundColor: COLOR.INVERSE\r\n  }\r\n};","import Api from '../api/api';\r\nimport { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'payment';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const search = (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(message) ? message : 'Failed to load Payments.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const save = (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to save Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const updatePay = (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().put(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true){\r\n      callback(true, '');\r\n    } else {\r\n      callback(false, message ? message : 'Failed to update Payment.');\r\n    }\r\n  }, data);\r\n};\r\n\r\nexport const upload = (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + 'upload', (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.approvalid > 0)\r\n    {\r\n      /*\r\n      var homeIndex = user.homes.findIndex(d => d._id === homeId);\r\n      if(file.approvalid > 0)\r\n      {        \r\n        var paymentIndex = user.home[homeIndex].paymentApproval.findIndex(d => d.approvalid === file.approvalid);\r\n        user.home[homeIndex].paymentApproval[paymentIndex] = result.data;\r\n      }else{\r\n        user.home[homeIndex].paymentApproval.push(result.data);\r\n      }\r\n      */\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, file);\r\n};\r\n\r\nexport const update = (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/transaction/' + paymentId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n    {\r\n      transaction._id = result.data;\r\n      // var homeIndex = user.homes.findIndex(d => d._id === params.homeid);\r\n      // if(paymentId.length > 0)\r\n      // {        \r\n        var paymentIndex = user.homes[homeIndex].payments.findIndex(d => d._id === paymentId);\r\n        if(!user.homes[homeIndex].payments[paymentIndex].transactions){\r\n          user.homes[homeIndex].payments[paymentIndex].transactions = [];\r\n        }\r\n        user.homes[homeIndex].payments[paymentIndex].transactions.push(transaction);\r\n      // }else{\r\n      //   user.homes[homeIndex].payments.push(result.data);\r\n      // }\r\n      dispatch(getUserResult(user));      \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, transaction);\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","// import { actionTypes } from '../action-types';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants/index';\r\n// import { IHome } from '../../models/home';\r\n\r\nlet controller: string = 'visitor';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Visitors.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // data.image = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          var foundIndex = visitors.findIndex(d => d._id === result.data);\r\n          visitors[foundIndex]._id = result.data;\r\n          visitors[foundIndex].name = name;\r\n          visitors[foundIndex].age = data.age;\r\n          visitors[foundIndex].gender = data.gender;\r\n          visitors[foundIndex].mobileNo = data.mobileNo;\r\n          visitors[foundIndex].emailId = data.emailId;\r\n          visitors[foundIndex].image = result.image;\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      } else {\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if (isNNObject(result) && isNNObject(result.data) && result.data.length > 0) {\r\n        /*\r\n        if ((',' + user.type + ',').indexOf(',' + ROLE.USER + ',')>= 0) {\r\n          let visitors = user.homes[appUser.homeIndex].visitors;\r\n          data._id = result.data;\r\n          data.createdBy = user.name;\r\n          visitors.unshift(data);\r\n          user.homes[appUser.homeIndex].visitors = visitors;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      } else {\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      /*\r\n      user.homes[homeIndex].visitors = user.homes[homeIndex].visitors.filter((d, i) => d._id != id);\r\n      dispatch(getUserResult(user as IUser));\r\n      */\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const exit = (id: string, user: IUser, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/exit/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && result.data === true) {\r\n      /*\r\n      if(isNN(user.homes)){\r\n        let isHomeUpdated = false;\r\n        user.homes.map((h: IHome, i: number) => {\r\n          if(isNN(h.visitors) && isNN(h.visitors.filter(v => v._id === id))){\r\n            isHomeUpdated = true;\r\n            user.homes[i].visitors = h.visitors.filter(v => v._id !== id);\r\n          }\r\n        });\r\n        if(isHomeUpdated){\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n      }\r\n      */\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\n/*\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n*/","import Api from '../api/api';\r\nimport { isNNObject } from '../../util/index';\r\n\r\nlet controller: string = 'upload';\r\n\r\nexport const upload = (data: any, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  new Api().upload(controller, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      callback(true, '');\r\n    }else{\r\n      callback(false, message);\r\n    }\r\n  }, data);\r\n};","import * as React from 'react';\r\nimport { ScrollView, View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNN, generateUUID } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\nimport { MONTH, COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome,\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  payment: {\r\n    paymentId: string,\r\n    amount: number,\r\n    transactionRef: string\r\n  }\r\n};\r\n\r\nexport default class MyDues extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      payment: {\r\n        paymentId: '',\r\n        amount: 0,\r\n        transactionRef: ''\r\n      }\r\n    }\r\n    this.getTotalDue = this.getTotalDue.bind(this);\r\n    this.payNow = this.payNow.bind(this);\r\n    this.clearTxn = this.clearTxn.bind(this);\r\n    this.txnFailure = this.txnFailure.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getTotalDue = () => {\r\n    let totalDue = 0;\r\n    this.props.home.payments.map((d: IPayment, i: number) => {\r\n      let amountPaid = 0;\r\n        d.transactions.filter((t, j) => t.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n      totalDue += d.amount - amountPaid;\r\n      return 1;\r\n    });\r\n    return totalDue;\r\n  };\r\n\r\n  payNow = (paymentId: string, amount: number) => {\r\n    if(paymentId && paymentId.length > 0 && amount && amount > 0){\r\n      if(isNN(this.props.user.client.upi.id) && isNN(this.props.user.client.upi.name)){\r\n        let transactionRef = generateUUID();\r\n        this.setState({\r\n          payment: {\r\n            paymentId: paymentId,\r\n            amount: amount,\r\n            transactionRef: transactionRef\r\n          }\r\n        });\r\n        \r\n        Toast.warn('Payment is in progress. Please contact administrator.');\r\n        // RNUpiPayment.initializePayment({\r\n        //   vpa: this.props.user.client.upi.id, // or can be john@ybl or mobileNo@upi\r\n        //   payeeName: this.props.user.client.upi.name,\r\n        //   amount: amount + '',\r\n        //   transactionRef: transactionRef,\r\n        //   transactionNote: ''\r\n        // }, this.successCallback, this.failureCallback);\r\n      }else{\r\n        Toast.warn('Please update UPI ID and UPI Name to app administrator to proceed further.');\r\n      }\r\n    }else{\r\n      Toast.warn('Amount should be more then 0 to proceed payment.');\r\n    }\r\n  };\r\n  \r\n  successCallback = (result: any) => {\r\n    console.log('Payment Success...', result);\r\n    if(result && result.Status)\r\n    {\r\n      if(result.Status === 'SUCCESS' && result.responseCode && result.responseCode === '00'){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let transaction = {\r\n          txnRef: result.txnRef,\r\n          txnId: result.txnId,\r\n          amount: this.state.payment.amount,\r\n          status: 'PAID',\r\n          isSuccess: true,\r\n          reason: ''\r\n        } as ITransaction;\r\n        this.props.onPaymentUpdate(this.state.payment.paymentId, transaction, (updateResult: boolean) => {\r\n          this.setState({\r\n            isLoading: false\r\n          });\r\n          this.clearTxn();\r\n          if(updateResult === true){\r\n            Toast.success('Payment success.');\r\n          }else{\r\n            Toast.fail('Payment failed.');\r\n          }\r\n        });\r\n      }else{\r\n        this.txnFailure(result);\r\n      }\r\n    }else{\r\n      this.txnFailure(result);\r\n    }\r\n  };\r\n   \r\n  failureCallback = (result: any) => {\r\n    this.txnFailure(result);\r\n  };\r\n\r\n  txnFailure = (result: any) => {\r\n    console.log('Payment Failure...', result);\r\n    let msg: string = '';\r\n    if(result && result.Status)\r\n    {\r\n      if(result.Status === 'FAILURE' && result.responseCode && result.responseCode === 'ZM'){\r\n        msg = 'Payment failed because of wrong pin.';\r\n      }\r\n      else if(result.Status === 'FAILURE' && result.message && result.message.length > 0){\r\n        msg = 'Payment failed because ' + result.message;\r\n      }else{\r\n        msg = 'Payment failed.';\r\n      }\r\n    }\r\n    else{\r\n      msg = 'Payment failed.';\r\n    }\r\n    Toast.fail(msg);\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    let transaction = {\r\n      txnRef: this.state.payment.transactionRef,\r\n      txnId: '',\r\n      amount: this.state.payment.amount,\r\n      status: 'FAIL',\r\n      isSuccess: false,\r\n      reason: msg\r\n    } as ITransaction;\r\n    this.props.onPaymentUpdate(this.state.payment.paymentId, transaction, (updateResult: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      this.clearTxn();\r\n      // if(updateResult === true){\r\n      //   Toast.success('Payment success.');\r\n      // }else{\r\n      //   Toast.fail('Payment failed.');\r\n      // }\r\n    });\r\n  };\r\n\r\n  clearTxn = () => {\r\n    this.setState({\r\n      payment: {\r\n        paymentId: '',\r\n        amount: 0,\r\n        transactionRef: ''\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <View style={{ margin: 5 }}>\r\n          <Text style={{ marginTop: 2, fontWeight: 'bold', fontSize: 17 }}>{'Total Due Amount: Rs ' + this.getTotalDue()}</Text>\r\n        </View>\r\n        <ScrollView>\r\n        {isNN(this.props.home.payments) ?\r\n        this.props.home.payments.filter((p: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          if (isNN(p.transactions)) {\r\n            p.transactions.filter(t => t.isSuccess === true).map((p, j) => amountPaid += p.amount);\r\n          }\r\n          return(amountPaid < p.amount);\r\n        }).map((d: IPayment, i: number) => {\r\n            let amountPaid = 0;\r\n            if (isNN(d.transactions)) {\r\n              d.transactions.filter(p => p.isSuccess === true).map((data, index) => amountPaid += data.amount);\r\n            }\r\n            if (amountPaid < d.amount) {\r\n              return (\r\n                <View key={'my-due' + i} style={(i === 0) ? styles.myDueFirst : styles.myDue }>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Text>{'Due for: ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + '/' + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%', marginTop: 4, marginBottom: 3 }}>\r\n                    <Text style={{ fontSize: 17 }}>{'Rs ' + (d.amount - amountPaid)}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%'}}>\r\n                    <Text>{'Due Date: 15/' + MONTH.filter(m => m.value === d.forMonth)[0].title + '/' + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Button \r\n                    title='PAY NOW'\r\n                    onPress={() => this.payNow(d._id, (d.amount - amountPaid))} \r\n                    />\r\n                  </View>\r\n                </View>\r\n              )\r\n            } else {\r\n              return null;\r\n            }\r\n          })\r\n          :<Text style={{ padding: 20 }}>No Dues found!!!</Text>\r\n        }\r\n        </ScrollView>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  myDue: {\r\n    margin: 7, \r\n    paddingLeft: 15,\r\n    borderLeftColor: COLOR.HR_COLOR, \r\n    borderLeftWidth: 1 \r\n  },\r\n  myDueFirst: {\r\n    margin: 7\r\n  }\r\n};","import moment from 'moment';\r\nimport { isNN, jsError, isNNObject } from './index';\r\nimport { DEFAULT_DATE_FORMAT } from '../constants/index';\r\n\r\nexport function toDateString(_input: any, _format?: string) {\r\n  try {\r\n    if(isNNObject(_input)) {\r\n      if (typeof _input != 'string') {\r\n        _input.toString();\r\n      }\r\n      if (!isNN(_format)) {\r\n       _format = DEFAULT_DATE_FORMAT;\r\n      }\r\n      return moment(_input).format(_format);\r\n    } else {\r\n      return '';\r\n    }\r\n  } catch (ex) {\r\n    jsError(ex, 'convert.toDateString'); \r\n    return ''; \r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, ScrollView } from '../common/elements';\r\nimport { IHome } from '../../models/home/home';\r\nimport { IPayment } from '../../models/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { isNN } from '../../util';\r\nimport { toDateString } from '../../util/convert';\r\nimport { MONTH, COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  home: IHome,\r\n};\r\n\r\ninterface IState {\r\n  activeTab: number\r\n};\r\n\r\nexport default class History extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return (\r\n      <ScrollView style={{}}>\r\n        {isNN(this.props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true)))) ?\r\n        this.props.home.payments.filter((d: IPayment, i: number) => isNN(d.transactions) && isNN(d.transactions.filter((t: ITransaction, j: number) => t.isSuccess === true))).slice(0, 3).map((d: IPayment, i: number) => {\r\n          let amountPaid = 0;\r\n          let paidDate = null;\r\n          d.transactions.filter(t => t.isSuccess === true).map((t: ITransaction, j: number) => {\r\n            amountPaid += t.amount;\r\n            if(j === 0){\r\n              paidDate = t.createdAt;\r\n            }\r\n            return 1;\r\n          });\r\n              return (\r\n                <View key={'my-his' + i} style={(i === 0) ? styles.myDueFirst : styles.myDue }>\r\n                  <View style={{ marginTop: 4 }}>\r\n                    <Text style={{}}>{\"Paid for: \" + MONTH.filter(m => m.value === d.forMonth)[0].title + \"/\" + d.forYear}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%', marginTop: 4, marginBottom: 3 }}>\r\n                    <Text style={{ fontSize: 17 }}>{\"Rs \" + amountPaid}</Text>\r\n                  </View>\r\n                  <View style={{ width: '100%'}}>\r\n                    <Text>{\"Paid On: \" + toDateString(paidDate)}</Text>\r\n                  </View>\r\n                </View>\r\n              )\r\n          })\r\n          :<Text style={{ padding: 20 }}>No History found</Text>\r\n        }\r\n        </ScrollView>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  myDue: {\r\n    margin: 7, \r\n    paddingLeft: 15,\r\n    borderLeftColor: COLOR.HR_COLOR, \r\n    borderLeftWidth: 1 \r\n  },\r\n  myDueFirst: {\r\n    margin: 7\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { Text, View } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\n\r\ninterface IProps {\r\n  data: Array<object>,\r\n  message: string\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class CustomList extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n      return(\r\n        isNN(this.props.data) ?\r\n        this.props.data.map((d: any, i: number) => {\r\n          return(\r\n            <View style={{flex: 1, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid', paddingBottom: 3}}>\r\n              <View>\r\n                <Text key={i} style={{flex: 1, fontWeight: 'bold'}}>\r\n                  {d.title}\r\n                </Text>\r\n              </View>\r\n              <View>\r\n                <Text key={i} style={{flex: 1}}>\r\n                  {d.description}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text>{this.props.message}</Text>          \r\n      );\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  container: {\r\n    flex: 1, \r\n    // flexDirection: 'column',\r\n    width: '100%',\r\n    // backgroundColor: \"#CCCCCC\",\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    borderBottomWidth: 1,\r\n    'border-bottom-style': 'solid'\r\n  }, \r\n  row: {\r\n    flex: 1,\r\n    // flexDirection: 'row'\r\n  }, \r\n  card: {\r\n    flex: 1, \r\n    // flexDirection: 'column', \r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    // backgroundColor: '#DDDDDD', \r\n    borderRadius: 10,\r\n    padding: 5,\r\n    margin: 7\r\n  },\r\n  inner: {\r\n    // flex: 1, \r\n    // flexDirection: 'column', \r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    // textAlign: 'center',\r\n    // width: '150px',\r\n    margin: 5,\r\n    padding: '0px 10px'\r\n    // float: 'left'\r\n  },\r\n  txt:{\r\n    flex: 1, \r\n    // justifyContent: 'center', \r\n    // textAlign: 'center', \r\n    paddingTop: 7,\r\n    paddingBottom: 5,\r\n    fontSize: 14\r\n  },\r\n  img:{\r\n    width: 25,\r\n    height: 25,\r\n    margin: 5\r\n  }\r\n};\r\n  ","import * as React from 'react';\r\nimport { View, TouchableHighlight, Image } from '../common/elements';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home/home';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport MyDues from './my-dues';\r\nimport History from './history';\r\nimport Images from '../images';\r\nimport CustomList from './custom-list';\r\nimport { styles as cardStyles } from '../../styles/card';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  home: IHome\r\n  onPaymentUpload: (file: any, homeId: string, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  activeTab: number\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        {/*<View style={{flex: 1, flexDirection: 'row', marginTop: 1, marginBottom: 2}}>\r\n          <Text style={{flex: 1, justifyContent: 'flex-start', padding: 5}}>{new Date().toLocaleDateString()}</Text>\r\n          <Text style={{flex: 1, justifyContent: 'flex-end', alignItems:'flex-end', textAlign: \"right\", padding: 5}}>{new Date().toLocaleTimeString()}</Text>\r\n        </View>*/}\r\n        <View className='fl' style={cardStyles.container}>\r\n            <View style={cardStyles.row}>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('members')}>\r\n                  <Image src={Images.members} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  {(this.props.home.members ? this.props.home.members.length + '' : '') + ' MEMBER' + ((this.props.home.members.length === 0 || this.props.home.members.length > 1) ? 'S' : '')}\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('vehicles')}>\r\n                  <Image src={Images.vehicle} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  {(this.props.home.vehicles ?  this.props.home.vehicles.length + '' : '') + ' VEHICLE' + ((this.props.home.vehicles.length === 0 || this.props.home.vehicles.length > 1) ? 'S' : '')}\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('servents')}>\r\n                  <Image src={Images.servent} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                  {(this.props.home.servents ? this.props.home.servents.length + '' : '') + ' SERVANT' + ((this.props.home.servents.length === 0 || this.props.home.servents.length > 1) ? 'S' : '')}\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('tickets')}>\r\n                  <Image src={Images.support} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.tickets ? this.props.home.tickets.length + '' : '') + ' TICKET' + ((this.props.home.tickets.length === 0 || this.props.home.tickets.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>TICKET(S)</View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('visitors')}>\r\n                  <Image src={Images.visitors} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.visitors ? this.props.home.visitors.length + '' : '') + ' VISITOR' + ((this.props.home.visitors.length === 0 || this.props.home.visitors.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>VISITOR(S)</View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab}: styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              MY DUES\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>\r\n              ADVANCE\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              HISTORY\r\n            </TouchableHighlight>\r\n            {/* <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.activeTab)} onClick={() => this.setState({activeTab: 4})}>\r\n              DEPOSITS\r\n            </TouchableHighlight> */}\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n          {this.state.activeTab === 1 ?\r\n              <MyDues history={this.props.history} user={this.props.user} home={this.props.home} onPaymentUpload={this.props.onPaymentUpload} onPaymentUpdate={this.props.onPaymentUpdate} />\r\n            :\r\n            this.state.activeTab === 2 ?\r\n              <CustomList data={[]} message=\"No advance found!\" />\r\n              :\r\n              this.state.activeTab === 3 ?\r\n              <History history={this.props.history} home={this.props.home} />\r\n              :\r\n              this.state.activeTab === 4 ?\r\n              <CustomList data={[]} message=\"Work in progress\" />\r\n              :\r\n              []\r\n            }\r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%',\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Image } from '../../common/elements';\r\nimport Images from '../../images';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles as cardStyles } from '../../../styles/card';\r\nimport { ROLE } from '../../../constants';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { ITickets } from '../../../models/store/tickets';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  tickets: ITickets\r\n  blocks: IBlocks\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View className='fl' style={cardStyles.container}>\r\n            <View style={cardStyles.row}>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('tickets')}>\r\n                  <Image src={Images.support} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {/* {this.props.tickets.isUpToDate ?\r\n                    ((!this.props.tickets.isError) ? this.props.tickets.data.length : 0) + \" TICKET\" + ((this.props.tickets.isError || this.props.tickets.data.length === 0 || this.props.tickets.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    } */}\r\n                    TICKET\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('ads')}>\r\n                  <Image src={Images.addvertise} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {/* {this.props.ads.isUpToDate ?\r\n                    ((!this.props.ads.isError) ? this.props.ads.data.length : 0) + \" AD\" + ((this.props.ads.isError || this.props.ads.data.length === 0 || this.props.ads.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    } */}\r\n                    ADS\r\n                  </View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('notification')}>\r\n                  <Image src={Images.reminder} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>NOTIFICATION</View>\r\n                </View>\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('users')}>\r\n                  <Image src={Images.users} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.users.isUpToDate ?\r\n                    ((!this.props.users.isError) ? this.props.users.data.length : 0) + \" USER\" + ((this.props.users.isError || this.props.users.data.length === 0 || this.props.users.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('homes')}>\r\n                  <Image src={Images.homes} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.homes.isUpToDate ?\r\n                    ((!this.props.homes.isError) ? this.props.homes.data.length : 0) + \" HOME\" + ((this.props.homes.isError || this.props.homes.data.length === 0 || this.props.homes.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                {this.props.appUser.role === ROLE.ADMIN &&\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('blocks')}>\r\n                  <Image src={Images.blocks} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>\r\n                    {this.props.blocks.isUpToDate ?\r\n                    ((!this.props.blocks.isError) ? this.props.blocks.data.length : 0) + \" BLOCK\" + ((this.props.blocks.isError || this.props.blocks.data.length === 0 || this.props.blocks.data.length > 1) ? \"S\" : \"\")\r\n                    :\r\n                    \"Loading\"\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('all-visitors')}>\r\n                  <Image src={Images.visitors} style={cardStyles.img} />\r\n                  {/* <Text style={cardStyles.txt}>\r\n                  {(this.props.home.visitors ? this.props.home.visitors.length + '' : '') + ' VISITOR' + ((this.props.home.visitors.length === 0 || this.props.home.visitors.length > 1) ? 'S' : '')}\r\n                  </Text> */}\r\n                  <View className='pointer' style={cardStyles.txt}>VISITOR(S)</View>\r\n                </View>\r\n                <View className='fl pointer' style={{...cardStyles.inner, textAlign: 'center'}} onClick={() => this.props.history.push('payment')}>\r\n                  <Image src={Images.money} style={cardStyles.img} />\r\n                  <View className='pointer' style={cardStyles.txt}>PAYMENT</View>\r\n                </View>\r\n            </View>\r\n        </View>     \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%',\r\n  }\r\n};","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  key: string,\r\n  onPress: () => void\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class RadioButton extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    isActive: false,\r\n    text: '',\r\n    key: '',\r\n    onPress: () => {}\r\n  }\r\n  render() {\r\n    return (\r\n      <span style={styles.container}>\r\n        <input type='radio' key={this.props.key} checked={this.props.isActive} onClick={this.props.onPress} />\r\n        {\r\n          isNN(this.props.text) &&\r\n          <label style={styles.text}>{this.props.text}</label>\r\n        }\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    // flexDirection: 'row',\r\n    marginRight: 10\r\n  },\r\n  circle: {\r\n    height: 24,\r\n    width: 24,\r\n    borderRadius: 12,\r\n    borderWidth: 2,\r\n    borderColor: COLOR.PRIMARY,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  dot: {\r\n    height: 12,\r\n    width: 12,\r\n    borderRadius: 6,\r\n    backgroundColor: COLOR.PRIMARY\r\n  },\r\n  text: {\r\n    marginLeft: 5\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    container: {\r\n    },\r\n    head: {\r\n      flexDirection: 'row',\r\n      alignContent: 'flex-start',\r\n      backgroundColor: COLOR.PRIMARY,\r\n      paddingLeft: 10,\r\n      paddingRight: 10,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    title: {\r\n      flex: 15,\r\n      alignSelf: 'flex-start',\r\n      width: 'auto',\r\n      'font-weight': 'bold',\r\n      fontSize: 20,\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    close: {\r\n      flex: 1,\r\n      alignSelf: 'flex-end',\r\n      marginBottom: 5\r\n    },\r\n    row: {\r\n      // flexDirection: 'row',\r\n      marginTop: 3,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    },\r\n    ele: {\r\n      flex: 1,\r\n      width: '100%'\r\n    },\r\n    radio: {\r\n      borderColor: COLOR.HR_COLOR,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioText: {\r\n      // 'font-weight': 'bold',\r\n      // color: COLOR.HR_COLOR\r\n    },\r\n    radioActive: {\r\n      backgroundColor: COLOR.PRIMARY,\r\n      borderColor: COLOR.PRIMARY,\r\n      borderWidth: 1,\r\n      paddingTop: 3,\r\n      paddingBottom: 3,\r\n      paddingLeft: 5,\r\n      paddingRight: 5,\r\n      display: 'inline'\r\n    },\r\n    radioActiveText: {\r\n      // 'font-weight': 'bold',\r\n      color: COLOR.FONT_COLOR3\r\n    },\r\n    saveBtn: {\r\n      marginTop: 5,\r\n      marginBottom: 3,\r\n      paddingTop: 5,\r\n      paddingBottom: 5\r\n    }\r\n  };","import * as React from 'react';\r\nimport { View, ScrollView, TextInput, Text } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN, generateUUID } from '../../../util/index';\r\nimport { COLOR } from '../../../constants';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHome, IVisitor } from '../../../models/home';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  homeId: string,\r\n  id: string,\r\n  type: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  fileName: string,\r\n  showHomes: boolean,\r\n  homeSearchText: string\r\n};\r\n\r\nexport default class NewVisitor extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      homeId: '',\r\n      id: '',\r\n      type: 'VISITOR',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      fileName: '',\r\n      showHomes: false,\r\n      homeSearchText: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onImageSelect = this.onImageSelect.bind(this);\r\n  };\r\n  \r\n  onImageSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        this.setState({\r\n          fileName: fileName\r\n        });\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        this.props.onUpload(data, (result: boolean, message: string) => {\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSave = () => {\r\n    let name = this.state.name;\r\n    if(isNN(name)){\r\n      name += ' (' + this.state.type + ')';\r\n    }else{\r\n      name = this.state.type;\r\n    }\r\n    if(this.state.showHomes === false && this.state.homeId.length > 0 && isNN(name) && isNN(this.state.fileName)){\r\n      // this.props.onToggleLoading(true);\r\n      let visitor = {\r\n        _id: '',\r\n        name: name,\r\n        age: this.state.age,\r\n        gender: this.state.gender,\r\n        mobileNo: this.state.mobileNo,\r\n        emailId: '',\r\n        image: this.state.fileName,\r\n      } as IVisitor;\r\n      this.props.onSave(this.state.homeId, visitor, this.props.user, this.props.appUser, (result: boolean) => {          \r\n        // this.props.onToggleLoading(false);\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          // Toast.success('Visitor ' + name + ' saved successfully.');\r\n        }else{\r\n          Toast.fail('Failed to save visitor ' + name + '.');\r\n        }\r\n      });\r\n      this.setState({\r\n        homeId: '',\r\n        id: '',\r\n        type: 'VISITOR',\r\n        name: '',\r\n        age: 0,\r\n        gender: '',\r\n        mobileNo: '',\r\n        fileName: '',\r\n        showHomes: false,\r\n        homeSearchText: ''\r\n      });\r\n      Toast.info('Visitor will be saved and notified to the home.');\r\n    }else{\r\n      Toast.warn('Please fill Home and Image before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({ \r\n      homeId: '',\r\n      id: '',\r\n      type: 'VISITOR',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      fileName: '',\r\n      showHomes: false,\r\n      homeSearchText: ''\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          <View style={modelStyles.row}>\r\n            <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n              <Text className='fr pointer' onClick={() => this.props.history.push('all-visitors')} style={{...styles.ele, color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right'}}>View all Active Visitors</Text>\r\n            </View>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder='Enter Home Number' className='form-control'\r\n          style={{...modelStyles.ele, ...styles.ele,\r\n            flexDirection: 'row',\r\n            padding: 12,\r\n            borderWidth: 1,\r\n            borderColor: COLOR.HR_COLOR,\r\n            borderRadius: 5\r\n          }} \r\n          value={this.state.homeSearchText} \r\n          onChange={(event: any) => this.setState({showHomes: true, homeSearchText: event.target.value})} />\r\n          </View>\r\n          {\r\n            (this.state.showHomes && isNN(this.state.homeSearchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n              {\r\n                this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.homeSearchText.toLowerCase()) >= 0).map((d: IHome, i: number) => {\r\n                  return(\r\n                    <Text \r\n                    className='pointer'\r\n                    key={'ho' + i}\r\n                    style={{...styles.ele, flexDirection: 'column', margin: 3, padding: 6, backgroundColor: COLOR.CARD_UNDERLAY}}\r\n                    onClick={() => {\r\n                      this.setState({homeSearchText: d.number, homeId: d._id, showHomes: false});\r\n                    }}>{d.number}</Text>\r\n                  )\r\n                })\r\n              }\r\n            </ScrollView>\r\n          }\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'VISITOR'} text='Visitor' onPress={() => this.setState({type: 'VISITOR'})} />\r\n            <RadioButton isActive={this.state.type === 'FOOD'} text='Food' onPress={() => this.setState({type: 'FOOD'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={3} style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...styles.ele, ...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>    \r\n          <View style={modelStyles.row}>\r\n              <input type='file' name='image' placeholder='SELECT IMAGE' onChange={this.onImageSelect}/>\r\n              {isNN(this.state.fileName) &&\r\n              <Text style={{...styles.ele, marginLeft: 15}}>{this.state.fileName}</Text>\r\n              }\r\n          </View>\r\n          <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              style={{...styles.ele, marginRight: 10}}\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={this.onClear}\r\n              style={styles.ele}\r\n              />\r\n          </View>\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  },\r\n  ele: {\r\n    fontSize: 17\r\n  }\r\n};","import * as React from 'react';\r\nimport Spinner from '../../common/spinner';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home';\r\nimport NewVisitor from './new-visitor';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Home extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <NewVisitor history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} onToggleLoading={(isLoading) => this.setState({ isLoading: isLoading })} onSave={this.props.onSaveVisitor} onUpload={this.props.onUpload} />\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  }\r\n};\r\n","import * as React from 'react';\r\nimport { Text } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { ITransaction } from '../../models/home/transaction';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { IVisitor } from '../../models/home';\r\nimport Home from './home';\r\nimport AMHome from './manager/home';\r\nimport GKHome from './gatekeeper/home';\r\nimport { ROLE } from '../../constants/index';\r\nimport { isNN } from '../../util';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  outings: IOutings,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  tickets: ITickets,\r\n  blocks: IBlocks,\r\n  onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => void,\r\n  onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => void,\r\n  onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n};\r\n\r\nexport default class Dashboard extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    if(this.props.appUser.role === ROLE.USER) {\r\n      if(this.props.appUser.homeIndex >= 0 && isNN(this.props.user.homes)) {\r\n        return(<Home history={this.props.history} user={this.props.user} home={this.props.user.homes[this.props.appUser.homeIndex]} onPaymentUpload={(file: any, homeId: string, callback: (result: boolean) => void) => this.props.onPaymentUpload(file, homeId, this.props.user, callback)} onPaymentUpdate={(paymentId: string, transaction: ITransaction, callback: (result: boolean) => void) => this.props.onPaymentUpdate(paymentId, transaction, this.props.appUser.homeIndex, this.props.user, callback)} />);\r\n      }else{\r\n        return(<Text style={{margin: 20}}>No home assigned to you. Please contact administrator/manager.</Text>);\r\n      }\r\n    }\r\n    else if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      return(<AMHome history={this.props.history} appUser={this.props.appUser} user={this.props.user} ads={this.props.ads} users={this.props.users} homes={this.props.homes} tickets={this.props.tickets} blocks={this.props.blocks} />);\r\n    }\r\n    else if(this.props.appUser.role === ROLE.GATEKEEPER) {\r\n      return(<GKHome history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} onSaveVisitor={this.props.onSaveVisitor} onUpload={this.props.onUpload} />);\r\n    }else{\r\n      return(<Text style={{margin: 20}}>No role assigned to you. Please contact administrator/manager.</Text>);\r\n    }\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { ITransaction } from '../models/home/transaction';\r\nimport { IVisitor } from '../models/home';\r\nimport { upload, update } from '../store/actions/payment';\r\nimport { save as saveVisitor } from '../store/actions/visitor';\r\nimport { upload as fileUpload } from '../store/actions/file';\r\nimport Page from '../components/home/dashboard';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    outings: state.Outings,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    tickets: state.Tickets,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onPaymentUpload: (file: any, homeId: string, user: IUser, callback: (result: boolean) => void) => dispatch(upload(file, homeId, user, callback)),\r\n    onPaymentUpdate: (paymentId: string, transaction: ITransaction, homeIndex: number, user: IUser, callback: (result: boolean) => void) => dispatch(update(paymentId, transaction, homeIndex, user, callback)),\r\n    onSaveVisitor: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => dispatch(saveVisitor(homeId, data, user, appUser, scallback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(fileUpload(data, callback))\r\n});\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IMember } from '../../models/home/member';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n////import { number } from 'prop-types';\r\n////import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'member';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's', (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNNObject(result.data.member) && isNN(result.data.member._id)) {\r\n      sCallback(result.data.member, result.data.homeIds ? result.data.homeIds : []);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Member.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IMember, user: IUser, homeIndex: number, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        let members = user.homes[homeIndex].members;\r\n        var foundIndex = members.findIndex(d => d._id === result.data);\r\n        members[foundIndex]._id = result.data;\r\n        members[foundIndex].number = data.number;\r\n        members[foundIndex].name = data.name;\r\n        members[foundIndex].age = data.age;\r\n        members[foundIndex].gender = data.gender;\r\n        members[foundIndex].mobileNo = data.mobileNo;\r\n        members[foundIndex].emailId = data.emailId;\r\n        members[foundIndex].type = data.type;\r\n        \r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        let members = user.homes[homeIndex].members;\r\n        members.push(data);\r\n        user.homes[homeIndex].members = members;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const saveByAM = (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, callback: (result: boolean, message: string) => void) => (dispatch: any) => {\r\n  data = Object.assign(data, {\r\n    isAM: true,\r\n    homeIds: homeIds\r\n  });\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          var foundIndex = users.data.findIndex(d => d._id === result.data);\r\n          users.data[foundIndex]._id = result.data;\r\n          users.data[foundIndex].name = data.name;\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{// add\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      {\r\n        if(users.isUpToDate && !users.isError && isNN(users.data)){\r\n          users.data.push({\r\n              _id: result.data,\r\n              name: data.name\r\n            } as IMember);\r\n          dispatch(getUsersResult(users.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const removeByAM = (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      user.homes[homeIndex].members = user.homes[homeIndex].members.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      if(users && users.isUpToDate === true && users.isError === false && isNN(users.data)){\r\n        users.data = users.data.filter((d, i) => d._id !== id);\r\n        dispatch(getUsersResult(users.data as Array<IMember>, true, false, ''));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\nconst getUsersResult = (data: Array<IMember>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_USERS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IUsers\r\n});","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n    content: {\r\n      backgroundColor: COLOR.INVERSE\r\n    },\r\n    row: {\r\n      // flexDirection: 'column',\r\n      alignItems: 'flex-start',\r\n      // backgroundColor: COLOR.INVERSE,\r\n      borderBottomColor: COLOR.HR_COLOR,\r\n      borderBottomWidth: 1,\r\n      'border-bottom-style': 'solid',\r\n      marginTop: 5,\r\n      // marginBottom: 10,\r\n      // paddingLeft: 10,\r\n      // paddingRight: 10,\r\n      // borderRadius: 10\r\n    },\r\n    ele: {\r\n      // flexDirection: 'row',\r\n      alignItems: 'flex-start',\r\n      marginTop: 1,\r\n      marginBottom: 3,\r\n      padding: 2\r\n    }\r\n  };","export const styles = {   \r\n  addIcon: {\r\n    width: 20,\r\n    height: 20,\r\n    cursor: 'pointer'\r\n  },  \r\n  editIcon: {\r\n      width: 20,\r\n      height: 20,\r\n      cursor: 'pointer'\r\n    }, \r\n    deleteIcon: {\r\n      width: 18,\r\n      height: 20,\r\n      cursor: 'pointer'\r\n    },\r\n    closeIcon: {\r\n      width: 17,\r\n      height: 17,\r\n      cursor: 'pointer'\r\n    },\r\n    datePicker: {\r\n      width: 20,\r\n      height: 23,\r\n      cursor: 'pointer'\r\n    }\r\n  };\r\n  ","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport RadioButton from '../common/radio-button';\r\nimport { IUsers } from '../../models/store/users';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IMember } from '../../models/home/member';\r\nimport { styles } from '../../styles/page';\r\nimport { styles as iconStyles } from '../../styles/icon';\r\nimport { styles as modelStyles } from '../../styles/model';\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => void,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class Members extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSave(member, this.props.user, this.props.homeIndex, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n            Toast.success('Member saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n          }\r\n        });\r\n    }else{\r\n      // Toast.warn('Please fill all the required fields before '+ (this.state.id > 0 ? 'Update' : 'Save') + '.');\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.homeIndex, this.props.user, this.props.users, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Member removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove member.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-member')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n      {isNN(this.props.user.homes[this.props.homeIndex].members) ?\r\n        this.props.user.homes[this.props.homeIndex].members.map((d: IMember, i: number) => {\r\n          return(\r\n            (this.state.isEdit === true && this.state.id === d._id) ?\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n                <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n                <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                  <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: false,\r\n                    id: '',\r\n                    number: '',\r\n                    name: '',\r\n                    age: 0,\r\n                    gender: '',\r\n                    mobileNo: '',\r\n                    emailId: '',\r\n                    type: 'OWNER',\r\n                    role: 'USER'\r\n                  });\r\n                }}>\r\n                  <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n            :\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                <Text>{d.name}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n              </View>\r\n              {isNN(d.mobileNo) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.emailId) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.emailId}</Text>\r\n              </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                <Text>{d.type}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d._id,\r\n                    number: d.number,\r\n                    name: d.name,\r\n                    age: d.age,\r\n                    gender: d.gender,\r\n                    mobileNo: d.mobileNo,\r\n                    emailId: d.emailId,\r\n                    type: d.type,\r\n                    role: d.role\r\n                  });\r\n                }}>\r\n                  <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Member found!!!</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUsers } from '../models/store/users';\r\nimport { IUser } from '../models/user/user';\r\nimport { IMember } from '../models/home';\r\nimport { save, remove } from '../store/actions/member';\r\nimport Page from '../components/home/members';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    users: state.Users,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, scallback)),\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, scallback: (result: boolean) => void) => dispatch(remove(id, homeIndex, user, users, scallback))\r\n});\r\n\r\nexport const Members = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Spinner from '../common/spinner';\r\n// import { CheckBox  } from 'react-native-elements';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IMember } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  role: string\r\n};\r\n\r\nexport default class NewMember extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      role: 'USER'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: this.state.role\r\n        } as IMember;\r\n        this.props.onSave(member, this.props.user, this.props.homeIndex, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              role: 'USER'\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Member saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save member.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IMember } from '../models/home';\r\nimport { save } from '../store/actions/member';\r\nimport Page from '../components/home/new-member';\r\n////import { number } from 'prop-types';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IMember, user: IUser, homeIndex: number, scallback: (result: boolean, message: string) => void) => dispatch(save(data, user, homeIndex, scallback))\r\n});\r\n\r\nexport const NewMember = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'vehicle';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IVehicle, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let vehicles = user.homes[homeIndex].vehicles;\r\n        var foundIndex = vehicles.findIndex(d => d._id === result.data);\r\n        vehicles[foundIndex]._id = result.data;\r\n        vehicles[foundIndex].number = data.number;\r\n        vehicles[foundIndex].type = data.type;\r\n        user.homes[homeIndex].vehicles = vehicles;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n  new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      data._id = result.data;\r\n      data.createdBy = user.name;\r\n      let vehicles = user.homes[homeIndex].vehicles;\r\n      vehicles.push(data);\r\n      user.homes[homeIndex].vehicles = vehicles;\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].vehicles = user.homes[homeIndex].vehicles.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Text, Image, TextInput, } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home/vehicle';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN } from '../../util/index';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string, \r\n  number: string, \r\n  type: string\r\n};\r\n\r\nexport default class Vehicles extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '', \r\n      number: '', \r\n      type: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.number) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let vehicle = {\r\n          _id: this.state.id,\r\n          number: this.state.number,\r\n          type: this.state.type\r\n        } as IVehicle;\r\n        this.props.onSave(vehicle, this.props.user, this.props.homeIndex, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              number: '',\r\n              type: ''\r\n            });\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Vehicle removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove vehicle.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-vehicle')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n        {isNN(this.props.user.homes[this.props.homeIndex].vehicles) ?\r\n          this.props.user.homes[this.props.homeIndex].vehicles.map((d: IVehicle, i: number) => {\r\n            return(\r\n              (this.state.isEdit === true && this.state.id === d._id) ?\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <RadioButton isActive={this.state.type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => this.setState({type: 'TWO WHEELER'})} />\r\n                  <RadioButton isActive={this.state.type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => this.setState({type: 'FOUR WHEELER'})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      number: '', \r\n                      type: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>                  \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.number}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      number: d.number,\r\n                      type: d.type\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No Vehicle found!!!</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVehicle } from '../models/home';\r\nimport { save, remove } from '../store/actions/vehicle';\r\nimport Page from '../components/home/vehicles';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, scallback))\r\n});\r\n\r\nexport const Vehicles = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVehicle } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string, \r\n  number: string, \r\n  type: string\r\n};\r\n\r\nexport default class NewVehicle extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '', \r\n      number: '', \r\n      type: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.number) && isNN(this.state.type)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let vehicle = {\r\n          _id: this.state.id,\r\n          number: this.state.number,\r\n          type: this.state.type\r\n        } as IVehicle;\r\n        this.props.onSave(vehicle, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              type: ''\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Vehicle saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save vehicle.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <View style={modelStyles.container}>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'TWO WHEELER'} text='Two Wheeler' onPress={() => this.setState({type: 'TWO WHEELER'})} />\r\n            <RadioButton isActive={this.state.type === 'FOUR WHEELER'} text='Four Wheeler' onPress={() => this.setState({type: 'FOUR WHEELER'})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVehicle } from '../models/home';\r\nimport { save } from '../store/actions/vehicle';\r\nimport Page from '../components/home/new-vehicle';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IVehicle, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback))\r\n});\r\n\r\nexport const NewVehicle = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IServent } from '../../models/home/servent';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'servent';\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Members.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IServent, user: IUser, homeIndex:number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        let servents = user.homes[homeIndex].servents;\r\n        var foundIndex = servents.findIndex(d => d._id === result.data);\r\n        servents[foundIndex]._id = result.data;\r\n        servents[foundIndex].name = data.name;\r\n        servents[foundIndex].age = data.age;\r\n        servents[foundIndex].gender = data.gender;\r\n        servents[foundIndex].mobileNo = data.mobileNo;\r\n        servents[foundIndex].emailId = data.emailId;\r\n           \r\n        user.homes[homeIndex].servents = servents;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{ // add\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        let servents = user.homes[homeIndex].servents;\r\n        servents.push(data);\r\n        user.homes[homeIndex].servents = servents;\r\n        dispatch(getUserResult(user as IUser));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes[homeIndex].servents = user.homes[homeIndex].servents.filter((d, i) => d._id !== id);\r\n      dispatch(getUserResult(user as IUser));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Text, Image, TextInput } from '../common/elements';\r\nimport RadioButton from '../common/radio-button';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServent } from '../../models/home/servent';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN } from '../../util/index';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class Servents extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let servent = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : ''\r\n        } as IServent;\r\n        this.props.onSave(servent, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: ''\r\n            });\r\n            Toast.success('Servent saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servent.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Servent removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove servent.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-servent')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n        {isNN(this.props.user.homes[this.props.homeIndex].servents) ?\r\n          this.props.user.homes[this.props.homeIndex].servents.map((d: IServent, i: number) => {\r\n            return(\r\n              (this.state.isEdit === true && this.state.id === d._id) ?\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n                  <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      name: '',\r\n                      age: 0,\r\n                      gender: '',\r\n                      mobileNo: '',\r\n                      emailId: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>          \r\n                </View>\r\n              </View>\r\n              :\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      name: d.name,\r\n                      age: d.age,\r\n                      gender: d.gender,\r\n                      mobileNo: d.mobileNo,\r\n                      emailId: d.emailId\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No Servent found!!!</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IServent } from '../models/home';\r\nimport { save, remove } from '../store/actions/servent';\r\nimport Page from '../components/home/servents';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, scallback))\r\n});\r\n\r\nexport const Servents = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Spinner from '../common/spinner';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IServent } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  homeIndex: number,\r\n  onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class NewServent extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let servent = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : ''\r\n        } as IServent;\r\n        this.props.onSave(servent, this.props.user, this.props.homeIndex, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: ''\r\n            });\r\n            // this.props..navigation.goBack(null)\r\n            Toast.success('Servent saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save servent.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={3} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IServent } from '../models/home';\r\nimport { save } from '../store/actions/servent';\r\nimport Page from '../components/home/new-servent';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    homeIndex: state.AppUser.homeIndex\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IServent, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, scallback))\r\n});\r\n\r\nexport const NewServent = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport Api from '../api/api';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\nimport { ROLE } from '../../constants/index';\r\n\r\nlet controller: string = 'ticket';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getTicketsResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result)) {\r\n      dispatch(getTicketsResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Tickets.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && data._id && data._id.length > 0){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n            arrTickets[foundIndex]._id = result.data;\r\n            arrTickets[foundIndex].title = data.title;\r\n            arrTickets[foundIndex].description = data.description;\r\n            arrTickets[foundIndex].status = data.status;\r\n            arrTickets[foundIndex].updatedBy = user.name;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === result.data);\r\n          arrTickets[foundIndex]._id = result.data;\r\n          arrTickets[foundIndex].title = data.title;\r\n          arrTickets[foundIndex].description = data.description;\r\n          arrTickets[foundIndex].status = data.status;\r\n          arrTickets[foundIndex].updatedBy = user.name;\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + user.homes[homeIndex]._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              _homeId: user.homes[homeIndex].number,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        // }\r\n        /*\r\n        if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n          let arrTickets = user.homes[homeIndex].tickets;\r\n            arrTickets.unshift({\r\n              _id: result.data,\r\n              title: data.title,\r\n              description: data.description,\r\n              status: data.status,\r\n              createdBy: user.name,\r\n              updatedBy: '',\r\n              createdAt: new Date(),\r\n              comments: []\r\n            } as ITicket);\r\n          user.homes[homeIndex].tickets = arrTickets;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const resolve = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/resolve/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          tickets.data = tickets.data.filter((d, i) => d._id !== id);\r\n          dispatch(getTicketsResult(tickets.data, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        user.homes[homeIndex].tickets = user.homes[homeIndex].tickets.filter((d, i) => d._id !== id);\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const start = (id: string, user: IUser, homeIndex: number, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  let newStatus = 'IN-PROGRESS';\r\n  new Api().put(controller + '/start/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      // if(((',' + user.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        if(isNN(tickets.data)) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          arrTickets = tickets.data;\r\n          var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n          arrTickets[foundIndex].status = newStatus;\r\n          dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n        }\r\n      /*\r\n      }\r\n      if((',' + user.role + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        let arrTickets = user.homes[homeIndex].tickets;\r\n        var foundIndex = arrTickets.findIndex(d => d._id === id);\r\n        arrTickets[foundIndex].status = newStatus;\r\n        user.homes[homeIndex].tickets = arrTickets;\r\n        dispatch(getUserResult(user as IUser));\r\n      }\r\n      */\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  },{\r\n    status: newStatus\r\n  });\r\n};\r\n\r\nexport const addComment = (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(isNN(comment._id)){\r\n    new Api().put(controller + '/comment/' + comment._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n        // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n            var commentIndex = arrTickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n            // arrTickets[ticketIndex].comments[commentIndex] = result.data;\r\n            arrTickets[ticketIndex].comments[commentIndex] = comment;\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n          var commentIndex = user.homes[appUser.homeIndex].tickets[ticketIndex].comments.findIndex(d => d._id === comment._id);\r\n          user.homes[appUser.homeIndex].tickets[ticketIndex].comments[commentIndex] = comment;\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }else{\r\n    new Api().post(controller + '/comment/' + ticketId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        comment._id = result.data;\r\n        comment.createdAt = new Date();\r\n        // if(((',' + user.type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0 || (',' + user.type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          // if((appUser.role === ROLE.ADMIN || appUser.role === ROLE.MANAGER) && isNNObject(tickets) && tickets.isUpToDate && !tickets.isError) {\r\n          let arrTickets = [] as Array<ITicket>;\r\n          if(isNN(tickets.data)) {\r\n            arrTickets = tickets.data;\r\n            var ticketIndex = arrTickets.findIndex(d => d._id === ticketId);\r\n              // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n              //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n              // }\r\n              arrTickets[ticketIndex].comments.unshift(comment);\r\n            dispatch(getTicketsResult(arrTickets, true, false, ''));\r\n          }\r\n        /*\r\n        }\r\n        // if((',' + user.type + ',').indexOf(',' + ROLE.USER + ',') >= 0) {\r\n        else if(appUser.role === ROLE.USER) {\r\n          var ticketIndex = user.homes[appUser.homeIndex].tickets.findIndex(d => d._id === ticketId);\r\n            // if(!isNN(user.home[homeIndex].ticket[ticketIndex].ticketComment)){\r\n            //   user.home[homeIndex].ticket[ticketIndex].ticketComment = [];\r\n            // }\r\n            user.homes[appUser.homeIndex].tickets[ticketIndex].comments.unshift(comment);\r\n          dispatch(getUserResult(user as IUser));\r\n        }\r\n        */\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, comment);\r\n  }\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n\r\nconst getTicketsResult = (data: Array<ITicket>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_TICKETS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as ITickets\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home/ticket';\r\nimport { ITicketComment } from '../../models/home/ticket-comment';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateString } from '../../util/convert';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n  onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  data: Array<ITicket>,\r\n  isEdit: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string,\r\n  status: string,\r\n  viewId: string,\r\n  comments: Array<ITicketComment>,\r\n  comment: string\r\n};\r\n\r\nexport default class Tickets extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      data: [],\r\n      isEdit: false,\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      status: 'INIT',\r\n      viewId: '',\r\n      comments: [],\r\n      comment: ''\r\n    }\r\n    // this.getTickets = this.getTickets.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onResolve = this.onResolve.bind(this);\r\n    this.onStart = this.onStart.bind(this);\r\n    this.onView = this.onView.bind(this);\r\n    this.onAddComment = this.onAddComment.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) ? '' : this.props.user.homes[this.props.appUser.homeIndex]._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        // data: this.getTickets()\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Tickets.');\r\n      }\r\n    });\r\n    /*\r\n    if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoadAll(this.props.user.client._id, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          data: this.getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoadAllByHome(this.props.user, this.props.appUser.homeIndex, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          data: this.getTickets()\r\n        });\r\n        if(!result){\r\n          Toast.fail('Failed to load Tickets.');\r\n        }\r\n      });\r\n    }\r\n    */\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  /*\r\n  getTickets = () => {\r\n    if(this.props.appUser.role === ROLE.USER) {\r\n      return isNN(this.props.user.homes[this.props.appUser.homeIndex].tickets) ? this.props.user.homes[this.props.appUser.homeIndex].tickets : [];\r\n    }else if(this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) {\r\n      return (this.props.tickets.isUpToDate && !this.props.tickets.isError && isNN(this.props.tickets.data)) ? this.props.tickets.data : [];\r\n    }else{\r\n      return [];\r\n    }\r\n  };\r\n  */\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ticket = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          status: this.state.status\r\n        } as ITicket;\r\n        this.props.onSave(ticket, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              title: '',\r\n              description: '',\r\n              status: 'INIT',\r\n              viewId: '',\r\n              comments: [],\r\n              comment: ''\r\n            });\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onResolve = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to resolve ticket',\r\n      message: 'Are you sure you wish to resolve this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onResolve(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket resolved successfully.');\r\n              }else{\r\n                Toast.fail('Failed to resolve ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onStart = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to start ticket',\r\n      message: 'Are you sure you wish to start this ticket?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onStart(id, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n                viewId: '',\r\n                comments: [],\r\n                comment: ''\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ticket started successfully.');\r\n              }else{\r\n                Toast.fail('Failed to start ticket.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        comments: [],\r\n        comment: ''\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        comments: comments,\r\n        comment: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  onAddComment = (id: string) => {\r\n    if(isNN(this.state.comment)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onAddComment(id, {\r\n        _id: '',\r\n        // ticketId: id, \r\n        comment: this.state.comment,\r\n        createdBy: this.props.user.name,\r\n        createdAt: new Date()\r\n      } as ITicketComment, this.props.appUser, this.props.user, this.props.tickets, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          this.setState({\r\n            comment: ''\r\n          });\r\n          Toast.success('Comment added successfully.');\r\n        }else{\r\n          Toast.fail('Failed to add comment.');\r\n        }\r\n      });\r\n  }else{\r\n    Toast.warn('Please fill comment before Add.');\r\n  }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        {\r\n          this.props.appUser.role === ROLE.USER &&\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('new-ticket')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n        }\r\n        {(isNNObject(this.props.tickets) && this.props.tickets.isUpToDate && !this.props.tickets.isError && isNN(this.props.tickets.data)) ?\r\n        this.props.tickets.data.map((d: ITicket, i: number) => {\r\n            return(\r\n              <View key={'tkt' + i} style={styles.row}>\r\n               <View style={styles.ele}>\r\n                  <Text>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  {(this.state.isEdit && this.state.id === d._id) ?\r\n                    <TextInput type='text' placeholder='Title' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n                    :\r\n                    <Text>{d.title}</Text>\r\n                  }\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  {(this.state.isEdit && this.state.id === d._id) ?\r\n                    <TextArea placeholder='Description' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n                    :\r\n                    <Text>{d.description}</Text>\r\n                  }\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.status}</Text>\r\n                </View>\r\n                {(this.state.isEdit && this.state.id === d._id) ?\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                    <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>                \r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: false,\r\n                      id: '',\r\n                      title: '',\r\n                      description: '',\r\n                      status: 'INIT',\r\n                      viewId: '',\r\n                      comments: [],\r\n                      comment: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>      \r\n                </View>\r\n                :\r\n                <View style={styles.ele}>\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.setState({\r\n                      isEdit: true,\r\n                      id: d._id,\r\n                      title: d.title,\r\n                      description: d.description,\r\n                      status: 'INIT',\r\n                      viewId: '',\r\n                      comments: [],\r\n                      comment: ''\r\n                    });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                }\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.onRemove(d._id);\r\n                  }}>\r\n                    <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                }\r\n                {this.props.appUser.role === ROLE.USER &&\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.onResolve(d._id);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>RESOLVE</Text>\r\n                  </TouchableHighlight>\r\n                }\r\n                {((this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) && d.status === 'INIT') &&\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.onStart(d._id);\r\n                }}>\r\n                  <Text className='pointer' style={{color: COLOR.SECONDARY}}>START</Text>\r\n                </TouchableHighlight>\r\n                }\r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onView(d._id, d.comments);\r\n                }}>\r\n                  <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n                </TouchableHighlight>\r\n                </View>\r\n                }\r\n                {this.state.viewId === d._id &&\r\n                <View style={myStyles.cmntsCnr}>\r\n                  <View style={myStyles.cmntsHdr}>\r\n                    <Text style={myStyles.cmntsHdrTxt}>Comments</Text>\r\n                  </View>\r\n                  <View style={myStyles.cmntsCnt}>\r\n                    {isNN(this.state.comments) ?\r\n                      this.state.comments.map((e, j) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? myStyles.cmntCnrFst : myStyles.cmntCnr}>\r\n                          <View style={myStyles.cmntHdr}>\r\n                            <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{e.comment}</Text>\r\n                          </View>\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No Comments found!!!</Text>\r\n                    }\r\n                    <View style={myStyles.addCmntCnt}>\r\n                      <TextArea placeholder='Comment Text' className='form-control' style={{...CommonStyles.textInput, ...myStyles.newCmnt}} value={this.state.comment} onChange={(event: any) => this.setState({comment: event.target.value})} />\r\n                      <View style={myStyles.saveBtn}>\r\n                        <Button\r\n                          title='ADD COMMENT'\r\n                          onPress={() => this.onAddComment(d._id)}\r\n                          />\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>{(this.props.tickets.isUpToDate ? (this.props.tickets.isError ? this.props.tickets.errorMessage : \"No Ticket found!!!\") : \"Loading...\")}</Text>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst myStyles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    marginTop: 3,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  },\r\n  addCmntCnt: {\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  newCmnt:{\r\n    width: '100%',\r\n    borderWidth: 1,\r\n    borderColor: COLOR.HR_COLOR\r\n  },\r\n  saveBtn:{\r\n    marginTop: 5\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { ITicketComment } from '../models/home/ticket-comment';\r\nimport { loadAll, save, remove, resolve, start, addComment } from '../store/actions/ticket';\r\nimport Page from '../components/home/tickets';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, homeId, callback)),\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, scallback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, tickets, scallback)),\r\n    onResolve: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(resolve(id, user, homeIndex, tickets, scallback)),\r\n    onStart: (id: string, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(start(id, user, homeIndex, tickets, scallback)),\r\n    onAddComment: (ticketId: string, comment: ITicketComment, appUser: IAppUser, user: IUser, tickets: ITickets, callback: (result: boolean) => void) =>  dispatch(addComment(ticketId, comment, appUser, user, tickets, callback))\r\n});\r\n\r\nexport const Tickets = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, Text, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { ITickets } from '../../models/store/tickets';\r\nimport { ITicket } from '../../models/home';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  tickets: ITickets,\r\n  onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string,\r\n  status: string\r\n};\r\n\r\nexport default class NewTicket extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      title: '',\r\n      description: '',\r\n      status: 'INIT'\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n  \r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ticket = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          status: this.state.status\r\n        } as ITicket;\r\n        this.props.onSave(ticket, this.props.user, this.props.appUser.homeIndex, this.props.tickets, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              title: '',\r\n              description: '',\r\n              status: 'INIT'\r\n            });\r\n            // this.props.navigation.navigation.goBack(null)\r\n            Toast.success('Ticket saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ticket.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Save.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        {this.props.appUser.role === ROLE.USER ?\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n            </View>\r\n            {/* <View style={modelStyles.row}>\r\n              <Text>{this.state.status}</Text>\r\n            </View> */}\r\n            <View className='center' style={modelStyles.saveBtn}>\r\n              <Button\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View style={modelStyles.container}>\r\n            <View style={modelStyles.row}>\r\n              <Text>Only User can Add New Ticket. If you have USER role and you want to add new ticket change your role to User from settings->My Role and try again.</Text>\r\n            </View>\r\n          </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { ITickets } from '../models/store/tickets';\r\nimport { ITicket } from '../models/home';\r\nimport { save } from '../store/actions/ticket';\r\nimport Page from '../components/home/new-ticket';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    tickets: state.Tickets\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: ITicket, user: IUser, homeIndex: number, tickets: ITickets, scallback: (result: boolean) => void) => dispatch(save(data, user, homeIndex, tickets, scallback))\r\n});\r\n\r\nexport const NewTicket = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport RadioButton from '../common/radio-button';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IVisitor } from '../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { isNN } from '../../util/index';\r\nimport { FILE_BASE_PATH } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\nimport { toDateString } from '../../util/convert';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  void,\r\n  onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isLoading: boolean,\r\n  isZoomImage: boolean,\r\n  zoomImage: string,\r\n  isEdit: boolean,\r\n  id: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoading: false,\r\n      isZoomImage: false,\r\n      zoomImage: '',\r\n      isEdit: false,\r\n      id: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onToggleZoomImage = this.onToggleZoomImage.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, this.props.user.homes[this.props.appUser.homeIndex]._id, (result: Array<IVisitor>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n\r\n  onToggleZoomImage = (isZoom: boolean) => {\r\n    this.setState({\r\n      isZoomImage: isZoom\r\n    });\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        /*\r\n        let data = {\r\n          id: this.state.id,\r\n          homeId: this.props.user.homes[this.props.appUser.homeIndex]._id,\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          userId: this.props.user._id,\r\n        }\r\n        */\r\n        let visitor = {\r\n          _id: this.state.id,\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: '',\r\n          image: 'img.jpg',\r\n        } as IVisitor;\r\n        this.props.onSave(this.props.user.homes[this.props.appUser.homeIndex]._id, visitor, this.props.user, this.props.appUser, (result: boolean) => {          \r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: ''\r\n            });\r\n            Toast.success('Visitor saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save visitor.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n  \r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.appUser.homeIndex, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Visitor removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={pageStyles.content}>\r\n        {isNN(this.state.data) ?\r\n        this.state.data.map((d: IVisitor, i: number) => {\r\n          return(\r\n            (this.state.isEdit === true && this.state.id === d._id) ?\r\n            <View key={i} style={pageStyles.row}> \r\n              <View style={modelStyles.ele}>\r\n              <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n              </View>              \r\n              <View style={pageStyles.ele}>\r\n                <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>              \r\n              <View style={pageStyles.ele}>\r\n                <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n                <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n              </View>\r\n              <View style={pageStyles.ele}>\r\n                <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n              </View>\r\n              <View style={pageStyles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                  <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: false,\r\n                    id: '',\r\n                    name: '',\r\n                    age: 0,\r\n                    gender: '',\r\n                    mobileNo: ''\r\n                  });\r\n                }}>\r\n                  <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n            :\r\n            <View key={i} style={pageStyles.row}>\r\n              <View style={pageStyles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              {isNN(d.name) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{'[' + d._homeId + '] ' +  d.name}</Text>\r\n              </View>\r\n              }\r\n              {(d.age > 0 || isNN(d.gender)) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.mobileNo) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.image) &&\r\n              <View style={pageStyles.ele}>\r\n                <TouchableHighlight className='pointer' onClick={() => this.setState({isZoomImage: true, zoomImage: d.image})}>\r\n                  <Image src={FILE_BASE_PATH + d.image} style={{height: 100}} />\r\n                </TouchableHighlight>\r\n              </View>\r\n              }\r\n              {/* <View style={pageStyles.ele}>\r\n                <TouchableHighlight underlayColor={COLOR.ICON_BTN_UNDERLAY} style={{marginRight: 25}} onPress={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d.id,\r\n                    name: d.name,\r\n                    age: d.age,\r\n                    gender: d.gender,\r\n                    mobileNo: d.mobileNo\r\n                  });\r\n                }}>\r\n                  <Image source={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>\r\n                <TouchableHighlight underlayColor={COLOR.ICON_BTN_UNDERLAY} style={{}} onPress={() => {\r\n                  this.onRemove(d.id);\r\n                }}>\r\n                  <Image source={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View> */}\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Visitor found!!!</Text>\r\n      }\r\n        <Modal\r\n          open={this.state.isZoomImage}\r\n          onClose={() => this.onToggleZoomImage(false)}>\r\n          <View style={{alignSelf: 'center', alignContent: 'center'}}>\r\n            <Image src={FILE_BASE_PATH + this.state.zoomImage} style={{height: '40%'}} />\r\n          </View>\r\n        </Modal>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/user';\r\nimport { loadAll, save, remove } from '../store/actions/visitor';\r\n\r\nimport Page from '../components/home/visitors';\r\nimport { IVisitor } from '../models/home';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, sCallback, fCallback)),\r\n    onSave: (homeId: string, data: IVisitor, user: IUser, appUser: IAppUser, callback: (result: boolean) => void) => dispatch(save(homeId, data, user, appUser, callback)),\r\n    onRemove: (id: string, user: IUser, homeIndex: number, scallback: (result: boolean) => void) => dispatch(remove(id, user, homeIndex, scallback))\r\n});\r\n\r\nexport const Visitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, password: string, newPassword: string, scallback: (result: boolean, message: string) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  password: string,\r\n  newPassword: string,\r\n  confirmNewPassword: string\r\n};\r\n\r\nexport default class ChangePassword extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      password: '',\r\n      newPassword: '',\r\n      confirmNewPassword: ''\r\n    }\r\n    this.passwordPolicyCheck = this.passwordPolicyCheck.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  passwordPolicyCheck = (p: string) => {\r\n    let anUpperCase = /[A-Z]/;\r\n    let aLowerCase = /[a-z]/; \r\n    let aNumber = /[0-9]/;\r\n    let aSpecial = /[!|@|#|$|%|^|&|*|(|)|-|_]/;\r\n    let result = \"\";\r\n\r\n    if(p.length < 6){\r\n      result=\"New Password not long enough!\"\r\n        return result;\r\n    }\r\n\r\n    var numUpper = 0;\r\n    var numLower = 0;\r\n    var numNums = 0;\r\n    var numSpecials = 0;\r\n    for(var i=0; i<p.length; i++){\r\n        if(anUpperCase.test(p[i]))\r\n            numUpper++;\r\n        else if(aLowerCase.test(p[i]))\r\n            numLower++;\r\n        else if(aNumber.test(p[i]))\r\n            numNums++;\r\n        else if(aSpecial.test(p[i]))\r\n            numSpecials++;\r\n    }\r\n\r\n    if(numUpper < 1 || numLower < 1 || numNums < 1 || numSpecials < 1){\r\n      result=\"New Password dose not match with password policy!\";\r\n        return result;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  onUpdate = () => {\r\n    if(isNN(this.state.password) && isNN(this.state.newPassword) && isNN(this.state.confirmNewPassword)){\r\n      if(this.state.newPassword === this.state.confirmNewPassword){\r\n        let policyResult = this.passwordPolicyCheck(this.state.newPassword);\r\n        if(policyResult.length < 1){\r\n          this.setState({\r\n            isLoading: true\r\n          });\r\n          this.props.onUpdate(this.props.user._id, this.state.password, this.state.newPassword, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              Toast.success('Password updated successfully. Please login with your new password.');\r\n              this.props.onLogout((result: boolean) => {\r\n              });\r\n            }else{\r\n              Toast.fail(message);\r\n            }\r\n          });\r\n        }else{\r\n          Toast.warn(policyResult);\r\n        }\r\n      }else{\r\n        Toast.warn('New Password and Confirm New Password not matchs.');\r\n      }\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='password' placeholder='Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.password} onChange={(event: any) => this.setState({password: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='password' placeholder='New Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.newPassword} onChange={(event: any) => this.setState({newPassword: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='password' placeholder='Confirm New Password' className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.confirmNewPassword} onChange={(event: any) => this.setState({confirmNewPassword: event.target.value})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"UPDATE\"\r\n            onPress={this.onUpdate}\r\n            />\r\n          </View>\r\n          <View style={{ marginTop: 7 }}>\r\n            <Text>Note: Password should contain adleast one uppercase, one lowercase, one number and one special character.</Text>\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { changePassword, logout } from '../store/actions/account';\r\n\r\nimport Page from '../components/home/change-password';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (userId: string, password: string, newPassword: string, callback: (result: boolean, message: string) => void) => dispatch(changePassword(userId, password, newPassword, callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const ChangePassword = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  name: string,\r\n  mobileNo: string,\r\n  emailId: string\r\n};\r\n\r\nexport default class MyProfile extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      name: '',\r\n      mobileNo: '',\r\n      emailId: ''\r\n    }\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.user.name,\r\n      mobileNo: this.props.user.mobileNo,\r\n      emailId: this.props.user.emailId\r\n    });\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onUpdate = () => {\r\n    if(isNN(this.state.name) && isNN(this.state.mobileNo) && isNN(this.state.emailId)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.props.user._id, this.state.name, this.state.mobileNo, (this.state.emailId ? this.state.emailId.toLowerCase() : ''), this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          Toast.success('Profile updated successfully.');\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the fields before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Email Id\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"UPDATE\"\r\n            onPress={this.onUpdate}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { updateProfile } from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-profile';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (userId: string, name: string, mobileNo: string, emailId: string, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updateProfile(userId, name, mobileNo, emailId, user, callback))\r\n});\r\n\r\nexport const MyProfile = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Picker } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { isNN } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  onUpdate: (role: string, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  role: string\r\n};\r\n\r\nexport default class MyRole extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      role: ''\r\n    }\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      role: this.props.appUser.role,\r\n    });\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onUpdate = () => {\r\n    if(isNN(this.state.role)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.state.role, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          Toast.success('Role updated successfully.');\r\n        }else{\r\n          Toast.fail(message);\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select role before Update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={{...styles.content, flex: 1}}>\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <Picker\r\n              className='form-control'\r\n              value={this.state.role}\r\n              style={modelStyles.ele}\r\n              onChange={(event: any) => this.setState({role: event.target.value})}>\r\n                {\r\n                this.props.user.role.split(',').map((d: string, i: number) => {\r\n                  return(<option key={'role' + i} value={d}>{d}</option>);\r\n                })\r\n                }\r\n            </Picker>\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"UPDATE\"\r\n            onPress={this.onUpdate}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { updateRole} from '../store/actions/account';\r\n\r\nimport Page from '../components/home/my-role';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onUpdate: (role: string, callback: (result: boolean, message: string) => void) => dispatch(updateRole(role, callback))\r\n});\r\n\r\nexport const MyRole = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IUser } from '../../models/user';\r\nimport { IAd } from '../../models/ad';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'ad';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getAdResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getAdResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = ads.findIndex(d => d._id === result.data);\r\n        ads[foundIndex]._id = result.data;\r\n        ads[foundIndex].title = data.title;\r\n        ads[foundIndex].description = data.description;\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          ads.unshift({\r\n            _id: result.data,\r\n            title: data.title,\r\n            description: data.description,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IAd);\r\n        dispatch(getAdResult(ads, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      ads = ads.filter((d, i) => d._id !== id);\r\n      dispatch(getAdResult(ads, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getAdResult = (data: Array<IAd>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_ADS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IAds\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onLoad: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string\r\n};\r\n\r\nexport default class Ads extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      title: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ad = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description\r\n        } as IAd;\r\n        this.props.onSave(this.props.user.client._id, ad, this.props.user, this.props.ads.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              title: '',\r\n              description: ''\r\n            });\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.ads.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Ad removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove ad.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n          <Text className='fr pointer' onClick={() => this.props.history.push('new-ad')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n        </View>\r\n      {(this.props.ads.isUpToDate && !this.props.ads.isError && isNN(this.props.ads.data)) ?\r\n        this.props.ads.data.map((d: IAd, i: number) => {\r\n          return(\r\n            (this.state.isEdit === true && this.state.id === d._id) ?\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n                  <Image src={Images.tick} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: false,\r\n                    id: '',\r\n                    title: '',\r\n                    description: ''\r\n                  });\r\n                }}>\r\n                  <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n            :\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.title}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d._id,\r\n                    title: d.title,\r\n                    description: d.description\r\n                  });\r\n                }}>\r\n                  <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight>                \r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{(this.props.ads.isUpToDate ? (this.props.ads.isError ? this.props.ads.errorMessage : \"No Ad found!!!\") : \"Loading...\")}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { loadAll, save, remove } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/ads';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAll(appClientId, callback)),\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback)),\r\n    onRemove: (id: string, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(remove(id, ads, callback))\r\n});\r\n\r\nexport const Ads = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAds } from '../../../models/store/ads';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IAd } from '../../../models/ad';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  user: IUser,\r\n  ads: IAds,\r\n  onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  title: string,\r\n  description: string\r\n};\r\n\r\nexport default class NewAd extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      title: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.description)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let ad = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description\r\n        } as IAd;\r\n        this.props.onSave(this.props.user.client._id, ad, this.props.user, this.props.ads.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              title: '',\r\n              description: ''\r\n            });\r\n            Toast.success('Ad saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save ad.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IAd } from '../models/ad';\r\nimport { save } from '../store/actions/ad';\r\nimport Page from '../components/home/manager/new-ad';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    ads: state.Ads\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IAd, user: IUser, ads: Array<IAd>, callback: (result: boolean) => void) => dispatch(save(appClientId, data, user, ads, callback))\r\n});\r\n\r\nexport const NewAd = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IUserHome } from '../../../models/user-home';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IMember>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Users extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.getHomes = this.getHomes.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getHomes = (userId: string) => {\r\n    let homes = '';\r\n    if((this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)) && (this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data))){\r\n      let homeIds = [] as Array<string>;\r\n      this.props.userHomes.data.filter(uh => uh.userId === userId).map((uh: IUserHome, i: number) => homeIds.push(uh.homeId));\r\n      this.props.homes.data.filter(d => homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n    }\r\n    return homes;\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      let homes = this.props.homes.data.filter(h => h.number.toLocaleLowerCase() === searchText);\r\n      this.setState({\r\n        searchResult: this.props.users.data.filter(d => (d.name + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.mobileNo + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.emailId + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (d.number + '').toLocaleLowerCase().indexOf(searchText) >= 0 || (isNN(homes.filter(h => h.memberIds.indexOf(d._id) >= 0)))),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.appUser.homeIndex, this.props.user, this.props.users, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('User removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove user.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-user/0')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search User\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IMember, i: number) => {\r\n            return(\r\n              <View key={'usr' + i} style={styles.row}>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'User Id: ' + (isNN(d.number) ? d.number : '')}</Text>                  \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Mobile No: ' + (isNN(d.mobileNo) ? d.mobileNo : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Email: ' + (isNN(d.emailId) ? d.emailId : '')}</Text>         \r\n                </View> */}\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Owner Name: ' + (isNN(d.ownername) ? d.ownername : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Owner Mobile No: ' + (d.ownermobile > 0 ? d.ownermobile : '')}</Text>         \r\n                </View> */}\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Role: ' + (isNN(d.type) ? d.type.replace(/,/g, ', ') : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Home(s): ' + this.getHomes(d._id)}</Text>         \r\n                </View> */}\r\n                {(d._id !== this.props.user._id) &&\r\n                  <View style={styles.ele}>\r\n                    <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                      this.props.history.push('edit-user/' + d._id);////TODO\r\n                      // this.props.navigation.navigate('EditUser', {id: d._id});\r\n                      // this.setState({\r\n                      //   isEdit: true,\r\n                      //   id: d.id\r\n                      // });\r\n                    }}>\r\n                      <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                    </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                  </View>\r\n                }\r\n              </View>\r\n              \r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No user match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IUsers } from '../models/store/users';\r\nimport { removeByAM } from '../store/actions/member';\r\n\r\nimport Page from '../components/home/manager/users';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, homeIndex: number, user: IUser, users: IUsers, callback: (result: boolean) => void) => dispatch(removeByAM(id, homeIndex, user, users, callback))\r\n});\r\n\r\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IHomes } from '../../models/store/homes';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'home';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<IHome>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNN(result.data)) {\r\n      result.data.forEach((h: any) => {\r\n        h.memberIds = h.members;\r\n        delete h.members;\r\n      });\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Homes.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const load = (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + '/' + id, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data) && isNN(result.data._id)) {\r\n      result.data.memberIds = result.data.members;\r\n      delete result.data.members;\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Home.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  // update\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n          var foundIndex = homes.data.findIndex(d => d._id === result.data);\r\n          homes.data[foundIndex]._id = result.data;\r\n          homes.data[foundIndex].number = data.number;\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/0', (result: any, message: string) => {\r\n      if(isNNObject(result) && isNNObject(result.data) && result.data.length > 0)\r\n      { \r\n        if(homes.isUpToDate && !homes.isError && isNN(homes.data)){\r\n            homes.data.push({\r\n              _id: result.data,\r\n              // name: name,\r\n              number: data.number\r\n            } as IHome);\r\n          dispatch(getHomesResult(homes.data, true, false, ''));\r\n        }\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const checkNumberAvail = (id: string, number: string, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().get(controller + '/checkno/' + number, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    { \r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const remove = (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      user.homes = user.homes.filter((d, i) => d._id !== id);\r\n      homes.data = homes.data.filter((d, i) => d._id !== id);\r\n      ////userHomes.data = userHomes.data.filter((d, i) => d.homeId !== id);\r\n      dispatch(getUserResult(user));\r\n      dispatch(getHomesResult(homes.data, true, false, \"\"));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getUserResult = (data: IUser) => ({\r\n  type: actionTypes.LOAD_USER,\r\n  payload: data\r\n});\r\n\r\nconst getHomesResult = (data: Array<IHome>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_HOMES,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IHomes\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IUserHome } from '../../../models/user-home';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IHome>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Users extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.getUsers = this.getUsers.bind(this);\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getUsers = (homeId: string) => {\r\n    let users = '';\r\n    if((this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)) && (this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data))){\r\n      let userIds = [] as Array<string>;\r\n      this.props.userHomes.data.filter(uh => uh.homeId === homeId).map((uh: IUserHome, i: number) => userIds.push(uh.userId));\r\n      this.props.users.data.filter(d => userIds.indexOf(d._id) >= 0).map((u: IMember, i: number) => users += (users.length > 0 ? ', ' : '') + u.name);\r\n    }\r\n    return users;\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      this.setState({\r\n        searchResult: this.props.homes.data.filter(d => (d.number + '').toLocaleLowerCase().indexOf(searchText) >= 0),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.user, this.props.homes, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('Home removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove home.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-home/0')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search Home\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IHome, i: number) => {\r\n            return(\r\n              <View key={'home' + i} style={styles.row}>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Name: ' + (isNN(d.name) ? d.name : '')}</Text>                  \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <Text>{'Number: ' + d.number}</Text>         \r\n                </View>\r\n                {/* <View style={styles.ele}>\r\n                  <Text>{'Address: ' + (isNN(d.address) ? d.address : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'User(s): ' + this.getUsers(d._id)}</Text>         \r\n                </View> */}\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('view-home/' + d._id);\r\n                    // this.props.navigation.navigate('ViewHome', {id: d._id});\r\n                  }}>\r\n                    <Image src={Images.view} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('edit-home/' + d._id);\r\n                    // this.props.navigation.navigate('EditHome', {id: d._id});\r\n                    // this.setState({\r\n                    //   isEdit: true,\r\n                    //   id: d.id\r\n                    // });\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No home match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { remove } from '../store/actions/home';\r\n\r\nimport Page from '../components/home/manager/homes';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, user: IUser, homes: IHomes, callback: (result: boolean) => void) => dispatch(remove(id, user, homes, callback))\r\n});\r\n\r\nexport const Homes = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  isActive : boolean,\r\n  text: string,\r\n  key: string,\r\n  onPress: () => void\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Checkbox extends React.Component<IProps, IState> {\r\n  static defaultProps: IProps = {\r\n    isActive: false,\r\n    text: '',\r\n    key: '',\r\n    onPress: () => {}\r\n  }\r\n  render() {\r\n    return (\r\n      <span style={styles.container}>\r\n        <input type='checkbox' key={this.props.key} checked={this.props.isActive} onClick={this.props.onPress} />\r\n        <label style={styles.text}>{this.props.text}</label>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    // flexDirection: 'row',\r\n    marginRight: 10\r\n  },\r\n  circle: {\r\n    height: 24,\r\n    width: 24,\r\n    // borderRadius: 12,\r\n    borderWidth: 2,\r\n    borderColor: COLOR.PRIMARY,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  dot: {\r\n    height: 12,\r\n    width: 12,\r\n    // borderRadius: 6,\r\n    backgroundColor: COLOR.PRIMARY\r\n  },\r\n  text: {\r\n    marginLeft: 5\r\n  }\r\n};","import { COLOR } from '../constants';\r\n\r\nexport const styles = {\r\n  mListCnr: {\r\n    borderColor: COLOR.SECONDARY, \r\n    borderWidth: 1,\r\n    height: '50%'\r\n  },\r\n  mListActiveRow: {\r\n    padding: 3,\r\n    backgroundColor: COLOR.SECONDARY,\r\n    color: COLOR.FONT_COLOR3,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid',\r\n    width: '100%',\r\n    marginBottom: '1px'\r\n  },\r\n  mListRow: {\r\n    padding: 3,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid',\r\n    width: '100%',\r\n    marginBottom: '1px'\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { ScrollView, TouchableHighlight, View, TextInput, Text, Image } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport { styles as commonStyles} from '../../../styles/common';\r\nimport { styles as mlistStyles} from '../../../styles/mlist';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR, ROLE } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IUserHomes } from '../../../models/store/user-homes';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Images from '../../images';\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  userHomes: IUserHomes,\r\n  onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n  number: string,\r\n  name: string,\r\n  age: number,\r\n  gender: string,\r\n  mobileNo: string,\r\n  emailId: string,\r\n  type: string,\r\n  homeIds: Array<string>,\r\n  role: {\r\n    isAdmin: boolean,\r\n    isManager: boolean,\r\n    isGatekeeper: boolean,\r\n    isUser: boolean\r\n  },\r\n  isShowHomes: boolean\r\n};\r\n\r\nexport default class EditUser extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      number: '',\r\n      name: '',\r\n      age: 0,\r\n      gender: '',\r\n      mobileNo: '',\r\n      emailId: '',\r\n      type: 'OWNER',\r\n      homeIds: [],\r\n      role: {\r\n        isAdmin: false,\r\n        isManager: false,\r\n        isGatekeeper: false,\r\n        isUser: false\r\n      },\r\n      isShowHomes: false\r\n    }\r\n    this.getHomes = this.getHomes.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onToggleHomeModel = this.onToggleHomeModel.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let userId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    if(userId.length > 0 && userId !== '0'){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(userId, (result: IMember, homeIds: Array<string>) => {\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            isLoading: false,\r\n            id: result._id,\r\n            number: result.number,\r\n            name: result.name,\r\n            age: result.age,\r\n            gender: result.gender,\r\n            mobileNo: result.mobileNo,\r\n            emailId: result.emailId,\r\n            type: result.type,\r\n            homeIds: homeIds,\r\n            role: {\r\n              isAdmin: (',' + result.role + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n              isManager: (',' + result.role + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n              isGatekeeper: (',' + result.role + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n              isUser: (',' + result.role + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n            }\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load User.');\r\n        }\r\n      }, (message: string) => {\r\n        Toast.fail(isNN(message) ? message : 'Failed to load User.');\r\n      });\r\n    }\r\n\r\n    /*\r\n    if(userId > 0 && (this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data))){\r\n      let users = this.props.users.data.filter((u: IUser, i: number) => u._id === userId);\r\n      if(isNNObject(users) && users.length > 0){\r\n        let homeIds = [] as Array<string>;\r\n        if(this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data)){\r\n          this.props.userHomes.data.filter((uh: IUserHome, i: number) => uh.userId === userId).map(uh => {\r\n            homeIds.push(uh.homeId);\r\n          });\r\n        }\r\n        this.setState({\r\n          id: users[0]._id,\r\n          name: users[0].name,\r\n          mobileNo: users[0].mobileNo,\r\n          emailId: users[0].emailId,\r\n          ////ownername: users[0].ownername,\r\n          ////ownermobile: users[0].ownermobile,\r\n          homeIds: homeIds,\r\n          role: {\r\n            isAdmin: (',' + users[0].type + ',').indexOf(',' + ROLE.ADMIN + ',') >= 0,\r\n            isManager: (',' + users[0].type + ',').indexOf(',' + ROLE.MANAGER + ',') >= 0,\r\n            isGatekeeper: (',' + users[0].type + ',').indexOf(',' + ROLE.GATEKEEPER + ',') >= 0,\r\n            isUser: (',' + users[0].type + ',').indexOf(',' + ROLE.USER + ',') >= 0,\r\n          }\r\n        });\r\n      }\r\n    }\r\n    */\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getHomes = () => {\r\n    let homes = '';\r\n    if(isNN(this.state.homeIds) && (this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data))){\r\n      this.props.homes.data.filter(d => this.state.homeIds.indexOf(d._id) >= 0).map((h: IHome, i: number) => homes += (homes.length > 0 ? ', ' : '') + h.number);\r\n    }\r\n    return homes;\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.name) && this.state.age > 0 && isNN(this.state.gender)){\r\n      let role = '';\r\n      if(this.state.role.isAdmin){\r\n        role = ROLE.ADMIN\r\n      }\r\n      if(this.state.role.isManager){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.MANAGER\r\n      }\r\n      if(this.state.role.isGatekeeper){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.GATEKEEPER\r\n      }\r\n      if(this.state.role.isUser){\r\n        role += (role.length > 0 ? ',' : '') + ROLE.USER\r\n      }\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let member = {\r\n          _id: this.state.id,\r\n          number: '',\r\n          name: this.state.name,\r\n          age: this.state.age,\r\n          gender: this.state.gender,\r\n          mobileNo: this.state.mobileNo,\r\n          emailId: this.state.emailId ? this.state.emailId.toLowerCase() : '',\r\n          type: this.state.type,\r\n          role: role\r\n        } as IMember;\r\n        this.props.onSave(member, this.state.homeIds, this.props.user, this.props.users, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              id: '',\r\n              number: '',\r\n              name: '',\r\n              age: 0,\r\n              gender: '',\r\n              mobileNo: '',\r\n              emailId: '',\r\n              type: 'OWNER',\r\n              homeIds: [],\r\n              role: {\r\n                isAdmin: false,\r\n                isManager: false,\r\n                isGatekeeper: false,\r\n                isUser: false\r\n              }\r\n            });\r\n            Toast.success('User saved successfully.');\r\n          }else{\r\n            Toast.fail(isNN(message) ? message : 'Failed to save user.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onToggleHomeModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowHomes: isShow\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Age\" className='form-control' maxLength={2} style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.age > 0 ? this.state.age + '' : ''} onChange={(event: any) => this.setState({age: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.gender === 'M'} text='Male' onPress={() => this.setState({gender: 'M'})} />\r\n            <RadioButton isActive={this.state.gender === 'F'} text='Female' onPress={() => this.setState({gender: 'F'})} />\r\n          </View>            \r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Mobile Number\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.mobileNo} onChange={(event: any) => this.setState({mobileNo: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Email ID\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.emailId} onChange={(event: any) => this.setState({emailId: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.type === 'OWNER'} text='Owner' onPress={() => this.setState({type: 'OWNER'})} />\r\n            <RadioButton isActive={this.state.type === 'TENANT'} text='Tenant' onPress={() => this.setState({type: 'TENANT'})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>Role: </Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Checkbox isActive={this.state.role.isAdmin} text={ROLE.ADMIN} onPress={() => {\r\n              this.state.role.isAdmin = !this.state.role.isAdmin;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isManager} text={ROLE.MANAGER} onPress={() => {\r\n              this.state.role.isManager = !this.state.role.isManager;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isGatekeeper} text={ROLE.GATEKEEPER} onPress={() => {\r\n              this.state.role.isGatekeeper = !this.state.role.isGatekeeper;\r\n              this.setState({});\r\n            }} />\r\n            <Checkbox isActive={this.state.role.isUser} text={ROLE.USER} onPress={() => {\r\n              this.state.role.isUser = !this.state.role.isUser;\r\n              this.setState({});\r\n            }} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Home(s): ' + this.getHomes()}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isShowHomes: true\r\n              });\r\n             }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          {(this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data)) &&\r\n          <Modal\r\n          open={this.state.isShowHomes}\r\n          onClose={() => this.onToggleHomeModel(false)}>\r\n            <View style={popupStyles.container}>\r\n              <ScrollView style={{...mlistStyles.mListCnr, maxHeight: '50%'}}>\r\n                {\r\n                  this.props.homes.data.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text key={'home' + i} style={(this.state.homeIds.indexOf(d._id) >= 0 ? mlistStyles.mListActiveRow : mlistStyles.mListRow)} onClick={() => {\r\n                        if(this.state.homeIds.indexOf(d._id) >= 0){\r\n                          this.setState({\r\n                            homeIds: this.state.homeIds.filter(e => e !== d._id)\r\n                          });\r\n                        }else{\r\n                          this.state.homeIds.push(d._id);\r\n                          this.setState({});\r\n                        }\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n                </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\n","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IMember } from '../models/home';\r\nimport { IUsers } from '../models/store/users';\r\nimport { load, saveByAM } from '../store/actions/member';\r\nimport Page from '../components/home/manager/edit-user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    userHomes: state.UserHomes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IMember, homeIds: Array<string>) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IMember, homeIds: Array<string>, user: IUser, users: IUsers, callback: (result: boolean, message: string) => void) => dispatch(saveByAM(data, homeIds, user, users, callback))\r\n});\r\n\r\nexport const EditUser = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { TouchableHighlight, ScrollView, View, TextInput, Text, Image, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport RadioButton from '../../common/radio-button';\r\nimport Spinner from '../../common/spinner';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from '../../../styles/page';\r\nimport { styles as modelStyles } from '../../../styles/model';\r\nimport {styles as commonStyles} from '../../../styles/common';\r\nimport { styles as mlistStyles} from '../../../styles/mlist';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUsers } from '../../../models/store/users';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IHome, IMember } from '../../../models/home';\r\nimport Images from '../../images';\r\nimport { styles as iconStyles } from '../../../styles/icon';\r\nimport Toast from  '../../../util/toast';\r\nimport { IBlock } from '../../../models/block';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => void,\r\n  onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n\tblockId: string,\r\n\tnumber: string,\r\n\taddress: string,\r\n  bedRoom: number,\r\n  parking: string,\r\n  description: string,\r\n  members: Array<string>,\r\n  isShowUsers: boolean\r\n};\r\n\r\nexport default class EditHome extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      blockId: '',\r\n      number: '',\r\n      address: '',\r\n      bedRoom: 1,\r\n      parking: '',\r\n      description: '',\r\n      members: [],\r\n      isShowUsers: false\r\n    }\r\n    this.getUsers = this.getUsers.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onToggleUserModel = this.onToggleUserModel.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let homeId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    if(homeId.length > 0 && homeId !== '0'){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(homeId, (result: IHome) => {\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            isLoading: false,\r\n            id: result._id,\r\n            blockId: result._blockId,\r\n            number: result.number,\r\n            address: result.address,\r\n            bedRoom: result.bedRoom,\r\n            parking: result.parking,\r\n            description: result.description,\r\n            members: result.memberIds\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load Home.');\r\n        }\r\n      }, (message: string) => {\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Home.');\r\n      });\r\n    }\r\n    \r\n    /*\r\n    if(homeId > 0 && (this.props.homes.isUpToDate && !this.props.homes.isError && isNN(this.props.homes.data))){\r\n      let homes = this.props.homes.data.filter((u: IHome, i: number) => u._id === homeId);\r\n      if(isNNObject(homes) && homes.length > 0){\r\n        let members = [] as Array<string>;\r\n        if(this.props.userHomes.isUpToDate && !this.props.userHomes.isError && isNN(this.props.userHomes.data)){\r\n          this.props.userHomes.data.filter((uh: IUserHome, i: number) => uh.homeId === homeId).map(uh => {\r\n            members.push(uh.userId);\r\n          });\r\n        }\r\n        this.setState({\r\n          id: homes[0]._id,\r\n          blockId: homes[0]._blockId,\r\n          number: homes[0].number,\r\n          address: homes[0].address,\r\n          bedRoom: homes[0].bedRoom,\r\n          parking: homes[0].parking,\r\n          description: homes[0].description,\r\n          members: members\r\n        });\r\n      }\r\n    }\r\n    */\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  getUsers = () => {\r\n    let users = '';\r\n    if(isNN(this.state.members) && (this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data))){\r\n      this.props.users.data.filter(d => this.state.members.indexOf(d._id) >= 0).map((u: IMember, i: number) => \r\n        users += (users.length > 0 ? ', ' : '') + u.name + (isNN(u.number) ? '(' + u.number + ')' : '')\r\n      );\r\n    }\r\n    return users;\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.blockId) && isNN(this.state.number)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      /*\r\n      this.props.onCheckNumberAvail(this.state.id, this.state.number, (result: boolean) => {\r\n        if(result === true){\r\n          */\r\n         let home = {\r\n           _id: this.state.id,\r\n           _blockId: this.state.blockId,\r\n           number: this.state.number,\r\n           address: this.state.address,\r\n           bedRoom: this.state.bedRoom,\r\n           parking: this.state.parking,\r\n           description: this.state.description,\r\n           memberIds: this.state.members\r\n         } as IHome;\r\n          this.props.onSave(home, this.props.user, this.props.homes, (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                id: '',\r\n                blockId: '',\r\n                number: '',\r\n                address: '',\r\n                bedRoom: 1,\r\n                parking: '',\r\n                description: '',\r\n                members: []\r\n              });\r\n              Toast.success('Home saved successfully.');\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to save home.');\r\n            }\r\n          });\r\n          /*\r\n        }else{\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          Toast.warn('Home with same Number already available. Please change the home number.');\r\n        }\r\n      });\r\n      */\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onToggleUserModel = (isShow: boolean) => {\r\n    this.setState({\r\n      isShowUsers: isShow\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <Picker\r\n            className='form-control'\r\n            value={this.state.blockId}\r\n            style={modelStyles.ele}\r\n            onChange={(event: any) => this.setState({blockId: event.target.value})}>\r\n              <option key={'block0'} value=''>Select Block</option>\r\n              {(this.props.blocks && this.props.blocks.isUpToDate && !this.props.blocks.isError && isNN(this.props.blocks.data)) &&\r\n                this.props.blocks.data.map((d: IBlock, i: number) => {\r\n                  return(<option key={'block' + i} value={d._id}>{d.name}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Number\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.number} onChange={(event: any) => this.setState({number: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Address\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.address} onChange={(event: any) => this.setState({address: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>No of bed rooms: </Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <RadioButton isActive={this.state.bedRoom === 1} text='1' onPress={() => this.setState({bedRoom: 1})} />\r\n            <RadioButton isActive={this.state.bedRoom === 2} text='2' onPress={() => this.setState({bedRoom: 2})} />\r\n            <RadioButton isActive={this.state.bedRoom === 3} text='3' onPress={() => this.setState({bedRoom: 3})} />\r\n            <RadioButton isActive={this.state.bedRoom === 4} text='4' onPress={() => this.setState({bedRoom: 4})} />\r\n            <RadioButton isActive={this.state.bedRoom === 5} text='5' onPress={() => this.setState({bedRoom: 5})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Parking\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.parking} onChange={(event: any) => this.setState({parking: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Description\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'User(s): ' + this.getUsers()}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isShowUsers: true\r\n              });\r\n             }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          {(this.props.users.isUpToDate && !this.props.users.isError && isNN(this.props.users.data)) &&\r\n          <Modal\r\n          open={this.state.isShowUsers}\r\n          onClose={() => this.onToggleUserModel(false)}>\r\n            <View style={popupStyles.container}>\r\n              <ScrollView style={{...mlistStyles.mListCnr, maxHeight: '50%'}}>\r\n              {\r\n                this.props.users.data.map((d: IMember, i: number) => {\r\n                  return(\r\n                    <Text key={'user' + i} style={(this.state.members.indexOf(d._id) >= 0 ? mlistStyles.mListActiveRow : mlistStyles.mListRow)} onClick={() => {\r\n                      if(this.state.members.indexOf(d._id) >= 0){\r\n                        this.setState({\r\n                          members: this.state.members.filter(e => e !== d._id)\r\n                        });\r\n                      }else{\r\n                        this.state.members.push(d._id);\r\n                        this.setState({});\r\n                      }\r\n                    }}>{d.name + (d.number ? '(' + d.number + ')' : '')}</Text>\r\n                  )\r\n                })\r\n              }\r\n              </ScrollView>\r\n              </View>\r\n          </Modal>\r\n          }\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHomes } from '../models/store/homes';\r\nimport { IHome } from '../models/home';\r\nimport { IUser } from '../models/user';\r\nimport { load, save, checkNumberAvail } from '../store/actions/home';\r\nimport Page from '../components/home/manager/edit-home';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onSave: (data: IHome, user: IUser, homes: IHomes, callback: (result: boolean, message: string) => void) => dispatch(save(data, user, homes, callback)),\r\n    onCheckNumberAvail: (id: string, number: string, callback: (result: boolean) => void) => dispatch(checkNumberAvail(id, number, callback))\r\n});\r\n\r\nexport const EditHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IVisitor } from '../../../models/home/visitor';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport { isNN } from '../../../util/index';\r\nimport { FILE_BASE_PATH, ROLE } from '../../../constants';\r\nimport Button from '../../common/button';\r\nimport Toast from  '../../../util/toast';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { toDateString } from '../../../util/convert';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  appUser: IAppUser,\r\n  homes: IHomes,\r\n  onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onExit: (id: string, user: IUser, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isLoading: boolean,\r\n  isZoomImage: boolean,\r\n  zoomImage: string\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoading: false,\r\n      isZoomImage: false,\r\n      zoomImage: '',\r\n    }\r\n    this.onExit = this.onExit.bind(this);\r\n    this.onToggleZoomImage = this.onToggleZoomImage.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, '', (result: Array<IVisitor>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onToggleZoomImage = (isZoom: boolean) => {\r\n    this.setState({\r\n      isZoomImage: isZoom\r\n    });\r\n  };\r\n\r\n  getHomeNumber = (homeId: string) => {\r\n    if(this.props.homes && this.props.homes.data && this.props.homes.data.length > 0){\r\n      let home = this.props.homes.data.filter((d, i) => d._id === homeId);\r\n      if(home && home.length > 0){\r\n        return home[0].number;\r\n      }else{\r\n        return '';\r\n      }\r\n    }else{\r\n      return '';\r\n    }\r\n  };\r\n  \r\n  onExit = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to Send Out',\r\n      message: 'Are you sure you wish to Send Out?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onExit(id, this.props.user, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                this.setState({\r\n                  data: this.state.data.filter(v => v._id !== id)\r\n                });\r\n                Toast.success('Visitor sent out successfully.');\r\n              }else{\r\n                Toast.fail('Failed to send out visitor.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={pageStyles.content}>\r\n      <View style={pageStyles.row}>\r\n        <Text>{'No of Active Visitors: ' + this.state.data.length}</Text>\r\n      </View>\r\n        {isNN(this.state.data) ?\r\n        this.state.data.map((d: IVisitor, i: number) => {\r\n          return(\r\n            <View key={i} style={pageStyles.row}>\r\n              <View style={pageStyles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              {isNN(d.name) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{'[' + d._homeId + '] ' +  d.name}</Text>\r\n              </View>\r\n              }\r\n              {(d.age > 0 || isNN(d.gender)) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{(d.age > 0 ? d.age : '') + ((d.age > 0 && isNN(d.gender)) ? ', ' : '') + (isNN(d.gender) ? (d.gender === 'M' ? 'Male' : 'Female') : '')}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.mobileNo) && \r\n              <View style={pageStyles.ele}>\r\n                <Text>{d.mobileNo}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.image) &&\r\n              <View style={pageStyles.ele}>\r\n                <TouchableHighlight className='pointer'\r\n                onClick={() => this.setState({isZoomImage: true, zoomImage: d.image})}>\r\n                  <Image src={FILE_BASE_PATH + d.image} style={{height: 100}} />\r\n                </TouchableHighlight>\r\n              </View>\r\n              }\r\n              {this.props.appUser.role === ROLE.GATEKEEPER &&\r\n              <View style={pageStyles.ele}>\r\n                <Button title='Exit' onPress={() => { this.onExit(d._id) }} />\r\n              </View>\r\n              }\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Visitor found!!!</Text>\r\n      }\r\n        <Modal\r\n          open={this.state.isZoomImage}\r\n          onClose={() => this.onToggleZoomImage(false)}>\r\n          <View style={{alignSelf: 'center', alignContent: 'center'}}>\r\n            <Image src={FILE_BASE_PATH + this.state.zoomImage} style={{ height: '40%'}} />\r\n          </View>\r\n        </Modal>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user/user';\r\nimport { IVisitor } from '../models/home';\r\nimport { loadAll, exit } from '../store/actions/visitor';\r\n\r\nimport Page from '../components/home/gatekeeper/visitors';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User,\r\n    appUser: state.AppUser,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) =>  dispatch(loadAll(appClientId, homeId, sCallback, fCallback)),\r\n    onExit: (id: string, user: IUser, callback: (result: boolean) => void) => dispatch(exit(id, user, callback))\r\n});\r\n\r\nexport const AllVisitors = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text, TextInput, TextArea } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport Button from '../../common/button';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { INotification } from '../../../models/notification';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN, isNNObject } from '../../../util/index';\r\nimport { toDateString } from '../../../util/convert';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  user: IUser,\r\n  onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => void,\r\n  onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  data: Array<INotification>,\r\n  title: string,\r\n  body: string\r\n};\r\n\r\nexport default class Notification extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      data: [],\r\n      title: '',\r\n      body: ''\r\n    }\r\n    this.onPush = this.onPush.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.client._id, (result: Array<INotification>) => {\r\n      this.setState({\r\n        isLoading: false,\r\n        data: result\r\n      });\r\n    }, (message: string) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      Toast.fail(message);\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  onPush = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.body)){\r\n      confirmAlert({\r\n        title: 'Confirm to send push notification',\r\n        message: 'Are you sure? This notification will send to all users using this app in your Appartment. Are you sure you want to Push?',\r\n        buttons: [\r\n          {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n              this.setState({\r\n                isLoading: true\r\n              });\r\n              let notification = {\r\n                title: this.state.title,\r\n                body: this.state.body\r\n              } as INotification;\r\n              this.props.onPush(this.props.user.client._id, notification, this.props.user, (result: INotification | null) => {\r\n                this.setState({\r\n                  isLoading: false,\r\n                });\r\n                if(isNNObject(result)){\r\n                  let data = this.state.data;\r\n                  data.unshift(result as INotification);\r\n                  this.setState({\r\n                    data: data,\r\n                    title: '',\r\n                    body: ''\r\n                  });\r\n                  Toast.success('Notification pushed successfully.');\r\n                }else{\r\n                  Toast.fail('Failed to push Notification.');\r\n                }\r\n              });\r\n            }\r\n          },\r\n          {\r\n            label: 'No',\r\n            onClick: () => {}\r\n          }\r\n        ]\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before Push.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n        </View>\r\n        <View style={modelStyles.row}>\r\n          <TextArea placeholder=\"Body\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.body} onChange={(event: any) => this.setState({body: event.target.value})} />\r\n        </View>\r\n        <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n            <Button\r\n            style={{marginRight: 10}}\r\n            title=\"PUSH\"\r\n            onPress={this.onPush}\r\n            />\r\n            <Button\r\n            title=\"CLEAR\"\r\n            onPress={() => {\r\n              this.setState({\r\n                title: '',\r\n                body: ''\r\n              });\r\n            }}\r\n            />\r\n        </View>\r\n      {(isNN(this.state.data)) ?\r\n        this.state.data.map((d: INotification, i: number) => {\r\n          return(\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + \" on \" + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.body}</Text>\r\n              </View>\r\n              <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                <Button title=\"Duplicate\" onPress={() => {\r\n                  this.setState({\r\n                    title: d.title,\r\n                    body: d.body\r\n                  });\r\n                }} />\r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>No Nofification found!!!</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { INotification } from '../models/notification';\r\nimport { loadAll, push } from '../store/actions/notification';\r\nimport Page from '../components/home/manager/notification';\r\nimport { IUser } from '../models/user';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, sCallback, fCallback)),\r\n    onPush: (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => dispatch(push(appClientId, data, user, callback))\r\n});\r\n\r\nexport const Notification = connect(mapStateToProps, mapDispatchToProps)(Page);","import { INotification } from '../../models/notification';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\nimport { IUser } from '../../models/user';\r\n\r\nlet controller: string = 'notification';\r\n\r\nexport const loadAll = (appClientId: string, sCallback: (result: Array<INotification>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Notification.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const push = (appClientId: string, data: INotification, user: IUser, callback: (result: INotification | null) => void) => (dispatch: any) => {  \r\n  new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      callback({\r\n        _id: result.data,\r\n        title: data.title,\r\n        body: data.body,\r\n        createdBy: user.name,\r\n        createdAt: new Date()\r\n      } as INotification);\r\n    }else{\r\n      callback(null);\r\n    }\r\n  }, data);\r\n};","import { actionTypes } from '../action-types';\r\nimport { IUser } from '../../models/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n\r\nlet controller: string = 'outing';\r\n\r\nexport const loadAll = (appClientId: string, homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getOutingResult([], false, false, ''));\r\n  new Api().get(controller + 's' + (isNN(homeId) ? '/' + homeId : ''), (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getOutingResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    // Not Implemented\r\n        callback(false);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      console.log('result:', result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        outings.data.unshift(data);\r\n        dispatch(getOutingResult(outings.data, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    },data);\r\n  }\r\n};\r\n\r\nexport const retunBack = (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  new Api().delete(controller + '/return/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      var foundIndex = outings.data.findIndex(d => d._id === id);\r\n      outings.data[foundIndex].isReturned = true;\r\n      outings.data[foundIndex].returnedAt = new Date();\r\n      dispatch(getOutingResult(outings.data, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getOutingResult = (data: Array<IOuting>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_OUTINGS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IOutings\r\n});","import * as React from 'react';\r\nimport { View, TextInput, TextArea } from '../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../common/button';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport { COLOR } from '../../constants';\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  outings: IOutings,\r\n  onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  place: string,\r\n  address: string,\r\n  datePickerType: string,\r\n  datePickerDate: Date\r\n};\r\n\r\nexport default class NewOuting extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      fromDate: '',\r\n      toDate: '',\r\n      place: '',\r\n      address: '',\r\n      datePickerType: '',\r\n      datePickerDate: new Date()\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNNObject(this.state.fromDate) && isNNObject(this.state.toDate) && isNN(this.state.place) && isNN(this.state.address)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let outing = {\r\n          ////homeId: this.props.user.home[this.props.appUser.homeIndex].id,\r\n          _homeId: this.props.user.homes[this.props.appUser.homeIndex].number,\r\n          fromDate: this.state.fromDate,\r\n          toDate : this.state.toDate,\r\n          place: this.state.place,\r\n          address: this.state.address,\r\n          isReturned: false,\r\n          createdBy: this.props.user.name,\r\n          createdAt: new Date()\r\n        } as IOuting;\r\n        this.props.onSave(outing, this.props.user.homes[this.props.appUser.homeIndex]._id, this.props.user, this.props.outings, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              fromDate: '',\r\n              toDate: '',\r\n              place: '',\r\n              address: '',\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Outing submitted successfully.');\r\n          }else{\r\n            Toast.fail('Failed to submit Outing.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before submit Outing.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Place\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.place} onChange={(event: any) => this.setState({place: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Address\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.address} onChange={(event: any) => this.setState({address: event.target.value})} />\r\n          </View>\r\n          <View className='center' style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SUBMIT\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { IOuting } from '../models/outing';\r\nimport { save } from '../store/actions/outing';\r\nimport Page from '../components/home/new-outing';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    outings: state.Outings\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (data: IOuting, homeId: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(save(data, homeId, user, outings, callback))\r\n});\r\n\r\nexport const NewOuting = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user';\r\nimport { IDocument } from '../../models/document';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n// import { FILE_BASE_PATH } from '../../constants';\r\n\r\nlet controller: string = 'document';\r\n\r\nexport const loadAll = (homeId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getDocumentResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getDocumentResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const loadAllByHome = (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => (dispatch: any) => {\r\n  new Api().get(controller + 's/' + homeId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      sCallback(result.data);\r\n    } else {\r\n      fCallback(isNN(result.message) ? result.message : 'Failed to load Documents.');\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {  \r\n  // document.file = FILE_BASE_PATH;\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          var foundIndex = documents.findIndex(d => d._id === result.data._id);\r\n          documents[foundIndex]._id = result.data._id;\r\n          ////documents[foundIndex].userId = data.userId;\r\n          ////documents[foundIndex].homeId = data.homeId;\r\n          documents[foundIndex].title = data.title;\r\n          documents[foundIndex].description = data.description;\r\n          documents[foundIndex].file = data.file;\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + homeId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n          documents.unshift({\r\n            _id: result.data._id,\r\n            ////userId: data.userId,\r\n            ////homeId: data.homeId,\r\n            title: data.title,\r\n            description: data.description,\r\n            file: data.file,\r\n            createdBy: user.name,\r\n            createdAt: new Date()\r\n          } as IDocument);\r\n        dispatch(getDocumentResult(documents, true, false, ''));\r\n        callback(true);\r\n      }else{\r\n        callback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      documents = documents.filter((d, i) => d._id !== id);\r\n      dispatch(getDocumentResult(documents, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getDocumentResult = (data: Array<IDocument>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_DOCUMENTS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IDocuments\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Image, Text, TextInput, TextArea } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport RadioButton from '../common/radio-button';\r\nimport Spinner from '../common/spinner';\r\nimport { IDocuments } from '../../models/store/documents';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IHome } from '../../models/home';\r\nimport { IDocument } from '../../models/document';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as iconStyles } from \"../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport {styles as CommonStyles} from '../../styles/common';\r\nimport Images from '../images';\r\nimport { FILE_BASE_PATH } from '../../constants';\r\nimport { isNN, generateUUID } from '../../util/index';\r\nimport { toDateString } from '../../util/convert';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  homeIndex: number,\r\n  user: IUser,\r\n  documents: IDocuments,\r\n  onLoad: (homeId: string, callback: (result: boolean) => void) => void,\r\n  onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => void,\r\n  onUpload: (data: any, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  id: string,\r\n  homeId: string,\r\n  title: string,\r\n  description: string,\r\n  fileName: string\r\n};\r\n\r\nexport default class MyDocuments extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      id: '',\r\n      homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onFileSelect = this.onFileSelect.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    this.props.onLoad(this.props.user.homes[this.props.homeIndex]._id, (result: boolean) => {\r\n      this.setState({\r\n        isLoading: false\r\n      });\r\n      if(!result){\r\n        Toast.fail('Failed to load Documents.');\r\n      }\r\n    });\r\n  };\r\n\r\n  onFileSelect = (event: any) => {\r\n    let file = event.target.files[0];\r\n    if(file && file.name){\r\n      let arrFileName = file.name.split('.');\r\n      if(arrFileName && arrFileName.length > 1){\r\n        let fileName = generateUUID();\r\n        fileName += '.' + arrFileName[arrFileName.length - 1];\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        // upload file to api.\r\n        let data = {\r\n          file: file,\r\n          type: file.type,\r\n          name: fileName\r\n        };\r\n        this.props.onUpload(data, (result: boolean, message: string) => {\r\n          this.setState({\r\n            isLoading: false\r\n          });\r\n          if(!result){\r\n            Toast.fail(message ? message : 'Failed to upload file.');\r\n          }else{\r\n            this.setState({\r\n              fileName: fileName\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  onSave = () => {\r\n    if(isNN(this.state.title) && isNN(this.state.fileName)){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        /*\r\n        let data = this.state.data;\r\n        data.id = this.state.id,\r\n        data.userId = this.props.user._id,\r\n        data.homeId = this.state.homeId;\r\n        data.title = this.state.title;\r\n        data.description = this.state.description;\r\n        data.createdBy = this.props.user._id;\r\n        data.createdOn = new Date();\r\n        */\r\n        \r\n        let document = {\r\n          _id: this.state.id,\r\n          title: this.state.title,\r\n          description: this.state.description,\r\n          file: this.state.fileName,\r\n          createdBy: this.props.user.name,\r\n          createdAt: new Date()\r\n        } as IDocument;\r\n        this.props.onSave(this.state.homeId, document, this.props.homeIndex, this.props.user, this.props.documents.data, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n              title: '',\r\n              description: '',\r\n              fileName: ''\r\n            });\r\n            Toast.success('Document saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save document.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      id: '',\r\n      homeId: isNN(this.props.user.homes) ? this.props.user.homes[0]._id : '',\r\n      title: '',\r\n      description: '',\r\n      fileName: ''\r\n    });\r\n  };\r\n  \r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.documents.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Document removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove document.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View style={modelStyles.row}>\r\n          <TextInput type='text' placeholder=\"Title\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.title} onChange={(event: any) => this.setState({title: event.target.value})} />\r\n        </View>\r\n        <View style={modelStyles.row}>\r\n          <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n        </View>\r\n        {isNN(this.props.user.homes) &&\r\n        <View style={modelStyles.row}>\r\n        <Text style={{marginRight: 10}}>Home:</Text>\r\n        {this.props.user.homes.map((h: IHome, i: number) => {\r\n          return(\r\n            <RadioButton isActive={h._id === this.state.homeId} text={h.number} key={'home' + i} onPress={() => this.setState({homeId: h._id})} />\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n        }\r\n        <View style={modelStyles.row}>\r\n          {/* <Button\r\n              title='Select Document'\r\n              onPress={this.onImageSelect}\r\n              /> */}\r\n              <input type='file' name='file' placeholder='Select Document' onChange={this.onFileSelect}/>\r\n              {isNN(this.state.fileName) &&\r\n              <Text style={{marginLeft: 15}}>{this.state.fileName}</Text>\r\n              }\r\n        </View>\r\n        <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n            <Button\r\n            style={{marginRight: 10}}\r\n            title='SAVE'\r\n            onPress={this.onSave}\r\n            />\r\n            <Button\r\n            title='CLEAR'\r\n            onPress={this.onClear}\r\n            />\r\n        </View>\r\n      {(this.props.documents.isUpToDate && !this.props.documents.isError && isNN(this.props.documents.data)) ?\r\n        this.props.documents.data.map((d: IDocument, i: number) => {\r\n          return(\r\n            <View key={i} style={styles.row}>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n              </View>\r\n              {isNN(d.description) &&\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              }\r\n              {isNN(this.props.user.homes.filter(ho => ho._id === d._id)) &&\r\n              <View style={styles.ele}>\r\n                <Text>{'Home: ' + this.props.user.homes.filter(ho => ho._id === d._id)[0].number}</Text>\r\n              </View>\r\n              }\r\n              {isNN(d.file) &&\r\n              <View style={styles.ele}>\r\n                <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n              </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                {/* <TouchableHighlight underlayColor={COLOR.ICON_BTN_UNDERLAY} style={{marginRight: 25}} onPress={() => {\r\n                  this.setState({\r\n                    isEdit: true,\r\n                    id: d.id,\r\n                    homeId: d.homeId,\r\n                    title: d.title,\r\n                    description: d.description,\r\n                  });\r\n                }}>\r\n                  <Image source={Images.edit} style={iconStyles.editIcon} />\r\n                </TouchableHighlight> */}\r\n                <TouchableHighlight style={{}} onClick={() => {\r\n                  this.onRemove(d._id);\r\n                }}>\r\n                  <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                </TouchableHighlight>      \r\n              </View>\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{this.props.documents.isUpToDate ? 'No Documents found!!!' : (this.props.documents.isError ?  this.props.documents.errorMessage : 'No Documents found!!!')}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IDocument } from '../models/document';\r\nimport { loadAll, save, remove } from '../store/actions/documents';\r\nimport { upload } from '../store/actions/file';\r\nimport Page from '../components/home/my-documents';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    homeIndex: state.AppUser.homeIndex,\r\n    user: state.User,\r\n    documents: state.Documents\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (homeId: string, callback: (result: boolean) => void) => dispatch(loadAll(homeId, callback)),\r\n    onSave: (homeId: string, data: IDocument, homeIndex: number, user: IUser, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(save(homeId, data, homeIndex, user, documents, callback)),\r\n    onRemove: (id: string, documents: Array<IDocument>, callback: (result: boolean) => void) => dispatch(remove(id, documents, callback)),\r\n    onUpload: (data: any, callback: (result: boolean, message: string) => void) => dispatch(upload(data, callback))\r\n});\r\n\r\nexport const MyDocuments = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IBlocks } from '../../models/store/blocks';\r\nimport { IBlock } from '../../models/block/block';\r\nimport { IUser } from '../../models/user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util';\r\n\r\nlet controller: string = 'block';\r\n\r\nexport const loadAll = (appClientId: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getBlockResult([], false, false, ''));\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getBlockResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, callback: (result: boolean, message: string) => void) => (dispatch: any) => {  \r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = blocks.findIndex(d => d._id === result.data);\r\n        blocks[foundIndex]._id = result.data;\r\n        blocks[foundIndex].name = data.name;\r\n        blocks[foundIndex].description = data.description;\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        blocks.unshift({\r\n            _id: result.data,\r\n            name: data.name,\r\n            description: data.description,\r\n            createdBy: user.name\r\n          } as IBlock);\r\n        dispatch(getBlockResult(blocks, true, false, ''));\r\n        callback(true, '');\r\n      }else{\r\n        callback(false, message);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      blocks = blocks.filter((d, i) => d._id !== id);\r\n      dispatch(getBlockResult(blocks, true, false, ''));\r\n      callback(true);\r\n    }else{\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nconst getBlockResult = (data: Array<IBlock>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_BLOCKS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IBlocks\r\n});","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, TouchableHighlight, TextInput, Image, Text } from '../../common/elements';\r\nimport Spinner from '../../common/spinner';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => void,\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isEdit: boolean,\r\n  searchText: string,\r\n  searchResult: Array<IBlock>,\r\n  searchResultIndex: number\r\n};\r\n\r\nexport default class Blocks extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isEdit: false,\r\n      searchText: '',\r\n      searchResult: [],\r\n      searchResultIndex: 10\r\n    }\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n\r\n  onSearch = () => {\r\n    if(isNN(this.state.searchText) && this.props.blocks.isUpToDate && !this.props.blocks.isError && isNN(this.props.blocks.data)){\r\n      let searchText = this.state.searchText.toLocaleLowerCase();\r\n      this.setState({\r\n        searchResult: this.props.blocks.data.filter(d => (d.name + '').toLocaleLowerCase().indexOf(searchText) >= 0),\r\n        searchResultIndex: 10\r\n      });\r\n    }else{\r\n      this.setState({\r\n        searchResult: [],\r\n        searchResultIndex: 10\r\n      });\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.blocks.data, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false\r\n              });\r\n              if(result === true){\r\n                this.onSearch();\r\n                Toast.success('Home removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove home.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Text className='fr pointer' onClick={() => this.props.history.push('edit-block/0')} style={{...styles.ele, color: COLOR.SECONDARY, textAlign: 'right'}}>Add New</Text>\r\n          </View>\r\n          <View style={{...modelStyles.row, marginTop: 0, paddingTop: 0}}>\r\n            <TextInput type='text' placeholder=\"Search Block\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele, display: 'inline', width: 'calc(100% - 40px)', marginRight: 10}} value={this.state.searchText} onChange={(event: any) => this.setState({searchText: event.target.value})} />\r\n            <TouchableHighlight style={{height: 30, marginTop: 13}} onClick={this.onSearch}>\r\n                <Image className='pointer' src={Images.search} style={{width: 30, height: 30}} />\r\n            </TouchableHighlight> \r\n          </View>\r\n\r\n          {isNN(this.state.searchResult) ?\r\n          this.state.searchResult.slice(0, this.state.searchResultIndex).map((d: IBlock, i: number) => {\r\n            return(\r\n              <View key={'block' + i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Name: ' + d.name}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{'Description: ' + (isNN(d.description) ? d.description : '')}</Text>         \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n                    this.props.history.push('edit-block/' + d._id);////TODO\r\n                    // this.props.navigation.navigate('EditBlock', {id: d._id});\r\n                  }}>\r\n                    <Image src={Images.edit} style={iconStyles.editIcon} />\r\n                  </TouchableHighlight>\r\n                    <TouchableHighlight style={{}} onClick={() => {\r\n                      this.onRemove(d._id);\r\n                    }}>\r\n                      <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n                    </TouchableHighlight>\r\n                </View>\r\n              </View>\r\n            )\r\n          })\r\n          :\r\n          <Text style={{padding: 20}}>No block match with your search!!!</Text>\r\n        }\r\n        {(this.state.searchResult.length > this.state.searchResultIndex) &&\r\n        <View style={styles.row}>\r\n          <View style={{flex: 1, flexDirection: 'row', padding: 10}}>\r\n            <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold'}} onClick={() => \r\n            this.setState({\r\n              searchResultIndex: this.state.searchResultIndex + 10\r\n            })}>Show More</Text>\r\n          </View>\r\n        </View>\r\n        }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n      );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { remove } from '../store/actions/block';\r\nimport Page from '../components/home/manager/blocks';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onRemove: (id: string, blocks: Array<IBlock>, callback: (result: boolean) => void) => dispatch(remove(id, blocks, callback))\r\n});\r\n\r\nexport const Blocks = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, TextInput } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as commonStyles} from '../../../styles/common';\r\nimport { COLOR } from '../../../constants';\r\nimport { isNN } from '../../../util/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IBlocks } from '../../../models/store/blocks';\r\nimport { IBlock } from '../../../models/block';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  blocks: IBlocks,\r\n  onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  id: string,\r\n\tname: string,\r\n\tdescription: string\r\n};\r\n\r\nexport default class EditBlock extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      id: '',\r\n      name: '',\r\n      description: ''\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    let blockId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    if(blockId.length > 0 && blockId !== '0' && this.props.blocks && isNN(this.props.blocks.data)){\r\n      let block = this.props.blocks.data.filter((d, i) => {\r\n        return d._id === blockId\r\n      });\r\n      if(isNN(block)){\r\n        this.setState({\r\n          id: block[0]._id,\r\n          name: block[0].name,\r\n          description: block[0].description\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onSave = () => {\r\n    if(isNN(this.state.name)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n         let block = {\r\n           _id: this.state.id,\r\n           name: this.state.name,\r\n           description: this.state.description\r\n         } as IBlock;\r\n          this.props.onSave(this.props.user.client._id, block, this.props.user, (this.props.blocks && this.props.blocks.data) ? this.props.blocks.data : [], (result: boolean, message: string) => {\r\n            this.setState({\r\n              isLoading: false,\r\n            });\r\n            if(result === true){\r\n              this.setState({\r\n                id: '',\r\n                name: '',\r\n                description: ''\r\n              });\r\n              Toast.success('Block saved successfully.');\r\n            }else{\r\n              Toast.fail(isNN(message) ? message : 'Failed to save block.');\r\n            }\r\n          });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <main style={{...styles.content, flex: 1, backgroundColor: COLOR.INVERSE}}>\r\n        <View style={modelStyles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Name\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.name} onChange={(event: any) => this.setState({name: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Description\" className='form-control' style={{...commonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.saveBtn}>\r\n            <Button\r\n            title=\"SAVE\"\r\n            onPress={this.onSave}\r\n            />\r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IBlock } from '../models/block';\r\nimport { IUser } from '../models/user';\r\nimport { save } from '../store/actions/block';\r\nimport Page from '../components/home/manager/edit-block';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onSave: (appClientId: string, data: IBlock, user: IUser, blocks: Array<IBlock>, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, blocks, callback))\r\n});\r\n\r\nexport const EditBlock = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, ScrollView, TextInput, Text, Picker, TextArea } from '../../common/elements';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome } from '../../../models/home';\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport { isNN } from '../../../util/index';\r\nimport Toast from  '../../../util/toast';\r\nimport { COLOR, MONTH } from '../../../constants';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  amount: number,\r\n  description: string,\r\n  month: number,\r\n  year: number,\r\n  searchText: string,\r\n  showHomes: boolean,\r\n  isAllHome: boolean,\r\n  homes: Array<IHome>\r\n};\r\n\r\nexport default class PaymentForm extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      amount: 0,\r\n      description: '',\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n      searchText: '',\r\n      showHomes: false,\r\n      isAllHome: false,\r\n      homes: []\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n  };\r\n\r\n  onSave = () => {\r\n    if(this.state.amount > 0 && (this.state.isAllHome || this.state.homes.length > 0)){\r\n      let homeIds = [] as any;\r\n      this.state.homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        amount: this.state.amount,\r\n        description: this.state.description,\r\n        month: this.state.month,\r\n        year: this.state.year,\r\n        isAllHome: this.state.isAllHome,\r\n        homes: homeIds\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onSave(this.props.user.client._id, data, this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          this.setState({\r\n            amount: 0,\r\n            description: '',\r\n            month: new Date().getMonth(),\r\n            year: new Date().getFullYear(),\r\n            searchText: '',\r\n            showHomes: false,\r\n            isAllHome: false,\r\n            homes: []\r\n          });\r\n          Toast.success('Payment saved successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to save payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Save.');\r\n    }\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({ \r\n      amount: 0,\r\n      description: '',\r\n      month: new Date().getMonth(),\r\n      year: new Date().getFullYear(),\r\n      searchText: '',\r\n      showHomes: false,\r\n      isAllHome: false,\r\n      homes: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Amount\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.amount > 0 ? this.state.amount + '' : ''} onChange={(event: any) => this.setState({amount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={{marginTop: 15}}>{'Payment for ' + this.state.year + ' '}</Text>\r\n            <Picker\r\n              className='form-control'\r\n              value={this.state.month}\r\n              style={ modelStyles.ele}\r\n              onChange={(event: any) => this.setState({month: event.target.value})}>\r\n              {\r\n                MONTH.filter((m, i) => m.value <= new Date().getMonth()).map((m: any, i: number) => {\r\n                  return(<option key={'month' + i} value={m.value}>{m.title}</option>);\r\n                })\r\n              }\r\n            </Picker>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text style={{marginRight: 15}}>{'Apply to Home(s): ' + (this.state.isAllHome ? '' : this.state.homes.length)}</Text>\r\n            <Checkbox isActive={this.state.isAllHome} text='All Homes' onPress={() => this.setState({isAllHome: !this.state.isAllHome})} />\r\n          </View>\r\n          {!this.state.isAllHome &&\r\n          <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.state.homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6, color: COLOR.SECONDARY }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          homes: this.state.homes.filter((h, i) => h._id !== d._id)\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n          }\r\n          {!this.state.isAllHome &&\r\n          <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Enter Home Number\" className='form-control'\r\n            style={{...modelStyles.ele,\r\n              flexDirection: 'row',\r\n              padding: 6,\r\n              borderWidth: 1,\r\n              borderColor: COLOR.HR_COLOR,\r\n              borderRadius: 5\r\n            }}\r\n            value={this.state.searchText} \r\n            onChange={(event: any) => this.setState({showHomes: true, searchText: event.target.value})} />\r\n          </View>\r\n          }\r\n            {(!this.state.isAllHome && this.state.showHomes && isNN(this.state.searchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n              <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.searchText.toLowerCase()) >= 0 && (this.state.homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6}}\r\n                      onClick={() => {\r\n                        let homes = this.state.homes;\r\n                        homes.push(d);\r\n                        this.setState({\r\n                          homes: homes\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n              </ScrollView>\r\n            }\r\n          <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n              <Button\r\n              style={{marginRight: 10}}\r\n              title=\"SAVE\"\r\n              onPress={this.onSave}\r\n              />\r\n              <Button\r\n              title=\"CLEAR\"\r\n              onPress={this.onClear}\r\n              />\r\n          </View>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Text, TextInput, ScrollView, TextArea } from '../../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../../common/button';\r\nimport Spinner from '../../common/spinner';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IHome, IPayment } from '../../../models/home';\r\nimport { styles as pageStyles } from \"../../../styles/page\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport { COLOR, MONTH } from '../../../constants';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN } from '../../../util';\r\nimport Toast from '../../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  isLoading: boolean,\r\n  isShowSearch: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  datePickerType: string,\r\n  datePickerDate: Date,\r\n  homes: Array<IHome>,\r\n  searchText: string,\r\n  showHomes: boolean,\r\n  data: Array<IPayment>,\r\n  isShowUpdateModel: boolean,\r\n  uPaymentId: string,\r\n  uAmount: number,\r\n  uDescription: string\r\n};\r\n\r\nexport default class PaymentHistory extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isShowSearch: true,\r\n      fromDate: '',\r\n      toDate: '',\r\n      datePickerType: '',\r\n      datePickerDate: new Date(),\r\n      homes: [],\r\n      searchText: '',\r\n      showHomes: false,\r\n      data: [],\r\n      isShowUpdateModel: false,\r\n      uPaymentId: '',\r\n      uAmount: 0,\r\n      uDescription: ''\r\n    };\r\n    this.onSearch = this.onSearch.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  };\r\n\r\n  onSearch = () => {\r\n    if(this.state.fromDate && this.state.toDate){\r\n      let homeIds = [] as any;\r\n      this.state.homes.map((h,i) => homeIds.push(h._id));\r\n      let data = {\r\n        fromDate: this.state.fromDate,\r\n        toDate: this.state.toDate,\r\n        homes: homeIds\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onSearch(this.props.user.client._id, data, this.props.user, (result: Array<IPayment>) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          isShowSearch: false,\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        Toast.fail(message ? message : 'Failed to load payment.');\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before Search.');\r\n    }\r\n  };\r\n\r\n  onUpdate = () => {\r\n    if(isNN(this.state.uPaymentId) && this.state.uAmount > 0){\r\n      let data = {\r\n        amount: this.state.uAmount,\r\n        description: this.state.uDescription,\r\n      };\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onUpdate(this.state.uPaymentId, data, this.props.user, (result: boolean, message: string) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          // this.props.navigation.navigation.goBack(null);\r\n          let pData = this.state.data;\r\n          var foundIndex = pData.findIndex(d => d._id === this.state.uPaymentId);\r\n          pData[foundIndex].amount = this.state.uAmount;\r\n          pData[foundIndex].description = this.state.uDescription;\r\n          this.setState({\r\n            isShowUpdateModel: false,\r\n            uPaymentId: '',\r\n            uAmount: 0,\r\n            uDescription: '',\r\n            data: pData\r\n          });\r\n          Toast.success('Payment updated successfully.');\r\n        }else{\r\n          Toast.fail( message ? message : 'Failed to update payment.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please fill all required fields before update.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n        <View style={styles.container}>\r\n          {this.state.isShowSearch ?\r\n          <View>\r\n            <View style={modelStyles.row}>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                this.setState({\r\n                  fromDate: date\r\n                });\r\n              }}\r\n              value={this.state.fromDate}\r\n              />\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <DatePicker\r\n              onChange={(date : any) => {\r\n                this.setState({\r\n                  toDate: date\r\n                });\r\n              }}\r\n              value={this.state.toDate}\r\n              />\r\n          </View>\r\n            <View style={modelStyles.row}>\r\n            <Text style={{marginRight: 15}}>{'Home(s): ' + (this.state.homes.length > 0 ? this.state.homes.length : 'All')}</Text>\r\n          </View>\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.state.homes.map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6, color: COLOR.SECONDARY }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          homes: this.state.homes.filter((h, i) => h._id !== d._id)\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            <View style={modelStyles.row}>\r\n            <TextInput type='text' placeholder=\"Enter Home Number\" className='form-control'\r\n            style={{...modelStyles.ele,\r\n              flexDirection: 'row',\r\n              padding: 6,\r\n              borderWidth: 1,\r\n              borderColor: COLOR.HR_COLOR,\r\n              borderRadius: 5\r\n            }}\r\n            value={this.state.searchText} \r\n            onChange={(event: any) => this.setState({showHomes: true, searchText: event.target.value})} />\r\n          </View>\r\n            {(this.state.showHomes && isNN(this.state.searchText) && this.props.homes && this.props.homes.data.length > 0 ) &&\r\n            <ScrollView style={{...modelStyles.row, width: '100%', overflow: 'scroll'}}>\r\n                {\r\n                  this.props.homes.data.filter((d, i) => d.number.toLowerCase().indexOf(this.state.searchText.toLowerCase()) >= 0 && (this.state.homes.filter(h => h._id === d._id).length < 1)).map((d: IHome, i: number) => {\r\n                    return(\r\n                      <Text \r\n                      className='pointer'\r\n                      key={'ho' + i}\r\n                      style={{flexDirection: 'column', marginRight: 6}}\r\n                      onClick={() => {\r\n                        let homes = this.state.homes;\r\n                        homes.push(d);\r\n                        this.setState({\r\n                          homes: homes\r\n                         });\r\n                      }}>{d.number}</Text>\r\n                    )\r\n                  })\r\n                }\r\n          </ScrollView>\r\n            }\r\n            <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                <Button\r\n                title=\"SEARCH\"\r\n                onPress={this.onSearch}\r\n                />\r\n            </View>\r\n          </View>\r\n          :\r\n          <View>\r\n             <Text \r\n             className='fr pointer'\r\n             style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'right'}}\r\n             onClick={() => {\r\n               this.setState({\r\n                 isShowSearch: true\r\n               });\r\n             }}>Show Search</Text>\r\n          </View>\r\n          }\r\n          <View>\r\n            {(isNN(this.state.data)) ?\r\n              this.state.data.map((d: IPayment, i: number) => {\r\n                return(\r\n                  <View key={i} style={pageStyles.row}>\r\n                    <View style={pageStyles.ele}>\r\n                        <Text style={{fontWeight: 'bold'}}>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text style={{fontWeight: 'bold'}}>{'Rs.' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                    </View>\r\n                    {isNN(d.description) &&\r\n                      <View style={pageStyles.ele}>\r\n                        <Text>{d.description}</Text>\r\n                      </View>\r\n                    }\r\n                    <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                      <Button title=\"Update\" onPress={() => {\r\n                        this.setState({\r\n                          isShowUpdateModel: true,\r\n                          uPaymentId: d._id,\r\n                          uAmount: d.amount,\r\n                          uDescription: d.description\r\n                        });\r\n                      }} />\r\n                    </View>\r\n                  </View>\r\n                )\r\n              })\r\n              :\r\n              <Text style={{padding: 20}}>No Payment found!!!</Text>\r\n            }\r\n          </View>\r\n          <Modal\r\n          open={this.state.isShowUpdateModel}\r\n          onClose={() => {\r\n            this.setState({\r\n              isShowUpdateModel: false,\r\n              uPaymentId: '',\r\n              uAmount: 0,\r\n              uDescription: ''\r\n            });\r\n          }}>\r\n          <View style={popupStyles.container}>\r\n            <View style={popupStyles.content}>\r\n              <View style={modelStyles.row}>\r\n                <TextInput type='text' placeholder=\"Amount\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.uAmount > 0 ? this.state.uAmount + '' : ''} onChange={(event: any) => this.setState({uAmount: +(event.target.value.replace(/[^0-9]/g, ''))})} />\r\n              </View>\r\n              <View style={modelStyles.row}>\r\n                <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.uDescription} onChange={(event: any) => this.setState({uDescription: event.target.value})} />\r\n              </View>\r\n              <View className='center' style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Button\r\n                  style={{marginRight: 10}}\r\n                  title=\"SAVE\"\r\n                  onPress={this.onUpdate}\r\n                  />\r\n                  <Button\r\n                  title=\"CLEAR\"\r\n                  onPress={() => {\r\n                    this.setState({\r\n                      uAmount: 0,\r\n                      uDescription: ''\r\n                    });\r\n                  }}\r\n                  />\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n          <Spinner visible={this.state.isLoading} />\r\n        </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  container:{\r\n    width: '100%',\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  }\r\n};","import * as React from 'react';\r\nimport { TouchableHighlight, View } from '../../common/elements';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { IHomes } from '../../../models/store/homes';\r\nimport { IPayment } from '../../../models/home';\r\nimport { COLOR } from '../../../constants';\r\nimport PaymentForm from './payment-form';\r\nimport PaymentHistory from './payment-history';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  homes: IHomes,\r\n  onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void,\r\n  onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => void\r\n};\r\n\r\ninterface IState {\r\n  activeTab: number,\r\n  history: Array<IPayment>\r\n};\r\n\r\nexport default class Payment extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: 1,\r\n      history: []\r\n    }\r\n  };\r\n  \r\n  componentDidMount(){\r\n    /*\r\n    this.props.onLoad(this.props.user.client._id, '', (result: Array<IPayment>) => {\r\n      if(isNN(result)){\r\n        this.setState({\r\n          history: result\r\n        });\r\n      }\r\n    }, (message: string) => {\r\n      Toast.fail(message ? message : 'Failed to load Payments.');\r\n    });\r\n    */\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              NEW\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>          \r\n              HISTORY\r\n            </TouchableHighlight>\r\n          </View>\r\n          <View className='tab-content' style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              this.state.activeTab === 1 ? \r\n                <PaymentForm history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} onSave={this.props.onSave} />\r\n              :\r\n                <PaymentHistory history={this.props.history} appUser={this.props.appUser} user={this.props.user} homes={this.props.homes} onSearch={this.props.onSearch} onUpdate={this.props.onUpdate} />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IUser } from '../models/user';\r\nimport { IPayment } from '../models/home';\r\nimport { loadAll, save, search, updatePay } from '../store/actions/payment';\r\nimport Page from '../components/home/manager/payment';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    homes: state.Homes\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (appClientId: string, homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadAll(appClientId, homeId, sCallback, fCallback)),\r\n    onSave: (appClientId: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(save(appClientId, data, user, callback)),\r\n    onSearch: (appClientId: string, data: any, user: IUser, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(search(appClientId, data, user, sCallback, fCallback)),\r\n    onUpdate: (id: string, data: any, user: IUser, callback: (result: boolean, message: string) => void) => dispatch(updatePay(id, data, user, callback))\r\n});\r\n\r\nexport const Payment = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { styles as modelStyles } from '../../../../styles/model';\r\nimport { isNN } from '../../../../util/index';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IBlock } from '../../../../models/block';\r\nimport { IHome } from '../../../../models/home';\r\n\r\ninterface IProps {\r\n  blocks: IBlocks,\r\n  data: IHome\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Info extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      homeId: '',\r\n      data: {} as IHome\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { blocks, data } = this.props;\r\n    let blockName = '';\r\n    if(data && isNN(data._id) && blocks && blocks.isUpToDate && !blocks.isError && blocks.data){\r\n      let block = blocks.data.filter((d: IBlock, i: number) => d._id === data._blockId);\r\n      if(block && block.length > 0){\r\n        blockName = block[0].name;\r\n      }\r\n    }\r\n    if(data && isNN(data._id)){\r\n    return(\r\n        <View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Block: ' + blockName}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Number: ' + data.number}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Address: ' + data.address}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'No of bed room(s): ' + data.bedRoom}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Parking: ' + data.parking}</Text>\r\n          </View>\r\n          <View style={modelStyles.row}>\r\n            <Text>{'Description: ' + data.description}</Text>\r\n          </View>\r\n        </View>\r\n    );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IMember } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IMember>\r\n};\r\n\r\nexport default class Members extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IMember>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Members.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n    if(isNN(data)){\r\n      return(\r\n        <View>\r\n          {\r\n            data.map((d: IMember, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{(isNN(d.createdBy) ? d.createdBy : '') + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>\r\n                </View>\r\n              </View>\r\n              );\r\n          })\r\n        }\r\n        </View>\r\n      );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IVehicle } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVehicle>\r\n};\r\n\r\nexport default class Vehicles extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IVehicle>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n    if(isNN(data)){\r\n      return(\r\n        <View>\r\n          {\r\n            data.map((d: IVehicle, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.type}</Text>                  \r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.number}</Text>\r\n                </View>\r\n              </View>\r\n              );\r\n          })\r\n        }\r\n        </View>\r\n      );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IServent } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IServent>\r\n};\r\n\r\nexport default class Servents extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IServent>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Servents.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n    if(isNN(data)){\r\n      return(\r\n        <View>\r\n          {\r\n            data.map((d: IServent, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.name}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n                </View>\r\n                {isNN(d.mobileNo) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.emailId) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.emailId}</Text>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n        }\r\n        </View>\r\n      );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TouchableHighlight } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { ITicket } from '../../../../models/home';\r\nimport { ITicketComment } from '../../../../models/home/ticket-comment';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<ITicket>,\r\n  viewId: string,\r\n  comments: Array<ITicketComment>\r\n};\r\n\r\nexport default class Tickets extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      viewId: '',\r\n      comments: []\r\n    }\r\n    this.onView = this.onView.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<ITicket>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onView = (id: string, comments: Array<ITicketComment>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        comments: []\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        comments: comments\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n    if(isNN(data)){\r\n      return(\r\n        <View>\r\n          {\r\n            data.map((d: ITicket, i: number) => {\r\n            return(\r\n              <View key={'tkt' + i} style={styles.row}>\r\n               <View style={styles.ele}>\r\n                  <Text>{d.createdBy + ' from ' + d._homeId + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                    <Text>{d.title}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                    <Text>{d.description}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text>{d.status}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    this.onView(d._id, d.comments);\r\n                  }}>\r\n                    <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Comments'}</Text>\r\n                  </TouchableHighlight>\r\n                </View>\r\n                {this.state.viewId === d._id &&\r\n                <View style={myStyles.cmntsCnr}>\r\n                  <View style={myStyles.cmntsHdr}>\r\n                    <Text style={myStyles.cmntsHdrTxt}>Comments</Text>\r\n                  </View>\r\n                  <View style={myStyles.cmntsCnt}>\r\n                    {isNN(this.state.comments) ?\r\n                      this.state.comments.map((e: ITicketComment, j: number) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? myStyles.cmntCnrFst : myStyles.cmntCnr}>\r\n                          <View style={myStyles.cmntHdr}>\r\n                            <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{e.comment}</Text>\r\n                          </View>\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No Comments found!!!</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n        }\r\n        </View>\r\n      );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst myStyles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR,\r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    marginTop: 3,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  }\r\n};","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { View, Text, TouchableHighlight, Image } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles as pageStyles } from '../../../../styles/page';\r\nimport { IVisitor } from '../../../../models/home';\r\nimport Toast from '../../../../util/toast';\r\nimport { FILE_BASE_PATH } from '../../../../constants';\r\nimport { toDateString } from '../../../../util/convert';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IVisitor>,\r\n  isZoomImage: boolean,\r\n  zoomImage: string\r\n};\r\n\r\nexport default class Visitors extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isZoomImage: false,\r\n      zoomImage: ''\r\n    }\r\n    this.onToggleZoomImage = this.onToggleZoomImage.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IVisitor>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Visitors.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onToggleZoomImage = (isZoom: boolean) => {\r\n    this.setState({\r\n      isZoomImage: isZoom\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n    if(isNN(data)){\r\n      return(\r\n        <View>\r\n          {\r\n            data.map((d: IVisitor, i: number) => {\r\n            return(\r\n              <View key={i} style={pageStyles.row}>\r\n                <View style={pageStyles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                {isNN(d.name) && \r\n                <View style={pageStyles.ele}>\r\n                <Text>{'[' + d._homeId + '] ' +  d.name}</Text>\r\n                </View>\r\n                }\r\n                {(d.age > 0 || isNN(d.gender)) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.age + ', ' + (d.gender === 'M' ? 'Male' : 'Female')}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.mobileNo) && \r\n                <View style={pageStyles.ele}>\r\n                  <Text>{d.mobileNo}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.image) &&\r\n                <View style={pageStyles.ele}>\r\n                  <TouchableHighlight className='pointer' onClick={() => this.setState({isZoomImage: true, zoomImage: d.image})}>\r\n                    <Image src={FILE_BASE_PATH + d.image} style={{height: 100}} />\r\n                  </TouchableHighlight>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n        }\r\n        <Modal\r\n          open={this.state.isZoomImage}\r\n          onClose={() => this.onToggleZoomImage(false)}>\r\n          <View style={{alignSelf: 'center', alignContent: 'center'}}>\r\n            <Image src={FILE_BASE_PATH + this.state.zoomImage} style={{height: '40%'}} />\r\n          </View>\r\n        </Modal>\r\n        </View>\r\n      );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text, TouchableHighlight } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles as pageStyles } from '../../../../styles/page';\r\nimport { IPayment } from '../../../../models/home';\r\nimport { ITransaction } from '../../../../models/home/transaction';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { MONTH, COLOR } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IPayment>,\r\n  viewId: string,\r\n  transactions: Array<ITransaction>\r\n};\r\n\r\nexport default class Payments extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      viewId: '',\r\n      transactions: []\r\n    }\r\n    this.onView = this.onView.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IPayment>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Payments.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  onView = (id: string, transactions: Array<ITransaction>) => {\r\n    if(this.state.viewId === id){\r\n      this.setState({\r\n        viewId: '',\r\n        transactions: []\r\n      });\r\n    }else{\r\n      this.setState({\r\n        viewId: id,\r\n        transactions: transactions\r\n      });\r\n    }\r\n  };\r\n\r\n  getAmountPaid = (transactions: Array<ITransaction>) => {\r\n    let amount = 0;\r\n    if(isNN(transactions)){\r\n      transactions.filter((d: ITransaction, i: number) => d.isSuccess === true).map((d:ITransaction, i: number) => amount += d.amount);\r\n    }\r\n    return amount;\r\n  };\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n    if(isNN(data)){\r\n      return(\r\n        <View>\r\n          {\r\n            data.map((d: IPayment, i: number) => {\r\n            return(\r\n              <View key={i} style={pageStyles.row}>\r\n                    <View style={pageStyles.ele}>\r\n                        <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text>{'Rs. ' + d.amount + ' for ' + MONTH.filter(m => m.value === d.forMonth)[0].title  + \"/\" + d.forYear + (isNN(d.mode) ? ' ' + d.mode : '') + (isNN(d.type) ? ' ' + d.type : '')}</Text>\r\n                    </View>\r\n                    <View style={pageStyles.ele}>\r\n                      <Text>{'Amount Paid Rs. ' + this.getAmountPaid(d.transactions)}</Text>\r\n                    </View>\r\n                    {isNN(d.description) &&\r\n                      <View style={pageStyles.ele}>\r\n                        <Text>{d.description}</Text>\r\n                      </View>\r\n                    }\r\n                    <View style={pageStyles.ele}>\r\n                      <TouchableHighlight style={{}} onClick={() => {\r\n                        this.onView(d._id, d.transactions);\r\n                      }}>\r\n                        <Text className='pointer' style={{color: COLOR.SECONDARY}}>{(this.state.viewId === d._id ? 'Hide' : 'View') + ' Transactions'}</Text>\r\n                      </TouchableHighlight>\r\n                    </View>\r\n                    {this.state.viewId === d._id &&\r\n                    <View style={myStyles.cmntsCnr}>\r\n                  <View style={myStyles.cmntsHdr}>\r\n                    <Text style={myStyles.cmntsHdrTxt}>Transactions</Text>\r\n                  </View>\r\n                  <View style={myStyles.cmntsCnt}>\r\n                    {isNN(this.state.transactions) ?\r\n                      this.state.transactions.map((e: ITransaction, j: number) => {\r\n                        return(\r\n                        <View key={'tktcmt' + j} style={j === 0 ? myStyles.cmntCnrFst : myStyles.cmntCnr}>\r\n                          <View style={myStyles.cmntHdr}>\r\n                            <Text>{e.createdBy + ' on ' + toDateString(e.createdAt)}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Ref Id: ' + e.txnRef}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Txn Id: ' + e.txnId}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Amount: ' + e.amount}</Text>\r\n                          </View>\r\n                          <View style={myStyles.cmntCnt}>\r\n                            <Text>{'Status: ' + (e.isSuccess ? 'SUCCESS' : 'FAILED')}</Text>\r\n                          </View>\r\n                          {\r\n                            isNN(e.reason) &&\r\n                            <View style={myStyles.cmntCnt}>\r\n                              <Text>{'Reason: ' + e.reason}</Text>\r\n                            </View>\r\n                          }\r\n                        </View>\r\n                        )\r\n                      })\r\n                      :\r\n                      <Text style={{padding: 20}}>No transactions found!!!</Text>\r\n                    }\r\n                  </View>\r\n                </View>\r\n                }\r\n                  </View>\r\n              );\r\n          })\r\n        }\r\n        </View>\r\n      );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nconst myStyles = {\r\n  cmntsCnr: {\r\n    width: '100%',\r\n    marginTop: 5,\r\n    marginBottom: 5\r\n  },\r\n  cmntsHdr: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.HR_COLOR, \r\n    'border-bottom-style': 'solid'\r\n  },\r\n  cmntsHdrTxt: {\r\n    // fontWeight: 'bold',\r\n  },\r\n  cmntsCnt: {\r\n    marginTop: 3,\r\n    width: '100%',\r\n  },\r\n  cmntCnr: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    borderTopWidth: 0.5,\r\n    borderTopColor: COLOR.HR_COLOR\r\n  },\r\n  cmntCnrFst: {\r\n    width: '100%',\r\n    paddingLeft: 3,\r\n    paddingRight: 3,\r\n    paddingTop: 5,\r\n    paddingBottom: 5\r\n  },\r\n  cmntHdr:{\r\n  },\r\n  cmntCnt:{\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../../../common/elements';\r\nimport { isNN } from '../../../../util/index';\r\nimport { styles } from '../../../../styles/page';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from '../../../../util/toast';\r\nimport { toDateString } from '../../../../util/convert';\r\nimport { FILE_BASE_PATH } from '../../../../constants';\r\n\r\ninterface IProps {\r\n  homeId: string,\r\n  onToggleLoading: (isLoading: boolean) => void,\r\n  onLoad: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  data: Array<IDocument>\r\n};\r\n\r\nexport default class Documents extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  };\r\n\r\n  componentDidMount(){\r\n    if(this.props.homeId.length > 0){\r\n      this.props.onToggleLoading(true);\r\n      this.props.onLoad(this.props.homeId, (result: Array<IDocument>) => {\r\n        this.props.onToggleLoading(false);\r\n        this.setState({\r\n          data: result\r\n        });\r\n      }, (message: string) => {\r\n        this.props.onToggleLoading(false);\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Vehicles.');\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { data } = this.state;\r\n    if(isNN(data)){\r\n      return(\r\n        <View>\r\n          {\r\n            data.map((d: IDocument, i: number) => {\r\n            return(\r\n              <View key={i} style={styles.row}>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n                </View>\r\n                <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{d.title}</Text>\r\n                </View>\r\n                {isNN(d.description) &&\r\n                <View style={styles.ele}>\r\n                  <Text>{d.description}</Text>\r\n                </View>\r\n                }\r\n                {isNN(d.file) &&\r\n                <View style={styles.ele}>\r\n                <a target='_blank' rel='noopener noreferrer' href={FILE_BASE_PATH + d.file}>{d.file}</a>\r\n                </View>\r\n                }\r\n              </View>\r\n              );\r\n          })\r\n        }\r\n        </View>\r\n      );\r\n    }else{\r\n      return(\r\n      <Text>No data found!!!</Text>\r\n      );\r\n    }\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, TouchableHighlight, Image } from '../../../common/elements';\r\nimport Spinner from '../../../common/spinner';\r\nimport { IUser } from '../../../../models/user/user';\r\nimport { IAppUser } from '../../../../models/app-user';\r\nimport { IUsers } from '../../../../models/store/users';\r\nimport { IHomes } from '../../../../models/store/homes';\r\nimport { IBlocks } from '../../../../models/store/blocks';\r\nimport { IHome, IMember, IVehicle, IServent, ITicket, IVisitor, IPayment } from '../../../../models/home';\r\nimport { IDocument } from '../../../../models/document';\r\nimport Toast from  '../../../../util/toast';\r\nimport Images from '../../../images';\r\nimport { COLOR } from '../../../../constants';\r\nimport { isNN } from '../../../../util/index';\r\nimport Info from './info';\r\nimport Members from './members';\r\nimport Vehicles from './vehicles';\r\nimport Servents from './servents';\r\nimport Tickets from './tickets';\r\nimport Visitors from './visitors';\r\nimport Payments from './payments';\r\nimport Documents from './documents';\r\n\r\ninterface IProps {\r\n  match: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  users: IUsers,\r\n  homes: IHomes,\r\n  blocks: IBlocks,\r\n  onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => void,\r\n  onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadServents: (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadVisitors: (homeId: string, sCallback: (result: Array<IVisitor>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => void,\r\n  onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  homeId: string,\r\n  activeTab: number,\r\n  data: IHome\r\n};\r\n\r\nexport default class ViewHome extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      homeId: '',\r\n      activeTab: 1,\r\n      data: {} as IHome\r\n    }\r\n    this.toggleLoading = this.toggleLoading.bind(this);\r\n  };\r\n\r\n  componentDidMount(){\r\n    let homeId = this.props.match.params.id; // this.props.navigation.state.params.id;\r\n    this.setState({\r\n      homeId: homeId\r\n    });\r\n    if(homeId.length > 0){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onLoad(homeId, (result: IHome) => {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n        if(result && isNN(result._id)){\r\n          this.setState({\r\n            data: result\r\n          });\r\n        }else{\r\n          Toast.fail('Failed to load Home.');\r\n        }\r\n      }, (message: string) => {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n        Toast.fail(isNN(message) ? message : 'Failed to load Home.');\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleLoading = (isLoading: boolean) => {\r\n    this.setState({\r\n      isLoading: isLoading\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {}\r\n\r\n  render() {\r\n    let { activeTab } = this.state;\r\n    return(\r\n      <main style={styles.content}>\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>          \r\n              <Image src={activeTab === 1 ? Images.infoInv : Images.info} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>          \r\n              <Image src={activeTab === 2 ? Images.membersInv : Images.members} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              <Image src={activeTab === 3 ? Images.vehicleInv : Images.vehicle} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 4})}>\r\n              <Image src={activeTab === 4 ? Images.serventInv : Images.servent} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 5 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 5})}>\r\n              <Image src={activeTab === 5 ? Images.supportInv : Images.support} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 6 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 6})}>\r\n              <Image src={activeTab === 6 ? Images.visitorsInv : Images.visitors} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 7 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 7})}>\r\n              <Image src={activeTab === 7 ? Images.moneyInv : Images.money} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 8 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 8})}>\r\n              <Image src={activeTab === 8 ? Images.documentInv : Images.document} style={styles.tabImage} />\r\n            </TouchableHighlight>\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              activeTab === 1 ?\r\n                  <Info blocks={this.props.blocks} data={this.state.data} />\r\n              :\r\n                activeTab === 2 ?\r\n                  <Members homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadMembers} />\r\n                :\r\n                  activeTab === 3 ?\r\n                    <Vehicles homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadVehicles} />\r\n                  :\r\n                    activeTab === 4 ?\r\n                      <Servents homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadServents} />\r\n                    :\r\n                      activeTab === 5 ?\r\n                        <Tickets homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadTickets} />\r\n                      :\r\n                        activeTab === 6 ?\r\n                          <Visitors homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadVisitors} />\r\n                        :\r\n                          activeTab === 7 ?\r\n                            <Payments homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadPayments} />\r\n                          :\r\n                            <Documents homeId={this.state.homeId} onToggleLoading={this.toggleLoading} onLoad={this.props.onLoadDocuments} />\r\n            }            \r\n          </View>\r\n        </View>\r\n        <Spinner visible={this.state.isLoading} />\r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  },\r\n  tabImage: {\r\n    width: 20,\r\n    height: 20\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IHome, IMember, IVehicle, IServent, ITicket, IPayment } from '../models/home';\r\nimport { IDocument } from '../models/document';\r\nimport { load } from '../store/actions/home';\r\nimport { loadAllByHome as loadMembers} from '../store/actions/member';\r\nimport { loadAllByHome as loadVehicles } from '../store/actions/vehicle';\r\nimport { loadAllByHome as loadServents } from '../store/actions/servent';\r\nimport { loadAllByHome as loadTickets } from '../store/actions/ticket';\r\nimport { loadAll as loadVisitors } from '../store/actions/visitor';\r\nimport { loadAll as loadPayments } from '../store/actions/payment';\r\nimport { loadAllByHome as loadDocuments } from '../store/actions/documents';\r\nimport Page from '../components/home/manager/view-home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    users: state.Users,\r\n    homes: state.Homes,\r\n    blocks: state.Blocks\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoad: (id: string, sCallback: (result: IHome) => void, fCallback: (message: string) => void) => dispatch(load(id, sCallback, fCallback)),\r\n    onLoadMembers: (homeId: string, sCallback: (result: Array<IMember>) => void, fCallback: (message: string) => void) => dispatch(loadMembers(homeId, sCallback, fCallback)),\r\n    onLoadVehicles: (homeId: string, sCallback: (result: Array<IVehicle>) => void, fCallback: (message: string) => void) => dispatch(loadVehicles(homeId, sCallback, fCallback)),\r\n    onLoadServents: (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => dispatch(loadServents(homeId, sCallback, fCallback)),\r\n    onLoadTickets: (homeId: string, sCallback: (result: Array<ITicket>) => void, fCallback: (message: string) => void) => dispatch(loadTickets(homeId, sCallback, fCallback)),\r\n    onLoadVisitors: (homeId: string, sCallback: (result: Array<IServent>) => void, fCallback: (message: string) => void) => dispatch(loadVisitors('', homeId, sCallback, fCallback)),\r\n    onLoadPayments: (homeId: string, sCallback: (result: Array<IPayment>) => void, fCallback: (message: string) => void) => dispatch(loadPayments('', homeId, sCallback, fCallback)),\r\n    onLoadDocuments: (homeId: string, sCallback: (result: Array<IDocument>) => void, fCallback: (message: string) => void) => dispatch(loadDocuments(homeId, sCallback, fCallback))\r\n});\r\n\r\nexport const ViewHome = connect(mapStateToProps, mapDispatchToProps)(Page);","import { actionTypes } from '../action-types';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IUser } from '../../models/user';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport Api from '../api/api';\r\nimport { isNNObject, isNN } from '../../util/index';\r\n//import { ROLE } from '../../constants';\r\n\r\nlet controller: string = 'poll';\r\n\r\nexport const loadAll = (appClientId: string, userRole: string, callback: (result: boolean) => void) => (dispatch: any) => {\r\n  dispatch(getPollResult([], false, false, ''));\r\n  // new Api().get(controller + 'loadall/?appClientId=' + appClientId + '&userRole=' + userRole, (result: any, message: string) => {\r\n  new Api().get(controller + 's/' + appClientId, (result: any, message: string) => {\r\n    if (isNNObject(result) && isNNObject(result.data)) {\r\n      dispatch(getPollResult(result.data, true, false, ''));\r\n      callback(true);\r\n    } else {\r\n      callback(false);\r\n    }\r\n  });\r\n};\r\n\r\nexport const save = (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => (dispatch: any) => {\r\n  if(data && isNN(data._id)){\r\n    new Api().put(controller + '/' + data._id, (result: any, message: string) => {\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        var foundIndex = polls.findIndex(d => d._id === result.data);\r\n        polls[foundIndex]._id = result.data;\r\n        polls[foundIndex].topic = data.topic;\r\n        polls[foundIndex].description = data.description;\r\n        polls[foundIndex].isAllowMultiple = data.isAllowMultiple;\r\n        polls[foundIndex].isOneVotePerFlat = data.isOneVotePerFlat;\r\n        polls[foundIndex].isAnonymous = data.isAnonymous;\r\n        polls[foundIndex].fromDate = data.fromDate;\r\n        polls[foundIndex].toDate = data.toDate;\r\n        polls[foundIndex].options = data.options;\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        scallback(true);\r\n      }else{\r\n        scallback(false);\r\n      }\r\n    }, data);\r\n  }else{\r\n    new Api().post(controller + '/' + appClientId, (result: any, message: string) => {\r\n      // console.log(\"OUT: \" + result);\r\n      if(isNNObject(result) && isNN(result.data))\r\n      {\r\n        data._id = result.data;\r\n        data.createdBy = user.name;\r\n        polls.unshift(data);\r\n        dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n        scallback(true);\r\n      }else{\r\n        scallback(false);\r\n      }\r\n    }, data);\r\n  }\r\n};\r\n\r\nexport const remove = (id: string, polls: Array<IPoll>, userId: string, scallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().delete(controller + '/' + id, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNNObject(result.data) && result.data === true)\r\n    {\r\n      polls = polls.filter((d, i) => d._id !== id);\r\n      dispatch(getPollResult((isNNObject(polls) ? polls : []), true, false, \"\"));\r\n      scallback(true);\r\n    }else{\r\n      scallback(false);\r\n    }\r\n  }, {\r\n    Id: id,\r\n    UserId: userId\r\n  });\r\n};\r\n\r\nexport const vote = (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => (dispatch: any) => {\r\n  new Api().post(controller + '/vote/' + pollId, (result: any, message: string) => {\r\n    if(isNNObject(result) && isNN(result.data))\r\n    {\r\n      var foundIndex = polls.data.findIndex(d => d._id === pollId);\r\n      polls.data[foundIndex].votes = result.data;\r\n      dispatch(getPollResult(polls.data, true, false, ''));\r\n\r\n      /*\r\n      // Update home\r\n      if(!isNN(user.homes[appUser.homeIndex].votes)){\r\n        user.home[appUser.homeIndex].vote = [];\r\n      }\r\n      result.data.map((v: IVote, vi: number) => {\r\n        user.home[appUser.homeIndex].vote.push(v);\r\n      });\r\n      dispatch(getUserResult(user));\r\n      */\r\n      // Update polls\r\n      // if(polls.isUpToDate && !polls.isError && isNN(polls.data) && ((',' + user.type + ',').indexOf(ROLE.ADMIN) >= 0 || (',' + user.type + ',').indexOf(ROLE.MANAGER) >= 0)){\r\n        if(polls.isUpToDate && !polls.isError && isNN(polls.data)){\r\n        let lstPoll = polls.data;\r\n        let pollIndex = lstPoll.findIndex(p => p._id === pollId);\r\n        lstPoll[pollIndex].votes = result.data;\r\n        /*\r\n        if(!isNN(lstPoll[pollIndex].votes)){\r\n          lstPoll[pollIndex].vote = [];\r\n        }\r\n        result.data.map((v: IVote, vi: number) => {\r\n          lstPoll[pollIndex].vote.unshift(v);\r\n        });\r\n        */\r\n        dispatch(getPollResult(lstPoll, true, false, \"\"));\r\n      }\r\n     // dispatch(getUserResult(user));\r\n      \r\n      scallback(true);\r\n    }else{\r\n      scallback(false);\r\n    }\r\n  }, {\r\n    votes: votes\r\n  });\r\n};\r\n\r\nconst getPollResult = (data: Array<IPoll>, isUpToDate: boolean, isError: boolean, errorMessage: string) => ({\r\n  type: actionTypes.LOAD_POLLS,\r\n  payload: { \r\n    data,\r\n    isUpToDate,\r\n    isError,\r\n    errorMessage\r\n  } as IPolls\r\n});","import { jsError } from \"./index\";\r\n\r\nexport function percentage(_partialValue: number, _totalValue: number) {\r\n    try{\r\n        if(_totalValue > 0){\r\n            return (100 * _partialValue) / _totalValue;\r\n        }else{\r\n            return 0;\r\n        }\r\n    } catch (ex) {\r\n    jsError(ex, 'calc.percentage'); \r\n    return 0; \r\n  }\r\n };","import * as React from 'react';\r\nimport Modal from 'react-responsive-modal';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { TouchableHighlight, View, Text, Image, TextInput, TextArea } from '../../common/elements';\r\nimport DatePicker from 'react-date-picker';\r\nimport Button from '../../common/button';\r\nimport Checkbox from '../../common/checkbox';\r\nimport Spinner from '../../common/spinner';\r\nimport { IPolls } from '../../../models/store/polls';\r\nimport { IPoll } from '../../../models/poll/index';\r\nimport { IAppUser } from '../../../models/app-user';\r\nimport { IUser } from '../../../models/user/user';\r\nimport { styles } from \"../../../styles/page\";\r\nimport { styles as iconStyles } from \"../../../styles/icon\";\r\nimport { styles as modelStyles } from \"../../../styles/model\";\r\nimport {styles as CommonStyles} from '../../../styles/common';\r\nimport {styles as popupStyles} from '../../../styles/popup';\r\nimport Images from '../../images';\r\nimport { COLOR } from '../../../constants';\r\nimport { toDateString } from '../../../util/convert';\r\nimport { isNN, isNNObject } from '../../../util/index';\r\nimport { percentage } from '../../../util/calc';\r\nimport Toast from  '../../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onSave: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => void,\r\n  onRemove: (id: string, polls: Array<IPoll>, userID: string, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isEdit: boolean,\r\n  isLoading: boolean,\r\n  id: string,\r\n  topic: string,\r\n  description: string,\r\n  isAllowMultiple: boolean,\r\n  isOneVotePerFlat: boolean,\r\n  isAnonymous: boolean,\r\n  fromDate: any,\r\n  toDate: any,\r\n  pollOption: Array<string>,\r\n  showVotePoll: IPoll,\r\n  datePickerType: string,\r\n  datePickerDate: Date\r\n};\r\n\r\nexport default class Poll extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      isLoading: false,\r\n      id: '',\r\n      topic: '',\r\n      description: '',\r\n      isAllowMultiple: false,\r\n      isOneVotePerFlat: false,\r\n      isAnonymous: false,\r\n      fromDate: new Date(),\r\n      toDate: new Date(),\r\n      pollOption: [],\r\n      showVotePoll: { _id: '' } as IPoll,\r\n      datePickerType: '',\r\n      datePickerDate: new Date()\r\n    }\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n   onSave = () => {\r\n    if(isNN(this.state.topic) && isNN(this.state.description) && isNNObject(this.state.fromDate) && isNNObject(this.state.toDate) && isNN(this.state.pollOption.filter(po => isNN(po)))){\r\n        this.setState({\r\n          isLoading: true\r\n        });\r\n        let poll = {\r\n          _id: this.state.id,\r\n          topic: this.state.topic,\r\n          description: this.state.description,\r\n          isAllowMultiple: this.state.isAllowMultiple,\r\n          isOneVotePerFlat: this.state.isOneVotePerFlat,\r\n          isAnonymous: this.state.isAnonymous,\r\n          fromDate: this.state.fromDate,\r\n          toDate: this.state.toDate,\r\n          options: this.state.pollOption.filter(po => isNN(po))\r\n        } as IPoll;\r\n        this.props.onSave(this.props.user.client._id, poll, this.props.polls.data, this.props.user, (result: boolean) => {\r\n          this.setState({\r\n            isLoading: false,\r\n          });\r\n          if(result === true){\r\n            this.setState({\r\n              isEdit: false,\r\n              id: '',\r\n              topic: '',\r\n              description: '',\r\n              isAllowMultiple: false,\r\n              isOneVotePerFlat: false,\r\n              isAnonymous: false,\r\n              fromDate: new Date(),\r\n              toDate: new Date(),\r\n              pollOption: [],\r\n              showVotePoll: { _id: '' } as IPoll,\r\n              datePickerType: '',\r\n              datePickerDate: new Date()\r\n            });\r\n            Toast.success('Poll saved successfully.');\r\n          }else{\r\n            Toast.fail('Failed to save pol.');\r\n          }\r\n        });\r\n    }else{\r\n      Toast.warn('Please fill all the required fields before '+ (this.state.id.length > 0 ? 'Update' : 'Save') + '.');\r\n    }\r\n  };\r\n\r\n  onRemove = (id: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure you wish to delete?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onRemove(id, this.props.polls.data, this.props.user._id, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(result === true){\r\n                Toast.success('Poll removed successfully.');\r\n              }else{\r\n                Toast.fail('Failed to remove poll.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  loadVotes = () => {\r\n    if(isNNObject(this.state.showVotePoll) && this.state.showVotePoll._id.length > 0){\r\n      let votes = [] as any;\r\n      this.state.showVotePoll.options.map((po: string, poi: number) => \r\n        votes.push({\r\n          option: po,\r\n          votes: this.state.showVotePoll.votes.filter(v => v.option === poi).length\r\n        })\r\n      );\r\n      return(\r\n        <View style={{padding: 15}}>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{this.state.showVotePoll.topic}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{this.state.showVotePoll.description}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{'Votes: ' + this.state.showVotePoll.votes.length}</Text>\r\n          </View>\r\n        {\r\n        votes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n          return(\r\n            <View key={'pvo' + voi} style={styles.ele}>\r\n              <Text>\r\n                {vo.votes + ' (' + percentage(vo.votes, this.state.showVotePoll.votes.length) +  '%) - ' + vo.option}\r\n              </Text>\r\n            </View>\r\n          )\r\n        })\r\n        }\r\n        </View>\r\n      )\r\n    }else{\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n        {this.state.isEdit === false &&\r\n        <Button\r\n        title=\"ADD NEW\"\r\n        onPress={() => {\r\n          this.setState({\r\n            isEdit: true,\r\n            id: '',\r\n            topic: '',\r\n            description: '',\r\n            isAllowMultiple: false,\r\n            isOneVotePerFlat: false,\r\n            isAnonymous: false,\r\n            fromDate: new Date(),\r\n            toDate: new Date(),\r\n            pollOption: [],\r\n            showVotePoll: { _id: '' } as IPoll,\r\n            datePickerType: '',\r\n            datePickerDate: new Date()\r\n           });\r\n        }}\r\n        />\r\n        }\r\n        {\r\n         (this.state.isEdit === true && this.state.id.length === 0)  ?\r\n         <View key={\"p0\"} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.topic} onChange={(event: any) => this.setState({topic: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => this.setState({isAllowMultiple: !this.state.isAllowMultiple})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => this.setState({isOneVotePerFlat: !this.state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAnonymous} text='Anonymous Voting' onPress={() => this.setState({isAnonymous: !this.state.isAnonymous})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(this.state.pollOption) ?\r\n            this.state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} style={styles.ele}>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={e} onChange={(event: any) => {\r\n                    let newOptions = this.state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    this.setState({pollOption: newOptions});\r\n                  }} />\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    let newOptions = this.state.pollOption;\r\n                    delete newOptions[j];\r\n                    this.setState({pollOption: newOptions});\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text>No Option found!!!</Text>\r\n            </View>\r\n          }\r\n            <View style={styles.ele}>\r\n              <TouchableHighlight\r\n              onClick={() => {\r\n                if(!isNN(this.state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = this.state.pollOption;\r\n                  newOptions.push('');\r\n                  this.setState({pollOption: newOptions});\r\n                }\r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          <View style={styles.ele}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n              <Image src={Images.tick} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n            <TouchableHighlight style={{}} onClick={() => {\r\n              this.setState({\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>\r\n          </View>\r\n        </View>\r\n        :\r\n        []\r\n        }\r\n      {\r\n      (isNNObject(this.props.polls) && this.props.polls.isUpToDate && !this.props.polls.isError && isNN(this.props.polls.data)) ?      \r\n      this.props.polls.data.map((d: IPoll, i: number) => {\r\n      return(\r\n        (this.state.isEdit === true && this.state.id === d._id) ?\r\n        <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <TextInput type='text' placeholder=\"Topic\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.topic} onChange={(event: any) => this.setState({topic: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <TextArea placeholder=\"Description\" className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={this.state.description} onChange={(event: any) => this.setState({description: event.target.value})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                fromDate: date\r\n              });\r\n            }}\r\n            value={this.state.fromDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <DatePicker\r\n            onChange={(date : any) => {\r\n              this.setState({\r\n                toDate: date\r\n              });\r\n            }}\r\n            value={this.state.toDate}\r\n            />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAllowMultiple} text='Allow Multiple Votes' onPress={() => this.setState({isAllowMultiple: !this.state.isAllowMultiple})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isOneVotePerFlat} text='One Vote per Flat' onPress={() => this.setState({isOneVotePerFlat: !this.state.isOneVotePerFlat})} />        \r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Checkbox isActive={this.state.isAnonymous} text='Anonymous Voting' onPress={() => this.setState({isAnonymous: !this.state.isAnonymous})} />\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(this.state.pollOption) ?\r\n            this.state.pollOption.map((e: string, j: number) => {\r\n              return(\r\n                <View key={'pop' + j} style={styles.ele}>\r\n                  <TextInput type='text' key={'popt' + j} placeholder={\"Option\" + (j + 1)} className='form-control' style={{...CommonStyles.textInput, ...modelStyles.ele}} value={e} onChange={(event: any) => {\r\n                    let newOptions = this.state.pollOption;\r\n                    // var foundIndex = newOptions.findIndex(f => f.id === e.id);\r\n                    newOptions[j] = event.target.value;\r\n                    this.setState({pollOption: newOptions});\r\n                  }} />\r\n                  <TouchableHighlight style={{}} onClick={() => {\r\n                    let newOptions = this.state.pollOption;\r\n                    delete newOptions[j];\r\n                    this.setState({pollOption: newOptions});\r\n                  }}>\r\n                    <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n                  </TouchableHighlight>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text>No Option found!!!</Text>\r\n            </View>\r\n          }\r\n            <View style={styles.ele}>\r\n              <TouchableHighlight\r\n              onClick={() => {\r\n                if(!isNN(this.state.pollOption.filter(h => !isNN(h))))\r\n                {\r\n                  let newOptions = this.state.pollOption;\r\n                  newOptions.push('');\r\n                  this.setState({pollOption: newOptions});\r\n                }            \r\n              }}\r\n              >\r\n                <Text>Add More +</Text>\r\n              </TouchableHighlight>\r\n            </View>\r\n          <View style={styles.ele}>\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={this.onSave}>\r\n              <Image src={Images.tick} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>                \r\n            <TouchableHighlight style={{}} onClick={() => {\r\n              this.setState({\r\n                isEdit: false,\r\n                id: '',\r\n                topic: '',\r\n                description: '',\r\n                isAllowMultiple: false,\r\n                isOneVotePerFlat: false,\r\n                isAnonymous: false,\r\n                fromDate: new Date(),\r\n                toDate: new Date(),\r\n                pollOption: []\r\n              });\r\n            }}>\r\n              <Image src={Images.cancel} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>        \r\n          </View>\r\n        </View>\r\n        :\r\n        <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n          <View style={styles.ele}>\r\n            <Text style={{fontWeight: 'bold'}}>{d.topic}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{d.description}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>{toDateString(d.fromDate) + \" to \" + toDateString(d.toDate)}</Text>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isAllowMultiple === true ? modelStyles.radioActive : {...modelStyles.radio, marginLeft: 5})}\r\n            >\r\n              <Text style={(d.isAllowMultiple === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>Allow Multiple Votes</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isOneVotePerFlat === true ? {...modelStyles.radioActive} : {...modelStyles.radio, marginLeft: 5})}\r\n             >\r\n              <Text style={(d.isOneVotePerFlat === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>One Vote per Flat</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <View \r\n            style={(d.isAnonymous === true ? {...modelStyles.radioActive} : {...modelStyles.radio, marginLeft: 5})}\r\n             >\r\n              <Text style={(d.isAnonymous === true ? {...modelStyles.radioActiveText} : {...modelStyles.radioText})}>Anonymous Voting</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.ele}>\r\n            <Text>Options: </Text>\r\n          </View>\r\n          {\r\n            isNN(d.options) ?\r\n            d.options.map((e: string, j: number) => {\r\n              return(\r\n                <View key={\"po\" + j} style={styles.ele}>\r\n                  <Text key={\"pot\" + j} style={{width: '100%'}}>{e}</Text>\r\n                </View>\r\n              )\r\n            })\r\n            :\r\n            <View style={styles.ele}>\r\n              <Text style={{padding: 10}}>No Option found!!!</Text> \r\n            </View>           \r\n          }\r\n          <View style={styles.ele}>\r\n          {(d.fromDate > new Date()) &&\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.setState({\r\n                isEdit: true,\r\n                id: d._id,\r\n                topic: d.topic,\r\n                description: d.description,\r\n                isAllowMultiple: d.isAllowMultiple,\r\n                isOneVotePerFlat: d.isOneVotePerFlat,\r\n                isAnonymous: d.isAnonymous,\r\n                fromDate: d.fromDate,\r\n                toDate: d.toDate,\r\n                pollOption: (isNN(d.options) ? d.options : [])\r\n              });\r\n            }}>\r\n              <Image src={Images.edit} style={iconStyles.editIcon} />\r\n            </TouchableHighlight>\r\n          }\r\n            <TouchableHighlight style={{marginRight: 25}} onClick={() => {\r\n              this.onRemove(d._id);\r\n            }}>\r\n              <Image src={Images.delete} style={iconStyles.deleteIcon} />\r\n            </TouchableHighlight>\r\n            <Text className='pointer' style={{color: COLOR.SECONDARY}} onClick={() => {\r\n              this.setState({showVotePoll: d})\r\n            }}>View Votes</Text>\r\n          </View>\r\n        </View>\r\n      )\r\n      })\r\n      :\r\n      <Text style={{padding: 20}}>{(this.props.polls.isUpToDate ? (this.props.polls.isError ? this.props.polls.errorMessage : \"No poll found!!!\") : \"Loading...\")}</Text>\r\n    }\r\n    <Modal\r\n      open={(isNNObject(this.state.showVotePoll) && this.state.showVotePoll._id.length > 0)}\r\n      onClose={() => this.setState({showVotePoll : { _id: '' } as IPoll})}>\r\n      <View style={popupStyles.container}>\r\n        <View style={popupStyles.content}>\r\n        {\r\n          this.loadVotes()\r\n        }\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n    <Spinner visible={this.state.isLoading} />\r\n    </View>  \r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport Button from '../common/button';\r\nimport Checkbox from '../common/checkbox';\r\nimport Spinner from '../common/spinner';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { styles } from \"../../styles/page\";\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { percentage } from '../../util/calc';\r\nimport { COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  polls: IPolls,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  votePollId: string,\r\n  votes: Array<IVote>,\r\n  currentDate: Date\r\n};\r\n\r\nexport default class Poll extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    let currentDate = new Date();\r\n    this.state = {\r\n      isLoading: false,\r\n      votePollId: '',\r\n      votes: [],\r\n      currentDate: new Date((currentDate.getMonth() + 1) + '/' + currentDate.getDate() + '/' + currentDate.getFullYear())\r\n    }\r\n    this.loadVotes = this.loadVotes.bind(this);\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  loadVotes = (poll: IPoll) => {\r\n    let votes = [] as any;\r\n    poll.options.map((po: string, poi: number) => \r\n      votes.push({\r\n        option: po,\r\n        votes: poll.votes.filter(v => v.option === poi).length\r\n      })\r\n    );\r\n    return(\r\n    votes.sort(function(a: any, b: any){return b.votes - a.votes}).map((vo: any, voi: number) => {\r\n      return(\r\n        <View key={'pvo' + voi} style={styles.ele}>\r\n          <Text>\r\n            {vo.votes + ' (' + percentage(vo.votes, poll.votes.length) +  '%) - ' + vo.option}\r\n          </Text>\r\n        </View>\r\n      )\r\n    })\r\n    )\r\n  };\r\n\r\n  onSelectOption = (poll: IPoll, optionId: number) => {\r\n    if(this.state.votePollId === poll._id){\r\n      if(isNN(this.state.votes.filter(v => v.option === optionId))){\r\n        this.setState({\r\n          votes: this.state.votes.filter(v => v.option !== optionId)\r\n        });\r\n      }else{\r\n        let votes = [] as Array<IVote>;\r\n        if(poll.isAllowMultiple){\r\n          votes = this.state.votes;\r\n        }\r\n          votes.push({\r\n            _homeId: this.props.user.homes[this.props.appUser.homeIndex]._id,\r\n            _memberId: this.props.user._id,\r\n            option: optionId,\r\n            isActive: true,\r\n            createdBy: this.props.user._id\r\n          } as IVote);\r\n          this.setState({\r\n            votes: votes\r\n          });\r\n        // if(poll.isAllowMultiple || !isNN(this.state.votes.filter(v => v.pollId === poll.id))){\r\n\r\n        // }\r\n      }\r\n    }else{\r\n      let votes = [] as Array<IVote>;\r\n      votes.push({\r\n        _homeId: this.props.user.homes[this.props.appUser.homeIndex]._id,\r\n        _memberId: this.props.user._id,\r\n        option: optionId,\r\n        isActive: true,\r\n        createdBy: this.props.user._id\r\n      } as IVote);\r\n      this.setState({\r\n        votePollId: poll._id,\r\n        votes: votes\r\n      });\r\n    }\r\n  };\r\n\r\n  onVote = (pollId: string) => {\r\n    if(this.state.votePollId === pollId &&  isNN(this.state.votes)){\r\n      this.setState({\r\n        isLoading: true\r\n      });\r\n      this.props.onVote(pollId, this.state.votes, this.props.polls, this.props.user, this.props.appUser, (result: boolean) => {\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        if(result === true){\r\n          this.setState({\r\n            votePollId: '',\r\n            votes: []\r\n          });\r\n          Toast.success('Your vote saved successfully.');\r\n        }else{\r\n          Toast.fail('Failed to save your vote.');\r\n        }\r\n      });\r\n    }else{\r\n      Toast.warn('Please select any option to vote.');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n      {\r\n        (isNNObject(this.props.polls) && this.props.polls.isUpToDate && !this.props.polls.isError && isNN(this.props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= this.state.currentDate))) ?\r\n        this.props.polls.data.filter(p => isNN(p.options) && new Date(p.fromDate) <= new Date() && new Date(p.toDate) >= this.state.currentDate).map((d: IPoll, i: number) => {\r\n          return(\r\n            <View key={\"p\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.topic}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.description}</Text>\r\n              </View>\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === this.props.user.homes[this.props.appUser.homeIndex]._id))) &&\r\n                d.options.map((o: string, oi: number) => {\r\n                  return(\r\n                    <View key={\"popt\" + oi} style={styles.ele}>\r\n                      <Checkbox isActive={(this.state.votePollId === d._id && isNN(this.state.votes.filter(v => v.option === oi)))} text={o} onPress={() => this.onSelectOption(d, oi)} />\r\n                    </View>\r\n                  )\r\n                })\r\n              }\r\n              {\r\n                (d.isOneVotePerFlat !== true || !isNN(d.votes) || !isNN(d.votes.filter(vo => vo._homeId === this.props.user.homes[this.props.appUser.homeIndex]._id))) &&\r\n                <View style={{marginTop: 5, width: '100%'}}>\r\n                  <Button title=\"Vote\" onPress={() => this.onVote(d._id)} style={{width: '100%'}} />\r\n                </View>\r\n              }\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>Your Votes:</Text>\r\n              </View>\r\n              {isNN(d.options) &&\r\n                this.loadVotes(d)\r\n              }\r\n            </View>\r\n          )\r\n      })\r\n      :\r\n      <Text style={{padding: 20}}>{(this.props.polls.isUpToDate ? (this.props.polls.isError ? this.props.polls.errorMessage : \"No active poll found!!!\") : \"Loading...\")}</Text>\r\n    }\r\n    <Spinner visible={this.state.isLoading} />\r\n    </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport Button from '../common/button';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IOuting } from '../../models/outing';\r\nimport { styles } from \"../../styles/page\";\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { isNN, isNNObject } from '../../util/index';\r\nimport { toDateString } from '../../util/convert';\r\nimport { ROLE, COLOR } from '../../constants';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  outings: IOutings,\r\n  onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean\r\n};\r\n\r\nexport default class Outing extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false\r\n    }\r\n    this.onReturnBack = this.onReturnBack.bind(this);\r\n  };\r\n\r\n  componentDidMount(){};\r\n  \r\n  componentWillUnmount(){};\r\n  \r\n  onReturnBack = (outingId: string) => {\r\n    confirmAlert({\r\n      title: 'Confirm to return back from outing',\r\n      message: 'Are you sure? You return back from this outing?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {\r\n            this.setState({\r\n              isLoading: true\r\n            });\r\n            this.props.onReturnBack(outingId, this.props.user, this.props.outings, (result: boolean) => {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n              if(isNNObject(result)){\r\n                Toast.success('Successfully returned back.');\r\n              }else{\r\n                Toast.fail('Failed to Return back.');\r\n              }\r\n            });\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return(\r\n      <View>\r\n      {(this.props.appUser.role === ROLE.USER && (!isNNObject(this.props.outings) || !isNN(this.props.outings.data.filter(o => o.isReturned !== true)))) &&\r\n        <Button\r\n        title=\"Go Outing\"\r\n        onPress={() => {\r\n          this.props.history.push('new-outing')\r\n        }}\r\n        />\r\n      }\r\n      {\r\n        (isNNObject(this.props.outings) && this.props.outings.isUpToDate && !this.props.outings.isError && isNN(this.props.outings.data)) ?\r\n        this.props.outings.data.map((d: IOuting, i: number) => {\r\n          return(\r\n            <View key={\"o\" + d._id} style={{...styles.row, borderBottomWidth: 1, borderBottomColor: COLOR.HR_COLOR, borderBottomStyle: 'solid'}}>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d._homeId + ' by ' + d.createdBy + ' on ' + toDateString(d.createdAt)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                  <Text style={{fontWeight: 'bold'}}>{toDateString(d.fromDate) + \" to \" + toDateString(d.toDate)}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text style={{fontWeight: 'bold'}}>{d.place}</Text>\r\n              </View>\r\n              <View style={styles.ele}>\r\n                <Text>{d.address}</Text>\r\n              </View>\r\n              {this.props.appUser.role !== ROLE.USER && \r\n                <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Text>No one in the home</Text>\r\n                </View>\r\n              }\r\n              {(this.props.appUser.role === ROLE.USER && d.isReturned !== true) &&\r\n                <View style={{...modelStyles.saveBtn, flexDirection: 'row'}}>\r\n                  <Button title=\"Return to Home\" onPress={() => {\r\n                    this.onReturnBack(d._id);\r\n                  }} />\r\n                </View>\r\n              }\r\n            </View>\r\n          )\r\n        })\r\n        :\r\n        <Text style={{padding: 20}}>{(this.props.outings.isUpToDate ? (this.props.outings.isError ? this.props.outings.errorMessage : \"No Outings found!!!\") : \"Loading...\")}</Text>\r\n      }\r\n        <Spinner visible={this.state.isLoading} />\r\n      </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { TouchableHighlight, View } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport { IAds } from '../../models/store/ads';\r\nimport { IPolls } from '../../models/store/polls';\r\nimport { IOutings } from '../../models/store/outings';\r\nimport { IPoll, IVote } from '../../models/poll/index';\r\nimport { IComplaint, IRemainder } from '../../models/home/index';\r\nimport AMPoll from './manager/poll';\r\nimport UserPoll from './poll';\r\nimport Outing from './outing';\r\nimport CustomList from './custom-list';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNNObject } from '../../util/index';\r\nimport Toast from  '../../util/toast';\r\n\r\ninterface IProps {\r\n  history: any,\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  ads: IAds,\r\n  polls: IPolls,\r\n  outings: IOutings,\r\n  remainders: Array<IRemainder>,\r\n  complaints: Array<IComplaint>,\r\n  onLoadAds: (appClientId: string, callback: (result: boolean) => void) => void,\r\n  onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => void,\r\n  onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => void,\r\n  onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, scallback: (result: boolean) => void) => void,\r\n  onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => void,\r\n  onLoadOuting: (appClientId: string, homeId: string, callback: (result: boolean) => void) => void,\r\n  onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  activeTab: number,\r\n  isShowPoll: boolean\r\n};\r\n\r\nexport default class Notification extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: (isNNObject(this.props.user) && (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER)) ? 1 : 2,\r\n      isShowPoll: isNNObject(this.props.user) && (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER || (this.props.appUser.role === ROLE.USER && this.props.appUser.homeIndex >= 0))\r\n    }\r\n  };\r\n  \r\n  componentDidMount(){\r\n    this.props.onLoadAds(this.props.user.client._id, (result: boolean) => {\r\n      if(!result){\r\n        Toast.fail('Failed to load Ads.');\r\n      }\r\n    });\r\n    if(this.state.isShowPoll){\r\n      this.props.onLoadPoll(this.props.user.client._id, this.props.appUser.role, (result: boolean) => {\r\n        if(!result){\r\n          Toast.fail('Failed to load Poll.');\r\n        }\r\n      });\r\n    }\r\n    this.props.onLoadOuting(this.props.user.client._id, this.props.appUser.role === ROLE.USER ? this.props.user.homes[this.props.appUser.homeIndex]._id : '', (result: boolean) => {\r\n      if(!result){\r\n        Toast.fail('Failed to load Outing.');\r\n      }\r\n    });\r\n  };\r\n  \r\n  componentWillUnmount(){};\r\n\r\n  render() {\r\n    return(\r\n      <main style={styles.content}>\r\n        <View style={{flex: 1, flexDirection: 'column', width: '100%', marginBottom: 2}}>\r\n          <View className='tab-bar' style={{flex: 1, flexDirection: 'row'}}>\r\n          {this.state.isShowPoll &&\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 1 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 1})}>\r\n              POLL\r\n            </TouchableHighlight>\r\n          }\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 2 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 2})}>\r\n              ADS\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 3 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 3})}>\r\n              OUTING\r\n            </TouchableHighlight>\r\n            {/* <TouchableHighlight className='tab' style={(this.state.activeTab === 4 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 4})}>\r\n              REMINDERS\r\n            </TouchableHighlight>\r\n            <TouchableHighlight className='tab' style={(this.state.activeTab === 5 ? {...styles.tab, ...styles.activeTab} : styles.tab)} onClick={() => this.setState({activeTab: 5})}>\r\n            COMPLAINTS\r\n            </TouchableHighlight> */}\r\n          </View>\r\n          <View style={{flex: 1, flexDirection: 'column', padding: 15}}>\r\n            {\r\n              this.state.activeTab === 1 ? \r\n                (this.props.appUser.role === ROLE.ADMIN || this.props.appUser.role === ROLE.MANAGER) ? \r\n                  <AMPoll appUser={this.props.appUser} user={this.props.user} polls={this.props.polls} onSave={this.props.onSavePoll} onRemove={this.props.onRemovePoll} />\r\n                :\r\n                  <UserPoll appUser={this.props.appUser} user={this.props.user} polls={this.props.polls} onVote={this.props.onVote} />\r\n              :\r\n                this.state.activeTab === 2 ?\r\n                  <CustomList data={(this.props.ads.isUpToDate ? this.props.ads.data : [])} message={(this.props.ads.isUpToDate ? (this.props.ads.isError ? this.props.ads.errorMessage : \"No data found!!!\") : \"Loading...\")} />\r\n                :\r\n                this.state.activeTab === 3 ?\r\n                  <Outing history={this.props.history} appUser={this.props.appUser} user={this.props.user} outings={this.props.outings} onReturnBack={this.props.onReturnBack} />\r\n                :\r\n                  <CustomList data={this.state.activeTab === 4 ? this.props.remainders : this.props.complaints} message=\"No data found!!!\" />\r\n            }            \r\n          </View>\r\n        </View>        \r\n      </main>\r\n    );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n    alignItems: 'center'\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLOR.PRIMARY,\r\n    'border-bottom-style': 'solid',\r\n    color: COLOR.PRIMARY\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { IAppUser } from '../models/app-user';\r\nimport { IUser } from '../models/user/index';\r\nimport { IPolls } from '../models/store/polls';\r\nimport { IOutings } from '../models/store/outings';\r\nimport { IPoll, IVote } from '../models/poll/index';\r\nimport { loadAll as loadAllAds } from '../store/actions/ad';\r\nimport { loadAll as loadAllPools, save, remove, vote } from '../store/actions/poll';\r\nimport { loadAll as loadAllOutings, retunBack } from '../store/actions/outing';\r\nimport Page from '../components/home/notification';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User,\r\n    ads: state.Ads,\r\n    polls: state.Polls,\r\n    outings: state.Outings,\r\n    remainders: [],\r\n    complaints: []\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    onLoadAds: (appClientId: string, callback: (result: boolean) => void) => dispatch(loadAllAds(appClientId, callback)),\r\n    onLoadPoll: (appClientId: string, userRole: string, callback: (result: boolean) => void) => dispatch(loadAllPools(appClientId, userRole, callback)),\r\n    onSavePoll: (appClientId: string, data: IPoll, polls: Array<IPoll>, user: IUser, scallback: (result: boolean) => void) => dispatch(save(appClientId, data, polls, user, scallback)),\r\n    onRemovePoll: (id: string, polls: Array<IPoll>, userId: string, scallback: (result: boolean) => void) => dispatch(remove(id, polls, userId, scallback)),\r\n    onVote: (pollId: string, votes: Array<IVote>, polls: IPolls, user: IUser, appUser: IAppUser, scallback: (result: boolean) => void) => dispatch(vote(pollId, votes, polls, user, appUser, scallback)),\r\n    onLoadOuting: (appClientId: string, homeId: string, callback: (result: boolean) => void) => dispatch(loadAllOutings(appClientId, homeId, callback)),\r\n    onReturnBack: (id: string, user: IUser, outings: IOutings, callback: (result: boolean) => void) => dispatch(retunBack(id, user, outings, callback))\r\n});\r\n\r\nexport const Notice = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user';\r\nimport { styles as modelStyles } from \"../../styles/model\";\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser\r\n};\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Help extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n      return(\r\n        <main style={styles.content}>\r\n          {/* <Image source={Images.workInProgress} style={{width: 50, height: 45, marginTop: 35}} />\r\n          <Text>Work in progress!!!</Text> */}\r\n          <View style={{...modelStyles.container, paddingLeft: 10, paddingRight: 10}}>\r\n            <View className='center' style={modelStyles.row}>\r\n              <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'center'}}>{this.props.user.client.name}</Text>\r\n            </View>\r\n            <View className='center' style={modelStyles.row}>\r\n                <Text style={{color: COLOR.SECONDARY, fontWeight: 'bold', textAlign: 'center'}}>{this.props.user.client.description}</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>\r\n                {\"Apartment Residents & Apartment Owners need a common platform through which they can connect with association, get to know & discuss common issues of the neighborhood\"}\r\n              </Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>Home users</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Maintenance Admin Payment</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Receive real-time notifications</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Visitor management</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Lodge any complaint related to your apartment and track</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text>Admin Users</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Create polls and gather the opinion of all Apartment residents</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>All details of your flat, staff who work in your flat, visitors coming to your flat</Text>\r\n            </View>\r\n            <View style={modelStyles.row}>\r\n              <Text style={styles.listItem}>Accounts  and much more...</Text>\r\n            </View>\r\n          </View>\r\n        </main>\r\n      );\r\n  }\r\n};\r\n\r\nconst styles = {\r\n  content: {\r\n    flex: 1,\r\n    // backgroundColor: 'transparent',\r\n    width: '100%'\r\n  },\r\n  listItem: {\r\n    marginLeft: 15\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport Page from '../components/home/help';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n});\r\n\r\nexport const Help = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { View, Text } from '../common/elements';\r\nimport { COLOR } from '../../constants';\r\n\r\ninterface IProps {\r\n}\r\n\r\ninterface IState{\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    };\r\n\r\n    componentWillUnmount() {};\r\n\r\n    render() {\r\n    return (\r\n            <View style={{flex: 1, backgroundColor: COLOR.INVERSE, padding: 40}}>\r\n                <Text>Page not found!!!</Text>\r\n            </View>\r\n    );\r\n  }\r\n};","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { View, Text } from '../common/elements';\r\nimport Spinner from '../common/spinner';\r\nimport { IAppUser } from '../../models/app-user';\r\nimport { IUser } from '../../models/user/user';\r\nimport TitleBar from './title-bar';\r\nimport NavBar from './nav-bar';\r\nimport TabBar from './tab-bar';\r\nimport { COLOR, ROLE } from '../../constants';\r\nimport { isNNObject, isNN } from '../../util';\r\nimport Toast from  '../../util/toast';\r\n\r\nimport { Dashboard as CDashboard} from '../../containers/dashboard';\r\nimport { Members as CMembers } from '../../containers/members';\r\nimport { NewMember as CNewMember } from '../../containers/new-member';\r\nimport { Vehicles as CVehicles } from '../../containers/vehicles';\r\nimport { NewVehicle as CNewVehicle } from '../../containers/new-vehicle';\r\nimport { Servents as CServents } from '../../containers/servents';\r\nimport { NewServent as CNewServent } from '../../containers/new-servent';\r\nimport { Tickets as CTickets } from '../../containers/tickets';\r\nimport { NewTicket as CNewTicket } from '../../containers/new-ticket';\r\nimport { Visitors as CVisitors } from '../../containers/visitors';\r\n// import { NewVisitor as CNewVisitor } from '../../containers/new-visitor';\r\nimport { ChangePassword as CChangePassword } from '../../containers/change-password';\r\nimport { MyProfile as CMyProfile } from '../../containers/my-profile';\r\nimport { MyRole as CMyRole } from '../../containers/my-role';\r\nimport { Ads as CAds } from '../../containers/ads';\r\nimport { NewAd as CNewAd } from '../../containers/new-ad';\r\nimport { Users as CUsers } from '../../containers/users';\r\nimport { Homes as CHomes } from '../../containers/homes';\r\nimport { EditUser as CEditUser } from '../../containers/edit-user';\r\nimport { EditHome as CEditHome } from '../../containers/edit-home';\r\nimport { AllVisitors as CAllVisitors } from '../../containers/all-visitors';\r\nimport { Notification as CNotification } from '../../containers/notification';\r\nimport { NewOuting as CNewOuting } from '../../containers/new-outing';\r\nimport { MyDocuments as CMyDocuments } from '../../containers/my-documents';\r\nimport { Blocks as CBlocks } from '../../containers/blocks';\r\nimport { EditBlock as CEditBlock } from '../../containers/edit-block';\r\nimport { Payment as CPayment } from '../../containers/payment';\r\nimport { ViewHome as CViewHome } from '../../containers/view-home';\r\nimport { Notice as CNotice } from '../../containers/notice';\r\nimport { Help as CHelp } from '../../containers/help';\r\nimport NotFound from '../../components/not-found';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  user: IUser,\r\n  getProfile: (callback: (result: boolean, message: string) => void) => void,\r\n  onHomeChange: (index: number, callback: (result: boolean) => void) => void,\r\n  onLogout: (callback: (result: boolean) => void) => void\r\n};\r\n\r\ninterface IState{\r\n  isLoading: boolean,\r\n  isMenuExpand: boolean\r\n};\r\n\r\nexport default class Index extends React.Component<IProps, IState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      isMenuExpand: false\r\n    }\r\n    this.onToggleMenu = this.onToggleMenu.bind(this);\r\n    this.isUser = this.isUser.bind(this);\r\n    this.isAdmin = this.isAdmin.bind(this);\r\n    this.isManager = this.isManager.bind(this);\r\n    this.isGateKeeper = this.isGateKeeper.bind(this);\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(!isNNObject(this.props.user) || !isNN(this.props.user._id)){\r\n      this.setState({\r\n          isLoading: true\r\n      });\r\n      this.props.getProfile( (result: boolean, message: string) => {\r\n        this.setState({\r\n            isLoading: false\r\n        });\r\n        if(result !== true){\r\n          Toast.fail('Failed to load Profile: ' + message);\r\n        }\r\n      });\r\n    }\r\n  }; \r\n\r\n  componentWillUnmount() {};\r\n  \r\n  onToggleMenu = () => {\r\n    this.setState({\r\n      isMenuExpand: !this.state.isMenuExpand\r\n    });\r\n  };\r\n\r\n  isUser = () => {\r\n    return this.props.appUser.role === ROLE.USER;\r\n  };\r\n\r\n  isAdmin = () => {\r\n    return this.props.appUser.role === ROLE.ADMIN;\r\n  };\r\n  \r\n  isManager = () => {\r\n    return this.props.appUser.role === ROLE.MANAGER;\r\n  };\r\n\r\n  isGateKeeper = () => {\r\n    return this.props.appUser.role === ROLE.GATEKEEPER;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      !this.state.isLoading &&\r\n        <View style={styles.container}>\r\n          <TitleBar appUser={this.props.appUser} user={this.props.user} isMenuExpand={this.state.isMenuExpand} onToggleMenu={this.onToggleMenu} onHomeChange={this.props.onHomeChange} onLogout={this.props.onLogout}/>\r\n          <NavBar appUser={this.props.appUser} user={this.props.user} isExpand={this.state.isMenuExpand} onToggleMenu={this.onToggleMenu} />\r\n            {((isNN(this.props.appUser.role) && !this.isUser()) || isNN(this.props.user.homes)) ?\r\n            <Switch>\r\n              <Route path={'/'} exact component={CDashboard} />\r\n              {/* <Route path={'/login'} exact component={CLogin} /> */}\r\n              {this.isUser() && <Route path={'/members'} exact component={CMembers} />}\r\n              {this.isUser() && <Route path={'/new-member'} exact component={CNewMember} />}\r\n              {this.isUser() && <Route path={'/vehicles'} exact component={CVehicles} />}\r\n              {this.isUser() && <Route path={'/new-vehicle'} exact component={CNewVehicle} />}\r\n              {this.isUser() && <Route path={'/servents'} exact component={CServents} />}\r\n              {this.isUser() && <Route path={'/new-servent'} exact component={CNewServent} />}\r\n              {(this.isUser() || this.isAdmin() || this.isManager()) && <Route path={'/tickets'} exact component={CTickets} />}\r\n              {this.isUser() && <Route path={'/new-ticket'} exact component={CNewTicket} />}\r\n              {this.isUser() && <Route path={'/visitors'} exact component={CVisitors} />}\r\n              {/* {this.isUser() && <Route path={'/new-visitor'} exact component={CNewVisitor} />} */}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/ads'} exact component={CAds} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/new-ad'} exact component={CNewAd} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/notification'} exact component={CNotification} />}\r\n              {this.isAdmin() && <Route path={'/users'} exact component={CUsers} />}\r\n              {this.isAdmin() && <Route path={'/edit-user/:id'} exact component={CEditUser} />}\r\n              {this.isAdmin() && <Route path={'/homes'} exact component={CHomes} />}\r\n              {this.isAdmin() && <Route path={'/view-home/:id'} exact component={CViewHome} />}\r\n              {this.isAdmin() && <Route path={'/edit-home/:id'} exact component={CEditHome} />}\r\n              {this.isAdmin() && <Route path={'/blocks'} exact component={CBlocks} />}\r\n              {this.isAdmin() && <Route path={'/edit-block/:id'} exact component={CEditBlock} />}\r\n              {(this.isAdmin() || this.isManager()) && <Route path={'/payment'} exact component={CPayment} />}\r\n              {(this.isAdmin() || this.isManager() || this.isGateKeeper()) && <Route path={'/all-visitors'} exact component={CAllVisitors} />}\r\n              <Route path={'/notice'} exact component={CNotice} />\r\n              {this.isUser() && <Route path={'/new-outing'} exact component={CNewOuting} />}\r\n              <Route path={'/my-profile'} exact component={CMyProfile} />\r\n              {this.props.user.role.split(',').length > 0 && <Route path={'/my-role'} exact component={CMyRole} />}\r\n              <Route path={'/my-documents'} exact component={CMyDocuments} />\r\n              <Route path={'/change-password'} exact component={CChangePassword} />\r\n              <Route path={'/info'} exact component={CHelp} />              \r\n              <Route component={NotFound} />\r\n            </Switch>\r\n            :\r\n            <Text style={{margin: 20}}>No home assigned to you. Please contact administrator/manager.</Text>\r\n            }\r\n          {(isNNObject(this.props.user) && isNN(this.props.user._id)) &&\r\n          <TabBar />\r\n          }\r\n          <Spinner visible={this.state.isLoading} text={\"Loading...\"} />\r\n        </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLOR.INVERSE,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start'\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { getProfile, homeChange, logout } from '../store/actions/account';\r\nimport Page from '../components/home/index';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n    appUser: state.AppUser,\r\n    user: state.User\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n    getProfile: (callback: (result: boolean, message: string) => void) => dispatch(getProfile(callback)),\r\n    onHomeChange: (index: number, callback: (result: boolean) => void) => dispatch(homeChange(index, callback)),\r\n    onLogout: (callback: (result: boolean) => void) => dispatch(logout(callback))\r\n});\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(Page);","import * as React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Login } from '../containers/login';\r\nimport { Home } from '../containers/home';\r\nimport { IAppUser } from '../models/app-user/app-user';\r\nimport { isNN } from '../util';\r\n\r\ninterface IProps {\r\n  appUser: IAppUser,\r\n  setLogin: (isLoggedIn: boolean) => void\r\n};\r\n\r\ninterface IState{ \r\n};\r\n\r\nexport default class AppContainer extends React.Component<IProps, IState> {\r\n  // constructor(props: any) {\r\n  //   super(props);\r\n  // };\r\n\r\n  componentDidMount() {\r\n    let token: string | null = sessionStorage.getItem('auth_token');\r\n    if(isNN(token)){\r\n      this.props.setLogin(true);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {};\r\n  \r\n  render() {\r\n    return(\r\n        this.props.appUser.isLoggedIn ? \r\n          <HashRouter>\r\n            <Home />\r\n          </HashRouter>\r\n        :\r\n          <Login />\r\n    )\r\n  }\r\n};","import { connect } from 'react-redux';\r\nimport { IAppState } from '../models/app-state';\r\nimport { setLogin } from '../store/actions/account';\r\nimport Page from '../components/app-container';\r\n\r\nconst mapStateToProps = (state: IAppState, ownProps: any) => ({\r\n   appUser: state.AppUser\r\n});\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n   setLogin: (isLoggedIn: boolean) => dispatch(setLogin(isLoggedIn))\r\n});\r\n\r\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(Page);","\r\nimport React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {ToastsContainer, ToastsStore, ToastsContainerPosition} from 'react-toasts';\r\nimport { store } from './store/app-store';\r\nimport { AppContainer } from './containers/app-container';\r\n// import FCM from './services/fcm';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './css/bootstrap.min.css';\r\nimport './css/common.scss';\r\n\r\nexport default class App extends React.Component {\r\n    componentDidMount() {\r\n        // FCM.init();\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        // FCM.notificationDisplayedListener();\r\n        // FCM.notificationListener();\r\n        // FCM.notificationOpenedListener();\r\n    };\r\n  \r\n    render() {\r\n        return(\r\n          <Provider store={store}>\r\n            <AppContainer />\r\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_RIGHT} />\r\n          </Provider>      \r\n        )\r\n    }\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}